%!PS-Adobe-2.0
%%Creator: dvips(k) 5.994 Copyright 2014 Radical Eye Software
%%Title: article.xml.dvi
%%CreationDate: Wed Feb  4 15:59:09 2015
%%Pages: 66
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: SFRM1728 SFRM1200 SFRM1095 SFBX1095 SFSS1095 CMSY10
%%+ BeraSansMono-Roman BeraSansMono-Oblique BeraSansMono-Bold CMR10
%%+ CMTT10 SFSX1095 MSBM10 SFRM1000 SFBX1000 CMBX10 SFTI1095 CMMI10 CMR8
%%+ CMMI8 CMTI10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t a4 -o article.xml.ps article.xml.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2015.02.04:1558
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: cm-super-t1.enc 0 0
% This file is generated from `T1uni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T1Encoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
% 0x10
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
% 0x90
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcommaaccent
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
% 0xA0
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
% 0xB0
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcommaaccent
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
% 0xC0
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
% 0xD0
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/SS % Germandbls
% 0xE0
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
% 0xF0
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls % or /germandbls.alt
] def

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: cmr10.pfb 0 0
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
 /FullName (CMR10) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle 0 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 15 /ffl put
dup 16 /dotlessi put
dup 17 /dotlessj put
dup 18 /grave put
dup 19 /acute put
dup 20 /caron put
dup 21 /breve put
dup 22 /macron put
dup 23 /ring put
dup 24 /cedilla put
dup 25 /germandbls put
dup 26 /ae put
dup 27 /oe put
dup 28 /oslash put
dup 29 /AE put
dup 30 /OE put
dup 31 /Oslash put
dup 32 /suppress put
dup 33 /exclam put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /exclamdown put
dup 61 /equal put
dup 62 /questiondown put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 94 /circumflex put
dup 95 /dotaccent put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 125 /hungarumlaut put
dup 126 /tilde put
dup 127 /dieresis put
dup 128 /suppress put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 171 /sfthyphen put
dup 172 /nbspace put
dup 173 /Omega put
dup 174 /ff put
dup 175 /fi put
dup 176 /fl put
dup 177 /ffi put
dup 178 /ffl put
dup 179 /dotlessi put
dup 180 /dotlessj put
dup 181 /grave put
dup 182 /acute put
dup 183 /caron put
dup 184 /breve put
dup 185 /macron put
dup 186 /ring put
dup 187 /cedilla put
dup 188 /germandbls put
dup 189 /ae put
dup 190 /oe put
dup 191 /oslash put
dup 192 /AE put
dup 193 /OE put
dup 194 /Oslash put
dup 195 /suppress put
dup 196 /dieresis put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA0E079529AF9C
82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA9351BBFB7CFC5F9152D1E5BB0A
D8D016C6CFA4EB41B3C51D091C2D5440E67CFD717C56816B03B901BF4A25A07175380E50A213
F877C44778B3C5AADBCC86D6E551E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206
742D1D082A12F0780FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC54
3273C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8569672CF
86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E72907924A5AC880DDED58334DD
5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A2255C050CB39A389106B0C672A1912AF
A86A49EFD02E61E6509E50EE35E679448FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575A
D61BCDF42E2E421AA93E3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92
FD60AD26D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24D36E
FE7F5C4E5B5C610DA63A48E26BE9FC0C5FF9236372483C265681DD26303B962BF46BD2DDD7E5
AB42C609D12E83D21A55046C3E50E41C605EF2AFF78F91B20F9F17D90DEE6171AA799ACCFF77
E3E4D9793D1D8B51FC0E8979B8E2752C9E72A51720C018DCEE02736480DAAE55F5F1910727DE
3B9FA8D0BED2EFF3BC887AAD72838B7A894541D923D3D253139CDD747B185238B79E569F2448
3C423BA5EA55860289C4CA80924224A52B8E68CD15D47487340C7FC925100F08A0DB63EC18A3
2843C299201B3FFFF69059B10CED881ACB7D0115D735791ED587758150742B0A23AF8FDDE157
C4571039D537E52E2B4B069E0AAF299D4AA3A36EA316D2B55479B72886C76C1A876D7558FC2F
B0659E156CBB253B8466DA34ADE7B1506F8DC66EFE35DCAC71451F8A426056E129A9CF21C41D
7DEB5EA6DF7A72ACAD4BBCA3E4081320BD7B37609A4DB67B5DF63E25F490B8DE0666D17DFDD9
3AD510ED7B41BE8B0F4C4B2C1348E047C61623CDA21EF0E64B393ECA207B812A7D6F49CC29D7
0529F6829881A092F98C934D70CE3C5BD2E48C3C57AECF77B55DB937230737C3AB65C9BAB8C1
BE847A4C61D1C0BDCDC192C225F1FE28B68B279CF3633287286CC18FC886E8C711E558D4961E
D9B901920006C48F8795E1947EB63B4B6A63BDFDD1DFCA3E9A354C37AA33A24990FB70FD2D36
9D1FC5C89A6BF0851CAAEF43215B2201EC5E09432D1DF364F2EB570F8C001011A4FAB268E40F
B630082F53AA19FB8C3410E049F1F8DE85082ABDB8ECB5FCA536F824AAA39F968D3585E469CB
5872794236771BA5320DD8CCF58E545B9850865AA31607B8C7F0EFCE4A0B2BAC4F48EFD4B599
FC52C4B9FA6AD36E0FCCD3155B874D4FAC8A02AFD4CF6546842E31928A8806EA44C7CC03E03F
DC1AB9E47F4D455F69EAF32D6FE4A3070A728B225687761E0F2D48138DFA3B2735BEE1E654C8
A6AB0E136D4DABF9B695F5EA9BDDE81619A7875591A7F39B6493FFEDC7C4812E18C36C85EE59
7B7FFA207AC57ED8187F13B9997DF098620557843F7F9994FC561D70554B8509C137FBF881A7
7F86460F53CE7BFBBC9C94167FB3D408BBF95E7672E3DB32F8CC2BAA731D6CAF1675DDF0F055
62773D9F37E0A473FCB74CD67483B66EC7B42CF841625B26A32201C05AF07B1E0E3687F260A0
4F2296ABDF3E5DF972AC56470AF0B4538C0B4ACFFC2C1B5309BD8A2510D228D9F41E01783E63
AE1CD0CC827F15EE2783E818972E418C75B03C1EFB4D564A6D26FF8C8B0FF6DC625647FC5A8D
9D9EBC2B36EAE9C8DD412D6639278F6432C3D9AD4C6C478EEEA0D4A9F111908A8F37ADC0C4E2
8BBAA0E5556A8ED46850A673851DE8991338E59B906EE8506203110B315D40EF4A59133A6CD8
5F0FF35123176FB801A6464FF3F77BC8828B782C9B8A18416B6CCFE557DBF14856A0A3162A68
723D538F95BCAAF9BE7B369226A72C401612FEF48D59C927FD8265DF9D29026F732491709CA5
0B9FEADE55F701A62076ADDC0BD478EEC530F9119D2564C87F445E9B8C529AB3A207986F75DD
CCACF3DB48878853A1C3B27D8590E81CE20F1271DF019E9C2CE34847B2B69AE9061CEA57BF2D
3CE3DC261D5955E6B3BF8B933A345B3BCC7A302F7614BCD0C2B6E1F3078271A85F232A5B3B9D
E2E7F048CD36DDFC316467A01866276CFA8D0218ABCFB0C543752EEF59635F48F92EF7CAF035
C7363BE7436F564D1B4FC37D47A2096C886CFD6EA73DFEAC3762873E9BAC2FAADCDAC6D83D56
E4EEC7DED6B1B99D6DDA7CE8C35C6FCA645940DE0150CEAD4B6463EEF7EDAA509B463D0DBEC4
3E7C43F9FF16B6A8688723855B9937FAF16EF89688373C84DCF5A57CC309E14B7F72528B1209
E7F276306FCFEF4DF98C72F7A276840EE2280B88E8F20374B964199B6CF1B47E8D9125A85815
32FCF9F45E9E3491A9D5357D37B1C23A2E5AD04E02D74AA80E35E77847821B987E7C4FC3F037
C9E95CA50067EC8F16A8BDDB8412E7954BBD115147EC48539EA6BEBD1F3885A4D12BA3233833
7728A2C3A8F496B5CAE086585EE6ED1B20EA3FABD269D4B786C3EE0C3D9BEE58001D4D174AF4
E87A7FDBBE4C3D270E2689840E4C4B6113BDAB8878126DD066DA8E0251A6AF2EA6458214B249
809ED92F4EA6966D40D4596D86D6F05921C7814884501DB8A7941ADBA5702BF2B0B9A852B7BC
8710087974F2FED4A8D7B89E643A0950B0258A41A74AE4F84C004F9536CE1E3DE91E8E050C97
C32B0AD953D0B8F4935235F55CEB7727F9EE6E45931CD281D31F5E2A52772C4053687F7A2D14
B2F7815F8B316EFBE767FAE0636F44BDB1BC9B27AAE79FDDC0038A30C02B86D0E98B16CE7A7E
E8BE6A3DB03296C5B05A51FF470991B74CF893343BDD4A2CAB4B7E28AE4778B42EF31E789CB1
AE28A8F0B112E399D73A388D3FC41CF8C2EDD7E3E6EE21BF01A833214F2D2E278B8F701B9A90
68A34A78C34FAA85E60242233CCCC5899AE65F026DE91A4F184F0E626721C4CD3AFEB6E9A1B4
AB410B816A49A5E38B4137E36B95E2FF0EB3A3BD4337137096E4062BD7D13C5137194CE85A14
15C9F73095EEBAEABF2929BE8F203295A2AB6792D1031CDF4F96A58DEF44B848B687EEDD4239
A6FB1944CE6527523FA3641693B1C128A675F98C67C2DD8A3F1161A1EE2A7BF7598D3A9EB560
A94B4E8D58D1C38BA3D58DDE6D54A5F49AF3E03B9F7FB23617001E0CB03B7938BCF7681F7BD0
721FE1720B723A7DA0694B9A7637935655C5F147BD7FA15D1377500F7F192337A9466A74A591
7FD51163EAD5F26BC9867F2709EF15459F35710EB47B86CA032AECE26ABA9F79674E30E0A8D1
AB25099101BED7FEA68EBAA28641F5EDE00D0C15C4FDD500DB5C9BACDF18B320B14F7B836A06
3BB1BA30D382B2A8F3583CFBFDB1777AECB306948ECD8D8C9D3ED36FA733C15E4059215B3838
54846BF6F7596006D9DD1CABD8E331248AADF6B8C206534BB545F44FC7E4BC9F3761E9849CE2
8C0E9E5D99325FE771F931288D989C43138A805663A9E63F4738929B5B03123B6BDF0A135C08
CA3AC695B72E92B5667F6F0FC8A7079EEBD572CEBA5C21720961611021E775AD8DD8E6E7C4C8
5969282A49464913B85C47F7D3A875548FA3139CB5DBD78FAFC6B7074E59665A568B1AC49456
4515A3D8B64AD0B6A4CC6A186F35513289519403E937BE3FC969A10ED68694E705376B718056
047C006B73FC88C87B3D84BFBB15E7F874CFF12CC2E8E4A8B70F158DE0C15B4C5E933F0011F1
F654D33104AE72543A11F588F56D3ACDB8C83A5543C2D5B8B2561E56F53FA9749CC80D846783
80F55175C853698614FEB73B29EB8556EC0453A03AE894A752DDD14AD72776AB32D13D3175B8
44F643D04AD36A6B97149D9DCBD8B7F1F50554ACDDEB0C9AEA463A65AA6972C2C384CEC24344
C89DE7BD914549A9A3CF9139E94FC75AA93DC591977FC3519391677A3086B7F23351AD6B1FED
39E7129629880870D0BCB035C9F9BBAFBB1EB9A822F583439BA0A907B5494007FC9874B51CD2
7802332C3B411BCE6A544153E51D0458E56880367EF4FE6AA8A0970445FAE112A40F4C48B943
46F937F35AFBE27C244220406F7E2DBEC532C1FD99B713580ED318951F90D0E88314639ED7E8
B886191D6DD3FF0DB44BFA5A7BAC6102783EE01911E05DE270D41AFA7944FD6B420AD5BAFD3D
02C95FF77D231DFC977823262827BE5B601F4F3702A528BC5BD4D87A789F6C976DF65C4103A3
5E20352801825BF2AF07300F359A673FF845E87F391C058D8729F7109B379D8AE27506CB3DFD
16F6298EFC66ECB27A9D5F59749E6264180B0BCBBD4BE0B13D8D4C3344AF3D6BF4B73C29D63D
C19208C751F5F319888D7D4049A29126CD28E985FCA986CC33F2667F752A0B2F175A99F90D31
906AE108E82F5641386BA7F9B360BB3BD5D5952BF2167CE10AAE9D41FDB63F4E69873D633997
2A2B5F6007ADEA075C8EEC10C090C74647098439BE7D9F48A9F79C2104252009B8E6C44D7508
192D58DE42B0962DD1B7CB6255F4B67325A456C069CB52B905EB491835D92452D0781CB7E656
72DD43D6D3762E0FFEF0F1C8D63163631A71A2963D9617F96A0C984B7FDDB933456055829138
6CFD35E9736A942C7AFEA53E1E4937A5AD56E66E88E9A8AD46C70349173AB81DE285A54855B4
16DF01D8CAF03615014386AAA4C94903D6005DBABEF8F9BF283894FA8C71284293E436605856
D3C4C7859978286B021F0F696F43A1EE8F810E15C7882EDAF03C5B574BA492AC5633BEEEA3F6
5B521F12FD11CA4ED32D0B666253CA496DAA243108947445C55CEE5252335E6C43FC5FAE3524
4E811F81009F514442DA21DA2B4E9608BE8D594520B1062A8AE3ED07D00F031D443D14126998
92DA2B252299EEB4D9EA8FF3B9D785B4E490DD6EEFD55A77BD924AD6C289734DE20F59885194
050BA0A60182952CB292C18BBD65B784C913C0DD1E131A31AAF2C4892C664EC5BF16E712D342
25079AB4361F4C7AFA56E499CB6CCD1FBDAD41B89F66A8A82AD7963EBBF5B19F8352241C0B5D
F1E13343A4955B47E88DED9E0757651AD5D059EA86CE7DB05F95BFA92DB1D1F511AB1018AAFE
3BDC4CD6379D797B1E7654E5B772BB6C910C7C405D0264CB1275D49937C3005744092E5BB3C8
B40CB98F3BEB519AC3D3AB76202AF6E08D0D43DC379E2583342D33C3323A5B696759DBBF1B85
F638403A43113787B0A5E4F988123EC6EB768F4A745FDB4FA0DA70D2F610E6AE1CCE290C5FFB
6C4FCBE5520B43C36E5F966F4355E7D67662B4DDEA480E0FEF650C65A0F0660B608A61C623DE
59F75FCD9E5F47BDB5800E2A49446F0B142677694F3E8BA4257378FD9FA8C8A572C6A8EAFED7
9325804D4993FC0A513CA992F8D4A8305C2394D026DEF0262D173D150B2C662B9B9C6BA7CB2D
04CA83B136F9162C42EF686AD2A31F40066937D6A04ECBF632F1DDEE29F414DAF945E0FADF1A
231752FE7500E57FB0E22622FDF22E756DE999948162DF7B9BCB4587499613B6331E03B79723
09490642DE2EC4F72A1895DECE59BC117ECC2717AAE37EB52F1167965FAF5101AF2BC1C31CD3
DD17596937BF73D697F59A11000FC8FF94912DAB48134B39567817D9419FD0D3B231297D1723
331EF3C334582CC012A78CFF55FB19132D91A74353632270986AE645B8F5C0584564EB8C71A6
E5FAA52AB96FBB210571BF6C1A2EA223EBC7AED8FDE47AF489A429BCEF68407F3399A882A567
E70B4FC69AB47D6C05097DEB3D912CF1591C6B82CB6FEB1F72C135A4CEDA64C4AFC62DC84C2A
ED0B31D0EF7F8962DFE28D7E3A91314BDEFD9FA692422529A6679F184537FA92BE3E429C289E
9A1834F07117A0E7F1F4FE6862870165A43BB9E430ED07FAEBBEE0469EC79F9F539CE25DF296
5963D2268A0ACD1FD54BEEE6AB200D52EE7CA4D49A747530252164D6EF5430E4E0242EDDE595
5C5FE7E3837CAC40ED2A6FA8F9801F9986471EB57E1F38CB3A82A382741B4ED3A575C4967186
E99D2C3C121B4C91C8D50B26CB97BE9AB4BB224BDCB7135145914B06C9DE48DC53A69CB4308A
5491627279AB90AB26F6E14DBF51AB0E4A9BEA64F916F1643A10BD91FD365F8B774E79A8383E
3D5D5595A92A79120EEB341213BBE6EE21957F6D46E654B9FF6CF65EE8DCFB710E326DCD9A48
812096D3602D5C2037033B284F266A229CB1641405594DE3ED1FB6DDB1496EA0598E131D2C58
60474F78CF937F03C5D1CC29170D33A7F68B8BD1A601423002DD3106620E6D8C423F7AC7682F
C2F4D97189EBC2B19E7DB5ADCBA62D17A0D4A7A1D4B3E727687EB9638498547058815EE958DD
81DD937AD19B1492D773090B1324F18741EED75C8CEA47A75119435FE806E82F214852505081
F02B43ED1BC67FC4D1F5A6686665035B3612CC4E166A646A786A7B0BBC54030252338E496929
B6A54AD47CA90CC54AE1AC275E523982ECEF5FBB741D00B65981667FE2453FE3750EBDE33B30
E9540172CA5D94982EE1E99379D6CE06F82B65C423AA95CE42CB0730C80AEEA34CCC827AE92F
AD3D38D19B5966A48184F1182A47397C12475058E3CD011D0F0CE4DC30ECCA87406A1F1D6998
93163D8D8E604D0B987F8586F4B746C38D4BBAC2257D0D6844B31D532F66F380438844D45AE8
31226DF075EE6CD391A2DAF954BCD4E03E9981F829B0965AD78EBE8D41CFF2ACEE386DFC8037
958959BA8B872A7DCA0964DEC6A7459D4206DAE3ED201031DB2EA02819D3C12DE56CEC8F9A85
8BA6B0FEFF091F827AD6FC5F117904B0DCA0AA3173FA49C62BA5A5CADB35F6487801660CFF3F
D476819B149294EA953DAE6A4D55F9D3AAEDBEF13159794E128AB0B557CE775D0429E4D4B7ED
D061CA689AE0745A19658E04C2CD5DAB627F801B16A4BABF2F8BF2EA218916F82F288104717A
F149BBBAB11637311236B540A9FD344852C8384B87FECF7D233F8E7D0B88AB11EE92991FBBDD
ECDE4765C999D2C4EF8913C1BA706FD995B05199361E754E486963BC9CD80DB42EB766C43EA8
EFE81CCD0BD8B5523CBE7CE1A709AFA648817ACD9AF2985E285DD9DEE2A4E0C77B13BB59F689
9BBAF1038D5A0660B358015381B30731415AA81E601F8462C7F80D1171D0F9FDECA392AEFE4A
828DCDDFA642174AD8C48CD6F3ED28A25DDB0F768C5ED07364011A5DABA61BA49AA10A71A260
AAA7D5DDAA898831B388B738A836529A8F7A123C89D9E36B65DDC7723843DF8F6EF79D8C7CFC
3DEF3B8AD39B3E4EE0F127100EFA9AD45829598DF39441855FBBF98D82008A7B64AF0A919051
B5F4002D7B3E4778ED61B9B4A0BB41A1E212E94D9244154C459D9FEA7D250F6A789D944B0741
35F16C063ECE58708EBB2A2B286A71824017C08139CF73320F32127B2633140570A13420256D
BA85988640CDE5AA4A2448CDBF277D74115B22A1380C54D02FB55DC394F720B75E4D7BF4799F
06D7A9742B09E13A1D9F9CE503B5666A480E6781DD2AC4273925E4733FD17B219B1AF8049B7A
F1D37327A28311208158CF2EFCFFC0F10D731E60C19D08AC9C16F39FB896F5B432D5463F7F42
75F6ECE30944D74888511C34BAC3ACAB64C7116AD6112ECA722456734A2D016A3F2B41D60A4A
97818C16224A70ECD13CD6CE5AF85C2FD5460C3ADEA16A3D222752729BAFAE276072CB3A3A0E
653458ECB394763865162146F58B4259676F8B661E90CAFE3ED0836D626266D173FBB4B4B4DC
6E2A0C02381114A761189F3C2B6436F6E437590BF7075AFAF72A5E1DDA9F6C669965C39D3134
6CC638D2C3C32B415E13BAD72C3EC9E458FFD5916E902DF3C0772DBD300126E3366CD16105E6
9C676DA925A2B9219284D91DA3BD49A7EE70E9035F12399AE9693AB539E16AFD38956234C19F
733625FC6FE892E4C2476717C6A77397FB210D86C97EBAC165F81B1E9130A49529F728E31C96
5BF2615123BDD600E8C775366F1A60C239FD3649D435E03538FC0CD4D5855E3FDE83BC432632
AB3CCE1DA14B6133155383EF6400CDE665C7DF79FBCC7A4425EDDA2704AF53CFBEA2046A6004
C94DE7AD2DBAB0B421E63B4A5F8157CA9AB9528E8464E6B8A2FA8B5BDD20FFCD0FC6A5714706
9194E00376740082F1317E62C5E23A4D6862F0EEA28BA7D1476F609C27A9147FA8C3468A4947
C8802818BAAF5D4F33C9E918A89FC415A0BA6147E6650E09640E1A5D2EC97518BF39E8864C49
65ED91E251C9B90166977C9390ABCF5429F216CCC8688BC3CCABD5C3EE7287DF9D4F0170546E
37FD69981864FDB30C5A3EFA3BF27EA7857D8237FE07171056BCD399B2CB1BE4EE0E1809D304
2B7CC8E67D9464402EF4A7BA2612F343F5EB6FD5F7DCD112AA701B8DE9E2F17118842C898580
1FE8179FA6618A09D9A01862A2AD4D40E8251B828B5BCA97C812F95A342E23C186DEA3A96154
096BDADC299C1DACE3EB09ACA94CB2B7F3EB519B7C209007D9B80347E971D8C02C24E2162E8B
EA9275E4F1DB6DA1915D4634FFFAC353D691D7781A15EEC3D66BBCB322FC0E5E2C57F8D74699
1808645E015E0632F38ED8605BABA3AC007CADF7984F8A0763A9D322E2ADE5F56A56294C4ADF
C4F456C93D7FA41CE8496C3CD1266992C9E60B128C7AA2C5C67C49B2D16F3CA00B86C57DEF55
F8D06628A0DBBD11D9ECAF2A50FFE89869F929FF5CA0B91186D308E107EB2BEAB7480E40C62C
01E1BDBEAF62F00E36C57355479178F345B1EB3B7E87807B32F8AA06F288848338E43DB2E6D2
EC92513659D3D113CA288DC767537CFC71092878E139B28407B56E33EB79B1D46C9F1196EF10
AADCFFE5D16393E3A6C5869C39C925650D8A62496EAB5C67EA1FFA3C85932525DED921D6AB2E
B62CE8DAA2F4381657E2F0F053DDCB0DA23B418FF169EE4D6392B3EEF70A777E892F5B7B20AB
83F907C8014CE6EE9C2FA010D4F11307135A11CD8C2E0F6EA93DD9F0EF162FA24EB17C99F375
C65348E415F460780114F9B8AE5DC1DC1215163B15A17F811E308916514EE8A0596D3C962339
6E5689F57D0AAA9E205C7C32C2724172E4F8F04F60FB89D5A9EEAC9E36EC07C05050A3E0FC13
5DC4C6B5CD8170E91DF79604744B30A2CD3DEB4B3A98274659361D233CED47B79BE91245C85D
E0838FB8478B1B678A8B20552F93E3FFFC77BC547B588C74F9C22D546203219903AAB916EADE
4D598287D5145728C12387DDC05CBB7F4138AEE81EDFD8C7A0CD6BF9BEFE017F4148FB0A1218
F2750AC532E975687D8908F985795BEB142DF493FF926171B0E25FC71A7437940A7A2192F9A8
F216FF2692C23A0807EC188D449C867D7B28D6D9FF15957194ECD03E78CBB9963A0E6CA8AEDC
E35163AE9A0805A1D9494A5D71F7F951F199375ED5B4BEFD88CA1A2FE45A37211C866ADA6842
53B00B122A6F0613609A399DCB43E5A857C0E850A953303447EC30AC83DF6D4E53F9912D53ED
ED956660DD356A02B9E177CC9360EA48F10601E067D8283DD1AF6ED132A2873ACDC2B3039B29
8C9D8BE918437C74889741A2D0A398F1BDB9AC7526DA3686A7C2425A36CF9DAE0FED314A80C4
D80AD24605A8892F1E20B401F3A783BF474B6BB3FC9B0D3049E24B9333867CEF9C81060EB6E4
442F00A41A4FE88655F94A940B34183F088ED7A1FC7CC863D116D3B956AA065922DC674CDD36
AB998F1B0C313619AA4520C8614D4FB1125CB75850283A44B1EB69C07BCB9DCA47E2A97CC920
F95A82E581DF07C3AAC37DFCFD05135054717CCAAF6D21D0E35BFED91C2D4250D3FA4115947A
C4164A80A4DAECE90B15EEE9289568800EC50781674DE8F7C00C0F17D72C03B8F77919CD5827
33B90F83FA43F8CEF4513A5FFE86C500FEC4C4F9E32DAB05B4FFB0432DF191F731A9D3463C43
12EA23A04F6D5B1A61944494AAA1B82268A3E87FEF0AAC3368C061A2D99F8C01DF71FBE3AFE0
E3AF28807251F21C60C2D90B32CA25B859365D6B2B5CF07A9CA496B034396FA9A62D337FCD12
8CF0D17CBEBC1508FBCE413C07CC76DDB6065CE54C6780B73D1C80C1C39BD569C07458F8BA54
D931B5A817AEBB5776E9526B66BC38B0CC969919E9F91AACB192B5ED4AFA254FF6C5B74331B0
27B86937D0CBF2548A4234FC70CC583D93547D80CEBA78482305BB4B41E36C675B171F8128AC
F24B5653E17486BDD41AC562AEDAABEF4AF432E653D414E66D4D6D96E18411BE5683EC4FF273
07585A40EBE145D69CFDF430F8365C103728D370FBB4808D45C0391B68AEBE055C6C66BEBD1F
6A6B725818FE8B59E24FE4A96A8CFA6D30120231799FD9C1D86BA34911BC3B14855A0B2A724D
F5D392965EEFEB5B0FD7EC8A333BD4B6D33D71003681B4A816B5DB8475241B9A4B4971ADB498
37FDE6E78E5413D9584C93C10FD7BE8D70FACEF356BDDD8BAB3A21534319E195268F9BAF756C
FC17BBEF95108334977EFF3BFC9E46172907F861ADDA6641747F70CA9DF38E72247B1B1FAE69
BBBB8DCF7D8EA7CFD6D7751BC88C67B14D53270F16B082A028299D3D1BAFB1C8042754FA8DA6
1C034EDDA896D6075C40EF8D4C06ADFD140853F2198AFB70CAC3EB9982CEB1FEB0CDEE2AB494
EB9595B5C918F0139932876FF0F13AE6977B58FB6FA47D6F8501CEBD4666ED5BA410F144846F
BBBD1DA827F84025A2AE5F9CB69101F8EFAA980AFDE0B49CAA9C5F0090BF47DE6BF40C68A293
E45BC33ED9222E7494D4D5CEF267CDDA36431BC8BD41341AEB9AB78F25AC668D4D9D531EECCC
7031C60418D244656DBCABD7D2EA53509E0DB01679962FEF31D014A75072611DD2F9BC3E27E7
87C1F791F74904C7106B6F889A79DE4E770540F478500F9AB17D6D7D312A06023ED8805EA5F7
4A9F4CEF09345077C2D444D224D25273FEE4DA617FBEB1868539CE185F8250A9AC16CC84825B
30917F04AB981658CA931F566369408B6673D4456000FC3AF3DDB0E876D4AD06B836D86A0F83
CD92467E3644DFA6D249F9A5AC91CF2523BFA3EE0BB5FF59A426B4E67FD46E6CC60C10267BE0
C0A73FB423A2A9CD97D086040B22F37E8FEBD4985C5DA5E0CBAE7B47599AC2B8E6C85C8F1042
D40A26EB05160829F25210BEED9B500C95D136DB49459A36D8F643413CAA66AFA724C97B42F6
4F1622F080E8B157F86990D94315B8BB9BE14305543BAF5C0E25FBC45CE084579B7B8B5BE131
A497EAA3C0D3C520C592414DE7150CDE2E86DCE859F1F48AC0C435151157A495AD42B58BF385
D344244F2D3FFBC6069C745055BE798D7F27093E1BBFCA3FB5185A44629DE29DFCAC798130C0
3D212332EBAC7D4168B416C54A57DC04B208AADFF22C3D0529A466C6A310A8EDA384F92528EB
B5E1D86F96101A3FB9F6E2B1BDFC7000C04BC915C63F74E0B0530491D6653A75931986234E88
77B6E206A4816DE5C947140AC48BA980CAE0C2175CAD88700F28B27A49A1735FF5CD8B8B2828
23639083B082EEED8AB079C134236C306ECA151A7994261CD73A8484BEDF8191BAD858B491B0
E9943D9E04323C65C3D953D33B634B025456F1B85F57673C6CE0154E162771496130ECF3D679
37717F6D3C7CA05538016F8BA6AD48DE3BA2B153BCC4EE3500EC9AF99CC01891CBB50FCD4FC6
91C48725310436E69D55F6A49B243AC3804A95D9212D9EA02F6C2264246F311A334984011081
7EE2E669380251066EC237CE4E2E123AC89F962D2204FBB9856CC55D2B72AC67ED0A08BB6271
67D4E375EC8EF90B570921B314C8B2A035BFA7760365EA0439E437091723377A30F5859DBD60
261D1B1A75AE2FD8888B217EE4D5CEE7ECD6DEE6E3D1420E4B71561F7DD01B0793031FC95853
667F27D8855EEABBA4CF4AE67666C578ABD872D4747775D5CDEB55A02C8DCF38067456BEEE0F
10AFD66B521A81B0712EB987DD429C77A1557B6107790BE7B3C7F55A79074CCB8F38923B7507
D06CE99A2CBEBFE9D7C5C32796145E4AEF1E3AE83A5CA481531D552BFF0C456200949A01730A
586032C8CB48DA6611E0ED9DE04AC36F1660F59683973385C00C78CF675D5C5962381487EE82
799CF60EF340B2A3275BFD4D5D2122AF19FBE59DAD06E735E446D77747101A53E329A14EAD28
B99B7630E7188B1F967A0B57292667580D6E121EA1D925C931FD4B42C3ABBFFECE5096ABE807
EC5B9C43CCC10B724110B2616D472063288C0E250E569220035EEEA8043A05044A6B0D010D9B
3294282F81CDC0EFFC4F500C6D063E85E7BE4B10FD2C50D3DC8AC54BF0EA6865520401E683CB
3270762C94158FAC11D76E7D12FC78BB19BE08FB8C4BD04036408E337BF3FDBFF6AD0E57D845
92ECAC5FBDD22ADDC8B4AAE9F22395300F618A5A5725E20047A0DE229C58BFF5C6870BE44580
2A30AF4A6CA65BA502F6F1BC4B458DE1B7088A802E49EDA9528B7D0FEB561DF949C0A25E71B4
15D56572FAEC8EAFF09F46B07A44978A47F7B7687F1681D10357522D034415E16EBDA5DECB57
489581725E961D50F182C685EE3FB037B16C389B678E80BF9C6B27CC903C31ACD77120454427
70ADA3FE7C6785ECE0C669C0324AA872B4C25CCF3AF3E0E78AB29C3C642DDC44F579E5ED4FF6
AAB873B8AC7D73710EADDC2F494175254B7AC925BB0C4EE70CAB7CADBF1D2497AA6F290B64EC
7551DC7CAECFC0B5312BFD58FCD53D79F1BAAC6AE3D5E4B896D55B67838F1E5848E0D9321ECA
275A78A6F00A223D81DFA4D891DD3CA40653DA235D8FC48C9A9E4F56B7C1F6C10B3AFF870DAD
B47855776E4F08DCC7F5875B7E8EDCB96295B106F4E0AF2AF7C74DB79AAB01C44E39621C8992
7735A9246458336C5E9F60656D2F757B0D2DE6322DE7913C696053D24D324EC40C52F28AA677
A758602DCA751548BE122F6184FEAABF7AFFCDE3DC72DFFBE3A69D52F7A89709DB8D05DF6DA2
031F43AB54200A68082FF8F4887E6072993BF21DA939357274C9D7D30071F88C65F64B55DCDC
0C208AD152E12301DE3D182B3C59F62327FEA224A8DDB1867944ABCAD0CECDBC529D68C600B0
AB0281C7CD4FB6C236C2D1561EBCBF76153BDF424079B9A63449D4A4531B4A5BDFBDD70EF02E
74535DE3A881F2584C994060D3830079EFF3FCA2597119A8BD560E2A0F766F7A34A7A38E581D
451502B960833117458ACCC70E6BBC2729AECC6EF2A381A23AF14507B9DC46A3E01092F58CA9
1A32DA58C8F8353805CB193A579FF281B1F80CD4AB9DDFA8917DAF3B7394C095E9455FFE82B7
E0A62AA476754554AA899ECE4676D8FFF0C052697AFC316CA7D759A04AB1D16532042FF511C1
3B5375020E585573843100B9B393D1EF2FE83E5612BFCDE5DBF02B1C6E2E3603C6699C945FD9
36A308F9CB848EE27AF90816C74A04EB3F5AF5E709FE39375EA168DBD9D6D373C2F07FF1B23B
6B229E946DD3F3357C59BB36E3DA08CB393A774D51CD1EA98C6A8E3FEFCD91E73A8C29E13266
015022CD238B8803FFFE86F2385804482D69A32FE00826B91F8AE433C390470E429A1E519A89
249092C034880FCC9B7842A4773565D5E85622B48BEC7A7969E876A734F2E4721E7B00F12B54
240271CB90ECCC4A8FCD3ACC281060B631FC664D5712E7D033481A596FE40B34CB9E4779A061
895D589C15E8EFFBA3F8F8EFA4DFDC4FFA503309B3B6DE0C9375D34A0D935F6B0843C2396991
DB0BD48AD40D86347AB46F22A5757C018B22460487D750D41CCF2ADFF0F69FF58053C4DB6C6C
05CD54B4B48A9E303143A08BD94320ACE9747BDAF8A7AC4497140FC17164E765412D6B283701
96094CE86EAC79D2CDC86867B0DC3013276FF8C5818E06D8B68DD43DB1BC2E1EBC7901DE2D4A
92B34FFB6273EF4F2F555B7C7B4CD43E39B585AF30DF0562BABC058C24D5D392F549B008BDF3
0CBDA7FFD3E6B907D66CDBC8EE920594F59DA6E559623743B18B3AC6A767639E6310CBBC224F
848C9A8EB0E5E7ADDE1D278201E41535A2D3BC2451CBE90388D0E850B1508355BF09E4AF235F
3E6AB79D37E3F45266A140F8CE86010703B12C83C96764C49035A598526902EC3B78F9A27342
A228E03D6DF9EA75377B2236A8161C8CEA3F4BA5CF2AB9CA2F752217456ADD3744A150812B1A
2945D4D0844E99555AF8C2ECCCB520E860D804606B3EB39D7B94585763AEF1605D4EC74FA824
FCE3E8E6A260B9E2497F309950D176CFAA1DB29FF2B07D41C3BF950163D7CAB48193F8409ACD
EA18CD34F29587844E51DFDFA9E7A2685A2D50A6687B6002D0CAECFA3C630E680231D1DD4E8E
388B4525C059BA9E56A8C015E69943541462502E495A63054BDF88B4442935A25C8F20888ADB
6E60D95C8552B012BAF65631F2611B71E03182C7D4D4C82918B4AF222BE87C410781C0E2F751
C66C698C6A322C7FB4E132E9A3ABB876956178A040AA9479A6521CD82869C95C5FC36B0CA384
92564DE4458D8791042B08C8F8F334A6922F729CC0DD65FDB6F839AE8FA148BCB1A60F334986
7BAF910777E8471764F853DD43333BD19389E53EBD82BE564B78FC26D156A143A4F0E10031A8
D1516E187F1A58D1DB48A995FE6B5F5B219107044E251F1E0E6296FA1320FC75C05996D7A7E5
388F817F4CFDEDBF821D3BCBA03F21E20D34876026730D9194157CC362403213CC16C285E68C
DF86B0F61A2D47BE23CF733115F380212B175BE5C8B473F37EB03C19852FD358A09E9B1E9E31
10AA29AD9C0C233DFE8180D5913A5636E05A6BB92B4474F0D2C4B2F7FACB2C2EEEFFB4B6326D
36D2A8F75F6BCDBA56B07ACC44B3E95721AFD3D448CE5EA5314DD35649C39BD215418F8F3868
A522C2BD867927BDBA4377CF1237B791474B44A682A6169507C03C0FEFB4C25AFADDCBC6184D
456A2E44D5A4CD6503ADE51BD029AD1014F6D047A28D7BDC0E14F9E71069B401D15263E4AE45
58AB237CB7FF91E96E16E63352BCD74B81BCD1A50C0447AE76544806B5126F0AE6E904775DCE
803F7BBEC29D5A2A1B98CA8901ACBAF3D08A16822E96281CB22A04A78E4DD1257A52E172F2AA
6CAB70622ACD3355DA68DACF11DB4D16C378486622F33D08CF1F35533A5243FDE12EA8910C5D
B3BE274329503A6962BE53CF60DED6A7CDACAAC5BFBF9920774E92CCEC6F5289687960E42277
7A6ED1E14919D6DDB11E73D13BAD176C7E80A34A39478DF5C2A07626C39E8BB4F54ED455719B
720CEA814A038F46896C6025FF5E744C2E6E830A1966F882BB06CB7EB370173C99C6ABEE8F8F
8540491CBEC243F5AF827FF789A9DC26E7F160BE9B8F6FA6AFC33023E698F29238519256587D
CE09831AABFABFDA761053D0332AD0394666C36352EF250EF21EF1F1FA18B2918E5DCF2CB7DE
1502C590DFD694588CA76BE8F1C00711C5F0656BB83E5867EB79945E61C3A8D6B88EFB1AA33A
6E6A23A1B539D715172915FE3D8277F8865F177CF9B3503E812D919B3AA7A238F4D182F68418
61B26E4DDB5396D956024A95F655560FA34336898FC07D021FE9EF11DD5EC50E6E1BCF82ADA4
85B3851C393969C1E00248657BEC3F077A91027E9AD95E195A0D61A2E5CFC7A511E07FD56E82
8D526EB3FBD6261D04EA21ED82FCC7CA4570B6ACF2E3AFC96D9732EA9F3DC417662BD0031AF0
9697D281DD4B0802BAAA46988C643AF7E5ECABED3AF561947F21422FAEDABAFB506E033A5F0F
A4C51DB720DA032A1214F29316D3134B39DC8ED2AC63E15A99FD690BDB5AEAB767938D6C4B8B
429CFB306887E546C6E433A5C571143C28BF051A1FB84D77F45500DD1B23B0B71C1533B55697
03FF2492ECD353AAA40F9D0477DE9DF7038E57EDC64CDFFB4FE6637C7CEEC38D46AA53308F5F
0E7EEC36924BF5EA6D550CEFD20CF0DD443AC3F8B990E3219C0884622820514D8A82560BF8BA
514578A9B66E762B272692698437EB55AD3DD894AE6492AC964FFB5EE4003BDCB461DCCD1DF7
BB48FDD4C21CAA97000EA5ABFA32956D534140DC7CBC3E9D1FD0B09D2AA16CCE736190FB6837
E0FD1F0E233489AB2686C833AAA8AC9CA8A2A341D635E088D03FBCA5338E355BE751CADC6AEA
AE63DC304598AB6EC8280A0A1329A5147181278C9B95276570D9E1F4D34E65F9AA64DD5FA42D
7D68C9786C353F7A8BC8C52CC83E0EC142596760AE19806583AEAC53E092714E5B993D63F468
5AE1C96EAD46551A491E88873EBAC17F08B20FD491BDBDB2618F005DB0B1D2EAA08892EB1737
BC41A07883A039477FB8E964CF7FDBAC19E337AFE196B39FEEB6251D192423F59B5D746C9907
75AC9C99E9357146B471316E6BAA0EC6F0433604D296D80D26BC238D9FCBA1D3197E5D173519
A57A443B38D021AFBC7C54A6BA7C269453AFFDE6E5FD8C4CB0BE97DE72696C5633902EEB5215
303663C12997AF415D102A214B85D77EA7DDA3CBE5BDF0A12CB331939518FA04D3DFCB7288C5
E340FD74E00419DD0FF5267556DC5DAFCD6C641903C722D23D500A2D598C2FBBFAE3D6264192
3B2777D8EB0D81D4BC53537BC3A84C4FC3FFDFA9194C81EE91DD7A7419DF0E5DA49DA910C5E8
3E35AFA61BED02F3CB646B0999841CAF55A17956449CB25BED26054FA9500A357AF042061CB5
F32414F1C9EA556441CC085A1D6AE3A6540391369FA51DB16DF2C61F0FD1558D5FD4052A63D4
EAF330147B0E9C774B4894607B40A760273B1B89353ADC110B54067F8867A1903F87BD270F06
5E322B027F60D855ABC6EB40F17D222115B7FE10C2E140F2B477D3A3D0A11391698E3C35BF1A
469C9068A0A63073F8A94654DA2B1019A61B3949CA2984A12EB434BA43583840058B774506D3
666BE8CDDAF08B5F99CD7C64AFFF75C164CEC467C70CECF1595D4D01470ADE2E034B37062D4E
72EAF6BAE7C63A03D6D85A16A34CA5C3E1C34257DEBCE2D8F55D746258CE208BD67BABD08E40
ECB20C59BD4E050A0A9D849B2EB2F1C874A512E70B7E179E0CB46FE1ACB5825762666A783AF5
669FEA5B02415A7901CB0BDED57E552FC1D470F59679B21A56F82E333B7756EABBAFBA4A4D0C
042E97EF46C3F71B75B305B468CEE59FBB2BA20B49FFCE08D0C28C920433BA739B98DCD09CE7
CD7FB24D832444B9B6821F31DB2754D497F63B7D6BC7C75DA9328CCB88E4DA7CB28B4B213D5B
8FCA4AE99A5DCD28068DA3795FF110150E01AEB5E252CA2C0B5AAE2490AB711440623568507B
4DF99A6D44C572C5871572CB8FF8154CC3B9AE7592597DDFE684AB44AB069FB8D8680057E70D
A41753E94E0FCC13496DC82F3A6B9272CDC133C01BA998FDF43D266DFFA3E06141C6836D6DF5
ADA89EFB59DEF1A68FAB510DA56BD1C0B23A8C20B340AA0278B98179A46212E4564011A879F9
DDC6DBA0343B89517DB07F7125A0FF6D37D6380F7DC8E0FC2D6C535D6A9ED0D4214E79FE2ABA
30F38D041AB79FEC0786B844444EA81C4E7BA8475AA181EEE935766E8FD444FABB0A3238D14A
D899E01B2C14C4EFC724A236EBB6EE7E53C61992DC103654601334CAEF87C8AAE864BAEDA97E
6820FE907B4640D51D0DEB0C7D98EB67CE311F5A4F25A4FA066C7D13664BE53D1DD66AD2F832
9F8BCA5B22C213E6D20EF2A73625651047878FE7077851DA70CFA24D4FFEF3A8009E7D6E08D3
CA2112801EDBFEAF0B94DDA65C2130903991EFBA7E9F1692A2FC63C1885E52B4B31C0AEA192E
8608A4289DA6DCA485DEE2FBEFCF4F0336DE035B9F65775F3BFF4C2C49E3055BCCF0A4F3FD17
60524B0754D89CABB15D9E57AFB93D3FA164426713911981D0D2979F0EFB0569459F701A0742
67D43656386F7D1A95A9BCF9F4682761839B600846C81DBD197C83838AB9EBBA8323463865BC
30EC1B99F4FE299ECD4453509A5C814E6C996676E025DE9FAFFD0B6C3C0914ABFEC436B65092
6F48672FD2D21EB2F8EEC64DB45B8D8C6AA3AA4E9C41777797D7497190E2B7144D4E9FCAC863
9ED74C7B302383DBA2FA646782103B9ABABF85F80F8EE057F9F21A002115B3E21A3B56D10DBF
67F1EF041D9E96F952E4E65281C3D102273FF3D201E7767B34E4FD4CF5E1402C608ABB8D11B0
7178ACDCD8DE9A2128DBEBF9E2BEC587E0D7BA1A686231A8CD5D99947F4E461E7C091714161B
3906C92A6D5EE5B70783552731AB9CA61E2634BB8E2BA1BC8B49D244FF89F5C2E9286C3467E4
DD3B35BF9989372416245ADA7378E245C1B10BF57BA8A48DF37FA7E5F60B06561C86CA309CAA
2A8B21F88D1E671C54E429863ADBDEA4D5F26FFD164000B571452DA04877E2900EDDE59A7E78
2F2DC54686FD124A711C44B6D3DA7CADAF4530B7EF0AF2A14D5ADF316099906847696848DFA4
CA3D1F8CE2A6BC82630B4B4617170558099C8F46994A8029B417CECBFE5513734425B165AC7C
4DD15155D83FEA6287D3629F535CB0E1A828A195341E314B808604C6587DA28FE318ED8F2658
BE9D9E2BDDEA3D54628AE2BF64717EF64FB6E1DE3D05BF69DB88275060973DA7570EACAB1345
862E2921A90EAEC32B92B99E50EC2807F02A135C5E5B643458C53EEFBA587FC951BC477403E6
8850316845AF4565284B8E902DE262A113234B494977D087C12734874ECC93406E804BDD3655
8E44D2890A8C6A3F8F5DB0A0D7C14CF8B137B335C5A003424CF45CF4DC0C64B8F71929F99C89
CE9CF245ED1FB628A989AB04F0A32D0DF7045080F87A9B6049E0E52612375042C579509A0681
DD6869C904CA95F8B1DE9ED886CCC43A935ABFE8B888745DD6F7AE3F6FBACC0B1230AC9411B9
0CA884D556543A196C817072E0F089F6D7EE3157BFB82A772F8A675315E12813BDDB5186F415
B9BF758F2B213B33981E1795DB41AD949032617C15A52927DC7A348B81288BEB59F2186D3629
A10ECBB8D29581475AF3430C90787ACE611E66D0BD9B41107A5E2BBCB324D893BB606CB48EC1
E206019D1E96DA890DFD94BE3F663F609F07503C5456571608459B26372DD570DAF13ADF2F4B
DFD0DD9649C545D82458793834AF2DD71E8755F4E58856C5EBE91695252BBA2F12DC5FB7130D
1792ECF6AAA07A7A7B005E668BA7D27F3FD0214AE291DC615221F13413C6EFD2E0421ECB37BD
95ADD58A9D51D086A4D0CA2CC1C7A6FA853F61B8C1ADF6738F9B30CE564F21E9D45A5A55D6FE
FEE27F7C538D375B79EF4311A81B014E31DA276D07E114759EDCD610F82C53F1338949FE483E
94679EDCDC4A6381770C75B71ADEF1CA131F5338E071266D679AB6343E961DD3D71D1AEFB662
BBCB0F34766BEFA058E02A7C3FFA833DF83BD4C8E0D89CCEACD5E1262B80C93A84675B71AF69
72357E3C93A7A910AC4508F6C1E260EA1CF03902D3B815DE35E3F30374C476271260E3657194
F9D63DC984E84C82E550A548967791BCD90E660A978A9DF434B3FE404496481345D9733B8CAD
00C306F0CAF67167EA9C70C5C124124AA10DA6B0FB6B69F1EB328B9753B6CA187905D677C5AB
0FE167EC1BB6A168C1F5D6F9136D24A3E27A49CE8CE96F754644A49643E5481F054CD9E5C645
C3E7F670DCFFE00C78F15BC705CEF2C8E1A713BEC20E687EBAA5CB7262E8BFC23F26C1BF902B
8206B25AD830B5B8D87CA79F1F6404FFB313386632528ED7B452C11C22EBFAD64306408A0653
6582ABDB2B2FAD788B4C60AACEC0F0862CBB2FAE618CD8DDA566670FD0B7FA64CE0B7A057025
57BDA95531B9B500B8C97DE2B2AC3DCC6E0DDD204AD937635F2EAC85347E2ECF35BC951C2066
A5331FE8B087A8E83B50B08F07A5578BA7BE6D9CA251DFEA9F9597B71E7C078A489BC718E2AE
13E9D8C4310427AE85B9B919912CFA54C91C1D898C066A8961A904A6661105F189646965CBAC
79F00CA699AA58BDE0C424A347FF1C3259C745D3C8B886196F44EFF6455E86F04D17BE7FF0A4
7F34980F19AAFFDF685AB944733FCD54C50A8A220245E13EDC3C3DFA54B418BAA2153C11CC0D
0C32ECE788C17CA10B149EAD12729C121AC4B7562515D1D721730B10DC9F48193B5C6D6ED5A1
771AA7F6EE5115BFD4E935A6C2DD7C2320DC3728DE360F99E7AE5F6A8B776E66C15D82C0839E
337F2B490C0C26EAF1EF8968898D31D8C581626CD43322952B450524741148084D9F77557304
9F5FC47C5AF4678238B0D70EFE8111E1DF0A90B46216ABA8E39B98ADAAD59527888EBCD817E3
F5E7C71634F94230A6D96261A1496303921F6E8ECD200028A8A0D90A87F957819414A0F3E3E3
9B08CF32473E9CF53D19D2012791AB857312932F70CBCFAC8CBAE1C883EBD8F90F94D415FB1B
20046A733FAA413D47409F87ECBE4BB0AC162627D6094B58989DDE0A12BBE07A99B5CC61C9EB
26AAF4F6AC89D40F36DEFB38DC9119796305545C4060A12D6773F32903FC20334CDFAC659F35
95FEF09D2AC80189040D4B3B81257AD821AD3CB784C49BB0F5672C6EF540DE202CC3B45BC7FC
BA494464E81CBF7439D440F6766DC94893231913A82F6378136DC07A0C4B82EF4910846E28BE
EE53E01B9A110AAAB81C3CE3955428A9F4D033E6D362FF75E50067B1F4CF5EC60DA98B318F7D
E2C7AD5EA8C30A9BBA83213FE3A1FD39C29CF224A25798EE6821DD5ACB3AC9171FBF108B2016
4F2B7D15E26FEB7359F27015787BA53F304D72661B68BFF77B5F91FA541AB4F11232347303D6
95A2A75C09259B35BED0FF9580B9B5988CB5AC0ED11E118A0080D87109CCAF46218E7E440A3F
320C97496F0C4D8A9F63318753B3067F4022EBB5057CD40A327F29F227D45D0EAE5A15E32926
A24EF46D9ECAF21983F09EC0185C8FFE0B790A6DD8727BFE8359D472C493781E40EF71BC747C
F60A673DC4CBA688CFE41CCA69C37AA18197CD4F96EB4F049EACDB88F80734E75C65CF1F3BBF
8E2FC4DECA78DBCD7C677F1F39C590D6F7C102346BA945DD8DDDACEE0240E441D68BDE187773
C66FC65F4ADA28F7C42C11B3E9BC78BE1B42D4D59F0DC73A0471AA8CB4791F0A881D82C7DB8E
C32B2CACC33F3FDB77E0A5B7DD3799CEE2053E9CE624649CE47799752F2BC4A23F0435F72E57
191774554506DB153EB2D3FCA44B6A435DA6D61FB8E8AAC78C891DED8866A96038D99586DCF5
0ED62051FB538D23C612B12D07AA6C1024DD73768952FBC7FEC6EEEB21CDCEC1C1913C468B8D
0350AD3E98669D50B1C71D4F28849044AA8B2FA0255D9323C7BBBF6BD48DCFFCC05DCD74CA9C
2F29FEF5B1447C07591CA82CC79F7AE2C57D897216A8DD6FCC2657BF131796BFB358CEB354FC
7374559DE7B4C879CEBACE1FF5C6E821D0BF596F80475AC6AEF1E6080B480E74A6A81CC7B200
CC9D1BADE2A20FB3B5F9122EFCC99890C5B369BDF64A0645FD36663843D73F126EBFA2B2F87F
6B6D1A481B8CACEEC4F7CC0AF89706E4D944E1A6AC9EF36018BB128197E740D6DEEDFAF1498C
4D2E47FC27E48B0316E856FE21BEB953B2F01C9472517471A5020097CB4494357AB34CCB3A36
6D89B5E598CEFE58CF293CA963D09009CD1BD479126200C3D342172CFC2451997624AC151B9D
8E137865B557F1C595B34E5D5274D8A05DADAADD33836C3C03BCC3FF9B4FB585FF613DBB94D8
44A9D7B2D3A913EDDE51E5F4DAF4D43934325EAFB0AF2DE524BA3E5FDD967F8F5287D209B681
1F9B56B619F0EA0A438976EF6B87C8D3DFF5B228DA82E4D95FE2348ED144C35F28002B7618A6
AFDE5E871ABCA8F41B4FC3BC1EC0A093BEBA007F9055727AB78E6053777C422E078E60D7CBED
83374D98F8EA106C40293905A264AC2BDC2B676FBD6306BB1D78B4ED63ADBF59061E25862825
3CD127874EB3A5D3C9B3B3AA506EFAF9456A9C071F08AA753BB312FC4E29054E0DC277D2CACF
2A7321C4D3CF5556DD0F310CF7C13C0E5359EE8C21507D2E8FCA40147D8484E0C002EDDCF81F
5B8ABF4ED9951D550A30B7BA608CC0F86C2B0A0162B6F1881E479009356D51D01E36B464511C
14C1CDBE1A6F78020192AB358E8167879717C15F22E8D7870149E5CB0BE8C73B17C1609BEDCC
70E6DB1EDAA4369BE30AC45F25557EA0D8D31120959DD29B2A224DC173C9937A29C189217365
B407D07EB62A523B1FB62F0EC8604C03929A7E77B02FBDCFB37018D885F544FBFEB1C1A60DC0
133BA920B1A70C9A46CD6BB7BE5CB0BDD4D0CEE65EB5DFF23C7BA54F8BA5CD904BEF3F4E17F5
B430206B2B4C58181BF23A50382B92FC5516A8C154E99201F87E0F4C5C5FCABD48B8F7AF0F68
68E2A4649454CBD2596C004106EC5C029E3F7233FF4AE296010529F7A4BB37E68307A8F4B239
987099B95C1EDC550C4A70C55092A7CDEC2F1739FF6513D0F17AF86ED78492C31CE44FBC4C8D
0C58622B50575E7DA87CB4C97C32A0829B669AD037C860D2E20F158CC0E6F4F95DEE851C42B4
988F48BEE046378408BB16D9FC4AB3AAEF1BB65642A207631C2D8C70DDCC9887C7B2A2C1CA37
D77E6E5FDD2B138A0E25CA88AD767F4D977F1BEA3EF2EB683C76C9AE55A30F3AA359348F1028
B96753007CB939A922B4534CAE7B4C618865040E3B1B167F40D66614C92E4A5468C1FE638B40
B8A431A5F7877852B82D1C1180226FE067DD8BEC98F522695A673D4A42707AB5A49503290B28
4CB4A541FA6BD8D6675822395C986B23BE34CFF57CB0C0A6037F15EB4904D1C4835D3482AD57
1EC475FB6DC4FB25A7642CCB0A5EB0B68A0CBA5A470BCCF30571F40066824C330A7B0917B460
0207B77DD22A4C004E99517814462A49ADABBAE60C11692458D1034D72FC4026AFE313EA24EB
18E62B7645454438BF6E99B67F25298016EF2A822347F72A812984A65BF92AEBCF694C768003
EFF3E382C7AF5165ABCE4CC66F4A6E182E00EFD65764E3CBA189BB856DE35B5C33F20F02F968
F360A461087C068B5DDCB0EBE6894649BC305214D9C82B979167FB07143CAD069D6022494F82
634BDCCAB6BD0C47019CE049A2949A073C6422F1440626A8D8F27ED269B9866C05DEBB5876FC
980B73F237CAFC69BE3A4B466485855233D20CFAA567FFE8CDF580602D82AE4CE3DA53846277
D067BC2D77937D9AFDD95DEF8B2D573E341F260951F43575ACEFE75F923660CCE5D7CF4AD84F
6CCA09EBA153F174BE91783D2EF3A48B320D8BCDCA178003F2DF97BBF69008A755C962D32273
92EC701B67C1E5106193AE52DF0A0F984C28A779D437214D5BC82A7DBB94AE07CE9B6C799F97
B03873263DE76BFDDA368D2178C817B29DD8CA5C5132F822B6DB89CF3ABCC986B8811C4DC60D
8B52A064C212CAB2D04F83B8C06DB1EC7B45426080466A641B32DEA683F50024446B6F410F85
39D6C79961B38D10BDC3E90B6D86BE999A8BDF2F93D9ABBB0EB3714F567485235589191E4E19
D61584D9DA998FF784BC5EEB74E54D9BA1B4E1297B17395864F60B047956F3D3B72833A6F8B1
E09532A3B11F76AB9B7EC3245F9039C1D68F618616BE48BBCCD8CED3249C08CDA7AAF73714F0
308B0C6FE388275AE6D0108B3B701F45A811D06518026C02CEF5A21875DFB988FDD55D26A837
951F8B4AD63561C1305CF12998848FFDC39C4337C014D43817786829F81DA6687146599EF058
61F108C2A8AED806B65CD25E24A9799458AE0258AE80FF931A09A6B3FC9E6A5B4A31E253B8E4
0DB6D4625BCB5A6176F4F999D8F88A65E96FA6CEFB1D52BB73442B46D4BC0C238AF8FC4C7E8F
287A9E43AE5F04116C5FDAE1277DE359219A68F037293D2C41B7D7908E046F3D06048D2F25DA
2243FFD911C2B56D72EF3E867EA0C2F5E725BA7CF76730B8DF9E3CE8AB9AE3E5A9D013F9049D
C9681359D0752456C02E5D158507071C26D754A2BA8EE96A1F13AC439B6B7B94949E07B10454
0071A1C0724B3019D672EB283BA5741295CF9EB0691EF944E1D93657DD8E16F134447942FF91
53FACE782CAC0005E7DA84B3274E22F37AC3FE2A0C84C8D8C058F9AABC44276BD3C1F063DA46
0D5689DF8597773FB16C5AB0A35D46A0E767182596D9915959AD9F7699F0B5073F56B522BD35
61B225B97A4237E93FDA1E8ACC3588B7766F812E47FAF3C8F2FA8A93D5948AE4631AE1A28A28
765435F7244737A2758DBB37F240929B2E9D3E983D8A3D46A9DA4B0679909F1E077E0431D8F9
A8DE54FC1738B3B5B6B4DDD8F339FCF50B59A4B6CD3E4931F8BF1AE8601E8B337DDA6424E95E
E366D620B7B7B93714E6446BDBA673873A169C3F7D58F62CB64109E985ABCCEB9EAB1D37D85D
93D90E826B4B5C57DC7E5F8C8A13F707260F199C58EF11E61F60C49358E7B079A2FCDA284490
36E843488B847999445FCD8379291F50FC6E176F676E24602C9B90BFE4B0358997D1F2A9652F
6290221808617B6D81A6342853EA43C8B83EF275F265745EAFBE7A7D4A5D6CED648E8C0A6BCF
6415CD7DCB9BBAE84A92FCE237A009FD7536DC8BE3E114E5BB29A5B9BDE2534B4752BC6D1A83
C7BBDCC6578EED4CA804EE9D59FF018B97902109939C9AAB744F42C6FA0D7E47B66C94F9029F
D0F224E0F9E9C10A5908E7DC90BB2138F476958A0CD2A3587733AC5EBCFB1727903FD4EA849A
A305EEB4E061C06C8D963A0527093DD7D9AB232546F9F88B850C5024E940E9A5DE9E9A6E787F
0FC5C1A15B46FAA5E4756A2D4B952ACAD64966DA1B0BA75D166E4479EB0B4E1A964EA0666BE8
7A8FD9E1D8E3C857B926F1C2D0E82AFC9FBCF7ECDFEF6F199223172A7261FD3AFCF54B49A697
81FEDFC6C501C4EE50CA5E8F199C3884247E21B7CD40250692362A84A63014B339835ACD79C6
8C97278F48D68533438C59864F89B2CE0C93CC549F4F4E16849C6D83C272AF1CDEBFD65975B2
1B129E0450330567DD51E08968FE04423D4FFB7D1D4F902ABA21F4C01F23B9811C42B4988F48
BEE06426CF7C8E184D03677ECB1A276DF9ACD94C31E95BCF3D8347A24FDC7E564FB9D11FBBD8
2DD3B819913B0E3A3B050ED0FCB57EE7005CC7DF7B9B5823F530554103ACFE356159AA9B85F9
5C95BEAC324D0097382DAF2F4F160D4471DA9A8D581F5BA89C4E826E905667D4F2BB89AFB9AA
62C6829046F1FD661720BD67056508D7F1618EB58CE32E378C23EC879C4481926A2F3575C7F0
2C3264E854969E248E00139D87013DF831366A11B7E78E8904C9BF6122548B956AFEE0CB4A3F
2F0EE383F21772FE361B2EBAC612C9EECB33B9714AC09EF85764F70030C0BA32BF26767CC2DB
77DF1961D44C613C07F3B3195E8FC5D235370BB495BD1DFD57F59F0CC88148FF4CE3FF711498
A985049E9BBF64F7C19CFF81CB25CA68497B17D31A9343E46C61FF85B8E5AE0E308D40397719
1B38742A6AA3B5C84787A5341F319727A146D32B76154D1D24AFEB30F120F7880306D17F52E4
6786A0B61CB4E16E956DEF4556C15633BFDE4A158DE1878B599E466B85AD875A89AEBDB4B4B2
4DADBA3FA1A28DA0874079A9D5F2280CB9257FB3E675CC2A6C25685EB99C4B8792E524012A6E
A10D9C8D74ADE2AB88AA865BE44F38B5A528BE89B2FA4A89EAB331BE1E050D3D388382915662
DA0EE3BF5848C284C06509D6AC0E4808C8B5FDFCFA9C6CB469A70F5598AD7F924F654ACA0F44
3FA7AF6632E487FF2D0CDA5AD6C9D0DAF55E535AFCF28B95411221BB0415216724DBF215A33F
AD325667A0B7D58FB1DC0650591D563C50F2C50186EF2F7E4D217C525298FB7AA3F643C77AA5
26ADF53B533E4AC9B41B36027CC364E74F309C1832CA97763CA2A07F4383D0733CAE974D6DA9
1D97334780E43BEC2A539C22B5C227042BBCFF3DC2093CA38458412F92004A00554F8AE5412B
DE6F63445465988A6E205AAEDEF0E0EE2062CA0AA29306B0784E1760EC91DC0B2B9B20AAD0B0
7DE969C1F4D0BD5D94F6E03CEB8B821C1340C866E697AF01893493F176846EBF16C1EF717975
D0DDFF1D4158540133AACEEE3A21182F43265DDC9BEB01103A5551731DD91AFDFF19C1D881E7
BCAAD2059632506E851A05388112FC6E1296CE350444D283C4298556098C7EB7DF219D593E65
3C81ADE6D92049BE0B0DBDB4548574EC069078D99419D46A72C53D33D02AF25DBCE794F56DFD
08B10C9229BB3A443893ADCD100000BC5C4A69C986BEEDCF4C9B02DEFE1886705E6779DE47DC
5359965414572BC17072EA6C9F52E49EF6FB11FC8E80C7DD3AE53D1AA08600D7DB145DD779C7
FCA8FDD12FFDD933393B3B22E1378D546B31ED161A040FF04AA0DB05BC90A4200A3D88D5D333
99ADEB7B41EA4C93301B088CAA35E14496AF4F2D8E73FEA5F5AC3B3281978360002EC89761DA
8EEC4FEC0AC6DF373D3650040E493FA18186DEA210C4D251044431D868E7FC22078827F23C27
AF481135BD82F730E746E9878B4975983406F47AC8BEE735B4E53959132C95934919F24BCCBC
DDA5A4CB302510C29D5599CF21682DD1B4ABBE34548BA12DF219D79F13B0BC62A7C97FE42F26
234ACCAE6F9DAF5F9AF2BD2D2752692CB76BA99740A0AACB316265786A7917B057F34E1D2DD8
77E1266449BF1A790001DC04D874EF033AE87B066168EB75730B090876A8E1B7FF22D180E105
95A04E9F57140E8866E1F2F8DCA67530B90940F45020BD86FA7B6EA85542625AB435D0E5531E
4EDE355B3E81197AE3C0CC3068C9857D5B149DD8C48348A51568A117DFDEDFF28087F4E387C7
0D499B6FEBE95B1C7E7D465D8008558DA7C1FCF51EFD19B9EB1F4687C6A6C0F12B25772E0785
4C1481BAFE194F66842BE0BDEB9034EFD17C2A12110959F4871B9FB9D58F13544BFA4AA15019
8C6638CCB7564C14820B78794542A2EEE17A9014D13613F1354924D3642413C2B5D3FF46AE54
E811D53408BE85CEAAC9D19AC0E6062E25A581FADB594F623F00C1DBB7C73E21DDAD74D504F7
0DE2FF188D2A3825371AA9C628F9BEC52B400827C20523DDA19A4B664181C7B6DAC74EDF2A1B
3AE905BDADB2ACCAD15ECF67A2E34FD28938D975EB8637A13A6A18B8CF851876D118140C0761
C3F93AE3E6AC61E8ABACC36FB9597F4E67820B49B4EDA3ACC2B23AA1BD79F2856E8047A57195
CF4278F23B70259F0E5A22E163130929C6122ADB2648EDD6DF15BABA76231F6CA85B35EBC308
945044BDFC4C1B6448674547D9E8AD9EB209EAD3F2D36E08DE2AFA766EF38C5280177BCD5068
221E90436AFFBB3162F6F24F135E542DCCFB56AD5EEFE42048EDBA31600E03ED85EF5AE91AF4
F5EA4388A9626C934321ED15D267D2AF759C5FE93254A60856778CB5279C62DE1D8DF5FB4D77
BCC79B8561756DBEF748A0FF90D1F76E5220165A76312749506F57676B58909B2095EF00A525
15F34A1EA19F0B7113FD5061E356D6AE3E4113134E170D831368DF2DCD327AD43175A1AA65FB
6E923B2627BF32A59D24B54E71818888AA6043F860D5D548B18C80D07E398A8F5ABFCC4A89E7
1FC79F316DD65BB820BD239FE4632E693071DB8753515682F9D19998AD07CCC1FCA7EAFF2744
841466C0128C7577067EAC8C2E85C271BCD8C858038EC445FBAF1BDD954B06CEDC4CF209E4FB
15FCB2C2A56E499F719764BA6B12CDBCB4885B833A6EBE24E9C1FCA5898F8C14441D2A4CD0F3
08B5C11E8429F0F49EF015089DDAA0BFEE653F64E66C26FC7396984D4CF7A4363B826EA82285
1532AD525190CA681D2DD8354E2374AA2F1C43F6DDA81D9AEC9093FB14816AE71C2FAC6F0ABE
4C595481EE8E9B4BD9DED896130BA4888F8DD7571FD8B9712A3A89D43801C3ABAB161596EC41
4C5F869E00BCDE4D275F951305ACC2A2D61D3D7BA4D978369A96AED979FA28FB845E4ACF0505
458255D067F9951349B9EFD8C1B0327411B8B5FF0343BDC37F9729E777392011755EC88D1531
811DAEE13D0EF2C62EEFDDCB4DAC085DB8673AC7B3B8F0CD2F1D70A35C821B7D6105A3BDB831
680CD3F18193C162784F47B13F1A593DFD5820DE22F606ABF1419EB89D5272C475C4C10A4E30
05ECF3D1DD711FF88A4B57DC39AF18F70A2CCAD011D65037BF9182B23A6F8C55F3CF4D3646CD
B7C0B01839832A85248CECC00781273351B1E11E119A92BF6FA432C719C35E2A4AD6704AC7A5
D1DCFB05C8DF61901F89A4311520F57BE22F0CFC82E709647FD6E3B79204CE90D98EDCC54E53
B873B38C0B954615B3FB950A451657ACE6B352A0B859AAEBDD13EF72FA6CE8A6DF6037F420E3
A6062C3054373619A93136D4E6EA7CB8A6AC43E5A25A6DFE6B95D1519CA6EB7704BACE614753
257EF888D043C081C795510F5E3C3B3727B7174FBED75E7E21B0687C2D0D1AA2CECF5D426FCE
B8768946E9BEAAC7FCDFD223892A107CC76DAF8E30D8F95DF55A39E1D6A01595FA187523305C
11E261D1C8F9C716AD8B36FA8F91F865749988C576633871F9BC0D403284D04BA5587D11F3C6
4F462F549199BC5A5E36F27656B422EA951D117CD6221742DFFB8B9C9F6B16562411F7AC2D62
1A2FB6FDF0D1539D1FCF8903DE802782B1A0D6BDB13FCD020D6E0787EB8338409DFA0BD29BBA
2E8B6B22E0D40ED248BF6D7855B88494317A9E4DA281062F6A96E23CE6EDE27FD1DF74642463
F8FEB2E62B9F3AF0AAA3BF9A47D294EB49356137CD29AF73DE1461DAEA33A555B50FEC58DC84
56071F25C6D67F5E70DDA897FE3835AB625ACB7AFE3B82D2B0C5E98471565607F2BE0C973DFC
E3D6736B0C5D43D886BAE7701512E0DD7C4EA50913E6B8F09E3DF658D3A7F7072C94A6A8F757
53E9E1E929381A9135F995252A00EFDD18E778631D0224C0E0A4EED14C4717948C37B0D9ABCA
8AB2CA8D3902B4684205A941B624AC12A958CE16C7FABC280F87A42153D59EFE757B3D2E03E2
9F02B64851BF641FE8BBECBD8F27C11D6EFF56C50F4171BD94D2DB7ED4E07C30A09F1E50BB0C
77B951028CEDE232D53CFCE8204A6ED895320F52F871BFF3503F780416880217FB9F93F8EBFA
D77892FF043565922DA1CC2A25785D35E93F9FABE382396B06446689FF7865118CEC657E3D71
10BDEAAC621003A47551C1F6473704560DC4C767199DFF05C7617E560A714DBC2C1BEA50529A
568F66A77325DC720CAE61ACE1A37698220B27AFFBFE37550B2B506E6DFB9A58BF18255F7F4A
B21B3F60D696346EA83F9282F804AE6AAFDB036C583A7968E39818BF7AFD38162672D78F7875
1D032A6A2ED084247A0B71B44ECBD5AE01D6BE4D8512CBCD1F33AEC01FB08F7D958DFC5D0BEB
F3F3EE53DB00E93C71C58FFB28ADF1CEFE942CAED1299B2B1B5620DF7A300E7DBA63D532557B
7A014E493303916813947A9E2B67728F4DA6FB29A0C775FC6F49181352F993352A140E236D02
ECD228C92B6E62A72D9362441C0CEF1714F9F4D989379DF5BB0324D64E065D54A70FFE8E30AF
379A7199C3A287E2BACC0370C17C724C2E43813AA329364319B1855BEC581E071E16E08AF409
790C5022613655D8D8F257466803DFF2ACF85F3DA08E1AF359308C6547B3031F88BFE99E2AFB
87611CABF9600D202BD90E614D9D782B6A93332FA17BC19839366C2721B834FA2E76D2539F0F
EA9E8C690AF8A1D9390AFB97DEF309CE0A3C302B8D5D28FBE65CB3436005A8D9F8056AF1F23F
C348CAA146ACC37B874A4663D549A401E98BFC01D56205DCE7532B10890ED4CB20933FA67A15
51E10361B069CE5593207C521F3B2BB797C9D2822DD04E21BD3BC252FB30E92E77F4E85BAABB
742DB8F062E17EE61A5236DD260E14F33062C4897144033B3413A5066684622CE8AF9460FD6D
AAA5BFF4370E6EFC77CE81F4B619298C772391EE3D1F23253E536F122137822270AC3CC63211
9B31E932783A9310AED12414143D5BE189BBCC3812D5D0E630AC359BB10302BFE8B99CF93B3B
1FCE84BFCECA996717FFFA8146477F8DB1798D9E8D5528484C85CDC2DC2E76D6E4580021F858
06169215259CE932B9D13E3A9FD729693613D69F1995F1D63089A879C0380FAF749B016BACCA
401F4CDB542E2611F5C060C050F73657FD9348ADF43B2A34ED90E784F41CBF364DEECD123A26
BB1D0107B4C89425CFC2DCEAAF010ABF3C15BB7254DC13EA44EFA101BC45254D7610BE5A2A08
2C64A9DFD4204555BD4C45590CD77C270B2451EA7977FCE9C167E691C492560D897883C87077
CEC321DBEB6B60C8E3602D5031204CF1328C9C4227CAD7009F857CC655AE6CD4A935FF6600A7
6B82693147BFEEACBE2D711F4EB2E9D1EDE6CEE54FA16103971DB2892407CB302D239CBC83BC
83BA938888EAB9275E8319302058BBF8DF5AB3705B9F35A4C08B0D6668B1D8E8B5CC4BB0FC41
3CC26AAA9A46C6D4C5B185BDEE74CFA284E24ECB7AA16094FEBE1B41980F1B04EF4F8F210E15
B1168B757B06DD1D481454A826348A4AD2B5CE5D2382D7FBA0D30CD97832321825A27EAB3E42
C611F31DE946144D5A0B466F81D28882C0122B8190B927C9618F886EAA7CDACAE95032D56E6D
C108B0DCDB867D5AA476934173E4E78F031C98267B984D4FF153CB666FFF0A7133CCDED47F9D
F18EDAD5B7036163640C3366222D847E04F0C3F48C317BAC8AF1A2B82B68464297748E60CB53
26A1BB6B9A00EDA4E0B16747E36D925C2CAD2FFC54942631B0F4917BE242D78C8E10A2100D3A
DF037B4918D763697283478486E627CBDC03DB15CC79D529CF49A29030D2803CF1C568D8CA5F
1AB9EEDB1B873C527B02AE7F478967712F6EB18A0E77D42D65D7BE5E015773FA932D21F70EDC
20A905C5F728BCB96E77025BB93648D671467BE7911C2C3503F9042CEA5A4627F81FEAAC67A8
179B198B61827E01FCD75BE8C29223913CBD5CA0540E56BC54FA5B4A84C6E39EF6C201814E01
6C617ADB5908B36489BABA19FCC06AD4C1F5C1F812C269A8C8AC7E5A1406E30B42BB57BE3B2D
E60BD88410F55B41EA62706D29873C78CF85F8FD5250E3D1B454A3260F041E5A2DFCC3700295
A980C1251A21552C8CAE493EB5AAA8A61D179592D1FED156B9FDFDB979E971B5DC85EBA32B44
8B3B431306E425ED58138DEED7533E295EE14DD6E234A5703337D54F7390AC40B30A3E6859D5
0B1E0D3C175F764715EF5EF1C662426A823A7D3B4FA4A79ECFF1E139541B1F676D4CDD23BC25
3CCCADBDB47C8086D7657DC8284488144C6C2A616C249E1355E83BF0A67287F723E6583C1B48
9CD612DE80B8089AB6335EA9B13FE508961307F9D4562222C36EB862D3CEDECFD5B3AB365698
F2712E96886AD3194118BE196DCB9A1FF45415201EC6CC499BC77D7D81CCE095F763BD5C485F
D26B098D5FC4D746D6BA5268E0646473C2473962163102B3CC634AA7F7396C8BCF0B389B095B
E7FC2BF97EFD661BA953E05DBCD629BB4D8F04681EC34514D6241CA78E129EB976C3EFE92A44
B2CEEFFD483085CB8F837AEBA4CA8A1F7439566BA57A38C335ECDB5F9D359B9D280F57AF90B5
1E293501C4E770C212836B472E61D984F2E38DA01DAD1D0DA4D22D56909164D8794836C3ED15
EB3D9725A7D143C1B91EA3E814FD16385442A3109EEA2FC0C7F3BB6A0AD0F0A670717A31068F
6A5C589C6272A00555CE9CFDF69B946C6FEB3229EDCD650F7CD50B8D87A605D39A2A54989EB7
CE1FEC9D3141AC46FEA35B2523700D1B2DE93129AEEEE8B128E7F4BD4C84CD17362F3E3D6926
359D3037119095D728861BA164FFFB4300BBE12F3E96C5A9BAAB69293EBCD14BE56BF3B14927
E1BBD5341874FE5CA4ED6912022ED7A505307DEEA144E0A302FC58E58CED0826CAE2F50EF586
FE01558CA12B909B85549AC1168921D68EE90627313A946D6E77D356C81C7B04436F50763934
2EECB62FFC50305E89D2D5440788F9DB1EA31AC6BCEDDD431D9E30E5D1B65137A0DFDAED04A8
DE067CCEC8184779A22F637FE30E6DDC5B53AB5DFB4C10AFB47E04267A4C24E3D4B014CB2FB2
6B079C0011E3E6523A05C6501947BF194A13097D7C20F841874F87CF2BBA0732BC60DA4805F7
9B5A3DF518686B8AEB02718597CDA7C92BADFB0DC7341B127DE9FBDEE8E8CC04F19776565C12
2EAD1E8AAB1F6763CE1F9AEE40E860F7007C92903DFCA3AC93DD39FE1388E450E74F2610133F
EC58D5921B326121F4EA2EF940220BD221A8FB4E0A508F82C0F585E2F833318E0FF0586FD6E2
0FFA8229BDA3A6B84CC7683B7056EE108FF5B6EC293F943000B5766068F53814FDF2ACB20D2B
232455012AFB9C130A5260E05125CAFDA5C4F5B9B06B6C429484F5A5721F0E8C44D9819CCE5F
13B3C6A8C7BDD2C0756A0AC9F3BF98B0D7F29ADC4B04113DEA1C20263FB8D8F0D4EDD8993963
6BCE5B7933ECC23BC0784068A53085D2031F1944628EB742C73A478323FF0642B3FF86F596F3
9458EBEA4DF37D40FEE5DE5685B025310B622F7771DA09AE94C3F9CA763C106D24B1C6890ADB
919BAA169718EF7644FBC904C53B5E6916BFF6B2417DEFBBFE46A1AD8E113A83A675DDC656AA
BF32BA1C003A4D5A6099CFD99B5989CD779946F196ED976AB39A666911A310442CD7E65CED84
F1072CD70666150E4249078596716DF12B86A66453BDE2727AFFD46F7072F8C905E5FEFA8C37
03347C1452F36D9349174E5D0BF4C688AA62F617D0C213261494EF3B479D15EF9F3167839F73
F05EEA73FF73CF0510733BC4E2C358CF53E619CDD8194417D091365326C4E8E7460C19DD6784
7D66FBAD913752774A8CBBB702A4875FD35F154E08CC3322C484FEF7D623185BB09289ACFC92
7B885E1FE8AA9CC676C237444EB2BD8919DCC2B4511F4A9573503A536D0477ABEF0C05D0283D
6852E45D3792ED5763ED5959C92CF3CCB81DA37324A083259F623646D8005A77E3A35B7EE5FC
52FC36F7E799AB5EE36B5DFACDB1CBA0CB96D5FA4C438A0EF1219BC0D3FA3B03882821B99490
A5738D3A5230232C23F6D2EFA9ADABA14F1F61F4BDF3C29F20FAD3520CCF1F23C653459E4899
65F53305C563A75FDCBB9088903D7AF6E9A79949E9FC0DCCB4C0147C17C4B8F3AD26524DACF9
A6A1F76D7EDF4B8109DA748A7579C57A13B5FD513FB76936E4393F85F1DE216814A866273208
349EC5128FCEABC53D93DE84645D7501AED73D109164F016ABB45C90E6D1C7E7EC13C3AB22FB
3F3EF6E119ABAFC82AE5E1D371E28F941A9298F4C7F679BCCBC36993B8EED1F55CDD939B8464
FC982E84D7B8AA4BAD4768970360E9C99093F9C9F5F2236AAF5104F04339BCFBD129EE748885
5E9EEDFC10C891BE29E742535DCAF05DBE1618D36EDB5D8F40FB5A547EDC45FF3F4436595051
7A90197E8F842F99ACF3E8B345070C55E919FABB38EC8CDABB88F027F5F3D8774FA6DC149A82
E2239BDC1B20C06A301A272094DF3DBF9B227A9A4DD2BE83EF224617620FE776C5D9DC6F5404
7F2FAE5A3E15EAC83DE6A2D89A4D5E59A4D503F061D3230FD6BED27AB109BE4EFA0EEE9A0F28
9D131BBA1CEDC02E319A3723EEE98FB84BDADC23B095E487210A85CE4895379B8A7D59708A1D
D94DE02A4AFE3E5BE0166FAE6C0F5706817B1CB2DDD7E68A4799BEE124C8AFE8DDC7D7AFF7D3
94BFB74B9394F554875E6F83E9914B4D8816D16E62AA0C593D0107798CBA1CC095B463EC888E
530F5D253F94526457087CF9EC76900D9F11637E4A43CFFDF3073E148F6DD82A0AD5A4962EB2
376D74B43ED747752B9FE62F9FE20AD62A2EE61897D5651D6D61D3A64DCE59D84B3F36829A1E
08FE27C986B64984D472008DF125846277D7854F4DAF1EF7B066D049828F668E671C77402B54
3C349C4744677E31A24FD761F96B3EA4721F57D980C442F90DC92B981273127D061D413E37FA
8D08D0F473080005BB9007199990343EC253DE8340CB8241400BF43EBE83FC2F7D039FBDF98C
3AE5AF967A79CE311D1EA5B11D01C7D57F1ACE6D26185D47666C13429DA58B48537125719B3F
B91FC3F7297A5BD924C34C87FE0D007E31C06871D5FC0D1CEB088C4C1F5C721975597B106C82
18AF965069C536CE44A458C5F5EF16A5C32C039E91269DDCD6172656DF94F9E3A088D25FD071
6D3A105021076517BB350AA163E3C5C8EF5AA0F3506F4C6BFE34C363182D687F1689A3A8A15C
5A989F8373AF8079027FB7E8A703B38F0C163F89FE695E5753FD9FD572A62318A76D55CFA811
2CC3D7D5C0842643A4D5E322758E66ED28F0404B1CA2AC3168613B6643C2052364207431C0D4
9A0E6B9A248C7D4BE9E3DBFC08C4FFD3FC569EC96350174ABF893DA2A0E9D40A8D64792C31E0
F54E95188025B6333EAFF3DDA8C2999422C9CB849752D8692D10E1910AB2D0645E92A9B210F9
1118D1BD0A87283D69B232E5F9B76927824B667D5F4F42179FCDC67A1F77D0336E3BE2E86731
E7DD2E22A4858E7E644B02ADAFF107906A298E4315CD0D53AD4267F477F99B127B76A1574AF1
6F8622CF9D3E3039556D4A0650B48964E3FD1312D6359A68F8DECC0E9E50FAD4AD4E251E2E94
37F2144DD6194BA31C2354D64406E5C81432B084A60F03372D111341C87820769734D4575C12
AF6A37A97731F66B9C6621F75D36759571A0D112C61E0377DB49EE70417D896ED95AD72EB0C3
7EFE669E8A2D463E69702266FBCF92D6ECB6067474E644A4EF3AB31FBDFF2CD67EDCA97F03A8
FB8030A909C8C880299BD440BB9A83186A9A3710511A9144E98DE8940B4CD74241C519F61A65
895AD1798221ADC87108F46C4B0053F52392A252B5626018BD73665832CD0811FFD4C2B4DCC9
5C5120D4FA3C0EFFE00E142C26912591EE6B2EDA58A791CAE13CBF9163B1F51C0B9DAC2EB611
CCD11AD06C95EDCAE3671575BBDA696D80A767056B82E732155650E4FEE9E15C84B4FE2084ED
8A51B748AE344587EB125EA0EE9501CAF82021913D6C9DEE9FF6F8AD96A6E87E5FA5B9FB3034
5B710E5A1C24D247D30F31A6F701F5A722C92BAF496CBA6DBEB0FA393A87B36944394115B215
16AFC18078E1FCC7EFB63EF236E08CBB6E745B20205A30B82CA5F6F0FEFCEA72324D5CD9468C
86371AC76426CB9C935552066F94B31AE4EDE823DA03C6482F4AC709E3AD83651BE836E811E5
809E52AC7EE26C8182DEA91B3226FFB31238A55AF9EBBAC6066185D569D1F0CF8B38C4F8FFAA
8E60FAF2E56258326D945671A99C13120C58A3AFD96E306ABB1C6E92104D1ECC0EA9792AA503
8530CDD043191D17E970C3C166620A506AC8F146B86EC3865D8BAE3F608C6E1462A8FE2A89A1
0D975A11F6E77765290EFAFB1C83E0FC5BD8504A952E6962ACB49A8E53E65655D335105EB88C
81C0EF2CD6C89B7BEA85B1D891B40305BCD43E1C40A0B416BF91AB94418A02035286559B2DAD
03A7D6394EBC11C6C4FB21F2B1613B54875E25F0E0DC5AA60159C6D471EFE0630E5BEE4294D3
AB38C937337D828AC97BE700A9886724A988DF8D9408F944BF7DF2BF8A8F1993F4825E7DEAE3
071EF279870BC8A16CAFE55864C155C3D27FC05BE2D8EA1E5B7457185CE355CF8E7AF5B2873A
A9756D52909A8AD959699ED1FF56AFBF596B8AFCF8C400387FF5E2385342F4A0C6AC4E4E8877
E3953D5E76A51384DDA5DBF3E30D4277ACB753BE3F7D82F1558DFA45DF3043D33C37D05C6C71
ECA2D3FC5076F4AD5AF92DA5DABC856BE998C11E77D0D8ACCFE608F27BD3A547672C94DB17BA
CEA39E52307DDA77FF977E37412F1BD6D448E9E1B52AA45793EC8801C61A502DA869211D7D04
23BA13C969A16041412EF9F9315ADCAD998CEB7FB7B0BBB9B9C73A0A1727468D3BD89F56C075
9A71BFA25A86D90C645588376B8577BC84B96689A9C37AEC6C816224404C2445B41D4DC93324
6FD8E5F749C6DB1BEDE2D2859ECB2810E6A11731B529DCFE3A5BF4DC9212E8AD9EE6E7B76B00
2994F6DA7A9E1B6C07B6C50BEC227740C59C5C55D96C5223D143A8D4D74D8F2E5B555EBAF135
810E747E31F31930B69714AF224B91640A1ED8D605342B69B1B38DFEAAD14FF54BA9B97632D0
571618617D4A7E73A7EACAEF6FCE03ACBE9CCF07033044C027303C388CC0124EB79F98FABC15
6765C4AA062BC3A744FBDF561F1F184486029A0CD32F77EB4B4503A411808099E54CE3F758E2
C8842A5F9D9DA428B300F768A9060A5918879B0812D677A173B1F99062ECC2FCDD0399B62720
9E6294D5A1C77FEC78850580D57554B78A12197D5D792787132E7BF195905404688959D50B3E
7B83B932251B34ACE56518B7F98D8C87EA5EF9DF3D63EFAEAF99156720977D4F96074C85C0DF
B2B43B0DE75EB9D31835BC47E587B80682633BA582717D72221B9157433820AD6CE34035FE3E
3581187892392CAC6380FBF604BA8EB0A32637E44C8F1D946D5E1909ACBFEB34D72584183945
B33D82F4BA2B915EBAFAA67618F99BCBAEFD8F8BDA9B86D6709379F397B5A72F6AA4E6F11840
CD7B753D89B911988EB549D95F5042833C9F74186C527DCFC7D77CF316B77F73EF90007A2BD9
1F33F83C214B0E18050346222D0D51BCEAE15CEB82451B37C52DFD5BB9B8FCDA1CDD77A4EB00
A21641F2B4CCCA221C3AAA7FE31A11293528DD679908AC59A744ECF6E08A08FBA606CFF149F6
43EC607E698776F158923B226D3D0C4B913D0A1B94B6ADB1B84D66A8B16546A0BBF8E0DB9B6A
17D50A2CA6E67E0A8534CE4EB669A9F367365926635BA98630C2232C560DCFC81B306A70AF9B
CF7557BCBF89FAD07A97A14D3A2F8411ABE09AB4493184A80DD311E94EF8B41BB7159FF42F6D
073B965391990C2702D5D4E33A4E744E5621EC18A35D2448E50049B247A7892933A55EACCB19
9E3A332B8BA2D78556DC444463BA3065066563083DE0CAA2C8E6B873E6B92DFDF21705057935
28B9D731441FF20867D67FB7D97FDA8954A294B7BBD57F25ACAD226D08A5C1443B1B0274FDD4
E32FA1FB80E1E93C841CBE010C48D9F1A337D12487E07C4B2508E16FA684620536EE08634A9B
547481D3E40D179EE09E4A14B240371CBB577C24E41A916C134EB24564C60B8F9E4DFF250AF4
65299AB5784D33FB3BA56BA4346C5E193B11BAF18374DEE98D64E97D5372CA4D838B5F874745
956156A046D2A8A2116CCDE050450087F1DB4227C6913359B3B092E6CF1EB7D2656AD944BC31
809F3DD22F6B8000B655E1D05F1AA005AF71DFF453E1D29BDE191CE51D37CD05B5081E63C783
A5343DE829FD3128A8D0DFB72457C4FAA82C1BE3B662F204E656F659C6948CBEC38D85BDA3DD
3B95EAB3B041BC3F52E265CED0A9F9B9E5F26886FFFD004A851CE67154C45E547598D331ABD0
E44A48260C501333EB57650F3813859A0418B5FA806E6C4C8014051F34DB0FEC7CED33A8E785
9ECBEC875808C53D21FBA64F3736D7CA13F8FC4D14987E8E439510C6D46FFC0FAA618331DD01
6014D5EE1A51180C65BB67E4CA008F4AD21DB6BC6663AFD4C61DFE5761615D5CAB6156695702
5642C16CE5606E44D0A7F52C0140011575698ECD06573F9258C43A247D74152BA326EB1C578D
25D7EC4625540E69E5EFC439386FC381EE8DB04CF121C5F84FD9EAF0FDA90FE31353CFEEE553
13363A382E410C69EC7041F3D303949D4F4ACDED4BF1A1BAB640BE0D11B44012446D6F58AE79
405374E0CD5F05BF624B185CFB399478B6054D1624DEE473E9C52C2A58F10F72679E10087BDE
F832E8C8541F04B4678907C099B4C861B389EA2D702CEA96480C536EF545594F697053C9561F
FC9CD56352BFB5CDCC1831E0C8D0847BAAE46F16F50F712ED62351CD0FF01563FBECCD992D9C
F08F693D843DDA71EAAC2424A69F108C516A01823773BA6EF9E979419578BB95DDF07CE70AD1
B0218F1C50436D0B12007F3C02213963C6FA4DCA8E6176D5CB36C154E5521DB36F0BF4B4D75D
026F4B5FF1EA334DA971C530B79D5D9B606899874DF7E10539E0D69AA8241AAD05D703B2C731
3CA21E4F0F318F25279EE1F48B5DB71E95CC43609315D5C3AEF6EDDA5086080E5F31F9264E3F
28E8D5FA719DF9698BAE87F39250CC470AC10636A1A072F001030C97EFB481C21C171EBB2E7B
3DBA17D4992E40F01C4CE682B7BDC2DD56350DE2A918EE186B902440BF4A23D548AAD431DB6C
E594C32C4F8AFA96BCA7CBDCA3AB620D1083633A7D3DF6D655CE07AFA91BEF5C6336DB3C4E03
9099F0C424285612196144DFDB4813519247F53DB9977737EEC47C19D0E66CC522D89E0F8617
96F1453426838E75DC4BD85213A75B366A122A59B603F99F5E597CC52FB5BE96CEE3D24CF6D8
53921A81A869CD14A168D0B31EF2D54CD9B1ACF25C1EF0C42330ECC879A7A173D17522B421C7
730F5DE3B14A6998C9C3A0D1CE5326C0116677997DB1FF6112FC8237B2EFFA72A9DC8A82F706
03EB2147D0CCB152349307F6DD5EAF99563D8614CF7DFE8BB2C34133B1A27B21D5B903978CCA
368C23ACEF2D4E630460626A270A12898C8C212917D2348435AC7E834218721399E57792C8B5
4AAC664D75CFE9EA15EC9CEE6D2086179EA72EC62B6DED17AA3E909BA70A69E66F8645DB6269
D56F6579693CB6F781D81E79F3FE0871BF686390D86181E9990B7CBAAAFA2599E57618CDFABD
E3E21C43F378DFD416EA203EAF5D27818360A3AF5EF34C15E337E74DD46A577852C663318406
54CBE3901DA16518B6AF1E202DCC687AFFF5E458FA887ECF5605FF93A95A46C44A9BF48760DA
288808001107E6BADD29F9952DBC83ADD2A58CBB7500D9E2DE82BDDF32C75C56B5F4D17948AB
24610FCAF83EF121F2C2C8CC1FDA43A0FB3C320AF44102AF2C54F41AD7CA1441B0190B1A8CAB
AE86B1A1F8FD7A6C399BAFD3270E115DC8A348E4B87D9BA2762D95E4CEE98880EDBCBA7D6EE1
25D3C882B62C7141A9C38053C87345138059980D13390D0E5754FFA531F45A825F54CEDBFE48
D661839D141A2593AECE3AA3F5B280CC9219C1424773F927A1044BBCCDB55CA2AB9D9BF53E17
9CF36C33BBA11A7952B4924A01B74066478FE663C7E3C0D28DE8A8335EBB2D98360AD24B338F
3A78F3204E63B12E4666025387C041DBA2343FC0906885F3BD8CDA1E477415180C8AC27F1430
119AC825F072CD2B1932DA6280A24F2D17065EF8426FB9E8A0CEDBF8B53660D6EA05771E3184
DEC4AFB3DBB8F3CA65F7385A21CF096EB0E2AF36601CF5687FC1320ECC03AD922DD7026C44D3
DE96A5C7C49CF83F3BA471135D1DAD0D95B0D959578B32CD6D1B5DE8D968AC8AE143A6201904
06403ECA146BD3F49F5A801D553C922291DD45CECB168320E3689CE3D8E765E79A1C79A1199C
ACFED8554E870D3A5C925A06C611A73A94B2DA9E151EEB36F9BF0672EBEDB9091BDC50F72E3B
7C55E073FA8F419543A47B3A856C09FA4AF7ACB5487469C498AA97992349133E53BD0B9B9F28
1DEA1D8CA2533001CEE5751023C5BDB2098F3C0F3965187364D373A55B451ECBF1C4CF854F3F
EA7E86AD28683B9413BD9E7CD3E9BA8EFF17D3DE056781DFC163D6303A1E0A0615CC57E05DF1
9EEABB8A2D8243A11963FA523184A9C24BA3B1AAADA5A828AD34F93F36049B77A01E9B18DB4F
5DEDA9688FED943B6742038557FA67844296A8E622029D256536F0B7897568D977B951714F2C
92920AE1D9C1522166BEC7B7E4409021B0FE55D8FB9A71AA3A1506BB977615AB8E35D14CADAA
CA791B8BAF23A186B249B3DC395A5E5D4C7211CFCB6F5C2E62B849DC72536D9EA68720EBFBA9
D98BB5803E8056E65C47B12F92CE84FAF73F2A08F145DB269577AD50EE51A292BE6466C64FF3
A54848180D62C8247FA6032834F3201D9706DD1190729F9B27C76E7DA276514A309F7EA3DDC7
A9C84FE049F8093CBD5EBD43AE5E062CB28F33113664FDBBDE4A6A71B5B520D3365C57EDAC15
D5CE4BCA872623509F2CA371C13493B002A32E68CFD6165D2DDA9F3C6651EFF6B650E5998A9E
D30112AAEF280A13710194405D1A8E1144397010DC81C42ABF9A3CCF8FF86B2AE7777EE66B96
B14851F9B3D04E0D4CAC4E28EF33F6182F0B44DBFE0F93318195F107EF1213F95FD217D79FE4
6C5DED68C32DC9E7BDD876221BA76F9DC125DBBB279C493B2660321412141D7052737D069640
912C2DD41B2BFBF25D4C08B5F1412E0D5D03D9C4587AC495570D5577311CE9F5735BDF4B1AFD
3B1409533005F0C3D469DB0CC3A42DF1B4E14C24F8FD872DEE3E5C96FAA2A39257984DAD5801
5E88DF4797981EF81AC7574FBDDC96F23D149B86D91C546B073DA258C37AAAB56C304D423FF0
4F79A7D95E3849BAB07D28BDA946B0B54B37C24628EECE3A530E81C4BD1ABF42C2C4FB4334DD
9AAA2A54C4762C3512552C273211F94BA1BA92BE0F00CD53F6D3827417CC25884095416D06E4
D1F7C93E95C5286A7A2A1D4FF7B78927504FFFF0BE8E23DC3A306027E0E2637B75C992783F58
CD99E20462E1E73BF837A004D8AA81485504A885E367768B96FA3489CB0887BC0393BE41F70F
35047912824D93F38423FC214D93900BB3A0114C5EA3348B8F27796BE2A2170C214773AFA729
915A217CC634EFE5B84D29571C3D9C81386A104B1C190121B1738272E0978B9395B82C012E02
EB33D08CF4DC7B652AB5B1F49C5DEF297608936F668E8F07E066488B978185F87C8DBDF48495
C350138EECD08CCBA71F4169D1E031D40563A9CE29A5D61B94ACD7F9A1D5005CC48D6EF63D05
00D93F642A3501F4086724FF2359ECB661BC0DD6A7D2D86CD5CD461D5F9595B258BA5306A1B1
97862B022AB3CC712CEF618BE82738804CC732B962DE126F90136E4001C96DA77A195AE5015D
DECFD99FEAAB8D5B455E7D6779A70BFA4187D93CF82184272FAAEFD9B0EA0D1059AFD26E4950
B5DBF9FD7B2F18762F7C3094CCD04693EDA58141966638B0D9CEE738D718F24DE72E3B436DFF
A817C63972DAB175BAA8B037150E02A57279954BB8154E9CF0A63A74DE7CB941F6D0AE015DEF
A785291508DF4735242CDA96915F3A67D4711701EBC0CECAA19B46FA8395A608E45247E609EC
B6BD0EBD42EA2D0F3246CE18217C9A1BC700F110A58C7BC2D5BF12FDB444A9833295BEAE75FA
CDC855DE541BEB35232EB7062CDB0B1FF9924CB413643712A4AD15AAB604A7B6381F801E3B17
BE9153D193765BDC81199FEFEFBD75E0C33F398E59C178F586398545DBB7FEECD0F930475734
68987A1ACD82BFB22FB85270B33C8D493EC75D354B73BF89C85511F9D86BEAC776A51823A536
F1A3FCC7865ABCDF852D6D099892569D097A3D3BB353C897B082E31991B738D888299F6201B6
578DF5214DC47D57754E556E461D0031F10158F79A45FE590C93782C1C31C7D1E99D5054721B
2C37A30A4DB4C5F489F9AA8EFCBD2E9D3C79E8ED42BE490BEB93A24AA7DF83235E87AE14AD93
BDA7EABF5324A269DE9E28DDE8CE1BC4840C87B6F148F535303EA8A7AE066126FAC50619CA95
CD8F97EA1093E5FB76AB8640D1DB0F8FBBEAA855CCA4B8A1092D7549EC9299EA3226F8CAAAA5
9FB5AE22EE5DC2557165B35E5FF93C8CFC23891A75E4CA5BA914C5DF3B7792554E2F5DAA2524
D758C2723FC3B0DB13E8084DA3A02D377B5EDF21DA882A8DB1E73ADAC2640790C7BF46ABA616
9CA1476E7DA7E5A26F3957A660BF60A840DD5AC5A22D08DC20B171249C991BA075C6BEC67E2C
B95469AA10E5119B7AE4DD3C7EAD3EF9955CF8310939545F7102CEBC4952A951FF5022094632
FAA2E079CA29D8BFFA5C982B317D8BA90F3FD28E7CFD8EEA6D5E12B98C736BE819090E4FF30C
3D5AA1839E6EAF6EB6F9E6F9405DC5F23B8DFB37971F93D81DEF46A067E49AAC0A7E1631415F
77C16FE3BBED715E4882E710E2DC35E8D2CE01ACFCBB3B231CC2FE79556577668F8701F4033F
351606BF3088518D183EE31115135E02CC9C679ACE8CAC5F5C5C10F065F4B69F1F23C1BBB505
1C3A2D795A579CA2382935DA4F42D481226740EB6DA7000568AC566F633998915749A3CA5BB0
64A48083FBEDED9FB0FEE4B39824A1DC8999DB87C446A068F36D05291FC5FC2FEC5B8AC90AE5
A4F0D76FAC415CE9F3749444D0987E22B64AE6E47D7ECB6E57A092119B4724475095D5D1C9B3
7806D604C12FA1925F919658B79FECD3C37EB933847EA4B966F860CE3B0231054054D33AD524
63C9EED6959EC202CDB57FD462172A702A6F91DBB624AAFD91CE2A15653EAD69995059DF7053
0E93192C2DCEB9ECAB2D25590065C7596AFCD775843CAE76345F410409CEE5EAFFD5227DFF99
ED83FDED9301644632513106EE0D629DB1A70FDFF66421FFA8FB9742F3F7CF0C318455320778
62BE6C5CAC4385A947267EF01BA4DB40427C251B04A79B15CDBAD1C401DF4C94F29AFB8C8DAE
2FFE7055E6BE57E06E5A445645C889810EBB631A22052815045340B42DA17741DCCA003699E1
5F02135F576892F0D178142B1B0E4EF8B3CBCFB7BAA70B2D26D68994730832F84326E171A55D
AC7FB927AB86176F9D031693573BCDF24CAE1121E4D01918A938D01AD4F2DBD7EF824678C39C
B1E1048165589B92E5C7E8039604783E0843A302CF9A7A2A130B40DE91DE437EA9A15C3EE9E8
0BB1EC96081AB295D6BE4889BDFF20C8075EC3869F6EA17077BC0FD340CDAE0C22AC452FEF8A
0716B13DD52153184AC24D45677096CCFFD9F4EF5BB3FECA87C70F49824E01119E8EF4ACE680
9929C4BCE4E4D903EB3BA3556D3D50C301877D81B7C5CA451E46A3A3C03FD6E9260EFC2F4C99
FE45A406F85519383AEE330B3949E092F8BE6D889B1516C6ED1BEAF620262CCB3944DBB27012
587E50A23276A975C301EB4D7F053C9882761A061FF5BC59651DFB3BB6DE720EAE2FF2F2504F
674A5C21C04B01A78AD2EBA868B9EADEB35AAC457C141791CA94D9D8B88FEB5EC5747714641C
C0003851DE075FC0FEC996ACDC4E67A5490FE657490DF994497E1ED3454F6FD990DD8879B238
81219FA6C3D60C81392874E5C42CC174C970629EDEC059B2BF1F53AD21C32584A3E1251A2DE4
94F1D893B80E81D55F611B6B9D7D275AD513125C6267BE40FD49C0A039142535514013B1C722
C61430649F1455FCF3ACB2603C9C668702D64277BDE9199FA6F30E7D2EE9D74F22054CFE0F53
A2F93571D7B98EDA0991F789C1F77C4BF4DF2FA1AC98F5C666A8415AA517BCD14F2BC5B7C572
A9E7EE55822809596C43E43CE174612D06D0D71DBC50B207B9EFD53545E262ED0310A06A2C7A
E9EB63076703B29D0DFCE003C3177A20D40BDEB2C50EB37682CC9586CA3760426615E192BF79
865FEFD6BEF57358A1B5CAB36FD8119EB65E328BC84527AC6FF068048D7C9CA8E91C94F3A4AA
B0F98E8CE4071C54BDA52AE518839708AE69FE8BC5435057FA740130BED913EC885C8E1C9388
867DA6A8D04D3D4B7340404972D86848C152BE9B006E5C85BCF005B59B6FC06A6CD0BF3AF58D
F54FC285C0BBAB9564BC1AE8B072D1BF9CDA93DC4FBDB62AF566E3F18208D9D0721FDAC36A0D
85BDE800DE7051E8703A8EF1A1A46A901ABE065899ABF99467E328CC743E4732716B1814FEAD
78DC62B464D1E2EAAC1D0950C24CBDD2208AEF714A17BA022E68B739705BA7FA4078C46673B0
8309BACF993D71E0D75A75FD98E4FE574FC3B657F137D69284D94956A1404882668B21BF5C5B
0DE5B778B095611E54749886EFA8E1CB81221F5C1A94ECDBAFBDD10952AA19BFC789674B28FE
242DEAF9AD08C7556F67FC5CB75C3BA8E5BB27566FEB06850C7603F13782B8B5123822897A39
3A173FD1A30C7492A0EFFA096A182D6C0EE3B9AEF3C4C3E150208998F9EF4EB466233CF0BD26
4A87D1551A080000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndProcSet
%%BeginProcSet: cmtt10.pfb 0 0
%!PS-AdobeFont-1.0: CMTT10 003.002
%%Title: CMTT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMTT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMTT10 known{/CMTT10 findfont dup/UniqueID known{dup
/UniqueID get 5000832 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT10 def
/FontBBox {-4 -233 537 696 }readonly def
/UniqueID 5000832 def
/PaintType 0 def
/FontInfo 9 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT10.) readonly def
 /FullName (CMTT10) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle 0 def
 /isFixedPitch true def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /arrowup put
dup 12 /arrowdown put
dup 13 /quotesingle put
dup 14 /exclamdown put
dup 15 /questiondown put
dup 16 /dotlessi put
dup 17 /dotlessj put
dup 18 /grave put
dup 19 /acute put
dup 20 /caron put
dup 21 /breve put
dup 22 /macron put
dup 23 /ring put
dup 24 /cedilla put
dup 25 /germandbls put
dup 26 /ae put
dup 27 /oe put
dup 28 /oslash put
dup 29 /AE put
dup 30 /OE put
dup 31 /Oslash put
dup 32 /visiblespace put
dup 33 /exclam put
dup 34 /quotedbl put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 94 /asciicircum put
dup 95 /underscore put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
dup 127 /dieresis put
dup 128 /visiblespace put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 171 /sfthyphen put
dup 172 /nbspace put
dup 173 /Omega put
dup 174 /arrowup put
dup 175 /arrowdown put
dup 176 /quotesingle put
dup 177 /exclamdown put
dup 178 /questiondown put
dup 179 /dotlessi put
dup 180 /dotlessj put
dup 181 /grave put
dup 182 /acute put
dup 183 /caron put
dup 184 /breve put
dup 185 /macron put
dup 186 /ring put
dup 187 /cedilla put
dup 188 /germandbls put
dup 189 /ae put
dup 190 /oe put
dup 191 /oslash put
dup 192 /AE put
dup 193 /OE put
dup 194 /Oslash put
dup 195 /visiblespace put
dup 196 /dieresis put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA0E079529AF9C
82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA9351BBFB7CFC5F9152D1E5BB0A
D8D016C6CFA4EB41B3C51D091C2D5440E67CFD717C56816B03B901BF4A25A07175380E50A213
F877C44778B3C5AADBCC86D6E551E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206
742D1D082A12F0780FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC54
3273C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E5ECEBA191DB82B37A69521B
0C4D40495B5D9CE7A3AF33D17EE69979B82B715BAD8A5904C5DE02606C15950CCF6E188A0CDF
841EB68E5A2F88253E382140F87C87E55C9EA93B8C8914A36CDF630D6BE7CD36DBDCE22B2177
8E8648B97B7EC6742EB5114BDF0454B00EA7B1FE236C84C0E5308C871F67B973892890557AA1
2E00B2C20C71F516C3973F3BBD14A1D0149CA064391056E45E9470FC7F6F556ABC82653B3C80
49AB5CF4BA83C8F2158C236B2FFD4208846013BAF4165E8BB8D334C8FF2E8D5EC7B79D46A5B8
BB60F8911D63226722BDD700952208D89050001DD83DFE5577183767DCD2F8CCDCD1964D1AD8
29A49B6C94C30E335290BB35CF706C04E76813E9AE2F9158D447C0447C62851FE9E91E0340A6
1D157ECBEC3C69BAEE6490833DDF98E6EB0ED5FEA40AC515F2C9AD9239DD20DF8A7B63814A07
46A8343C1A286BD9FA24266E48ACC9C212EB2126B906A2F03087138088D29D069336FD006AAF
0A63ED6F92635829C2703BBFDA6931BA767C41F0000B2C24E0E5E0B045365D24850271929151
BA8DB92FA0E7950299A5B0A2DAFF25A85167E40B3758E9E5A60AAB8DF9A17604A13AA7D24FA5
BC23002BEED67123D50634A98DB0313849B034C205CD6A3026048F3637B464949BE73A0AB976
3B602C6D16ABF7B5536CB482C296BD4BB0A792B8DBB1E8D922D0679894FA8F5CC8874E0502D4
28FCCAAA4FC4CE3EEFCF12B553D8FC59729842BE1509D2CEC808E5D7F7B89ACFF729F62B9166
86B342A7D99CC720B7FB0CBBEEE6126DB12FC6532A2F93AECA0990683539E48529D1EB06AC18
3D35D9F75911332AAE28F7D1CF225C4DDBD78A5DA5B6C3FAF0D79D33CD8E72514310F65A80E4
FF102BCC920A48044AA336AE01BEAF9706851A3739D6D11083FE66A96362C32360901FF6291C
5C8540AD7D6675EE919899A88E194F5246174D2ADBCC0DC2E784207BA17C46F31BF772AF0A9B
511D2C8A7C7F347FF6AC2F86BD4E76429BDD7FA6830E41498DE9EE9BC3C62BD6BB34C5E405D8
F3AA471C30100F04711C7F168625FB25F59CCF307F6FD59019760B17184F6EB2DE54A1361E3E
9A770C488B6B7724F639E369675BF694DB4D86E88BAF4E53129543D5ABB3CC1307E76A5CCA6E
A9F4B1EC07FF299C449CF083252A57D6F60757D343CAD6F86FB65DE906F5667ECD3D57C12270
8A70DB2625F3000C810F3B7D4986448A0E7C54408DD7CDBCD0480F4F1FA13E1E12DB9FCE1716
D8DF3CF85103CC7BD41BDDF35142817BF28F213F48E693DF865C4B70500178000C44178FE38F
CFE718AAA99F16DEB4AFFE0CC1BF09056BF09C676207B4FFF9A103262F966ACF4F9F7BBB9C3E
2ADC9020D099DFAA510A41DE73258EC712E144585A007352430E5ED914C8D878BBD1D13702A7
072FF95A742226E60B13C13CB8AE8EFE96F62D3B69D84048AC08DDCBA0DD50BA39EC2508B0B9
8A367E619274E99566891331401722122EE9D091D7B3427CFB95B1DFCED213ECAC1615AF2C40
B4EE447882D8BF6C03E61DC1DBB530ACF13B321841713006D2AB9FB29535C7EC4A3E33BB6F93
402059994D3419BA6CF0B40D1942C400E931FB46C32D6477A46EAE7BC3A72292D161E548F985
398F0ECD907C92DA29B1070C26AEA7F16228DDA7387BFD4C04B256DF8E98ED64A2F4C3D7389B
FCFF502523A6C3A8785CC183F3346C39768643E2A8130312CFB78B6276109252755E6764C952
C23FB9AA007434FA7A659EDDCA8EABB8365BF2CF1F29DC9223C5F9BE9D7FE9135BA0DA166253
CE5A597A82B003FFEF1AE493C57385002B6BACB5647AB9FC4657405725D1D348AF8600F1AC1A
FE846DB24424ED5A8E1575AEDEB33BC71D262F62DA2D9AFFDB32CBAA573041168D9869957079
347B5FB49543A8427BE4A4FE14B3BDB59478EBFFBE0E118B0B09C1BA3164A2E442AC5BDA28B3
A964E75DF2D8E15463F5570EF21747839B3B86345B19D7126BAE9F533E6F1670FE0F01949D03
587FF84BE2F9D167A223388A7D3F23FD8102855C9DCDE8A255374225456D220ED6470D07A185
EDD269567CC8851E0ABFF1DBC41DD0D65353EAC9126104666299F6ADE510F39702E7DD36B9C8
29494F47D3462EABCF5682FEA1C0D46672187A95DDB98E819898A90B259C49DFC9027EFEED01
79A6DCB2C3C78C8CD323AEDA15163E3A786595C95D1177395F233CA2F05C9DBF8E35B849CEF2
ADC38A16D568CD00546482EAEBEE313F92538C98B462DA031AEC699E215366183EA1FD1B6864
94BB497EE5161EBA7321D3B314FA37E513E72C84971DA7DC7C49765E0C5EA5E64C925354B80A
4C08CCCEBEF3CE9C22A8C54A10AFC2AD555D676301E9D3486B35E1B31F7CCB5C42CAEF15BDD6
1D84B43215A953CFEE5E6B57ACD4FD1D32AD3A596C569D9167CD759D9FF4FEA37F39C5EF1DF6
9CEA6581E60B5B2863EAD4B84F26CF3689EB5785DE0CAC28FFE8D3B824EA76D2BE8883AF600F
EAAB61A69DFA217E592E5CBD3F816A7568A0F389C6820F85A4E2C5A5BDC9CA1E038300B34A99
34368E490B55CD18FB79A1B720E46BC1F2686F963134B24A46EA5616E788AB2E05313CFDC45E
B4D715A1AF4477C1E5935C71B812A6ECC0A8D9B1C27BFD077D7D683ABCEBFF0F03F36EB2B2EC
A8F1CC63215CCF77985B0720B49096DBA6FC5A4653BB1355B84595694A13010BB8C4268D346F
523482BDA3A016B6FD5C08720275620DEFDCC70CB61DAF454C080D479A74F29CFA225C463963
C2DC9E10C8BF004E4AF522C7E6A74E5C0B872B8462E456067FE4F48AFED1287E7DDEA0C425EE
717CC401F477643CE488698CA92E7A22D97558ED2C483603587B5F427E72689EF96ABFB2363B
108CAB9C61A27CD1478F0F167BA5DC6572894E2E411B48B7A26BEAEF10D763971454B6A9F23D
1B04F1AF950DC60D472FA30C853F3BF63C76DFF6FF7430A262B09B9E7AF709BE7752B9E41374
924607DBF1870C05FB50CA08B691DF5F65B30F586F76C34DF28FD6883B95CC376121B70E2372
314E45DDF298FD7C7C89276781D0490F9197B2744ED95582B22145C0B441B80A2F71895400E3
43B1AF5B50A0CAEC17CF4582AD5F00533E1CDFFE68C584120DFD3502D184BE9B097955BA8EF7
BD62D1A999FCBFF0A4824A1E0FD79EA0A87E3AB15403B01C3F71FC76099B2C37C1C242E1970F
CC1D560A792F21C28862B1E1189FD7ECFBCFFD913AC07D0DDA71B6EC9025BE52BA4270E5164B
58540FC5321E26D78D54D145A0AD61B2B34B5303546537AEACD3AC11C56BE668CC9A19B8AE27
05015C391C059BCE6DFBEE22A48200AA80593998880507E8AAD1A35095197C1A5A06C56785FB
C780A0AC1ABC4791B51412F5850EAC15790C14A643C94FCDE40E1014A95347C53E2107963C91
A9C92B32A06E92D54A0CB55243B327DBAB3AF7593406BA9B0D5EA78C94B0049CEEB1863CAC79
C2E87AE71A5C53E2DBD95E8030520429314DBD80E917C260907A06702DE59B8051B5FC5D51CA
AEE3B3BCE387BDCBD816F2E9B71A3FDC5DB61BEC2085EE304DF1AE1B5EAB1BFF7B116682B605
199379CF75A25CF96C53AAA53D49D2375777AAD0BAB6D72C3626239C114CEC78DBABD8BA4B72
5645BD7061EE40A682C0F72923E215821DC54365EDAA11AE88AAD4EC14526C0F809E9580F325
F9F990A4F65F50C2ED1C0BBE147C48DB19B78C68A76B986BE74A1D04BA2FA37441C7AEB74ED2
5B45DD924D048CA985B570DDEC523C1ED80C2B5F85538A94EF1923F2869D5EDA9CBB98F05C85
487742DA45992CB461774560AF88792B0202E9A203FFD7BB75595D113FFB920C3AE54A772496
FC54C2943F097EEFC9D21E23EC7CFD71F156C591ED4748229D42A287624CE2D560057C7EF790
D86F9BA0C80682D8ECE3BA911DCC5A89CFF09ADE79EFC8FBD5A41741A527D7088C218B42C38E
9D6F8BB780B21C0D26D9E139244A803573C6DAFEBDF71898D635BF0E3D27F035D9127C2C9DEF
F7472D367DC27D0FBC578357EDF66B7C3B8D48F7BD080783E389E0D4DABF6335C726894EAFFA
EDA38152046483D1D08F6C1917A2FA2FBB2541354C7486C099C1A4D626263BC2605406D36748
7B48EFB5CF5589DBA74DA37F373030CEBC463376B2420AA704C47982B33D87F354822455C216
78FCBF84BF36257662996CD3371DABBB679ACD67A12101E42287AD089A9DC2B585E4A8237113
E05D2B50738D49E62317293087A5C0E510468C2A5171EA62EF8A18BAA2DBE8C45844CDF7A0C8
8B13A9A74C1A37FA349372CFDF524B91888D2FBF499581EB484A5586670E7B9DEA2806389377
4D0B49C91222D006AD6AFA95839A6A288E7C9DF02F528ACB57048387987715188C8ED37249CF
8004DDFA58B8366BC874A0C0EBDFCBAD37CC7173D0988D4F3E1035352E5B37A701D1B5E929E0
50FF1CDCE9FF1CBF53B6959CD9F3CE0860A3233906537149390C77C262972B51F218F64ACFED
82EB44F9342260248F55081A58AF902B9B752AC4DC742CBDCA341299DC191767BE4510E9FAA2
6029B8EF75BAA4A654318DCCBA145A5864ABDACC8D94507E58819EAD9E546A5F59A9BB966C97
1AAC5146243686157DF1781D6CEAE79A575C5AC8F162E9DC141CFB6C6DB52CE641A07A757013
2B7BA784F7897ED2FC265C8298ABE7044570A32E318BD452FBB1E654AF71B354CA6756BDF3B7
E7FC4CD33018F2651FD8EE0BB40ED22818D9A7C1589999D12DC9B7EE720F53C3AC12008A4164
6FC3FDDE34E8A5A4899EDA421963F8850BCD6AB5741318A9D74E3B2D71FFFA804618005010DE
3B7F8D13B93765C35BA3B4ACA42978A436BA8FD2EF8E6E0EB03243E9194899B0278580B6EB85
19573B7EC8E40F01D559C402376688EEA755528CD1540D297C2D1A23FE54F6817EE7E02ED339
0018E8930CA114C3A8D4B26557ABECF8B2ABBC58345F0B2663DDC12AFE76A5DE327CA3DC388F
A3189B5A5C625661D70DD98CD0C842BD4CB9D2AC1CDE9DA51696367D0EE60B56DAD869359288
BBB354A143FF22B44961002F4C04F808E084F42A9551D41E6BEFA371A5E2E69A343FDD8D5766
4F02A1CC0D2E8125BF369A425A3260D83F94CCA6ECAC63EDED28275A0C645524FC6C30B58767
FB1435988DC6BBDACF2396B451E6D83A19C15095CAB8E2D869BE91C270B020CD0A99B18D82B8
21460055EE49D48A925431F12572FB6ADC39AEE445F2E8F73DD179F459F357844B69B88B27B3
C8EDEE37562EE9A1674AED73408510EA15B55D91A72875B1FAB3F21E284EF625FE7AA2D59EF6
FB15A16D5370B870AAE04A638962CAB1773393C8096FC6C5595B1F2A55C9A88361E288C317B7
1C3A61EBE4209B9758B8FC0623110CE8F790462A9F06ACD42425E2F47B03D2369D3CFF3CA281
9CBB86F86ACF87E13F6BC3373D1A8FCD8AB815BEFF016C4B2BE8CDEDF12D74D1B1A8D0EE9678
5562E534339C175D7915578394D4DB0D92B6BF955DD3775C40FDBE141E0D8043AE212EE4352B
088B7223D288F7CB77C23A5D63AED303709EDDEC885002D843C0276CEF70A982CDA67D1A387A
E3BF227333820C4D0862EBA116D2A9BFD67B4D76B0E71BBD9115E78932B045B7CC7F43318191
E030E17B7770D0636AF3C88690767706687BDFDA35E7039865E6836E1F67A066E26850ED09EA
1FB1FDFD463D94D7853EC46A651059185B2F4EE1BD5B0DE5BD43A50E83985B4488E401489B32
96593054B4FCB0EC30866BA47D40BE90B4E0916E3D82B0273B497B99CF5E114123502F3148B3
817E7EE7441FD6D0E2B1EA16BF55CC8B1D839DE6692730A1A868C1B3EC874F5159ABDCED8A8B
93F3C594A90A23E64DC8DB55391764095BEE4A49ADA5CC18802D2B6723F465A62590DC5835B9
529E34D7489AB0CBB9A3F128E122B9853DCA6125B0E46CF1C65A890EFC14D1B8CA8AA23996E1
4EA8A8FC576860C0B1F3CC1F77CD445E9B8618AD0E92B37A008B527575131922A9E85503B489
DB75801DEAC3BCDA5E0339BB45C3B78052E7A551684FCFBFCBEE3A1AA28CC1A1DBB9C5F8FDFF
06A67D8A879946595276189BE3AF34D54BBE197A4874DCF542404C75B7CE2EC58496F76D2E14
CBB60F93EA4547216E1BB02A0413122BFC27DC99EFC47070322D96EECD433A50EC660E654862
2400EFC40A4A79A49D8FD8F6D48B09575447EE8D69742E02C2770BFCF0619CE6C820F194B519
2D50F87ACF2ADF9C20AA977DFBC7F208984B0B56E8C35729543D72061AB0B98FCAE8E76F6C7B
2C58A0CD5CAE0A8B6100ADCD326A29860A5B54311B7C9454E5EFA060D66F2FFFFAA254C43001
B114DDDD7F399716764935632CC759C6933AEA5ECD6CECE1E7120BB12EE2F732ECF726FDEEED
36519323F69C96656F19893B940CB3BE775CB58D1108CB35188100C232E13FC998E0C2C45EED
D962A4B4F38ADEDF19653DC547F754F95F5B6E5D5A5EEA2A88B3035C4A7AFA888E6CC8AC48BA
19647D548B1B516947A199D508698502BAEC0833651B3CB15B6174F65ADD3EF0E858E180B036
02AA6D4C2AAC82DF20C306270F71502BCC483EB20DE8538EBED6E469CC5E987B77B87D71E9F1
FF64C7C45D129762EB0F4A2C2F102C70BEACD1CD6ABA43C9C953CCE3C1C39ADF139AEED18FDC
9F08A07A46BA57B09FFFA0F9E04C990971BBA67B6D0B964EB24E3CF54A8A2AD59EFE42F3D3BE
F9DB41FD239717CAF609519521BCB2E65828FD954A5DB4BB69D664E4F5B7D69398D317FF498C
2A16A8F44E22E445BEE075E9EBBCC3CAE9FB751B549C6755DC652D38E45E388EC865F4D27EDA
2208EFFE419FE0564C3E7CAA1107C93DD568BB3104C0AB44AB4B6476905F7D64AC1F7367C018
7703FF348B2DD853E4D48BDF99CD9FC920CABDFE736B3F4CDFAA59CC4782B3B2E5DFCF767182
A168B1B040045B6E5A6639A4CF874B512DA036EAB90FB0656DE3931D7C874C70F1A79C91127F
DF95256E24FB85E6A0A4D718E58CC022A8A81492E13C06542A91044E3EFE9F8101351C65523E
2B2398ED3830030C01445F622CEB0E992EE2C487B6E1A272682C2F68B6B73299A3DDD31E20C7
827B9132D839753C5C17197F2E1A504621F8DC921D54B0D7D6848FD1AECD416B12F1841F46E2
27E1CDD7FA4874BC0E229FB6572DACCF08DD3A92F4FF53C4FFDDF3D84E7896A99C81662F5B08
86BB31B9958F377C2DB302E2E13C41C72D26AB6DDFADD8330D67A327D7F0AC6D18BA62AB5FB0
2A7C917D9AFB40CCB05389FE2B7A3A4A6DC362B7C1151A3FDB0F0A40DEEA27909ECCC1C1BF22
28A363E28F4CF1D0FA87AFE10AD9D493BBF68D37D8E09FD7A80914472230A79E6171BD037AD9
E60D3C92CDFFD2B7A472232D0A0ABF020D578CCDA44DB613B4CC4BC68788DD1865DCEAF79816
5A49E13544267A7C6C1EDC1E14698C7C4BDB1328EF66A9E79DBD5080F504B42A7DEAA26E0202
33C61006B317DD9C83B7F80272E04D2EB97A15EABB2AF74C903E9D8550202AB6AAC3F18B2DD6
8800D7734EAD58AA29DA6D7E604FD365EEDA714D20B66701F24692737613AC8306FCA98E3056
F3406D928EE4C86BA13C7428743A57B542990B7154FC33723CAC55F4D5236628F648736108E1
B08371D51BCBA8EAA63129ACF3AA6140CA784A02F5FC193E3320348303CC2FE254863CB2898B
28271C8CAD6C49AA65BD665B7680E3DB0F2D11A1630CEF8F0919365662F6447C26EBEF90C3C5
C5827A77DB5E65E64044F93ADF8FE08B4C0C2021698816F41632F88633A933830B44365C093A
EFBC3C263A0DE6F828505AC55B4A44086F5A161CA1DF8B2E88F72598A0F3E069F5A96C3FD32E
B2007BC5DE61A20205E725588FCC24982138F05B4A3FEC6C64AC4248DBFFDFDB5930DB5CBBA6
E762672F7D25073BF52A79FEDCED28965FA1560AB3A54A815A2E1A2F6D769761CE9889D69D19
2707B1BA6A26F9751454D663389C4B5A881FBB44BCF5ACDB8604B38222ED5292DF22218EEF1F
EE8B117733976840A4D7A79FD5D8E2BB997196CD7EE8F6286FE53E1EBAE50A440A78B1B5021D
6D87D323000518EC65CE4A345F755D51334B093FA2D16A5420B7A869AE8B560A3209585D8058
93B954DC7D9B97EBCA7FFC951AC9C8A243A6890CE850AB66620F9F9702E3D942063E8A851DE7
8D6F438C0E24DD0575A6D9EAC8A7A6E03736FEAAE82CB8C80F2CAFEFDCBD00F3FC219DEDCBA5
959665E40FE323A5799F17BDC3CA3394E018172DC7351A2C0DA260F4E942BB7C877F6DABE0BF
D016F19EAFFBC011564119E18341C0A3D100A5C11056DB3A9AACB110F79D2BB6D5018FB178C9
E9F9AD07E2D44391785BDA33CA1A90173E83584512C0E1CD063C1BBF41C316E14C9E3FA3E3FA
429A1BB370FBE057065F8C43762E81FBAD4383CE602B7502A7F715F108E9595C703763FB2392
ABBB78BDC3778E45BCF31D29B6F2F656CB67676221A53AB4D0A8C325C39CD88E4B55988C5127
567C80281E3B8177E337B7E127FD533A480C15BFE869FEEFE3E1244A8448A07FABF756C615D4
76E4B98740E1E5D2187136E1E889E23ACF840594030B26907E5EBC07D5B454784501C6C020CD
AF2456FD9C78760CFAA56EDC36300057302416CD57155D9A3FABF08480D657F3021F6F3BAA57
FE96F05EE5C3107FC4C399BA1346DAEDF11D9CE89682307719C216B78AFEAB9B495F912CBA1C
84227A908F116E435AE0EE55D64343D82382596660BC7FB4739C267B8C54B3A6D4F736AE54FD
0C91A958445E1E108816E0BF902E8E61AE31DFB198DAD37251CD06184AE9C9453448A9EAAC55
7C76964BCDA7C5ED97E39FA0B04C524CA6901007CE5264A909E9B99F359E15F1087A3B1551E1
7BEF6BC7453597A1F20D5644020C0C7F63306A8FB4F2AB7C26B422033A02D1C724FBC760A5E3
2C937B0364CF5611637ABD5A6967E68BC11631F51D16DD2006D65DE33FB7BA03E85CF27E5F9F
48502EFAB5813E8C5A3ED5534F4EA2D4B57ED13A01ED53A88D5DFF7AA7C65BC1C3B41BAE709C
27786255A4DC7DD81BC8EFEF1FF68D774693C4537361996078BF0DC32B3B0CB10B3B6493382B
EE819C7498CBD67ABDE015CCD07385E0C313EAB94A45DE823EE14CB9624A5943191500799DC4
852E779DB2A1E54618236476FE27BF8CA93D518B1D3E9FFC55710D8B50AA5AE3E5871CC0391F
EEB495829E0150C037D6B41BD233860C5D3235F2AC44FA5358837F7C4D7F2B33A68601F6713B
D7D3D300D8DF866B40B519C2658DC69C4AFAEE29C2672374EC339DDFEF018A42293E9E428937
D7EDB65BBCA68CFCD8AD13B9AE3082F13883F9D79BABC375595D93E408092B5DD52F89326D27
B6E87F326A025DF5073DA99784009281799053F2A8949118058BE8DB1EFD7ECB6A6D0766205C
0DFF497FD02F5522F107A5C7FC742FFBA113F9A624BDE52B0B0CF5F36B3DA0FF93A45ECD6D5B
B3956D7C2F1D6EC60B11B7F8D7F52774916D796052070F4C578076AA0493D7F4308068FA72E4
7EE1AFEFDF9EBBFB064A7187F5D35708A4763F20D741FD762A5F63FB0E1A9BACE4A515379938
49FCE0FCFF27F94EF1C4D739808037FBF63FC3164EB7200CEB625A2E24765E93949C052C711F
FDF5910ECCCDE6FC08B21D06AD153594BC6F43981D77C13BD2342C13A6806FABEFB19B70964B
3A8AB43FA1302FD4865716CBA688FEE514D36E077D14E900EDA3CF364A28DE4283D9697FF94E
4DD391CA3722D2E39507026C3ED546B19BE4D6EAC3B7E7F57EB4A2E1A94D4A5C737A855C906D
2220332B3D69401869877EC2E790D0E64934A9F8E4787A2DE740D0183F035C7E448CB91E9229
2F700C73551F9B07B445BD906B97B48B8568FD9FD11E5739EB8D02412BF7C7A66650CDC48280
BDABB83AF881EF4A466962C44C451D361200882E42E16E1E63B6E133CE31A31635B4C0934700
2CBBA783614C6127C4A26EAC47F9EBA241EAF84089E6E0A57A6A5E537B03BA9E8BF5CA259E74
6C71033452FC17F10A319F416DBCD6144BA1864B92011DF197B7926FCFE5FDDF5BDB8FFFDA45
F9DA83636D02760F0E736BB7657CF2A5A8A7BFCB51D02FA1999CB88E26D71A8C2FD432ABFE45
CDDF65AA9A2C199C162E0217DE72D65B0B046F6E3CBFA0705095755901A3A9206C6E31A584AD
86F94F0466E2C8D33A40123F04F396CE83F0549DF61C2E65423FDD88FDFCE784022DD2CEFE15
535E4533CD2373C4C9BC92D7B5A79740384D09CD8FC8D9C82D9AC0DE5B6E8F976AE8978E4D79
D0DE39EF33062914B4D092815851C246C84B3CF54BAAB62FCAD5F8692A639E1FD66B020CAC2A
D61C61CA9E58AC33DDB1A1668A613BBC8C3B2F41285EAB4720FA1C293A5A48E8A3CE743729E6
49B6BB75C60F8EF5B5ECC6F0AEC820FB7B8C6AB0C17A3D6C6E37FEB51C1F1FC70DF4DEEF6335
403E6AD611813F7CA4CFBFBEA3DA313939B94DAC96C371690BA23DBEA9091D99EEEAC4309241
57C4BCD68BF1664BE26112775ADDB7540666F83D3B69BB7FD8A48EA45B011100A3CBDD24CDDB
CBD4AA4CCEA042816BAB8F935864E37748CE08A600644BD4651F4827C217D4B7C59FE0B70180
725237AAF487936406060710DA6D268B4C57CC51D48D02931FCE5783DB1D2AE2070D69F72B6C
1591107758A825013F7593C39BBFD9378D8E8982852DAFFC1A7A2029CECFB302CE0434EEE2AC
26C6AE86E40B3070A8741C9A7C0CCE5E2D35E33B794FD8BCCFA7DD369FB22F6298FB8EFBBB3B
4DF32D937F2FAF5C06C8C0B6C5837F1A3933176B6D2F9FA0DB44F67F5549D66FF212EC9E4DE8
AA65CE597396E60BBFAC7297F836A155DE7F0441EB7A91FC9AEF3E32B249054E9A60EAA446B4
F065BB63326355A7B2263538A4010AF11C8C28BD3BDCACE2D5A33A3D508D81682199FC034C52
5DD99484343056C8FE000CF961EF5444FDA9A2D92ECBCC17E1D2FDAFD34051195656C2F5A539
4208284A8F508D04F41762F5E2D3602126C40D56F39B82447C8BB9EE620EEE85FFF0E0E57B34
FB97F55411DACF54388977A3454E2E303ABF65475DBDF2D5D5CC68BB42699C00778479FFD24F
2FD9B14378A5BBD1F4DA65541E56DE1FE7A4A42DE5A4D7E552D0E4CD0CE2706767C61A207D0E
EA56301CD359EDCBB53CD4F3B15E6486730AEDAC1E76732C425ACE9DA9F24C57DFCAB6942E91
82117754493B909CD1083C96EDAAAA5EAC76ED7C42F48F4F2C0C6DB727EB895E47AC60392912
FFECDE469085BCC3A5EA0B28C9742D4AC7AB941BB93946D8AEE56341AC8BACADAA7CB553C789
1741E0A123FBBA5D30B017A9169EB8426EDEFF35C6B752A5F5930EC1051AD7F39177BC6FE2F8
D20EDED8629F89801CBF2B29C5B7222F9118C1220C8CE53A3F89DABAE7AFD0B2837F1F4E20F5
E34DC29E98078B50AFE3009F4B5B5B671DF348255B032FA6073B3F0E25DDECC35F0FD59D0CE8
85E2EA8F1B06DCA548D41AC574421D5EB37377155CB81D3FE5793A99FC095BE7FE493B06A020
2066725B6E33CB6D616C62D1502019BC271EEAC306DB1C26957A9755695E899725E1721AE8F8
7FF4AFAA4FF2AB9E904038173DA5F2C9BF9CC14107556586654038EC562F19BF48D84B18B82E
6ED5EEE82601E7136CD4DB7393909DCE654F90468DBB240AC548EB64D2333BBC7FC8B13DA555
79424A2F184296950D25A9940FCC74C45984515C369B1B853385B5877A813AF5E6DCAEF9C6D8
963D723ED403C3D96A76291494B5694C6061684DB06F4ED608CCF25AF13815C85CF6164EDF5D
44E4A2F2E88C782B2C938063A214C8D1588FDD5E43094255E70659694850EF7E4789E68361D9
8521F0E3909DE8C5040FE630642E6BB39757382CF0E7EDECC723745E5662D018E94052F93B8B
C067D66880F028BA14135382469123169B93019D5E6577753611F28C96B34019A4CCDF79D948
DC678A4556A4C996BB4C3E95F8811C000C87FFA05C0EA432E4A45F2E4551FE75CB3AE344D966
B834218C9A19E6856FA56113808CE42A9BD349384721FE653D2954DC61AB4606A0A17D3E38D1
A5E18A0FB4CAF8A186099BF4A0E2C4C84B3054A623F973471DE50E2254753A99E8DFCAC4984A
175A31BF269CC8B8944136D5A350E69C0039784A89473D09025C50B09F8C8409CD1231C10A64
2172FCEE2D033D885C0DDEAFA3F1256BCD233322C4D7893B22D7879806EC77BBC949D8C5A254
45EE5D23C384C663209C9D85D54AD51A2804D618853C58034B6B3E34E94CF44C13F6925F9F9D
73E2E746593F8431441EE0F40525F23FDDAF588E634FEF9B9317D2E1E6CDDBA5161B65204AFE
A75C882E676DC5A19C842621B2E9F474F9A0E90528797F3BE63BF3B04C5428C1C7BE520DA85B
0694181BE5FF0E9836C58D6336D791770C86AB44D795F4C92A01FC1E954CBBA1656477312EA9
E0B8F402D9200EC42F26044CFB74ADB33AD9BD911E501E5CA08473F41DDF5455248CE44233E4
E54C8C029D20DCC09B1C1BC3D9CB6E5DE34EAB8603E6394B2478E21367747F64E0BD2DCBFC8E
2C945BD67D6DC09975C84AFBC03A8CC5FC4A7F185BA4573441B23896760BF832D4D7DCD8DC93
AAD2F5FE46B229F4FEF8BCA5CFA5B32F917F4CB6B22E324F2EAD035198D9DBA032D026C40EDA
FB467587155CF8EB93B6DD2478F049F7E7AEB555483D0E83993E56DC140B1C09DD7BD5CFE5DA
80F6015C253BA093FB03D87F5762C20FDAE871B3EEAD5EA64FB8B2DEADDD475CAFDA649BA143
6D50D8CB897E3817A783D6B0E13AC3C1F4F7A5BA3277ED53F5CD752AB7A78F1F55830D5CC48F
F6E23BD4671D1F0D75B5F3EEBD792928559D06DD9D0C2426B8D554F3C0534221445208093E93
3CF8564505C6A12EA83E72871ED53CD4D881C0C17AD10648AC0420A9D3FC3114BE6C39A89201
7E070550B4EEF2506710398F577234A79D93E2CCC44EE23C8A3D0AD1B198BCA89A917E294102
7789AAFCDF5329412B18B41F1ADFF594844210084D11E72712CF77F6CDB953655F67BB17CA9B
B84943946C5BC028AF8D9FFDA91FDF024617E72CA7DEEAD076C66ABD7E3B8053960D0AEF9BB5
B530F78BA3DC154FE39382B5C3A6F18D7070F12047C57BCE194A0615C29B9E1D655C0ECFFE0B
CCA6117C1E3D50CA27231DBBFCFDE54F3699A96C559A8E6D680B267F9F1E5AA51A459F34F6DE
CCD2B8D915F4CF184C35804E0E5F0CC172DC3C15180AD344D9627C898521697339B3B68243E1
B9939B4ACC8FA271B9738D94DB1995FB29F5A177EDFA2BA466BDDAF3E6FEAF56290A4832D605
864F36BE1C7F8EBA90765BAF0199BEAB111D19E8090FCD3637A7FEA52A277408374AE8AA55DD
C5A07CCEC703BEB716ED1CB483CD28B9E24681C204A37AC6A6B0DFBB9510795C73BC8D310EF9
15D131A19F447B8E2FFF8452177AAF8A96DDD8F2F081AD831F9B91D700DCF152C8190FBCF1FE
2931E859C99F5FEF903530F7CA97D3BC529C14C432CFEFD05A37549078D5122D1F28A55B62F1
D84B06EEC6D73B8605CEE62C959CB5E34A580AD5546670C81C883A10AF2722AE64D6D5869030
DF0F4F66681C58235C803902D1C76F80D2BEE2DC992348B74BB321203363B215313B74F4E5DF
1866CC9CDEFF1461E5A922A28D13763EFDF23DD465674A1632955A180A979515DE90CFBDAD03
B22AD874A729EB169D544518086ED719E4E614046B5DEE524B3C6CA3FD865EE1AC595E3DCDE2
2AEE1918C71ACEC41913B5746445962CE2062BDDFD942BE52E19AAC8BEF22DBAAE2A2F96A8B5
1F7665C50C23EC9F743D98FB995C8A2566A65C60999F0FEC9E2C16A3472CE2059E67EDF8ACA3
BF995C373A3F47C7BDC5AC1D2BCE2D226B6A77CF5A089C9C864E92730F3BE335A9E5B361B0CE
6A0A41C7C50B4628E2BFA87F5E8F62F611722F928E8007C06B1EB36CA310516CDBDA66630550
D9796145DA1579FB36CCADCBD6B595131032B2F7EE0AE59D5A7F8EB7730F298AB0538E952323
B75BABC0D90EA756033A7458B54A091623905EA4CBB39FE7C4DE018B26F0386CE8C47539F975
41517875D65E31D14F022D36C27FF3F7E7C828BE6B2F202276A7F98579CDC1BC8F5D16DB86BB
015B01692EDD39538CCDC510460EF130498F1CA568F24DC3FB78CAD9D6B084AF04D007FFA6F5
67535EB0CC1B8749BF7B0BA18715E6E352F9DB9DB653CEB4E4A6B8F40EFFF49C4249AA84CE19
CDE606651075080E2AD02CB780428F8CD9031FBFF0E902F1E6708705397EE7D03435E27CAC8D
146AAD75D5B95BFA77681272B06F8FC171E0EC4264C6B5B6CFBD69B81F926D1DF62E52281418
103CDE760EFB4B60091511079DB125EAC8AFE246991C7E3E63C58424F496C600CC5B6E478027
A505643C7DD13B868DCF5C52045AA005500175B520207B58C8E19E51B9AFA2FEF1628B580F7A
E6D45AC7C2E5486A090FAA2F67CCC7DEFFF92A243D731BCBC89E951758AC56A687DDFE0F18BE
23288DF62FC88685B07E78E9DDB1B6B9EFD92C7648B7170C6588780F0F593F5ACF1258AEC27E
95FF005BE064474C0111E075228F9E0B308CBCAC73226C9FAE8269D1924BD4B7FF837B1C68CA
7A430670D17F8FED5CC904DFACB174A720990C47C11A1FEA3F70B669768CC7ABA360D9A8A7BA
3B0D1C73E94A2433A67D392984CE5C7D3FB70D941FAA0E2F152D322641FFC882E5A50DD9EA7C
7BFBE4B913388C9288611C4EED09FD824B2877684C045D95E4A1273D320713D2AE3C23A4C426
2711F9DDE8045B19CA62C6385C98764D079E23977D06CBB80E04670AD1ED105AF874D557AC50
684B83EF25493DB95F657B14F7DE5F4EEECC61E970D04039D418FB4A3EF03BDAE5877FFCF304
081FCE4495431CAC013FEAA8D96A89CC559DBEC177AFD978E5C8B884B3D25CAA397F424C40FA
C30CC427022C2F1081F290196D8F0EF5E29856506634ADB2EAB1B0F0B100B620EBB19691ACFF
427950B7DC1A0D04254F0B87BD868680A43F5B959ACEF50C236C6047496DFB3BF74CBD2F30FA
6FAF6B3D78A9FEB571AB9EB59EB4108265BB63350FBF08E2B6B2728C69F5A9499112791457E4
654CB119485641D74924FBAB7DEA0AC56EA0FB49EFC08842C6AB92BD3F909E9179E972E5EC57
65CB2251591A7CE7E6D1311A52D218912A48D44973209214D3DC17A4FBCB6901E3FCD7AAD699
145239DA489EF2A081759A0D6B90888EA1D646871C9F6660C22F20716211430AD7CB3E0761A7
8AC860C00BD93EA1202350B9661CDFF05A9462897D73A4205A0BC34355965A65D4C2E3CCD123
678A5D1F545EF800BFBAFC2AED9ED19728200CA27BB30CDC829FA5764978D3254E9C00351C97
CBF9C710B7C7377C2354EF1A00A23D5E825E9619E3A021325FFCE2BEEAEBB407F1C494FA22CD
6A7E497939E2C13F0AD7265E3310580EC8862EBB716968C01036C0C4C5A5C59C26EBDFF1A5EA
E6735DE2C4F5608DFB0FA2B80218BDD43FEA23D8CB573EA0782D73BD8779DE5DC679DF892F8B
462684BDB9434B562D8778CAD47E9A8C4D676B17F3DBA3F3512567E3EBBEF0F981CC1C6365E1
C1FB561D335789CB74B1CDDC4475440A41F552B9187C731E917E00E7A387DA0E39A2D2B2E9AE
1D0E212674BE28E4FA4E3358AB180960C708FEFE3F8950E614A897355B6A0814915170DD743A
803369A6BDFB48E1700BBEEEF23887A1825EE367BEFE70C9B5080172FB96FBB2030C4C9A3C71
E90053EE330F654E5D536DC5AA88C7E65ECB97EC771DF473C5405FC09A76526522EA94D79FED
9001282D3EA211DDECAA9065BFAFC0C2D676A818009CD55ABA5679213380DB5A316FE3972951
ADB395FF679669BF7137D916EC169E0A6B38C6F8FC1B478FC6FBCF5F80EA6BFA49E5DA2E56A7
5ED20D1C8B2D50F89A46054CEB2B6D8C6B59A7577BDBA0EE5848537B14F98C232AB3A2DB3C15
33B42FD671B54D5D1E9B61C87DB700D3959BC085C07EF337DA8B99390216D2EB63B46772D463
7AE2FFBC47DE27869AC2AE409AF4646DCA7B831A531B3FF932830ADCDA918698A24AF67CE0EE
FA61E359AEF096EC131FC77B5D1BECC4A0CB4CE556F4E27DFA5CD088D8C7C41094FBF617365F
27A1B6FE81B2AC09C515B3167691A2BD202A060CC67FA2CEB4483AE3C6458AA1BDB242EA4CA8
1FBB2077BD63A786B6BF64BBF92E51DD88B3AA5AD22AEAD13289E13C8EC58A664D4ADEDF7B74
1DFC8C125FC6C3A3668662F30032BD3E67BFC599615FB35E6A51757329C528E5FCDD4F0DB623
1859FCDC1345F256ED711F633CBDA8FF1007F4CA288F9A7D1EF2D3BDA4CD7292FFE352A0B7ED
DB202DA2785EAA5D9A7D6130D6CEB0514F29528814486B1C02C4793508EF819B53CA52CBE525
3A32BA7A5868AD26475B7373EAA20209BE4854DD397D680B5A40730B2BFC240FEE57CE60D024
974B4D09A963BFD7002D8A7DAC75E7842DBAC6C3E634879FCA3EE9A92F5F9C8D42ADCFF0671F
CF89B8B76CCF92BDA5812EE0DDB10986F2180BF5CC5BC9F8E46A7CD2CA6EBA532629600C858F
059F1B5946F9D769EAE6D5668A6BD7910793E1E2E0B8D59701AB081B38359127E7CA301C664D
EC91CA82F1EBCD88CE15E2ACF3626AF80459D05DD4E92354A2775F82B2FAC2AF3E34A4B21FDA
F66E0BA692BE8FF034CF33E8E9975547D2D4E68ECDF6E6230D38CADA4C9F33BD5AE9833EA50C
34BAD1ACD987999F83C54A5497D758F65BF772A0C44725A51131CB2F8F509FEB7A13225B0C66
71777E5B146A99666D5EC05DCC6DAB2370842925F458430AD173CF8A9569BB2F2DCBB11412B6
D9A2B07EBD5E928E90BA133269CFD148007CA1F3083CF88F877483AF3004D55EDA3F7BF53345
35BC604C19CEF53019A6E12178AEBB7EFC51BC9513D3BB549A44FDCF1AFF2068148CA3C31E57
8865B95F5DF47214228C07168108D222E0E7C2C8A9FC35E8DFE284E16A0D4E9EAFFF5B3D5ABF
7C19DA9590D4707CEE97A4BB744F837BA86D387B2B03D06D3435E62306CABA1FA6B85DD357FE
E4C69AFA35AA94611008F3E2FD32FDEDB8C7FAD7AE0E70DE4FCD983D5BA6719D65E66C84510F
4E2B38DC080845AE4628CF3AB60C57B546E9109F3A52497885FC347E95FCDF30ECC7BA1311AF
44445A4B51D9EAC57FEEC0F77D99A0EB16CF15233009B4CF12D615F9D1DC10F99B309FC34EB3
1428C96F0780541D9240DB35D825A3A50BCF05F9261B1D4861395950B409B1BB39D846ADE1A0
5DE2BABEFB71C53258A7940C51BEDDD981C86C7CB297A284A4389B9CC2C0A724596E1E7E72ED
2B70950A98B8F1894201CAD455FF9F09FDEE641C9F45CCFFECBBCCB5C043D090449F05073943
D5DE9BBB151739BCE2F517B6A0CA7BE84F251BDDAAC05D7D13610D18E352ADF6858BC78823B2
1131750154441C340B27DAF56C208945105E095FEEA8517C186953AFFC060AFF42BAB27E20A6
FC1484D669E055535AD0E8F83F9DAC96223E385D81D79CE7341E78B737D65FB1ABF44EAB7540
A134125AF93194FF5CA6AB0C3EF42EF474BFA9CFF10204D4B5A28FDF4B3529BE86559CD83702
369300819C50F8F33F37E7985228C69E04B81562CB67B37870CB666228DDCE5231BE170F8CEB
A4408BA5F4860C00ACE66D09D064ECADDF6FC6F7F53FB1943FEA970B785BFA59ED8AE2D66F7D
92202133DED3E1BC06F298E6B07FB697DFFC04F29F58CF1E0D9D5C5F27BC412DB7F6830470C2
2E1A731A0DB1FE634531F8FE783E6C582151E371275C21783F101A5BD6CA001792647016BD67
44905C43340FAE604B2BDCE3B0C54B9E8381EE0CF2C095BB154FCDA6111635EA16B885467E82
9E99537C57F256FFCDF706B456151F385293D19E216EB5201FBDE42C002C28253E15F051E137
A02C2D87511CA01F11320A7287DDF7F597B7C9DAC840A5F7EAB451A93A04000FF582867F8E33
9F728626A671066F1E4197F492485F947D9C407D439CB105A5F0438ECD434F9E34D1A3CAC8DA
93E7B923BEF3461F52843AACB89E57716342FD68A9F9FFD840FBB5103A0918E7FA34C0387DFC
0ACE780A4D520B980029F4BED8197C322A12A99EF9E36B19767EF64F95F8EB9A45C86726120F
F7B037A285BD8BFEAB84E3359B7832F3B24CBCF51F4CDCFF2B8CB2DCF9B025140D273D47F1B2
698E236C6178AB11E2DD0A6BD252F9ACB150F24BACA31056112862BE6301842D0CF3616864D2
24CB17257C148655C3C84062433A42ED3D7B6E4A5376A7A387DC09109E2DCBF82CD8E1A1CB71
D237A27962C312FEAF8E402978A66E088ECC81F72AB20DA92186F97409DEDA3BCCAB6F87ECCC
0CDA472ECBEE03076B195589278426233C277D702FC7C2FF26CBE343DED90A0EA5CC28F7E023
2489CAD01DEBBCD748FF5E0FCF19F137F6BD9F753EF68D4073962A37433CED8BC46412631365
6E97DCB87191A59957358E2D5E7555DBFE991D77C0C11DDA2EC87370660E93CC3D1C877D77E3
00DDD85E138E5CABB8DD1F36E03AD47A12A7C341D39174BF6DB831C4858EF776DB71D21244E7
5B2717A1C8190476555171E3C4D3E8A6F2E9CEB37FDCB233427AC1D9F33984786A0CA0888C09
73844C950B9B264BE7E167E683EC17F6D9F3C1686028D9566B824EAE90F80966BACF42428007
9CB563C7EE9096E039AFF2BDDAF902C04E33A33AFBB5DC69514C29D0AAF0CA294CE549E13DE0
B18393E0C51B650A99C5AB73B171DA23A6A0E574938E3FEF9DA83AC4C686871B8015310B7C39
F8E67BAD9A0658A502285515EA83442AC764F9E715BD89A08323F181A021C7BB0FABD1BFFB5F
5E2F25CC4AB7882011248327EF627B38E1AA8DABE8F5969B73F84CE822BB61C66302569D77FE
252491DEB52314C5876E78187EFB8028F6C63B5D137057C3F1DF52304E705C0AD792AEC3533A
FD59FF0FB740DDA2B7972C28E1FD59134ADF0EC71439BBCB3987B516FB75CC5A4140978F3F46
933FE5A46117B9E91ED345AA27F8DBFD47497312DF7DA822DF9C7460784157B30B5C7321295A
1D4B022507FB31A641AB700E81BB9863CD9DF52F8935731674DB599AC7FBCB95E8561C327DCF
BE14E5A6945FADC3954975DF25414ADF7007A4F0571A450B170042D34939A4BF76F8CA3CA75B
EC4B64ECAB37864A2BB8D2B607D4848D073FBD5E06144787070E2C0994D80EC0B8B281A761CF
002365D19CB0A0FB833580A4EA40CDFEFA0C1CD2A5E7919F8EF2BB92FA1D97F2F2FB0D3F0504
7FEE26E52498B9F4195DA8452CF82AC25211AE317207E76DED493BE5D5F12C7C2E2EAC7444D3
43F2979CAFF9CD47F2A722CE3F695FB754FA60289F926979947401CA7FBBD699EA6308F39E87
E8B490CA37F5D40ADFC09E0E20E0E141E6B68F6A054FF84E4C873B606A123435BBD36D6F19EB
50F579648DB3B1BAABA7AE9DD86A0CA21E83719C34EB9974EFE65E86F7BFE2B7AAD88287D34A
48816915A6E62DD483648F1AF4714E430BDFAD5ACE961C361BDE19EF6A17B187D31751FBC138
5184182EDA613AE2599722B7300184F0BA3FC36DE3377AB191513AD96B242CA3DFB07AF81A26
5BD4C985F12E9AFF5D4B55E4CC6159D701B3174BDA3AE9A93DE9EFD0606437593FC72E1E510D
05515368AFEF9069AC3F8FD493E88B9F3D0178334E1A552879DD0E42D233B30C4D3AEC2D8BE4
AAC2CC64CBAE763D9664BED33C6363CA1043D069F49CE32EB5D574E69BAEE1E7F645BDBB7CA9
C4A760EF44F1ABD1112A5E799CC2AC22D89A95B5862C96EA1243FAA08FD176CA42CFF5E79C92
F887CEF7D68FAFE0A68BB5FC4CB9C14080E19547E01CF8D8570ED52C6EC5E0ECA2D47600EA33
BCECC390E1EDD6B365FA0EA04B7F1D3E11BF81F21D032D9514BA6845966B71FC1E9D4D37471F
DFE3EE247E25B20F44A4D12AE769F3B46F652C87ABCF83205F6FDB533ECA047D12BF4C9F7C6C
0E806F1279A72C606CA4C52BB08E98D38708D5943F96AD5E25D4D65560B2EB099E3013716BAF
9093D4300BE22756CB8371B7109D6F43CB205DAEA89E8AFEE774EE173DC666BCA50ED0B8540B
D8A5D864D04E29892B472D4003A9B7CECEDB51F72D0943E1535B8A98D22BB8513DC55F6D9E8E
DB1A17D580B7AF8E2CCEAAD36D13EA6DF16B0DC33728DC602FEDE23BFCB37874540851A3D3CE
D9F42A036BB25FE4648F37BFAF0385D0CF5AC875864EEFAEF8EEB93BD9B8D466287BBA42035B
D4AB37017729CFBB2869CD8E6435E1CEB75CFAF4338E19B6FC673FB6FF412C14EBB08548C067
519622EDA6FF75D28B8DF92E980B7D900C99790799C57FFBC66D4BEE2876C06D397B36CE726F
A0802C48EC933C61CA0F7DA8B1D66AF8D52932DD79B5458C93908784863EB66D55EA7DE29973
382E67F7BCBD836998FCB3A1B408DCF52C99F7338761B68CF0BC73327EDBB00B60E26CADFF97
99CB9384960B5E6B24E28422275784B068A136A7BED61042F43B1478961D68EE111176F6F7AC
A9C1402964F17FA0895CDD7B561C105BC5FAC1FEC7E7E4B4DD1333B3E6250A597F0756C97CF6
8ABE2C156B24CEDDF9C58FAB5FC2B5467E66E53C0641E4D1BED674149F7CDDEFDF6AD478D072
1AAF5189A64519F9A73467E22CD4A6585F8D0111E4E5413A3ADB340B0BA95D274D95AA04149A
39718DA91DC7F585B8BC164AD15C047D0512816D5A5BA9E9A8737D017AF929DE4B5B252740E5
74D3BE7BC3AAC21514A14CF7AD7DCDF5676242E851FEE6A8AC002E863B2CD0CBB69CD8716992
DC5665FDF80F26412DE3A63A9F508BF415BE674113D665286B1AD88D8283E3E2930803EA4F59
09BA35ED5BB1266D02F7D7A02742A638E70DCF25B5CE6CF8F993992CEBA07FAABE48B9171574
2A0CD3D267364E7E36B9028342D2A78284692CD5391653273EA19CA9025F63DA2CB24A9E4A3A
0024DE3715A0A7B25F43139205EFE4795B65812C56B9FCA96A35DA52844DE2BE80360A8A09E2
A8BA78A093D3709C6AA9385F4A5C705375EF9C87628606EA363B379E24D7C4BB4EABE3484E0E
69222826940F4A03B59B7514315B249D28DD3EB1CCB08CA42159B574657B642BCE2B69CB9536
9DA47D6AB51D1521BC155B6A1C95650847920275E57F66F06D0F94F42F308F9B2C41BE5619A2
2E4230F5BA490C493C61E0928F7AA77E4C7C43CC405CCDBEB7E3E00EA1655DBEBDF6A665711A
DAEF12FBF41A4AF22B8408AA6216A460A17A8266BE82423B79C8D00B84608126D10754D562A9
80C0A825B6665202E4892910075708EDA3620DFFC93BAFBEEB25687779135C4412D0063B799C
DFEE805B1696FE0ED1A7CBE51BBE21F564179AE9E3E0C38671750A3E1B7D8B2D959C22A8AF69
FD1B1909A7733540E6166D07C5D1DF3B1B8926A8921E0EF3835D669783E475FB1AC4911B1B9A
5288FE0217407AC6A0DDA1E7CB573C0CE652452EE34A75AB45908D40FE06DA4C88963C397E18
0100C65E81E0108237647030DC4C5D9F05D7C513D2E52AFC918A94E969342ADF0E3CD9A3B028
B21621C0398795EBE8C4D5BB0772E8008312868F75851E616A1425EC76E67FCA7980A3784BF8
8042FD98C304F7A024CB56FAB7F39C51770E6E3A871E20D77979421A962933A9208AC3C2A2FD
1DC34EF84BCFA5EB869FC5ADE45A8F8414F0CB65DA858677FA6254E25C808DD1AC952C26650C
6C0BF99E25204C6058996D5F3DD23136378C750834AA6FD4504274F968DBBDC4B358314986AF
F04FF03C1DB465F1EA4268E3EB82FB3A1A8AF13D5AEDA189A51B1B5013048AA4DF599CA47ABB
ED3458566040717143C793AD16016149EBA1134CCBE84F1F9324245E9880077BB7F9F7B5AB00
5AE77951AB044C91E8BF96B8DDB9729CBD68D9ED09CA955DCADD481F018D33C18577DD082608
B0243E50EC77A07A950F282B165BFCEE110A9E810E3D49FC7201493D785A31C1CF5B246DDE61
4B72B74F8396DF70CE8A13FCC25013848F0EEDF37118F24086B9CBA2A3C38B7E950227F237E0
C8B96139C2099856E34243C112BAA2B912876B0655FADB7C359D5B77560AC9B3066C777020E2
2441272033FA9939F278A8C1C01B1EA1235642D15A7D21AD12B2BFA0135E8772614656F97EEE
14033B4ADA4273C07158F12A3E1EE0DEF1B155E1329B84B0A9113E0998FE4010CDB4E7D07506
BB90C98B70DE1041A6FCD1E20CAC6019B61BB10A48C152A73D47EBC0F18205DF0FC3BD112B30
8DC8B07909FF41612C03431824DDC6B3B5DCB5412108DE01D4FF94182E90DDD5BCEC425D4CAB
10B7E22BCBB6B503B7F017D96C416E82F2FE082C99B3A566F6592CF5A8E3BE2DAA959911258B
387859138F212F8A46F9E1E5E0F8339CB799018519386F9715AC108A0271FD29B237964B9A2A
E930145C65443FE8314E245AD189212D2B99B2C1EEC31BEFEDD067D0F5E5BBCB851F90235BF7
53C5AA86BA9D42FDB2947AC695FB1BC7F0CDD57B33EE3092F58A73AC36E40D03F12E9CA1E790
3B171DD247D6B257F20FD057D35386CED1202144F2067B34355A18B0CE6E13A3BEA4DF9EB4F2
0ED23A20C26B314214128079DC0C795474A3083FB9DE02492746B851CCD59B4B3B349146BEDD
075B045963CF6CBDF68AC5D670BD01E441FB378B191CE45F688560FF2BDFBCBD63677FD669F6
D01CE1F5EB0E66B0D3D41E7B53CCBB9044ACDBAEC1645F23CC1CFC938378855A40E897E6C446
8FD46D707FD3DE5C080D4E8E73483126DC8276547F03CC554DFBD4E74CE04056BD8143C1FCB9
E92E5C5AAC83AA725D7B926BB266D9555C948453FF4C9BA01B01D6A47B831BEBE7FCB23D6144
9591D237453D8FE0AF43A687DA9797B38B945010561A428A07030A77F14D53537F7002E36A5B
D2C1970C9A89BC930E9D57668144E21A9094B0FF6A7746B399EE169CBC9B279C3A1E22D0E5B2
B9F7BB64825E18E87799B5C29AA6CE7A82399625EF024A25C1517BBB762D3EDDDFA44B0C8671
019116D73A45AD874A6A6EEBA06CBAED65D2D740B87A52E065ADCC66093B1C9F32347933A4DD
016D90E737FB2EE97F5290CCBC02AB947AEB7AAC31368DF3883476EFBAF7BD56AFF3685146CE
9F6B39ED164BA74C89B2A92CC8CB8DA6FA9B0F8320D14D31B9A80019D885B801C6621EC87BAB
3740029982782937CC1632482756260BFD1C376B4CD8C458F66B2D4391442E39EEC802798752
8EB4A1AE28D933874F8952335A46F69F503A130DB343D4502173EDBB5C07B3C24E75C142A9BB
58E9A1B8F66406003264791A920886CCCD284F8545532C8BB2EE2AC1F38CF9A464F82A9B83C5
9E7EB60B6BBFCF69946960EE85166E7AA6887A0B0D609C62BD18B5EEBF2EA99C2479E86721E6
AC5D2C21F7A085BCE4B05B73495DA3F4EEC1EED648708B9D6ABD9125E18DE013300522EBE064
42CA3A6A64DC704A9728A177A10D92648DA7C6DB79F2AE2BEF762FBC440F094235DDAEF16098
61DFC69D751F3FBA44B3AB190C6117B4034C510A0F12080AB416ADBA6E99FC43018FCE57F5E2
07C88DE8487961C06BF017B00DB006F2D934621E9C2DB8937D1A4497FCDADF03100695E2B268
4B37959F25DA6F5F5574FEA68DB87F9DFA958F0047CAF5291B8A955EB69A84C8F73B3748BEF4
A4B8BEF8C662AB6A3FF26AC405551E8D593AE69B16A6A01B1A88BF2E688171A2820119CC67F3
DA78A807574D5DA12819DD2ECF57FB8DD790292AB3DC6A4A28FF193DE1BC812E4FAD1B8AA82D
5E582C66D1FBF0FA26C7A19CCCA4E22AD263645D249D31761B70C56375D55A1BE039305291CB
2191EB88075E177427CA254900ADDFAC7763D62706B2CF170DE09CAF55F08D65A2350564B36E
7042C946551F6CE1220706CBAA6101DE0F37640F652572CCAC55D1FE65562583F7A94BA39315
C6B42657058DB161DA458FE47457F2AEFF5AAAE66CEB1F5B4F74823EB5F4A6E61FE72411225F
7A73AFC0CC6743E918182D115BB3ADC014E0EFCFA697222C609594B9D70723B641648B1F5CF2
093A9E469A4FC3F33500707C714503572379DD658FD4FB349D749F32426FF13A50C170B6C896
CFCD76C07B767D8D3E1D4E9E3FC482B9E6A65D8265614C9F6B315A97ABD18F52C815F2A7F2A1
39EBCE6239F9347CCE9D71DA601D5CC37B8A6F9AB9960516BFA5DEFA76283766C0F301AC4BBE
21B4D2AC51D69946DCB76DCE8A8ACD1780F88386C7F1FABDD2B4DA67D2A1C07F5072BDF95B65
01026FFA88AD597D4BA66710821498A8E4D9CDFABCD67E954650CBF4FA00CE6C9E0FCD8B8680
993A112A0346ECEE73075706E46D820EC69D77191124E694359A9745559321268ED80C9C9E9E
EFE4D27F2D2CBEDCAF27E33EF93483C662157BD0449D781462F1BB12B50622DA46BF1591BF76
80EE5ECCFB716DEDFF2F3E74B5991F2F37BC29E2A98D649328C1922291B5D33DC8CD1FAF071E
43EAEE80115283F1D5B2131F15F7AD7DEE2739B6B3C7B0687432F552034C3F541C7BA9C5EE57
67230F3F91272CA1502B6BA0668CB3D7BDD82242BC01D51B04F72F0F4AA4D367D219AC55EE74
64F90484747EB6E2360E825860B8605F6519DBE7F9139C0A7BC559555BC48531349EAC202B7E
7622006B581644D467B44D3C22AC5A166CDFBD9215C2C999D59416A9F512A485F4D452714754
49257160DADE372BFC397171B66BDB2A483D2EB5A7DF3479AB381B37811C0795B406D97AF1DB
9C998DDA6203A7628ACC4CD8E240E166BD9B6CD66C6D6876B4F475E8159D430527093265ADE6
A55284AD768EA42365BC5199897D093C44AE66D8FF6FB5D4312A7C943538B29DEA4946B413F1
F370AAB569B5744AE7523DB08FDD315223E553CED5AE1F92CBF2263803CB35E9C7714DAB6020
3A74EF3923B880685F17C8C26F319764583D0038EED65AF34F3AF23DAE0D010FB8D8727DA1ED
668B70047002B4BE55962819CF9487C1A5C006FFA009A1999A95B5B8A42D5D01DAE22FA5117A
BBDD667F3278A6961BE45170D392D232A3DA44645AD43285829C9045E8D68C3E87C4C59DAB03
67671EF859C96168777835BCF3F0E7E952E69BF903630464C967D6946C02056003DEB02293DE
B5A5B1F8E331EA64FDD89858F5D6C610D7610ADB03D2C6113660A589AFAB45DC0B88D8D92C8A
6E49767428BED4A39EDF23FFE561B8DECC065CAE29ACD8E4F6D59B0AF84098EF60ABE204C17F
B356FA77EAC9AA24188D65E5175BE1B76865AE11C41EFC2626079FAFA5A3A100852504771257
7FB7A0E0E7AD50220BBE11ED73EDB2DD8ED0657EF2B40D064EF0CCAF2EAE53BD71F921B816E2
51D266765BD97472BB5F465C99F470314DEA782F68416F6BDAF6E53966207DB840B31B3417B9
305EA7369ECCE7FAA29437FB85DD46F7F0146BF35E825294C791966CDF0102D584659EFBBA9A
5C421697CAB15B0E7C046B3616477D2F6505071F626F2A4241A05A760B7438EFFCF9A118309B
EF7ACAFC9ED9AE17C9530CBD625BEDA6F224BA9BEB51676BDD27B3C5E31628E346BEB371E389
8299A517D0BEC4D2E8EC7BF3C60A92B9D03F61EEBE3D1CEF65E3584B296D960EC620D38F16FF
21B8A47FD5793E46BF37D52CD51ED5D630E70919C467DC68F770E7308BBA86DD6BA21B58D324
9F35F35F7D0DEA01ED08059163A56BD219B49F85A98AB56D15AFDAA17CC8537E1E80617E0A03
8975F8DCABF7F35931C47F1C88490D0D5D47547032C980CDB8E2138F4342F9B84A824427B034
11F870A4523AE85B1FDB3CB44EAF5F90F0D5D97FB44E55A80C5038876A3EA7ADC28A6582135E
1B40C1C3A2A129A8E45B35E908DBA2240041F1BAADAC7BF241132490919B4C77487233AE5B57
53834739A9E815D5D11EAC5B0AB9812E14EF97199304E1077D7DE6768B164D4C7C69824B0ED2
F3480EB9533AF9DDB1625BB80960DECB90D6F03CC69F9C7EB851D2A0228DEBC62A75A53E8475
2B6A16F81A339F411051432EE95C73BE36312504D8F7F6063E89DF87B75DBD59D9A22DCC4562
353E1C85991EB845CF18D6655F97AF9ED25EFA6D59106C6EC5A15A88C7EA808B760DBD9A92BB
1BFEB16B19B9ECA8D27D8A8981E42A9A1E6D7BBFF94739B848B25AB2178376435380B123F10E
42ADB56951796D52B0DD6C7C737A001D8E5225535A3A1BEBFBB0FCAE6D278348519ADBC127E0
77C307BD9783851F31016C4EE8CD83904B04EBD8F68046A7B42B380C240166B996313731CC70
02F1D8B438DEBAD313CFC779FC0D3DAE2ADA54C86C8ED88EABE82BBE3EB92B64F739FD61B72E
26DAC12C3B3167A056E724646849CD5A72B3A3F0EC7E9DC895886CAD89C904EA911C7FFBE284
AC094C83F1800D32348B99ED12F13CAC16519BD99BE5BC7C3C525D6B12C8BC41661559ED4BB0
4D674758513A9F9C9428FF4AE28B0BA54FA5535FBEBB445B78B31C5F8E64F76CF2B685A772E9
A7F365F5876C8291C0A57FBCDA8FC5F1BB59F714412D42FFD6EDAE1DA5EC873125817BCA7C6A
D9682A9F76B6E25260C54DD1A48B6C6A9B4D7C305DBD2A10B0317E211D0D15F890B14736D31C
1403B55AE5848F96F3A2E133C042D64A3ACB0D10148C3FB3DBDB489FD6C1333C26BF7B6AC17C
4CA3A3791E01B71D3D93D27A187079A4912A37D95BF38BF65B1C565CD588681C31D574577CF5
388690B6D22BE8609B395D6CD0113C0F70D71AF534B3863425BC8BB074DAF73149BAAF58C9A8
33466A0FAFFBDA1E79ACF6BCBBAA81C63EA29512AAE4E0B37AC01CB669FC5D41B7506AC85E6C
EA0286281DD2A6881894F20D3DF2FE7D158231B3018A53BAFB43DB9AB4C2A83E6763D942F0A0
2655DF9B56981FBC96FD2287224AFAC5AA0F4AB4DCD791B8A73A5796075E42C22F155C306444
6A076D8534FF638C9BB39454606ADB1E28AEB7347080A57BBE840875C682B902A1E510251E69
BA5F423D890E8F3751C3670BE6D992AE26532E986FEABCC8CE0E29B74B623122E030B2232495
7F210AB4482DF9F2EDC785BECE54826220442CD98BBE13E261253B873F81871DD5B0726AA09B
EAB26D0ED6AD43E6377441BAFADB3A7B9935CAD5507590613A8A85D1AB2402B785E3480EF489
FD8CB6EE337D37CBB1B155C17EEA83FBC2BF88C0B3B4AE1935EBD5B82406AF9F2E0E2B1A550A
F6E1D45B84E82E5B7ED8E3C18054B868D4FFCDA8FCA632B898F16D55E9BA5B40B56D1311467B
233310FF0DA2489E6F8F6BF4D8B573CC931E11B13BC09F79666314A054A7769A765F756B650B
7BFADC243714939A6B440FA5C373DDB69F4667B894FD2630700CE76665DF023BB5D88829829A
0F7D8670176B580A4E2C0C1AAD0A47B9E160764BEDD6A34CA8885CEFF994CBC6BA1BE767DE53
BEC96FFD88F9FA0B9195C1125FD9C7E5E6E835C70198B01506DB42C612AB1EBD3846CD0C9581
73CED3C188F08FF2AA1CB5078AB61DF54CAC195513C02213BC9CE8456DEA32CCF941253B6D07
606AE772B96168D3B11036C83874D800722D4C6469A88C3C1D6C4F28BECEBC61A4A1AFABB26D
FCD3F26296120B79EAD45476463902625CF169C43A29F8ECA4F71C868ED959788CB34B040C29
B9DF2703B6A362A1E8D636FA330BE1E65A33213BDE120A36AAF52152340E385D72AF71BFFC0F
34AFBF117CDE4DBD4820AEF1D453CECAE6281C2EECB2577737C32A59D3686DFCA6B82783C98D
6B310CE5BA9299E974C3FC1E6BFE92A264EEF97B568195357A33576EEAA246F5D8049AC80E6B
10458744110F1219189FF547772B2D4233778D4DBAE48B91DFE1D5DB1F64F919EE809A7DEB2A
916102974FAC2389057267070D9AEBB6FA96F2B080C8032727D751569976841915292AC32F5D
5D0D01132237EF63A759E1F1AE1750EE79272F04AA99B477CCC6A4E5B0F26DB40627B6D27411
49FC679108C4C13830A2D6031BDF4A630327738BD8E7C6A4C384BD281F612B821F932DA1B9D9
33E78B6CA50D28E4D7E30F8B4B21ACC7700810121BA0AEF6FA1036E32CDE52D3BCEC0DB12CC6
5E57DC5239710A97EC0EF9B3D4F43E7B86AA115FCE5AAED1C763C75F8EA3DD559CE7B11ECC4E
5FC5B08B9BC62407D56D366364E28A92FAAAF94BA5CC3ABD26CA66A8CF0EB6D015589BD15517
4C08787D87BF65D7756BEC6B4DD8114B953C0E603A492C0CE09CFCCAE35F0CE9744491624A3B
52D9DFAAAA6EDB5874280295E49AEB3FDCA1353CC96E91C7E3F8650DBAC8C09540292CBE3C3A
541E2509DF74BAB4E1A6E0817763F09211D67EE2C0AD57277F3F34C881B0DE1419C47787E3D8
66906BD928C109FF52A7EE898DE2D765ADD468CCF773F36106A52767E88086C29DD10E5AF3D1
15FD7E969AE3FF46E1EAF11E769B4D31AFA2E0CE40F70E58C4591FF528C76277179C878991A5
0D493FEAEBB3B3FC830412520027C275CBCE014D342EE66AE0ADBFC02A7D244D6DF51BAC68FF
752717763123D7B8EF5D28D8F610DFD14269C4AF953EC779EFCA0E4D3C546F5A7197BBF93E02
D5A8A7E7946CC9582AB280C76C7B82701431FE621F84E74F2605BA90F37863D18A99A9783E5A
06B650BFA364AE92884BA554682B3D28937D303DD6DDCB1BE272B237F990AB8BA742527AB65A
C412B79CFB6226DD3F5F84507088E9A61F08A7EB8C89D41730660A26CEF3586CB67B87328AE1
539F88F886259BAEE5C12C0F9FC2F13B61625EF653DC04F00F0792CA47319553C25476931C76
0AAC017475AA597D041F19C7B90E3CC98D5B0ABB10C84A9F2B06AB1E16BE3F5B187D8321A0A2
996DA378E8D21F060AD91F3CA70EDEE4974F23F8E28FA122626DAB1A17F1D9C4720DB34DEECB
1443AFDE17769614B5DC6DE1BA724B221D107B36033CAD041E75B3C07F66FF118EE859616780
B3998EC0C8AEED2AE569C7D3C7860FDE77459602526E4243C2772DFA647193EF32291F2F3C10
D5C9549C4745EC3F2CF6D0C964CBA9BE4C0F6E99B2399D9273734F10E681C3EC7333A8CFAD19
A6C2A20CAEEFE164E1234D63653F8E7D6E0E622E25BADCA106A97AF4D03D462F895E1B25E1B4
E72C9C647E5DDAAC87779B428635FC9EF884CBD59F074E49A539619AA184B1583D0203C48ABB
2F51CEB0CB18E891B01F466096AC457ED2E7142958717963AFA5FC5CCFE08987F1C93CD9BFB7
789FAAEE6E3D2CA128DA76974CBF27D844DD91ED448C09D7DE02348DAD997D893D9432A5BEAB
44BFD24E208AA6DE4D25D0722EFDE306421546ECA721DEC04FA8DA48A6848A1E0DD4737A7049
2E29A30CF89AA9684710E6B25CF6982ED21D5AFFE4D819C7BF4E5F3235778CF3F822C6EF0A00
8802D869FD3FB3FBF1B0E465114C0B50CFE597A2415E9294D50120D6B93D5CACA6AE72A6C507
A1501D2EEF33C012498ECC2CF72B26686C8CC5111342B0C454FD98BFF5BD4C077811073FB790
A352F975500759E2A9786AF87AD6CFB0CE12BA6607C231F88CF11FE0CAB0735C486E18EF752C
EAE14F6C2588F4D34085C0968F3E932FE055284671887CD9481CA18038D28B2261A18690BF30
4218DCF5C04B4D37C900B01F665CFEFDB2F0CF29AA9FECCCDD4B3A6324E3231A4DD8532686B0
EC257FC0D2D401882D628BC062CC2B862A89FB30D3F78975D61A0EBE008F529561021836A4E2
42D58FAFF9CBB537A70F9439B5E82F88C505D288FF899E30F879D73C5CE4241A7BF638095921
576DF3FA7932D97405E280F36EC2F1759F3829CEF88B5B788F7FB739BCD9D100F4C52B858816
20D6085866F33A2DE3530E23B4DE8B367D9D76010729C38AD305B29608572CC5966F78D9BFD1
B991A511BF2AE641F46914F52F2A9A8CA06A942A575A786BF41EE65B2828662CD21C199544E9
4A31C958128D7D35B7C4477C09CB6AD89D2CCDF8B2D2A4A8DB28DF82DDD0E3A294C07DEF5A79
E43D49022057B212EBFE376536483E9DB181A390E8C82823FF2E4C6997B37EDA058A6B73158F
D861B9246B48D121C385581C81DFEFF89B99C218FAEE98C3CB54A59CB941BD463F822DAEF99C
FF4694C1B794084F9F0D6D365206D43C86085BAA443773AD6B59C596B3CF2C69803E85A6C7D4
787077618D99D6B556FDA15F91C6597BA96117192E9377031B76E6BC658D0A59E1BA69A2B5CC
91A8BBC604D8E8ABD4B1F064ADE3ABA43F2C101103A12FE366EDD2A467C58639DCC0AE5E368C
F92C83D35D3B93B407347FF46F04794E05D18990B07596CE506914CEF60AF6D6886E815D0454
72E61DBE796E2CB6EF315BC33109F898845B1C35D37926E3FA22B4663B3A3283C5F716F419F3
E0A3EB57EF2E021A33AE9338CABB4102F1DCFA211D2B9287E4490B148265E4452CD1C031C8E4
3500929C1A1E5704F8229293A552FBD04C38D83EF82830D4C06DC802D96BBD84C4E6C44E2E41
B8B10AC6ED975B32A2BFC9D4D87BDAE7E8324CF1D4902C2219481F2E2EA39E31B51CE4BC663E
87E674C782317E9DE3F0987F74562788E961465B941D82E920EE975CDA0EA07EB24528906279
AAD6E1F22031D0BE62C16733D799F905AB089E19FC546DEE0D6FE2A468499D91DC455A2D76E4
154A8DE1B75B2546D3078CC0CB0494AD4A2DAACA192E5A1E9851CFA2052C85523917A9E9703E
F4341DA63A64ED9EE2827369BFDB6C482049A17001DE299223DDBBCF042F1A546BB8004B35B8
575DFE2C3D331F2DE653D5965803B7772AEF3CFC930276D64C66D4807256EBAD65648C3F7FDE
96389828DD1C83EC4956578A3926C6BDC4929D5D87809C8B3A65FDB211C5B308DE4B15BA5E1D
2DCC399AF68240F827EE7CE21A3EB6F3333A05E4056D1748D73090F68DAB0EAC4C66D49F2758
2A74A27394359A8FE631B587FD260974195ACAAF4F3485B1AB8A9DE9A60BB3045CF4511F1141
42FF5BAB99429785301FC1A161C00AB3E9343A2C13A0D9D742161B5960855154849ED9E13069
F28C957D290B1544819CC2DDA813C251971351ECA317B02806233FD6007F236464EBB7B451C5
A927A2E70017304BFCAF69C5EFB4AFE800676BC45AAECE18ED002FB157451ACCBB3FA526E188
524A5EEC1C7F6A413249BF4DA142C8C2AB169875A1F09E7E75A47FF7772F7398DED9C4A4217C
96AF1258557C0156816A27B4FDCE954E3B4B5A086B54D8BDE413AF4D0D3F2ECF413514763062
8BD9BA4C9E162FD1147A4B56D2594C4E1C7B1F7BEBC810EB0AFB652236EE327E4C41E7CC59EE
7FF06B48ACE2F003E2A28A601817E87FDF925ECC6E5AFC5F22D9003F3BCEAEBE42DC1319CC51
4A152B021B3FE20D8B8CD5B6F60A8B95F81F382EFD54C88C496D260ED5B5609EEC78E875288C
C127A456211F8C21E27096E2C08B02E3C78C0813A76334AB82C926279D58F48218885743255C
0927183F90BAAB6133A539AEF66F8843DAEDB1D287156CA5D0146441F499E4F5682E6FD9BF24
03909CF8517164A2462021A019FF969C6AED234CAEED24940EC88E62227FF2C37E9E024E9731
73B84705FA61EC1857B7C26AB1BD53C0EEF6D2074AF2ED52B9DD70819F6645E3DDA6D912D434
767D7B438709E75F8288B0E07A710A5DE59088A867496892497BB408207165BF0DD67240FAF2
5467BC4885A1857E02B446B8BF29C8D88EDC3B6BA1A1AC7B835FAB3D7B4B3BB31511D67C1A87
17AABF67B64B7C36D68A58FDC8209831F0335F12894FBCF649E5D207A0FFAF75A70F4594E3E9
07A5A77FC65F1EDC5CC0D8A5BDFCE808B05CD87C346822093BF37DAA16B985B585D87BDEC265
8F7A38E8BEE0C3F0540FCA9E3990F45E521D65002AA9750C3D8EDD27B1683B433CA3CE44E610
F360E0D4F3B1E10BCDDB0712D2F41A3E2D6549E1ACD880E466750758E3A95D588B5D53B5834B
6663B81F376A68FDDD362EAE5DE8D6CAD565F0329E96BB7D8B0C462CEDDD4EAE1E5E9D321A47
D266CD23753F916A70CEFEEF54469C17D53ABDC58A2E3AFA8EA7BF713161E83A0285BAF8F164
189B99323E45E8891037A3DD59E7422E5FB3D0EB781DFBF795E22A6353317940AFCA6D7701DD
7AD683AF8D72EB70524042ED928D91214B2F22FD0A3B87C16953E0BCF5F8105466F959FBF032
39C771DA99C16A09AB1DE670BA6828311F01E4CCE2E76DC4C1A49E97F9825FB5984FCB95214A
4E76850661116819DF0B76C55D22CFC5A088F7BB5B09449786C6F4F5065A5A5A536B582A7EA9
D5DDC5A95C03B24DD8E8F53A3752268C858E4270787CECB64B4F73486FE5817D0A0D12AC30C2
03B3C5E3F2FCD8562ACC4172D6DCCAD3660826767D752D0DE2C36AC95564486097ABEE20CB03
17F8A3A28D15A69534F8C7AD6E0AF43C20AA9F19A95ECCDD3FD32C872F78B320B816BB21C7A0
6D02F9F2CB4F611E699A0CF90B58266F47590AE53811EEE69E7F7CE2FC8F544A6BBC6D10334F
0577314E4049F12408818E24AC5CF71D6FFEA42CEA3754969D026F978897E3D044CB7E101180
5398617E1F4F8AFE15ECA1CB7DAF2B0D829F0774FD77615BCCD18B6E9870F76DF41310A86735
B20150D15CCC5686326957B6CD44FA8C0EC7836F009273C98195350B61C3B705CF214BAC5609
7E55AAC9C1CBB6A785CFDBA67ED98B47C8001AEB8D096541192348D10A07F04E25480CB3ADF2
6F571BF82F61B55894784A38214B023DDF032FF11C4E895EA6CCE7E28D247DFEAF5F727B2FEE
7D6601DCED60CAF42E3CBD93BDAA5A995564B19F5D6745BA563C6A399C20EA8A3885A400CABC
8EC401D26741DA2A5E194A08B9EB06F449E7BBB21DD01562E38B995CA4CC1498705924AA4B75
0BCABD010B9689E07D3300BBA5FAE5CFA1C140EB0F23B29ECAAD60C12F5ADBB1219464658A24
2D22F62F4799F3AA9289016E2F852E5FDA0D80CDF1328CC28B74D5021E34B1EDA20B7D95FEBB
C9BC4DE6C9A66B7084878CD55CA2B52724CE844FB003B3FA29A6C78D0809E08ACA109E623812
371529D811FE8DCF234B1139C10675D0FDADDD8E4BC55F58CD0A7F0C2E0AF967D1840ECDAA70
76430F43E109E2396EB44B18D2CBD2EE3E4E59138F187C193A36B59581017EB41F6F470F798A
C653D98A3F027FB3C0DFC7F653C4B2618C2129FC057646FC154DD34522A373AAE7210BC6B0F6
906BA732572AA55E0F923D4E37F3F6E86DF9C5167ACA91863E0C0AAD7DCB54445D8F65181584
64F957AD51352822AF90EE423361427C08599CEC36A25C66B5CEC3CBC94857083DB9A87E24C9
BFB9FF931ECEEEC92240491F3A4433C9CAD2F759AA681FABC488BF9941B623BBA1894E1E80C9
E60B0669E21762081754AF64E67DAB39BD6493A086A0D855049200D0DCD3469BD660AE445312
AF3F982491D432CE9E7F8A8388D6B82E21DD5BADBA07860A412906D9CF6B2021F53E97170D2A
98DD4B235CF6E02E15E4632DA8B2982686C859CD0C0AFF50A91EC59D8DE40FBA59E649B7EAF0
21C9A1577B99ED111AD3F5268ADF34D21F224733BF4BCD6CAF6A0283088315767709C2F80419
1736007D82DB10DB5C0354FCD12896A385A0C4D8798883BF0F78DEC7D2985BB06334BE5E4B18
7B5088C8C2F01D296094C205CD328B332F06CB1D75D6E7DA38FA64F289F025623C4757F788D4
A8BE8C2DFEBC52AA84C58DF32DF025F2F0CFC845F1E228CCDA11D120D5902D659F57C391C980
F1301286801532A92F8C27676F8205AC4585D451BC414FFEF8119CFC9E4DF83789C80F498144
25E222DA5C46B86E23B79E1EAAA87CDC58DA787D08E9D866BFE134885DE57728721D0C1D8775
833703A00E6CF60254639062BFE87AD332D3A7A0E96E7E76658EC1F63BDBB216A420C195C756
51DA07618741C137564329911170C41B779BD80C3929F9837BF7896E6CF7B8AA72CE318EC599
38BAD9AEFD6D4A9982B39AE0DDF9196C19236D6639CEFAAFE61A83EECB4DC34CB16CBBF7A8B0
AA63A93BCC65D9C3C9A480A3F9F874FD9FF9072B96D25635B98E9B51FEF7B6D41EBB33B02488
6A2FE371FB32C0EDD78339F45FF83A99D8086A4FEAB6BF8FCC1873513B668D34169DF1C8F9C0
D84DF470333C52D38D8EA64D2CC512E82417333F5A504E205C9AA3BB190E217B24D8E3E1156C
3ADFEAB88E6FADED7121753FB3BADCEAA52365A83BC5709C00C2C56AA0A1132E79FBE53FD105
8C039F6F41E138D3F1DC0F83E8CF69F15D3775F9D99BA7D58E1D1DBF3CD0DFC3AC3553DE4F83
86C423CE446FF364C55E6B6149E3BEAF384D3866D61CC859C37EE64EE955FC91DDCB2EB1BD48
D414E301DA3EB1FF856DC6F0AF3CDF593FFB1D75B7E6EBAA8DB1DB976DB107CC0DDCEF3B4284
77C4EA1865BCA1F6AEEC66FD7FFB817BA3F3E5203A489DB5CE0BD375F2961311E52EE0AD5A67
CF9E8DDFFA80D228F51DD1946BC91FECC6BF99325B7A630C92E6681B83C0D25F6C48DE39D00C
3FAEFD0762420C8BCB3F8DF24AAF1E603D96590A562F0E1E1406E105C00E91D01425D5662D76
50E5C62B1D57315DFCB030C1ACBC0EFF103EE84C1F86B28969D91ACABCCAA6D73EA0A43E6FC2
3260314B2B3CF21DC735C83D5F2ADD54E1AB48AB6A476458459B9FAA8AB24C7A0D4257BF9455
DCC516B2D79BD9003CE291E5EC4114DD01F92FFF6A1F477E92A2178FA3F74C692DD8847F0458
22412C16385D1D583FC074572EE4C13474E18E6111E1DC10CA2B288BFE32D8695BDCA2BDC3A0
89D149B5FF43A5899092528AF4FC8CB2C05765803384FBBEB547814072CA5D23FB0C7E13E0EE
506FB05614804C9235E227B68A810C26E52155CA80697497E735E5A2A1EB82CE489F0FF649E1
420FDC81414A9F8884256117EE33C4DC6D4C9DF5D65AEFE04E4599D250F1CBB12D4C708AB5B6
E2E4E32593671687254B52D2B5E9EB8391B8ECA5ECFFBA374825FFC8C1539DA1C3FFCDBA287C
2E7CE7229052C5221E96CE242C6FB9252DA51437DBE5B0E249CC7CAEF567B0DEB1CCE0CCB4F1
5379984DA79980272407D1A34BBC4EC53BDDC2F49070443798AA3FD3EBD20CD799B140951DE2
A773CB615DB8BAD18927BCE37704DAE151453E24575614894D6C8B1F170F8E0F2580A597FD8D
A8DACF91748E869FB24E8055708319D9934369DF9AE3126730EDACA10788DA4AEAF192694BE7
EAA6EE75190A891A6D72608255F664CD875EA6EC4BE7BC1F20E477B05B796968683FBD7AE8B6
C8AC8D17F544269DAEB43889C77F9C1F2C6FCB3ED01D2CCDE6291D2D5B0FD90AEA9E033F3098
35DD6CDB0D40BBC1DC21C999D85DCAA2DB22D3DA0B72579C472B64FECFC60427CAF54A37626F
84BDFBB642ADC2BA872CAAE3DD3F8CE038FEDB52E9B74B1BA5251AAC4212AC6C2E4F198E7E55
ADA04899F7D389DA90505C9035522BA00D6D2FFAF853F86A9DDB040B02A24254A5CF4FB87B91
A6DAD89E3C88ABF88C2FE052A0F8E65E84B5F498EB348F45CBE1BB1A6E0C61B7439EBB86E8A6
A9A57D7712D841F890ABC9E21938DCB304264B65F9BF5B011339D3E7F36EE0F6A58C04B182FA
C9FE0FA1B6D2A8C2061EA4C61D5BC1DF3F9F9E1318FFAB1232CE2082482D5C59CC42509DE0E2
053B2266CB1372CB586F2D6E312E462C1DA95403A2D81C0362AC9FF604F1DCD1A8A7C974BE46
0FE926DB168903582538BC2E1C98B3C1BB4B76759C688390189001CD3E893B92C48FBE6ED099
35AC6BA6CEC26258048D5FE9D3C2E8597191D5595CC77C9A001A2CD507A7342F6EAC63345FB9
4488C48EA078AE04FC4EDDA7723D0A7211C470D8A67DA6BDA246210367180C289F32AFC59DB5
3B92AF282CC7B4805E01A335305FF8799E6F5D31370B81E3BF1E95C87EB2BF1B8B2CC922AB53
A4D492A503749DCC0D66460AC9E3403B5B2DB2390F9012F94DE3CEAB2B97B6066FCD9A90EBDD
5F9D3858EB85B2187E361551191854D3F30C1480D41D8D4C2A566543F0899045C9CF100E0410
A547C334A971D632D205BEE44DD8DCA890E42EAD5D411DD561C6FF95462DD3D80B563AF3E4DB
ECC78C5F01C2E39E5FD90FFF170CA1425E199C56D514307AD0E7045966D0AA172E9ABD50687C
2E77D136D55C930A5F6795F26CEDE2FFA3C7FCD86FB28583E23251A02FC8F3FD7F42EF5D6BE6
D9829E3541E1D4FC806643752AE8F72873420E6583D7123A0ECEBB89B7BBFB5EC661A7354258
28DB16A93086B66EA21C1F9D73A2C9329EEEE9A04BFA98748B83AD9F1311B346453C7D767415
A1CE767F96EBA16FE954F7140899FB85863C66D967963173F28ACF22DFA68D845B335AA41B01
736FD0B8F414B68FDF4BFD0903077852DFDD95096988F673C9485EDFA786A13AA33A23B8514A
FD360295B571042A1CBFDD1EB0A2DB0E33440C8A642F0816EB348AB958CBE45ACF1FDC13F63B
94D92E5823ABBAA87114E507F50E8C83D699EEEF0FD0E044A32DA4F357416B090A4B50F3A356
E97C9A6B29A27AF683FA99F9857B5CC052BDC6A2EBC56A2E6B4A3288174AC67D658FA67A1C8E
D40F502342D66C47D001FA20F7ADABAECB829A5FCD9CBE1335D6F9B56B5C2C48CD9C770990B0
C55A7FCD8021E4A3ED14BA64DA93A13C11614D46DE4EAD6E45EDC6EF05F3FD415CD634BBDBE0
558A912A226DB0D6D44BC1B73C1C1C473C15A44F8FA2DBEB41C31A75013F4563A78630C5056C
DF7B8E9498A551916F7BB2A9DD003C5F148BF9E96274C70BFB86AA7F83EECFAEA9FFD7D5BA9A
A3418CD73FA083C51436C103CE37C0062CADAC1A532AE8740238085A010794D17979380A0207
6AEE9A89A158D334C1FB8CE7C6CF24F594BEB5AA0DB95C45E1F03624142465ED378B5A81CF08
A783DA8249C16F678F687154DCE0950E7785D16ED4BF344357F2D1E63B28BBB957C949720CDD
EFE00DDD18ED620C0421D991530354FF5D72E82D442FDC5309B439FFD7C69B0415936A69513C
9A1559A922273A243F909EE375DCE155A13A9ADEE2A117ECA7800000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndProcSet
%%BeginProcSet: sfrm1000.pfb 0 0
%!FontType1-1.0: SFRM1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1000, tcrm1000, larm1000, lbrm1000, lcrm1000, rxrm1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/UniqueID 5124486 def
/FontBBox{-189 -321 1456 937}readonly def
currentdict end
currentfile eexec

D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B1169C468645FE4
ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CBCC8C21885DD61AF8A523AA67
7EAEDDFA51A1F9B1885EEE0456196D634E04EF89F17499DAD982502ACC349B9EEAAE4A71A73D
1147318C60A8BAC10510DE90D8D3F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8
E1D90287A083E00CEF25195F68A2A98170E48759F267FE330B57DF626EBF73D2779A4A6B462A
E6E519E5878939A488F2FE1094A76925CD24DAD4573AD3CF34E426708CF06E7EBFFCBEF55954
08106E2189F418D17AD510ED5B6A528E8902AA3A5F0FF52AE3DEAB0732F06B63E28BB88229E0
46F4FF8A356BBDDE82DF2A197F2E26CA00D5594725A183A89A36487EAAE1AC312C929CDCE507
22FA6C596C261E4D78D6C6ABF77F5CCE0E410ED74287A0F201140F8D9674A7AC585D3CBC72CC
B824F9E1CEBD08AEDB3AA4015CADF471F7ABD9B0F0AF73A8274FD441BC1988A61799856E4770
155341D6516CD0E25BFA59B67AB7E0571DF3F5BA70AB52137D9E6A79EFADBE70CA05AC8D991D
0895C8FFC747FBC0E9A7212BAE6560B9E2B64FFCC58112E64A3B4CF7ECF7595F51C34AD1342F
5678FE1E62EC5A389CF04E82B5F832914B91F921F30A7E32CA3919F57A2D9DE844CAAAC0DC75
1C255C9916595E8C9532E7A0A84A0AEFCACD83EDE059FD06EEE9951473180B517F25F609F347
DBA012AE9F004DC3C771777BBE812787C3C50315D67254A384EB65F260943C6E16B2CDC64E15
EEEDC67C55448ADE9981A6867405E46222CACCEF79F9DC8674268BBBE1EFEC2187A75FB7FBF8
CB2DB2134848DEA2F9CED443DCF561E7272B38F830871B2A5196A787924EF5564B7E9093ADD4
14ACBC10147944D216D351CC744DBC13B0749FD0A129D7C479837FEC7FDDECB3FF4166FE2958
14B8EF751B79196DF6FB2F28CA8CB00807F682E51F37B8DBFA6963E77ACF4A16586D58C87B0F
882FD7BAD0A5173202958267F5676D66D0511364EB31556C37BA1973151C35046863FB4F3F5E
6434479279EE110A574F186803F47B3DFFCE8A700758EF5B1454D743C31F70320373B12B3FA6
1818D4DED23D33423BB468C1610787ED614AA483E565C583897348E103F9B8D3BBE295EE9C60
642320A6556B0473D5AB3E00227B644687EA1B5D62766532EBF8E3C6E105F157863766F3432D
5D3760D2C764FAF318A1D8123C7525E547C51653FAA26A3C6F505D45E4176181FAACC2DDA3BF
48A309DC073313D1B1337F218A61D3698E5F7C9BA435D0E2C9B5F4250A35F299B4D3BAAA326A
7B9F5F106DF703503F712BA122023FFFEDACBA37491867E8C6B76F74DBC840439131930D115F
E60DDB8F1546295F52DBF90CF71131977ACCF48D05C33FD720FA49C5E4DFD9E182073288A27C
343CE18592EA544AB2F2B4BC8689DDE7E117B05C3275BC13ADFDD5729A3F4FC26686F6B7C626
F9AFFC0F65DAE3EDBF98B1D356C5886057C0CB1F26AF51C0E18E5B8559C8DEC867F984586CDF
1519C73463A178488C6395D0A2F85942109BD54F294D8948993ACCF252AB3A89AB3A449E4ADE
2B7FCEB68054983D0B3ECF9A295388E1F124D1F0F7EFB401AC7F2018D6524A30DB697A40B7F5
A097EFDAF490F11FFD92D7493B6E0316D75F193990F9659D7467573A7F9BAD4D5132E07D90B7
4FFF6A79FB10B4569E74D8F32D8207C25DA52B3B0C08BF4C28A548457AD4A9EB9E0A4FAE7573
A56F077D85A812242C3E8E81A15CA6D4E30BDFFF876FC83B206EC90302AA4EDC4D309529F24E
B9BCB3E0D7C52B50EF4AB807E21AE2695EA0BC2049B7D0FDCFE7292CC4AB461725626568364D
AE6371A64AE166E6A011AF174BD2C3C39A40CED969B827FCF5106B8622DFDF486EC33114CCAD
B18BE0653E9B65AE589F4A39C1EA1E86A44610B5414C7F4146500292C8A10A924FE161B396B1
076FC453EB05123C989D3D9582DC18E8255762BDF75303EBD82EF6F1BC4B4588F83F14CB73E9
361492DCA99C40033F477B4AB9D53EA3E6ABE8B2B052B816C9CA2033CE401D619D7A647F4016
A4082DE0C17F637020F28CCEC5EDBF2FDE985B4B625C8321C7E59B115DB543451BB9FCB7B78B
DF28C3CCE59998D69F79855B447E928DA59DF558BD563342022F42D9CFB2AE448FC27C001C3D
7264327A0B5A30E31E067769C904AFA0611B1F83099F13680310BFBA7CFDE13064075A8942EB
C7658B7C28CEF5AEEC555BC60B311AD137EF8A9AB1358A7829876A64386E87E8E1FB6C8A5902
06CF0144657F22FC768388923926281738E35444059B2E435CCD75CC04D972B66D79C82CE960
9ACF51AF60E2A28A34F9D09BCA0EAD164918688A78CB4FC87C1682D0F529A3F27C0D9B2F3CD6
11A55799B1351A73900019557C205B1427CC40870D2017DC95E44B3CDEAC227F5F783714F9A0
95B9A92CF8E045C0CD302D95CDEB4639A73E164A53A38FB13745785073DE7489CCCD84E33195
3C40FD2DD2DAB0220A57CDF09B975A160BECDDB238242A9E21F89E0488D6EC33D547A179615B
C624562959F98D51C02F93A9D2644464D68600464FEA3CA81B477032929E2CD508B81DDDF358
7F27526E2767823B7DA0F619F0AC40532BBF1A01AF043092A72B1A828BDC00BD3BC340616989
81A6BD73D907E41ADF18659F5DEC133BC103E4BA25952AF2B3A83F5B1629D572DB969DB777E2
245B088143F1AFC2BBEB4F3E58F2C98C455D5327110C5A4E806CC4E12497CA4B909C86C2B000
E92663C41E1E057807693B06038647F103E7842E74E32DB42E024D8F68364DAE6371A0914362
1219B6720E2989E7F65376D449720CC7363ECC0FC4CC0B367B4C43A8A8D074C135EE93472296
4CD5552033540A552C1426C6FFBDAB6F3B6C9E81BA2BBAB3555B2650080682EAD6AE0D124FED
F20151EF3D3A99480BAD12CBCAE5A458BA192E141233CD880ACBBB9ADC4D8C1F8255F64A6322
95DDACAA653EFD49AFBB19BED3E338C9B744BD98DE80DB90577C0947BED3D6610F6993E3814C
F75834BDBB99BF556FB97E7C6D5E9F6B5245C35715C7408E3E8358946E65C07330D5C28637EE
F4C9299C2C876DE91B58040993932C9E0DCDD2E364BD674F3C6A05CCFA41D9329D3A27FC3AE8
DBE7B5247DF720A8DAF476A00A94548441B10307802B3D97BBA36AF32C8E5F16F4CAB7835E59
B14A954D5AAFEF35500290A3DD39A796687B073E41A0083FDB8C39B988EF68E4D01565DCE8C7
F8B077C2DD567C145F61475E1AE0C4A9E06C9CC31E18FFFE4109B4D1042E017E8214F30327AC
606E51C99C7784F454DC37A84F573C17293A76D7591E7B1CC99629E8C77151BFFCB6168FADA6
EFE9B7241FD59B5A7363EA95A3DC94B4197916FC6D13F39EE53D6C18C9C67420CA97C07499F9
A7077301FDBD8C786CD8AFE5B4FE2C02D0469D4FDF87EEBF1C6E955AD0935651810EE4BF354E
82ED4395DA4C8F255B22167DF08292E36DC443CBBCF26E5DF41E1D8A858B5DFE404E72C88EF8
D8C084B5FBA14749162FED197C64A3A0AEDA5F3EC6B6554D617F201A9A8109A7298C441DE8D6
F98E845025DE74A79F3F46254A5ED6A0951DED96C60E76FA289F54E59B7F7C66A61A07F83D53
1D7D9E463D4C9F039FE061B6C5F0C963C9112EE3B80128A505CC87554DF700CF5B17DB055E4F
3D182DF0A79151DCCC2C05937776BCD72D25719F94B6AF18E8E5E503401C0CE6A08C83234951
CE0EEC664C89D5F80C91502A14E356ED63EC388DFFCFACDFEFE2C775A9E06D01C8BBC0C142BA
245673BF7ADD70F9ABACA1EC5AE4CC1BB18266D60A24C23DF65B85374A2EA884036139A0A087
F4ACB5622B6FB0E612FFABC9AD380A6DC17B160133231DE401E714A8743D55C3B699B8DA62FF
7AC71B0C224B6477A00B8AA27B2A0CE4AAD408519A0B805B88F6A94D29B97C251459482F1F45
A93E83ECB583B64252F1C9F17F298E6579E394A60F4204B7F972DBCE8CF39A0C7FA23FDF5014
77E2C4486458BB17F882EA54A9C4EF50B3DB19C975B4A21E504BA0CE1BAD0170D2BABA1E95C2
924BB3B700B59E4D839109D40112D849FF8BD742D11BFEEA1852F240AD482E4E97656BB9B4F6
BC438198F9FE22D14AECE0A850E5B837B7403EABDC5AC1D9961954EAFC5D3CB5B6842266A5E0
26E1A82B044B693275F986430A71F4EDC19C0300EF0D3B67FE98B72FB1B444BFD0A45F0AB18F
D7CAB3096FC11F690EF3C487B1E05966365B269EA0355562E3F50166F4420B3D8FE3935D04BB
3878B64B77379B8B3A260AA7095B0F5610A5037BF6AE29273EE91BA12B2635A181B58F29EE51
B80A9D1A41B88A049E16F3562CE9E962C3D0E698D8253EA5E5117BB738714C396988CC73EAF4
F60312254F5C1F303C3A4C01850BD31A8B4C780104F32CCBD547E26069A9C244971DA6805EB7
A46FB37466FC75B53AA7285727B5E1F8F22D2BC90E9DA65C58C897BC9EB4C9E678F8B850C2DE
336DE08D0C05A9672D2E37303D3CEFBDD62C94FC38C98C54E907510CC9E6D35F9942ABA75F3F
4527426997D00028C987C0174E6A0824C9E292F4E762B75B7B4DD661127A1CBDC2BB93FD7D9C
3773D5C96600E3E18182E8B3D44EA76C17305D9C0288353ADE9FAB32FA5CD4CAE9E037289985
CAA2833BFA84CC9E96FE38E13BAFF397113E5F869765CEE1FE100A2F5F4F882149633DF4BAFA
DDD758AB6F1A46A2C4E0F568B8D27B5956523A62213A68884283067B5C7E75484480C09EA155
FDF25B175437B0B286B4A72A1995231E5934F381FBD17D091658F4EFB69C564F67D93D6A6882
0F65576D467D451A5EA31217569E6CC3D93A02F5FBE0AB6A278CBB6C1C59843869A202232A5B
B438642E42F635532372677BFEE8B57446C1FDB851D3F9708EB07919B9A2B7C9CA5022E2D14B
DE21D3DB83951C4BA1CE515421618967F27C8D8DCBD373845C8BA9AAA8BD6E10BD60B0A8C794
4F1BA5E6CB472209E0082C05D82525728629C88879B737331825E7FABF14AA2F33B092B4E944
F3E14170B7AE9A190F2C07A4A6480573231A9ADD48022B2478E0041E7E81C9038D6356FFBA06
DAD25D74D84CB7CF1125E51A29AD25FD58779E5AFE196211C6D288042BC5A9BD76C5F90983B3
41E0A68E34A5331CA698A994B5C81BF8F7B314AD57AA1113ED8F39B314AC2D98DE5430408A8F
2337378139D996BA8E147D8E5498BD9CD07C0D42728C7104A57395F98E10CEF893DCA76D6812
84DC8DAB8A4EC4AC74643636357747DFC371A2C17BE26DC7976E47523A9C1F24896835AD0522
489F8ACE5B022D9E5BE8C72A8F042F89CF31E8BC9D9E5B501E12C13E5321A8F76A0B9A1996A0
D39ADFD18C0FE041BBB15956080FB3B53F2CC1E6AA827D412FA92DA3003B9218047701668456
F7004A91282E1CEC66D375FC634E57DFE7C45155CB5D38E9267B13A542CD1F735DBCB549A207
A1F785DA4970B13DEF0C436077B386918F3F573933EB7C1488CAB51C798BF24B49930BBC5EFF
47A51AD3CB45E7635073B64FA6F3FC4792B390F4D3FF5DA16A5DC16B824756752C87A6304249
4BCB11A63C281DBEDB9BAC5D52875FEFF66493A56A4D788487BA1D9C31E69D55B6B7EE139D6E
53747A2A8D21C134D60D98B315A7A6DCA9F32425B8CF8672FC59BF467B6F747781EBEBECCA48
50969106CE12E7425AB46052350D28C87AF68C9BC47C035AF2B6C01329B246AC7FDC883E15A2
09E7E69261140E3805A243EA848AEE28AC2217875FABFAA991A89A8AF48808724DA301579D26
C231610AB97A717DCAF89691FAD1732C11795AF9456B65996C366DD4C314B2C388119B958AB4
F7E2593E6A6E46AFFB61238D7E5C7169143E515C7CE14644E33E3A9014ADEA090090DF915C00
6B9FFAAE1764BE813367C198A298F819F4B68049875C5D04BF88B7D6CB15BC6AB82D700AA65F
D43904F15686AA9CA4A5617C67E66A3EC17E1FAD3CCADF6DDD6E6906461343BD81ABBEABEAEF
2D900F47A9254B90C43D0C8DCEE796037FE9EDA65D82CAF35015FA19A6504D608E218C87A595
0ED05E3442082EF865B4256568063C872A3D182DB017F1B90C44D507DB46F41AB4C25D35BCBB
F41AA50E49DA1424320FFA06658B4008AB39822312D3A0408B8569B4D125FC3B7DE3D65C7137
079140567413FE3E936EFCE4EABA0EA396863C6D202E206077049949C2C97A8605F45AB430C9
6E1D6B88B8F482529422824D065C00106B7FA43F3F45F45FCE2420259BF25DC3C2A756A0B195
8A8ADF0FB213D3EA80BFA9A6CB3DA46D29BF9A7077AB632D07B0903AE522BCFAEE17B64331ED
0F8EAE9B3816E7BDB9E23BCF99CA357833A0CF88AEAAB72AA72DD77501D6E46B1A6109988919
4A0CD59B035A5221621884DA1F323D0211BAEE6931A2BFCC260BF3204A17103956EAE96323BA
248C8DDE16B337425EB51F2BB65067F44A95E4609C518276FA0A4222A14E71C30FB77993FB18
FE050BE86D647942A14A5099AA896C850FD078A1E1911315A688EBCD7AED9D38915DECD390B4
693DA2DB375470417D2F9EC8F17F0895E2B3EDCF137B8FACAD3B81AE5568F102DBEE9C1E09DA
E8FAB63207DF97584EE02BA7B69EA1BE414FBAF034CCD03F532B2D3D7897086E66866E90C01E
300FE573C5A5FB5EBCB685A94D873E9AFD34DECBECA135320E37286CC11DA292C262786C2270
5DC22B4ABC6F6F24762C4382F21C586BD322EB1DF42FFAAE8DB6C4DCE277A0ADF8552C3E5AE5
5BA003385AFC76D317110F97D9D1784D48BBB232269ECDC91CDFC5EE5728E26F18E15CBAF306
75AE5080BC4972CFE7238BDE6EC3D1E5ED399C397631915839C468383F874A2F85ED037E1D14
BC5CAC9AB89C18017ABF07EEA531848EA16608C23B31383CB6677D541AD26F885CBFBFF1887C
F1FC13091CB8F0F767E16EED4B93093FB9842205CC91E80257C0566EA3C791E84382782DE489
53E0999F7E7DEEC86962438572903A770022E56B8452939BD09C7430C96F398EDD0A033DCF8B
D2B78F46DD73FF0E20D6616DF71EC934EBE74B0A01DF4504DBBCDD470A4AA2BA9A12CF21DA46
1B1145BACCD446E1D63632490186FE8B5017A03617D749F5BA72605181176BB7DDE9C048C9EC
0D4A797FB10A5710D516F4543A22660454A242C6ED4F1A2DB1BA4011F4FDFFA8150E884C2A48
F65D1312B170097192DC61B7806DCED01AB4816634C3E910D629BDDF0DE229AC189A147634F4
432818567669E072060175B77DC8B47C185CF7A4BA2B876510FC8730396E03E917CFF03067F0
8AF74181B38C625CAC4A2E427257D2C40787FB7432FCA5FF1CFA29FB350C8734BAAE9BF5AA3B
8040FFE6B561893ED525430390636AA7FF4D9613A7BB932E0935A9C863382C4E03B3E562CE54
B9FF6415EE850756CDFD1F89B762A6B0368702DF97E0412F57901BE78A8FE69844ABAA2243C9
F0FF64DF7B405E91CE9F232E015A92A5E89E796F63E6F46F886BC4575C208B354AE627A2301B
1FE09CFF31E25E38E75618BCA0E7E5AB62B7301E03E8C294F4237C5E6C989C28D1A39D92CD35
AB18307D6829BED50C4764DD929FD27E1FB6FEBEF8709C7F87314AE8493CEB7AA58DE9680D77
59426B667C6D6BC5CD9592FDAB9839DB8B1D710551B7B407D978E5BC714441A7350FF3CC5990
A998A73421A09AA59D9DEF5A1CF3170151AF2B0CE9F573870C915D9C087243F85EB86075607E
F2E67366BA80E85188036855059333840F6BC57781AEDAE3681052475F29A5573F6FACEB3790
0E8180C34C8828E8D02887C1278D681AE335D53477F91DC7BE4C83A070BEEF242987250174C2
DDF2AFDC1CD938D9969505F1560028739A049F903C60869AB411696DC1952F0EED9FEFD7A781
D1082BDEB30CA7BA1492C052F7B419FE68FC2C492A4BD8D79625FCDA105772D4F2128F4D3094
195496EE929685355ED7835959956C831BCA9C1214AD01C6655292FD773C9E6921DC97A25750
55C4F95E0B42D015B5015FAC714F7B45F3F3A95D70AF0903A3C8925509654A916D1151FC36A9
17CFBEA55D37277E3EA70B41E1F7820EC0A24D1D36B7576B66FB8B8979C9B5EAA32E6D5EA66F
CAB18094E53CF02265BBBAC40CE741563E529AB3BC04B5576FE2E097EC2606DCF3DCCA60654E
6188E1925C5A9E2CC09B2332181B278DBA25E21BA9E1FBC4BFAD6EDD8B068C76E4521EF45EE2
EE267F821E7C20A784F7AD3327B660F779886EAD95FF50D0D58FC3F719A8EC53A5557260AA13
CE321C024C3A02F806E2E5DDFE3693B635BE33ABADB2E85D36381EA3E12A177C7B27F9DD698A
8417B7D154E6F83BAED620F29BA5DD6A4956C4E9B23EB6AE45249827D7B0C795C96917148D20
87A486C05A5E63C80F46D5FE7DB78C2FDB7FAB81A290702E9F7BE3D10E522D2100613B10FC1C
1847D32CEDCEE1B1B08B27A1536B78B1790033EBA68AA72F30E59895B04B1583B8214F8CC02D
59B275BB16CB10B4BC9D5D9A67EE8CC824AB34397B5323AC88AB91F7699FE0919A3040C92FD4
0F7C974222C89EAADE55A336CB187CA8EDC2BDF4ED8E8019F9BAACBB59012E2DCDB82B118B95
B4D03EA577D952FF2761C2AA6286AC239CCF9F25E3F3CADD693A5E3C825D60C51905E3C14309
D0263DC5E48D48819CEF1B325F62D5DE93FB6314FBC50EEE0FC0230CCB1482633855DA8C5369
B614EC00BF22D2FDF6C7D794A77C077946FFFDA9E3EE28EB2F291937EF0216ED5528F6E82635
BA5158A450EB9F07229D802C102C8AC42041EAEF019D7679E578E8FE2AE2492D31DE96390DF4
283E6DCE947335CBE784BF820940D0A0AF11293BFF490F63CD2D0B8DEB754E2346877976C12B
B90AF7F6E6FF5DA57149EAC5981E1D5DC11DEF113731EAAA772B92B362255D193A946728C00F
F09E5DC02AB7BE4399FC050C004A1226D17F4EDC5FACEF493B08BD9384BA382EF8E750681620
F4DE379EC574D8A28503D3F2BF2224F925F3A8DCC6B18FDF6E33E9A131D707ADCEFBECD73EC5
C376BD5B7EC6A5DF00DF9ED46269505DE2F7F255BC12ECECBC8CDEA6627280CCDB1AC64AB32B
520C8B4F0FC69D05F2C486DBDFDB226C3199B1D61231D56BF87BDEC8F0EADA9A6A7A1BC4BCC8
5D637E0CF320FD66A087B5BC1FA63B2CDD04F4117C308417D43C472CC04448E4B250EC161E4E
BB80718ED336250ED21A6932459483915A79DABE52DCBDBE90F00AC36F7B53027232C1335497
B33A51D40051A20D9702C5B9627428074CE162621E92330FB7FFAE0D6107CDED5D42B7222247
7919F16489677B31D3CFAFF2D4C11B618128ED33F1A7F90007889F23C35766D9863BDE73B102
52DC8E088A09232F5516286D0A9C9408B09541BD4DE9BFA8E382F36998876C081461D346861A
20074C2A4B60F40A929AF3AA782DE5A7884B7DED9956FF7812608388C5140D93ACBB9EEFD51A
0A56C9847F231CA27C66E6D21BB0A083C8B77533D6CCB80798D95D2F9924241E58B93DAEA942
AF0278C91B053EA4E37123F993A65747074DBCCA06BF1C614DB822831028214A4F76E984C67D
57A23D2953D2180AA8CDA735B70151E5213805643BA34D852093998ECF5C28052F128062DDC1
ECFA14C608B4DDD7081B8E00A8148064E46CACD7CF37BA4A05C34CE42E9E3A7E64E62E856981
6D280FCA442A032F7F51CE25E9495CA85EDD6EADEE58F4131636CE2AC80965355A9B16D976B6
422A9A668546A7630D187414F052B5FEB02219421506E05A79B67CA16AF88DF1AFCCF85E1A4A
B6D089A2C3262CDE3506772D516169FB0C68E1C69A546FD5C9118D87732526EF2BAB8B660305
BE2A49BB108CEF010FCCE16C49D5B65EAD5608C6E0239C787AD7D62E060FCBA838A4D495279E
90E2AEC1A14BBDEF36BCED90285EBA40A397E15B21FC658A85F31059F1FAF9FA820BB87B14E7
382C60BB9D749FCB02A3A4A6015A52DFAA8FEF04029395D2E96FB2C4AFCEBBC1BD5D0C0A7DA7
4FCA67734EC3A33B17CEE9E7745FA637AFCF5544A62293A30BC1D2213979D7BB574F34A166C7
57BF2912FE0A01BDF0FE272B15F19F8A04688964B24C14F0ED76AD5EEC3048E769725B668ABB
EF4EF01F0B1B312AC8AA4208BA0B3E816EA3CEB0C54F6D19F5C01AFC3DCCA088F6C95D9E72B1
3D6A83C36C8B0AB7364BC3C8794BDB0C0474DE0529481EE2FAC5F8ECCFBCA4ADFF8595901066
A7A12F2CAE48CBB9A48922C10FB99F32BDD81BC50BB18CB2AE1C9041799A7D5223F375A3F1BA
2271838E564A9DA184E99F93F5D4C34C8D1DF1B41283C859A2343BC39BBB5B93A2637C335F48
08A44C782AFAC56389C60D2A47CD06C62EF8F71B410B72EDAE99E725ABE897F0E35D84431174
6D0DE77CFB8BF7CA88DFDBCCBC978D58D63C672FBB8A10193B0A476052D830EC2CA1B31D2557
6205F9F28C1F1C53B187FF40272C24FBDB68DAA67C513CA4CE0142F2C1652A3033D8EE89DB31
4170F36DB10F48FC5986C96CFAFE37B6CBE009DC42832C04D7211A619DB4C0F747F218004DD4
E477F8CFF31BFD71A1C98233F6E160D1E0EE6764C6D0631AFF2C5ED261337FF97D7E591D7947
341EF67A4CF229CB59B1088B2052A0498329900CCD837E9953D32D6358BD3EAF3FBB0FE969FC
9137A6B221FAB4FCC37EA97BF4ED6108BF6854435A3877EE353E85EE82C241E239E49024BE42
1F6C7B6AA6CAD4C0024E40A9EEF767E264BA3BAF0F45484F9EC7EDC9E762ABFA787E642B6B8B
37D4BC66DE3CD10437BCFBEDFB91491B08704C6A2A0FEA4AF893E845D64413E49F62DE8D1ABD
0449C8023D38A26E005A02414C5CEAD2E7761676EC03CD4627B1926C2A5979B7321A69192F96
579E239DE1C3242400939E1C73F86A3A12B7E9F1CE123DC8A338966CC31B0325FE9238D7DF8E
0F9DE2B816D86238B7E5DB5F0A6A1A9B5835816B702D577EBFF521665AA4D18BC56533869D86
F1618E318D1623B210FACF2800DCCAB0A9C56F8A50B67DBEB422E1809A83FEE0223197345159
43BE45A6E8450EB4217B614DB4B812B362812FA2A8A8CCC3E6FB3DB6A70F5596054F94A6A6CB
E16B0175B5F9643C9B4D17DE75E9975FE2FC27B890C839D72BFF71F2771BE795D564898AABD3
06C8DC4ED9E86DB24F7D7238A5DECBECD3A115CB87A0A5C64BF974216E040B8D543A28FD414D
9FD535B587E8F125FBB55A8B48E6CE903753C1F5189409068CE066960D783A47C4FB34A96515
08BAD1EE7D3694B0FB93243291F4374CD9C6560DB1577C2355AD4F7E20E1C57215AD6BE41E15
A5FC21D684AF84AB523B0EFD3BE81FE57E5F0BC38480E80A12C15A4703990392C923A50E54EA
B281059537A7326628D40F5F0473F668016C80EC29F46CDBB95923ABF553C0D38CD5A963AF70
D36045BA2FEE00D00BBD611BF049ABC31BA9D5FA19448E04C7F1552E9B16777F4A69D74CDD43
7C9D38BBD713808543DD5B3DD4C3E93796EC4E79A69AAA639C94561762A739293F0ACC77BCA8
91132027D93395AE30F7552D1ECCA55B99F961F74902AC772533187B819C2F6073C05C61C3CF
C29AA1C7C0D892A3C7B200BF206BA838CBE9A8CA67CE1EFC903C8735C06748529C97E74BC1C2
9C2090FD842D3EB7141AF0A58E5CBDE7B1B906A910EAF19A9689F523E6861D00E61F72A87DD3
836D1388550D4C50BDFBCA6DF99FB80268B6C93D8193C5E291E38A67E31689E8374877D42AFA
BA3B48C7E515AAFCD45E2806E0703B3D6E178BBED56958014163A220B109F62094EBC5933F07
DA0E073826A264154BAF66587D0F331864C8623A64838B1651A5F49B2388292CCFF1A2223A67
31190FF9C61D49EE39E783623BA2C01E335F559179182BE805CEEAF660BC1E1B543A5194257E
1E8FBE6A0DB8D286BA485ED34EF5F48C7CE2C778E546C05024063556C8D1B49232D8B57A7F3C
9C33C7709539A5A7F234CCAC000BA518452A65CD49DD86CCBB6F6E5B609E675A8A361E756D4E
AAE2BF45AED6748FF1783DC42D7706FAC6D4DB8C916D30E2DE601CB42C774F3BB763B4F0347B
27755E920679F35C4B24147B9CCBA4997BC7FE9C4D2FC1719B480CD24AC1E9B8486678EF469D
AC323194A0DBC0E7E42035B19CD2663B6B16588EA532D014578C3A0A91285954A4756CD283AD
3C1C8DAF2AAD0E4C38BD0C94D7C65CF550755503F9E74451A3952A46152846CE60A297E7D0CC
D7A75DE194EB1F04FE9D2266FEFB7F56C6AFBE49C506B04A2F78DC1316008E86890161478FAB
68C64ED5800AA1C9E884D070766075C7395F7E7EBAC69254D6524A455D4477807E736FC6CB06
FE4EFE77C1A4593D560003D5656E7EC14CC38642CE0E9385BAA91EAF42255F468C32DDDFC1FC
F98EF3FDBD8991AE7B90ADC720803C12CD120C55C13CA95D4870AC0F46A02ABCBA5E76C696F8
1FE74E0EBFE30A8E121AC1AC488DDF19A81AFC4E41AF678D16A02614FC8944C5855E1256B2B1
B38FDA19C69BAD6C61F62F09240E2353C8960B6C74AD11F9B795373AF89372E08CC95310F66F
944EF0E8D0A2DEC190E8F2E97BEF0979F3417CD1A28D9923EBED9429FD1AD3535364B067D596
92083BD80D7EDAD63B851FA542380A95F124F7D7AEA47E7E1FBA2FE455E8EAC789CC08F17976
E8A8A88A9E9DF29437BAEE5AF1726D22E4AC04DB28DF3E0B9C5D6D1D961EBAC3AA3F9CBC2CE3
E13BD6493024CA2605B7FC2BC3AAE2267C4E5CD98BA5CAAB03CE93AE95469839226D1470F103
856FC0E2868D443BFE2966322FCCECEC9BE18C4F4CA2CA4083D7EA5E9E461FBC17BCF16254AC
D2BE42F2FAD9E3AC5D5724ABCFE5F11D78BAC35AC4097C4FB918C697B614AA5B837FA36536D2
71D2275C95562D93013B52E96D0131B866B55C6D06E235F3B1C1F6AA35597359D2A04AF53981
AA4C61BEBC8ABF2ACCA90E75B2468C2424E578C346530E661782C8724B4220662D27E2E92588
B704D4761F86D4546EB1C860B1F752F379BF2B0CEF00191EE6E0352F2012DE7832AC86E400A5
01580CA9008F8ED31F2287AAC2CC34BEBED27E6D638A33820FAD1E8E8BDD5BAB5B1C5A25C900
EBF52F97F7CA19E6C8EE45A4397D1113C6C105019C01EB1973914174E893EC083B84394877BD
DA36638671BAB8DCB78FE9903643B6BC70B4CF12B81E3A55E3944C8D5D579CAE5E9FBE09372B
CD4074C635B010B18F9DAA06CDBABAF99C75FC191F997218EB1A6AC964FA46989CCAC1831D9A
2CD89DBCEAC13CDC80FBF938F164589E07566A6C26ED1D06839C16DB373541D7E65E7C3DB5E6
BC43440A073B5FDD88E5A4E3904C655B3AD9D110E04F7F20E36C29F6D73C016DAF983064A407
0E94EB425739F9C50C9C70204B651E83B1CD1140FF31F6EA6386DA161789B3523546D9CAB425
15ED56A05BA389209BC7192D4716E1BEF905E7CA83FD54651ABEF16FFC77AEF311526CDF2B92
811A5BDDE430E4DB4B05217EBFCE6E36E74AC2D1E0E4B4C4FFC5E6866CDB2CF287A8D4ABF3A9
F69ED618925DBB3F903E190C324B86739ED65CFE125AD7BEF9629D1052017BFBF0D8452916D8
65A8A5A74282463BC1D919E58F9F1245212E21FC0A529088B260AA07B1D1AD05EE533A3CCFC7
30AF365AFC9534A7FD967529A4BAD5887992EB5572EBB278D01B1217C5855C0832ED8BB8E456
1DF4C905C5D5892CB118827E4D22C358B73242A9950E09793A4D35A3D13A4BAB29F3C7D61F36
8C038829EE53F3014834A41B4A1ED63B1C903E565D74AA5BF61522A66B7DD6032329003CA130
CECAD67F5EA752F6AA577AE221C4A959F31CDB9DDF9F58C5779BB9DB269FBAD3F82EF5B8FBE5
ABA0A88AE1C781DFCE481AB341232C58EB8484E9E3071257F87BBC32386281F29FBA796EE624
3D7F28ED9666409DE156709849B2163DF4E308CEA1E877C4A891F614158DC4B50FC5DA628873
41ADF3D436D14E7CC180469C7C915411AFA603EBF60BEE019687B6392226C97274D8B58F649D
087FA2D3044511359904E318C8B5D2A136E705A62A18A3299BC4CA2E492316AF3581FC01B0F1
5B176F50E6618FAA7C77B304D379FE06B49E9ADF21F45AB5BE763313E012F46CE57511F53BF7
CFC481D5560FFB44C1448F4604B426C2194DF19B027F6111BC50E74F451CD520401BDBE1D6AC
908DFE91B94089997FCC1AD77CCAC5DFFE3F5B3B3A30BCB21DE6258B04FB73B1C2DF52C0AE8D
2364C8DD182A37C50B42F802F46ECB1D8760AE542F7F103D10B3A1678E8E92B036EF45FD27BD
B69B1B187EF32D8D3D8C624DA5307C0704A2D572C620A66C5826A2FE274DF32C35A952BAA2B8
381F6B8824FF3D193BD3ECFFE81926557C9476B505F22377B28B80601BBEE1572DB5B3049626
FF52B3B90C04471361C59F3AD60857AC6E4EDEA2A4A837EF5AE59F889C2D7002BFF19DF872A0
B1C0322CCB72637D7776231BE8C380CEF85E95ABF583D6D8014DF2E69B3794D18A66A4FD2454
0AD71953270428777ED8240F189021AD913C297FBC21651A238AD76DE9C5BE1A7E6BB48C4B10
3313D9B99EAB5EE4A91891E57DBC662F852EAE8C6203D11C268D94604D2AD9BB5B83EA879614
5B492D4B57D4303B29B1CCB4E7FAFBA47766765B38D3AE81D8486E03039936E9DFFBF8FF7C2B
4C62B613D3A39A4A0F3DBA016DEF82E18ED325BC4B50BAA280B9BAE6F2E306BA74CCDEB0D955
22B117EB0E7C7D1A23F51A8CF4BD9C4DF0A5615925EA2C86383E3261E6115304C99BF7F5693A
5077A911C09A4E49F634982008108FD2BEB480F053CC1842408C6641434CADA5A18E98E97850
454F47A6235E34BD94A4F6902351FADCEB23F9A4061F82001ADE9E3BAA84EF1F982FD30A722F
8D05F58F815DA97BCB4557147F8C338AA7CC66FD5E89F9FAB8BDC567136E63551A6EB2B7D28F
2DEAF28EC0C524A41912A7C7B7EDF9EF70108AFDB1D6FE7F45DC99D29F84A7C5DC8C80B9D96F
18A77303FCE22CE7CB173CA2EF99C22F8DBE00F65EAA8C3DF66A3524FCFB9E40657AEEDB71AF
19872589ED96C8A4378F84B78CBDC0D146C733DAB6103FCAFCE55AF46C7778B48F6B9E1FED40
BE32D14B84B21F61455F4EB72A4631747CC74424DDFFF2ECE500A42D124B6C114582749F3D15
CBAC834535BA632644853FBC17A795ABEE16B1483D5D721204EA51D45C54564C286DEB0068DC
01E5FF5DD1FAD30B15C7C2D0E113B1D0E49347BD81ECBB3AF808AC171C56D3B0E67A5639E34A
10232872A4479CE7293801141E755DE8829271C864FB095BFE6125C0DF24623FAB130AF2639E
C66070C081A87A14AA298EF619BBCCF098E0D23B756508B613D38A93F34C578827541C592FB4
1528959F428EB9110574B8FD3CEA34070B115CCF9FC5DEA68D288AFAA0EA73400B3171F09CE5
80F9B685AADCB987C7C2BF7DD8DAC3C76CE28E1A8377EDA65E49781B8D418C9DA7FCAFBFB368
388BF5627BD44AA564315D75437855B767EE78E66CDC671806E89AFEB0339EE56DF104B43315
F8958913A2D3015AE52A7772E20EB5BCAED1DB324296E97559CCD8C21B336D503A04DF961F24
29C9661A98D41FEFC637510029E10447AB0144088D6CABFB8942FEAC1035A725394499658CEF
C81B22BBB9215080D348D596938935722AADB74F748CD4DDA5803BA35E5B83EBCADE75A2F701
488FF6156B914FC7800A07FFA7A864F33362704D73995DEC6756A518C9C15FD325164591C923
F2CA3A76A038A5632F509DD4C2262FF86CD24463BD0DEEF81950CB773B2EAEB83C17FB13374B
DD902BE736581389D31D9790FDBDC24108FC0F3D95562AE626D3502D9821D277303CFB6A27F8
AC65FE25D9CF9C73873A705B6BDE43BB32BDF1DC4C10BC30D74B8D78A9B74E1BF8AD05799BA0
621843B18D258FBE46ACA1A292A26CEA3D6705246DFED6A3569C89E20280D5D3AAF2DA749057
EFE91E75C3C39EBB41A6AF87B8E9E5F6EEEA30CF65FC8417AB3FBFDA70975BD0D49C5A759B9E
B045660A7D2EFB4094D8BEEB87B8BED6B4EC91B83370CF8E7FDB204A91E175C13D25A9386247
834FEFBE4EC9C26D0DDA791C56828211640130DC4E5663E80CD830D0D7F73BDC406CF1284C53
7DF2625BC4B90604E3A8538E08ED3F338432ACE05D84060ADA74D19647DC73B9BC891FD96762
3BB35901767BC3CE225C0FD89A059B681885E1DC210325FD0E710E20876569E90A9A3AE2751E
929FA75DDC3D22C5C791D93ECE6021CC2FBA0FBFD0F22C77939BB3C4763B05A1255A6C07918D
ABE1BFFAD8AC8AC40C38E2F66CE1BBA9362098E6238DE7445BACE487D603BC23B72F4099C139
BFD6E0624166AE43359FF2E776C5A3DDBA8112FE21550C20A948131ACD01DC8054CAA7D5FA04
CEAD30A1E9AB7A61EA937A594D0A85F48DFBD074FBC0D9C1A545FAC1F4A82788A4CAAE5E8C23
C9371A7E20BB2C8D82D450545102649EF60D65F156261AC17D7F7254FD392A0020FB21E0EF12
BB1C317D46F113C8828CF1E1C1C34B5FE5E46F213B789DEB083A8C159D14BA64CA2AC39631F0
09CB3B3D3D8EA9B26435A6C7619F7250204F15CBB1CDB82ACB5B2CF7AFD3F1A14651311BE402
8307687A0362DF356AA095F6141675454CF0E93E279C9B9EE32A937E00D3A397BE2BFB0697DD
F5A302999FE8C2B0BF35CFDA4ABC8C89884DF1DBD21028FD35FD2BE780C7C635CB3927225F87
4469546191D7D1A4AC7FDC883E15A0AF430ED974C28863EA9A6E050B915E12951FCB3E3F6914
E242D23CA7793F8CEE2C480BCFCFF61F7882EAA62F2ACCB7A51E70C66D023F33248CD19C6E0A
E8BC4CCACF5D5DB9004D70724A8E754BDF6566F2C212569AD2C9EE04FE49B62C088D41A4B19E
695B65151D6D1FDDA6B393A7ECE224D9C1B705E43296A0548D805C9E3F1B0B1F74B1BE82049A
11F84CFB7DB8A1C458A421D689A137A56C416C36AE225D5125A8367628931D35C565958BE643
6F008C6F6ACFE6979F5A772878AAF4441CD93F8D24B00085E830ECBFE23E352D41689EBB486F
1B7D11462B4404CF2159A732D73696950F4EE5D8924A54DD7AD69276C732C76CCE6C4803F8A4
FB8E1EF1041ED0D6A5D45E8C24EE87A3C1776830876B95C3C17866226361AD9A211779E93ACB
D16F36F6C093805E16800C7764AB7C47399163E52E57AF48D49E9C473D4310FD40EEDDECABF0
B478C2D26156B5C264B4F4C3FEDCBC2E8025EFB02E5CF7714C3B494C4070674E49D7A12ECB07
4E62486E5D8984AE26262DB5299A63E739D4C162357C5D5CBC81B0C8AE74A3E868C327499C28
BA6E56FA379F5671BDECB849AE916B40864EA07AEF7CB6D8981F4066AEA6D71E0B17929AAF63
5A2B4CAA56AACE9D21746C01B8DDE5EB968338C62FA2AC15CA290AF9F0BA4FCFBDCD211A9265
3346E80642A687DD413891FDF4E3F3BC13182A5C5E65C739A1D7966737111A6989703BDB6863
AA5021585D3BF37260D12D3B31533825F11FA003B1F0A24665CE9A8AB3413C3847ED2853AA55
FEC4EF1BA0E0C92F31E4B2E23640B2CC2FC5D9CF8A1BE9FD347798A28BE18391938DCCC03323
FF762298656327BC4A27E2E042D599BEE087C06EFDFFC68F7F46AEC65EF59F49900ED5C27D08
18EAE9830F380689D1BEB509D77286DE0091A6D3C54F0F147B599C70AEF0927B025C5B2CF001
4FA70C6D8F7DA81ADFC00F6E192B9ABD7560A57497F7B5003D90B768E81DCAF9CFDA43171237
1DA5F7472686CD76224CEE067E9B878654392450EAC011E41F2AACA10B8C1BE2A45B440A4DAE
BF4C4336CFA13C622278F5B4E1D3FED77B2DAA62C67C427E0C313EE327E9DF402E438C2CBDD8
7488A82D84B34F0F8D130E7CCAA94C57EA90EB13B8823FE07A8C07A68F60594AD360F4E6DF29
B2F4350B0B31813F296880B26F154FFAB88E68B57B5EB04D345014587128D77648E387C18CAC
31A4F5F1199F08C8327677D9DA77DF6F9843D2BE6EBACB734B99B67422A2B3C390721244F98F
300F60225F6CBB37BB6E662B2094E9AA0BD388ABDD9175B2583DD9A28A357542243C64DB0490
66BB37C130F281215603250B43DEAE71340643E546F7AAC821DB17E56FDA55E3D619B7E6A352
115424D778E57338EA044FAF7FE73DC17331C034033AB3FF9B38169BF2C0F95C560874DCDFC2
D705B5B63AB5F03CFBCCA13B0552243D303A6A97F19990E326622CB93603C78C1A0A48D970AB
4009F5DB859EF2E66BD80A8084F9EADB62C135F7A24AB3089AE780B85DA3C9310C90277E2D1B
FCF3BC5A1331B86C19243D9F4A54F0E436F5A64F379B1C9831B340CCEC2DDC98395025EBBAF1
98AF83346DEF04A9B99EEB3C7288B9028BBE9BDD6C68F4405709FAE5B1633655D436BA6D7D53
B48C70A163B7BF14F48F641CD755B69F3DBBA2C323DC0D3D1BB1E4796142EB2C86C459F771F8
49F258337B12158A88F9248ADCF608D7E87C3023794BB22C008E10487C4B964A2EE7D8EDBBDE
68408A85E423327164B383D8B63731816A28528987ED9D632367D494437DC7FD7B82183AD8DD
2FE6A8F63EDF6673AD615B84E7EA5C90D4841F791E89F12F3FF820314322ED464280331E3E50
A9C134E0F6DD819E4A8E063ED37719230111D275DFD344F4268DBFC9882D21E3B99370911F9C
9FA536A6F170A5FD7DC22E3C8FF658B4E4B6E01710B1138055E91A89B6DAF8872A129BC195E8
AFFE8366A21F9A0828675D48901652CB20F6369D3C4F49E0AE1AAC93E7CBE8AF0CCD8D5B8249
DE9872BE3A4FDBC4E8F5CFB017B5DD8B592270C429D795B0B1BF7F1EE9D09AA10EC891ED8532
4DB0DF668E4C143563F4E796F7E9A1A92924731F3D834F457898457BD811E61023521A418099
80301B3C88A2BA01AC740A08FAC11CA8C4052EE518CEC78036B255BF4A547480CC5BD0EF18D8
BBA41FB0DC1DD33B508EE0F863D4DE1C18EE2F010AAA47A1A741023CFBEDC501FCC163B73D20
11C818857ABB6240FE98C4E738769E55AEE8E8137211AF7E28D5C4C02FB1EC0BC5F1703A6C62
D6965D1E7294A8275C2B8E895A769E87F43993405070DFF6A17CFB89B24C93418868C75E3951
7A7B7096D2594AC2A07805F52B94EF077082BE33EA16B4A3F3B65FD84B65EEB2EEE28E124308
4ECD3E536F2A008D0DC65A7A682867685480EF0C0F06E77FED2BF4A6F170A5FD7DC221B8F4DF
F5827345057229CD8F28E97FA6731658F32E65C9AB4A6B16A8E5B30B9D1F85A6BA43A3F295B5
35061E0EDC2F41AA1BAD535ACC890E700B9A05B72AAFEFF04CD27CC0A4172AE31B80C2310812
021C43C123752B08A61C824E73D7661387BD1CDC131B12C73D7C6324664054AE821681C10323
8BC46D304F1426195013AC50BACD7240170D849742D7F9A584145D9D3416AEA55E9A0FAADE43
092638E44CE1ABF62A47B829EAEF83AC3B1C3DDA3B9303301F6FBAC5D2E2CE7BBCBB7A6115CA
569608940E7B540FE73000BC544ABDF7E8299DBA1FD8895F3ADED2353CCA948DA01F8A7A5976
4A7A43966ED3241260D5F9C4D289A1E9F737DC15C540FE98D7736BFEA60590DA911220F4C74F
5B06E719EBFE8163B2B9D278001C9767B9F7A350FBC4A6B8B54A62B44B10A3B57D90F2E6B639
E9E295E7801754DB201AC7171693720E2C2C8DAF3F01E7AA70A259EBE70555A86D8C9CA09DFF
0705B23CA10F7B3F03D6051E792D98FCEACECE6258CF73711A33A52C52D99BBF3B51B93EA81F
7BA8C67285652DB475DA1644BD83E2EC406A9AF7723F8DBA420EDD3B2576B35F8EAF88984C14
2D4D07FFAD81CCA5EEF5C147206015ED41D0810834C9B7DD070C7240B25E2E148D5437166168
46ABCA442171382C7E50435DEC44FF5CE60D081E3EF53A36A1B89C516F6844FA4453D6058E8B
8C2DF6D09D556A47AD5C131ADD3990B8A1C0B9431DD487E2021E75F7750240056DD684C3BA65
3821A67232E2C9C9E0FA7453DBB14F8A153715E8EC81F7A95D113EB408EE238E5FD44C7E5265
22FA905AD6481C5D8E0180BFD05438BC39D8C64827DF75F85A999F103C9D066AD9269EEC461E
A7386AE673CD7FD6B61177BB2226BF76875F9E9761283FCDBE7372F11A54A9A2E0BFF0F6EAB2
FBE0CB45D0F437A441075EF422137EE87E23EB88B98DA0AA26557684EC5AC61ABE5185EA568E
C57FB892B0684D08872C3BE32F5DEBC708D3FE986F36DA9880E4379467600FEB39CCE6D35D41
77AC65D9E46AD88F1DC3251178C61445D9E4CBCA0039EFC1FDEAD14B1FDF88BAAC993CB30A0F
21BE2406F3348989F8D9CDE0964E4640DFA7ABC46E1F3455BE902F3B2D02F816EDF968338190
A4D4E4C32BF5C51157E47F983EBBDA06636D43650DC957E13454417CB828463F022433C3F418
9FDB7489ECF853DCDE826D9816487B97E37D3E11454CAD363C37EAD9C6E7CFCBBE63257273B2
417B9192766D029DC8371DBD8D842B569B7017D86EC438A54626FF9850E362400B0B943E5223
42753371173CC7E41CE8702B34DCBA4B1F51D061DD593A91703F7283F21BF5AD5D038C853CE3
3A038557984E4BC808087BBBF662D20009A7C75BE4AF32D945E18B4BB95865B2B8FA0840D678
3A0086C0FACC0266BB657FFE592FA3A14C980456F86ABD253063090E01108759D05D483B6EBF
2581B102B6E52C06E8E39CB2AAA84C55BC430DCF85A7ACD1DB3CC96FA5D140C3198002518082
2375E109EDB2C8257B097C8EDD95A0F29ED4D834E093DEAE7FBE96ACDC64F450AA739867D13F
3565045CF0544EE7E23E7F0981F961165D2C4DC4065B3B45B7ECEA8FA6673E36509FE74BC63F
B0EB6EF3EEF634CFAB9FC5DE1E7004AEC58CACE8022A778774DDDF6D9493BDB73F69D03C47F1
0813824958990E8CA389C8344EE6C359F96904A43BEF1E7F0DAB4D8071ABD4CE7958C7B0FDC6
189C2A22ED73A184DFD674D58EDF6BE60B95247C763D36C13E3BA5841F27B3BFFF273321143A
E440C620F2181E56BCCF98015342FFC37750FFD40C82C029A9D34267FBA68649923FC9206ACA
1B3FC223D733077268CEF3416A09DE440A1CFD830E6CE6C0ED2FBF50DB80F073BE16F8BAE719
5D12F3B2A8B489BF9BE7E5AFEF47288EADDD2708BA4343496F824780486BB5C795F571E04AE6
B99341B014924DF28473DF4404DEF9B03A26F158E13EA89B335993A0C123C0DBC7D5C9373C4A
753034517F81BAAFCA740F044541D97B89181395306CB9F10D1F62DF48A2C998D021604AE260
988619B465E5A1BFF5F1DCA4E749DC4F860063221F8FFB9C981BA8C2CDD60BF54D97BAD75BCA
019EA1AE71FB4F7A9052961FE4B7E77368CA0E57EBD16A7174FAD36C2D750C01BF0C667B1886
2A3CE07B5E87E72FEF9F5CAE3AECBC26765D0785931F8E3BF2E4A9FC7CFA08B26C706B736332
6582BF054CAFBC87F52C1ECFC03D9695E2335F34085C112ACB0A383AF28734B9E1FC312389FD
B51E7B691852CCD72B1F5DFE6695786FE3DE35EA251C49EBE850FD8179DBE266900D1D58323C
6E288EEBBD3DDD92B52B3E5350575353C38261BB77AFE63B45BA59B2D262A1C492673C8F8A87
3A25F9735850BAD2A0373BDE4083B08573C4EC6B1513FE5050E2C6AD04DB6E179CB61718DBB0
1E4B3DA2C45801347D310BC094118DD732C4A62CE0D623C75662925850B9E3F8DA861ECBBCE9
CC07CC053D34E1C8F6177E64352929F77B66BBCE4C0CA79EF8C1AB8827DA57056718D63387C2
E4F7AA4C809C3F06681778B0E405082E764EEA0AE7DD7068F0106177F0F238BDFBAECB8FF9FA
B8BDB0D65AF91A7C2F427C7662800CB73DC4AAE87B794A7F17C60FB9D2AB702E695F9E60E294
2E46C4A8D9FABE10BA2293BF610B90355C596085A7AF9F23EEE3552A46E13512FE7C6BE23BB1
5CB094D08359B6E6F461AD38FC305ED14EA8A4960FCE4C041BDF7D2D153748B51635BF83497C
0DA1990A1EBA91809EFCBB44D5DF7249A65E0EF0CFB340D6E7F1847C5B651A255054F0BA1A00
74B5A68FC1D0D42CED2008842484CD13FA687EA608DE090C0DE92270056ED3B012C0ACF2EC48
32DFA60546C595D1E8E54C68E7C55F697AE1136E9A965B449D635517F95F512D7E26417873FA
F09902C43640951B9B6B48F4BF13E2B80324F7FC14BD1AF505A7CD3AF281CB4CD7CBBF84BDD5
D0DD19D326E339C1195AE60787DB3B71251B2AAB59F9968E1352E289252547AA07B8A10CF0F1
E609B871AFCC68083E1E18979BCE1D82482AD08634D42F9050FDAC2F9443F2705BC6C66BBF9F
C46C3F65BA0D0C9C1A43A07E07EAFFE0726E092E4F3344BC7DE6441C871260DCF524842FEEA3
ED771905A21F72B102F98A84D0B65DDBA6CDA587ECD3F30FA7CCA417134ED5750F9C9034C421
15455DC662DD430D4C39A0D7275E154DE4ED0BF5FE6E5044964D4EF2FF02ED8D539F62B13780
59F40B107F7BF679D0736AF50691C55E7B6C273809F79AF84D3F48B5B130980FB5D839C2D645
E7CB427D3C928F7F9D3C568838A361B6382BD6BC05502D7C143E287B6BCD457871224DDCC635
7D7B04EACB88CD9A02A332E964B5D5756860EC1668F3DF4C7F8547D92A7E40E89F92994C5589
74CF887349FC17B91DA06FE9CBBDA5D14240BFB2CDA6F37041C49D177D20366C66A3F2AED6B9
B793137455FA6749FBC42FC7E755739855EA9E841868DEDA45CB96BFB2944C30944A106B29E4
265434C48F34E6654EDC2F42A96CB5188CE74189F13D6EB25C7CF55EBB9789296959747752B0
E53152D902749AD8EEBA248056F1F13239224CF0E84C4195CDC5F616AE05C2B5AF9A9214CE9A
BF73CB1B7715479CA476045B390BEE0500F2DFED4041AD5C5D87445746C7AC662CB4391C6F3A
6AFB0EF02E7453506DB2A3F53F28CB84855AC89A4B615AD23D195C40F559246A22588AED3241
1F26B5BF2CEB164DFE87BFFEA47A084FB51B2B2B274FD9E8A02BF342BD706C5C2143FE3DB25E
8886EB16E35A36B1477AB327556B3D3C73E07091E390888C775FA1FA2B4BEBEFF3142B7C619D
A6543A157ED74B4BDB6328F2E2081986FDA0126CFE941CA9BCF9E1DA500EDEE398F7E2D2C9D8
9608EBEF5ADF1F1D6A1122A5DD97B5C090FA1DF6FA6CDA1B804679CEBA198F88B89E2CE15D70
E4A43CB6CA4DDC613D1D8F7F3FDC6434E86AF78836934230E3203A245EAC8458B9DF838823C5
0067A8F1AB2E2039E60F83FF8CB32096D0045B446799B3628E247CFE7933D829580354289D7E
AB37A449849FD2E69C5A343A002197FD97A6B062E1DD1B3237ED4DC1799C7E38189EE64BB5B5
818C82BA39350C547C74BBAF5B6C2BC0F291309CBDB70BAD406753F97339DE9112F47C2CAE26
6C2CE5672C4A79238007D329FC266395746891045409557ECA344D0B37CAC9F2C03ABCBB4807
CBFCFB02382D3508D2DF1113D7BF4D57841BCB1BFFB8B1FEBC31BA675F61F4B5C25B167CBF8D
046C484C414B1363FB179813A59A891A72C66C81B3B00E4C990B838F5ED8F5D692723812BA4A
CF3EEAB1223F71D43287B3D8C992FA2242812EDA0AF2E65DD21E528360552644076652EAFC49
225052ECAC8542E5B8972AA6BB214F81AB3A367D0117BF1FC4DD9464A5098B920E290C03D13E
29F3E7194022C2794486F6EA4DB686A87DE53ED51BEB87C7945C49AD1590D2988DC338993428
DE71F2A4B89E5D79A841A83487906A2C970D1F1FF751438ECED9DCEF4EBF66C6A90F23B913B3
1463A922E378FC2D13B2481CB2552F3680F2BFEFA1EDEB749F3ED017260E95169CFAB7FA65EF
7C6391C3216C51C7C5CD7E3816BB6F4FAD078377B966A5885B81925BB670D6B577E751679FF4
9CD28CFFF3990F78D69355AFA17B2A69F05B827A246179584E0E71AF44AC526D656DB42B4BE9
0C486DA56B91EDFD8F1B3A8823FBF8EDD6AF407DDEE93FAC2C02B8143E68A4DC1AAD641A0D07
6202387CEF7C0543FA0C1593B1A426E48CAE97BD823C0D86CB817096F35DB93EAC3F05D9AF1B
2FDE69B93164DE4AF9099A7B0C143FC1B8530DEDA05493E8FE4A63E479FD245F48462F4BE471
31906CAFAE658CA92C47E21396D2897DF1BF855C20645E2F0A1B4D56F7C396518EDE475AD036
35A81D1F6A6633F347755E3AC48AD84241AA526D81F18D1BD00C21944F093191A325FA8C603B
648D03DA89D5C2DF9F77EE8B81353D0F25F5F4A348031D77BC489EAC17AB85B1C96B78035CBA
A359D398025808EDAF8E0330B336F587B654656325DC2B7213101DEFB8E409E73E461A034027
ABD9D900A74C4ED66AF3DC2C6B24D1F69E82BD4E230AD337BCCCCFB8B712D04D546EDC2402B7
032AF59C7299AF2F6852AD3C9A4E3540C9B5E4DDCD17641E5117DFA0DD01FF50407374FCC098
8DEED28784D27A05DB2E02E6D955C25BA863C7FF84582A71FE8C18DF4A39B587C55C14842BEB
198F892FACDA8BACE6F0A40DC6AB0BFE5FCADE72A5314EDBFD008EA274290FCB509B42D74BE0
CA734101F6552E5EFC0457FB5CF131B0F562519A786E368CC3CDA759D3342D945FD55FB849B9
E4A6ADDE0145E1A186987E5745E8688A7167ACDA294066F81F2BF026303D87D14A7C11582E79
BB429E0FEB6717BD479CD7E33CC924BECA046A3D5E6901AD000F42426E7911D74FB698F2DE00
7BAC0DD1337BC47D22DE9A21BC074C94F94F2A6BEB3CB28A889F6F88926B227C1AFB6E9D0A18
7CBE94A9F3012700F9B273AB11764BA43D0CEFA03A231FB59B380914564110753742531892BB
3AAAA87046FCD36334DA6B6FBF166C1B1DB09BA47E3B11F381AF502AB41745212F8B56554EDE
8CB0A42D7E9DD9CA338FDC71FECEAE75872B1CECE2F144AACAF80C10B2E7F19BE7463CE6B389
149BA88A6A25115B7E24B97DAB809C95EEFAA7355113BEFF1F08E260F75C99B267060A230E9B
0CC9A0E207E4DD5FD29EC1755A5576A8B6C90333E8F4D163FF99671545CE0786CC322911E2F9
1CE5938B12192955D5A55FFA55C6059AD82847D26D8B13C62F2F718C44C38AF4C1FDB3CB616E
D72B5DB6526E7A9B6B1D86CD6160138E22247DE2B6231D695D9DA34BDE6B078FEF9866D0335C
81BC21F27EBFAB00AA2D301F4A05AC3B90546CFFBDE6D1D6F6BF73F6D64C3B36626280A06C00
E857FB1515F59520497069E30128F0F95E2327A7A7082D9DE0C9B1D45D71E0CDD84A71BD2FB2
A9918D3CA4B8C0A828CEFDF9D212C9609F220771827F8E31E7F33FACEE675C42B14B2497E55E
A9275224A9088C0B52333F8DFAB6E05BC601F70E20616F63B2C6E6F91F88B0F988235F204F7F
53BEEFD08E2FD2100C7A5715B9F2C64AC365C51F20D8426786B6A7CAA2734AD39804D7508712
CE84D1C29BCD91BB471640E8A31101DA511DE28B5C9F56FBCA2BE55F7659E9360BA0FFB63853
6A9EF18DA2237B2479F2C942949606CACEDFA65F0B00FF054B73FCA788B612E553C58BA7EB76
54C24FC68B6474FD9769809A60AE2090E566ECF96625F7B3EE06CAEFE5ECACBB3BA33CFB5381
FE359EB0D4125309A28BB3D3ABA70758100DBEBF42179E5FDD3E26F4C65180A4365D62097A23
67EE3F830FB792DFB247A72C7943CD52527306B797B00D04AEA0BF1BA7936E05A5177BD0DA4B
663EE7CA1FA6D78D048D8E8D921D8497814B905C422158C20A11C2D3CFCCC95FB14C461B6162
08649217B470097971F7F0D97F71A3C4740654757E88346588E778ECE4B96D146A920F985A71
B9C64A0489DAB808D239A1A594CDC13621EA8A447FAEE5046AC89780C79C3E7BC0E7C83AF7E5
AE8A5C994229B8721C9F91FA1C9A45B92F90FA1F7882DE41B794BEBB3754C736558AFE429729
52ABF99BDF18D6D530D89CB49400DAA2F36DCF388097E3B08DCDE48AA67CA359A6EC48F865EC
E381506747548AB1DCAA5CE2F8C60F4F5653B2524E01DDE714E8C718131431D0EC8F45A1BB58
3EA7B0CF2F8F864913D59197F288FA8C8490D521A76E02EDB99144DB5E5EC76465D6447AC028
F6DA73E26C2A32348A1DED900DB9DDCA6D44CF3985E9F0625288DA2DF4189BAE14B5743D36F5
532A8A73BD54F91DF932DDED7DB79AA0ED10A74E052C8AA3F90B5E90DDF32E37EFE0CA56C717
43E53E69ECF9D4F0136B6A09EAFC9F066778FF6A48E9AA7EEB14EF5736121A076FFF02FE0290
4D82B2565B0951F0E782A3AC29E4400423ED8FB92465739CE2E978832ECC2E4F570444DAD52C
C8E53C67B6EE64A582A0AF8FD264D7CA2CEB0FEA575F3175C386A53E3314F94F61B849B2CAA9
76FC663640B29222646BCC7C107869A652A21C7AE03F175C85F0DE9F31AEDEC6B96F17F4BC13
413BC70044C08A62E073A19A4338FCFF5A731049214A65090656D9A88BCBBE18D93A32967275
65AC5AF0240FA7549FDAEE5F7895B0283B79F4FB2BB4D2C4089EC55DD3ABFD2DC13F58869A58
2A70A9AA3EC9B0525B95897ACCBF559C6A44B5A2F175A643E791F749114772A05036E2DF9490
9CF6AF96BC2FAA6FA197A055EFC85A2CF69ED3E04988FEAF9CDD2693CFAA393DEE80048AFF88
185ED639292EAED63746B3382E3EB9379166CE1D729529B34C0620D249DA9F4C81F9B2AC9070
B6E05A90A759E2AD1544B55137AC82D47677101E7BA7DF8D80E8F4D0F39C8CC540FC1872EA7E
80C3B16AC4B1F75B9AFAA525AA6B8F638880A00C51EDF106945A7DEBB0F5405B21C0DEB2C78D
33BCCF4B5A2ED5DA4A05A4F5B4A22F2B15BAB704209964E986E5820E57B0F7F90937F82300BE
2274D50BC8145BFAE715E55C56D46C8FE89210002D27FF7EA073A18DC6CEC2B8A1B5B5014307
89DE5D3F1DBDF5BA52F280E80282FEE206948CB032CCD4D5739ABE0300BCE5105F84AB376A75
E7943069873049981541BEE64FD745B73BA7353DAD1D9A394CFE436288AC92166358075F2E4A
7031FF5420A584AF50B60B5131FFD7BA1AC5869992241C6E2EE98EF387AF8C2F54742B5CFE08
F9355A9AD44C9FEBF60C5EC8A4E20EBD2685851EFA7444E32842B62B2E98D160486AC1A28D9A
3CB45C43DB6C0E19CBDBEB0B6D5F0C342197311EB2A453C9533706599A09A9442B0E06833492
ADA54E41B2C2A8A9EAB58A1D7FE99E501AADDF6D6654E1B51C374B9742570B94E4A8CD299FF9
AE9CA799861F7C1C716B365B027237DE6A08EB19382E5B2BA43F32BC9DB77F6152C5FD21B903
82668EAA622FAEA8F2ED8EA3C4B36F63677A371EFEBFB374BC6872BBE8622F6845C638624C2C
F686E9E51D57E799EF0076FE0F8D82E87FE27E2372D59F8BEAC72527FD3A1CA5FAC5797C886F
342D6C279B6A8AC1756DC992AB014F87800B4510A4E714A425C5F36D70E39B53A10D0F75CC27
9420CCE20FBA07AC0DCED14969198637282B9F8603A238BAAF2DFFF1A673628BEB250DE493D4
3766DE558CCF7FE98803BC0BAD2B9BC037F6964EBF31322C9417D064B9A663F36E7858C744E1
5E7C666F484D5728D5C95553FCCD047784B03F18F74F815189BBB96D7A6F3D7E92D2802E61DC
B0BD85060D0C5D26427311188A6B6CE1B45932C8A0EB03B4A381352E98681CBC8E0E80D2AB18
4B9CC2C4EC712F7F29889FC99A501643B15C8EDDC8B9C8753567738AB71D49FE956091CCE1A1
D2D90942332441688DB895DBD438648C9CD0FB0E182D692370E2F50BF29E7D8298779E2530D7
2A024C404B596324660843258F9F1D946C8BC4F12F7D3031CED14C732EA5EC1363EA75645E3E
6D76AE0A4D7D917822C12F2D18C600645FA1BA28AAFCF76ABF18F7C9BB38EF47E7DE393EB761
C2594C2D310895B5C27934934FE71393ABA705F52ED6FA4EB42D723B13D0E9813AD38F0F1988
4E32E6F212364199989E50BB724787968C65E724360C66551947BD45942EE0AC8F6B6A63CB7C
70C6A3637201766D6957FBAE29599A81AA6BD5549DD36CCDED9BB2BA697EFD800C41199352AA
877F54798B6D217105EE3236261AEC3E37198D0969D381DD1B6C92D31E6532F4DEB1309D124C
BC29F062AC132AB2048D419F125258CA5D30AA7AB33DC8A0D88B267C8809B01CCC6C30344A4A
CED3D4EA7130412F4A1777CCEDFE75946260DE95F6B3EBF03182C244452E04741C97B6BC69C3
E43822B6987EFC9209DFEDD6B7183D7A632A80AA7F3647CEBC2D16942C680B9FA4ADD58631C2
F3E2918998C5A3A4D71B616C0239DFDEE8DD5980B6C84354F42FA5C3AE110E8A8C79A89C4A7E
4F687B313B17D6A1E739BB250466F5ED2A808FB7840F045CDF6B57A008BA9C8821574631BF3F
E9C6FB55881D5E0EFAA3705134E34166E02F833AC43C9BDD0FEE07E47412339DB730D427E938
55A8558B6D745E0536B55DC17B7DDBC5E7E42361069AFB114EA73B4AEEEF67C260FA1E5CEA0B
9666F5CDADE979DD15BE6207D602EE199CECB9B033DECDC4E1F38B1161AF2F6DE28E72734A92
0D0917FA482FA0ED7957B97E3260C8A5C9F71F2C32FE812A57A1C629FAEB5892B221B4F889D3
EE1F83DD8C224B069FD959FE142A312808D6A77B165848BAA81F8455822D6C682A073770B17C
E2EF4183690423D1BC28D9432724627310A99D20EE46BCA3E12960214E194082A214141FB5B9
B1CE373BC6732446EACD3E351FCCD5083F7731FDD4FEE18FF15FFBDBD0F9CB279EEADD532EA4
19890478E41912483192EA8C5C2C19ACCEC54FF7492BACB479DD0A06CC3A726233381E94AC8E
92D59C3F49F38D5D2399CC6A3AE0A386A73D70750D8548DAA485CAC137E7B00ADF492FBEA049
EFEFAF67576E192B0917D9E8989680A8F0184DD226B377B0ED6EADCC6C1DF6B4AB8B3E1C9150
B1317205AFE812592DE37170CAA70EE491E273A951FADC283D473A80A30AF883CE4C0A2C74D2
7DA1CB4FEDAB74D81A6198A9DE3C78D09B640157EC55CD25DD0DDAA6A5321179E0FCEDD7BBFD
E2696DF47787526ECEA63F785644A1463A9A7271279F826E9A879F9825008CBFFDE997951604
4596A6229C28C078AA08E53F3B0C137A46F079497F9ECCFDC480D22DAE529D692A87DB94F4E2
18E6E36C7381D9D9289D3BE45F3493B8F1BCAAC89405DC41944D924DF29EEE10785EEF765E11
C4E2766E00B580980D5244568228D0BC6F1041A2DE6D6134D14D2544288F53F7A2EDBB669D0C
DAC1EAF87BB9EF5C4F9505E1489AA6E6D86AD0C956076C39AA560CF0628A47368251E5B0417B
3F44D26883B79F5785DEE2FEDBFD2148BC34E419170A3E0772A890DE21B37A57E252D6F8DFF9
D4482EB40F8E66234E5F1B5EB8B45BD383AFADB029D1C3DBD4BD6AA4C7A0D66FEC749081D6FE
BE563AD708DDE603E409D73974073365229E13B572F8BEBC088A5E330864BEF747860655B6BC
51273F69F11E42A81C880D84613313EEBF9EF51890A9A37F096036A34C372FD2DB901E80824B
7777DC00B105D3A6339760B4850C88CB81D3BCA758FC13CD6B50556F7EC79B4CC211FCC1BE14
7C34A49AFBE9F0A89DDDDBB3F9D1C72855507EF9E2E7E3A7B19B5F17093351C3468929C5691F
1E676DEB63E631CCEBA27D7AFD1DBB5D10BB76022F96E19A19074F2589D5422BA697EE59FB97
C443F804C713E460A9171006F2F43146A0C656C066212B5ECD9A29F78F796EEE4F4C4ED03F29
AC828DF305A23DA898114C7DB25FDB189030DE5DDA766EC99C3A6D9397C2373C74F3EC73847F
FB6BCA7BC33D29454766626AA160DF1B64B7D171D692B05AA71E49F249F1456814BAC3C270B7
1CEA9E0FB4DF8D56BAA368DA0E13BEE707DA12687BC2051F4ADE7381A72179FEF39BBE64C1B6
0C56EAA5073EE29D0CC373397C6E37B0F58508D222827059519AEDC6C219215A040A3E512B35
DABCEB01455B1B92F6EF0298233A400568830B698AE39A7EDBA2F90C5742D2C1AB3B6F5EB1E6
4C997F1F82E0893DC7E37B5D8E3E4C5A7859DEF5F41F816D285487EFAF1198C0C79EDDA637FE
5668912C205A4D7431972A27DF07ED6B60284E829E5647AACDA552EA172D9B9CEFE9FF95A9D2
3721A91A3BE250BA19067D808BC61CACB914094A3B5969502A137BF9598FEC8068B9F8E6D004
54DD1CE14EEC7161F22E15199F52435DC8383814508D9963B85D489044EEC9EDC89E53F42501
C7DED520B12CE1749C8B09089B256D9E23C6061DCDB112794B183993E9A1EFFD7880FF200F17
497C19D95644C6B95FE49A806EA518252FA7A67CF43B44768C9496DF2F60C9B1D8C701990E7A
7F05C3F892CAB6F2A9EAC2FE730D603CFA00ACD66C8297F2AFA8D5FC720AA042A335E6E2F6F4
483D4242FDE43D6D761C8F42E88DE885D76E04DD60B2F5E09E79861988C07BD310D94737D5E3
5735154E80666B122A82D06BF4F7D62C6DFC26DACB24DDA08DB7C582B35CED000076F210AD61
014A7A89B22B02933285D5EA8B9622F7CF4957EDD30926AC9BDD3726A060E8AA9945E75A602A
6A3A4D0D13D63ADE420725C9A67F1242C3589B020D958B4A0F7EBFCF5239B4413D7C7A62CF88
B984945EF9E0E113E8702B7AEFC9E3E918675D74A2B5183482608DE77ECB3289399A08287380
73D8CC4503AEDE1EF1208BFF31AF2AB238C597567693B73A94F70E9140A9B656A1356D11B952
21922614EABDFC986C8D308637274EB70E1A6007AE5AF52EA226439D8E01EB46856C5FAC62E1
18182D58727D872C906D60530C094CDFF82FFAC84ED8971B3BD2F48D42C1568D69DD04D8C6FB
3F3DD02D2D51E4538C536F95CC366800A2440E1F1AC010E12E94D75326E79DCB909BEF25B036
800425A58EE56A6561528C95C532A3746A7810F3CABD708170C7434846154F207D1B62E3D0FD
2AD30376DFED157E5B61DCED0C0530F3A639AEF8BB3BD11FBC986F00ECBFF9AE07E34FFC14EF
CF8F4B2B0E1294457C00C933848C01DFF15F9C2F5F8244D83FAE61DA014C59543128C3E0479F
F31A97C8D9034E6C56D3F87FEB81117BD88F94FBEB2B222C2AE7557B0DF21FE98784E8AC3215
030F512C035429FB8E11DA54AEF988DB63EDBD33AE869252C0CFFB0AB5159B39D469D6ECAD66
8AE6084718BA51E863A60328EEFF43DFCEFA46BBCC884B63083E29DFCA9DD67CD3C0CFBAD029
18C1768ADBAB1A490D5040D7FB14FE0B8386F5DF9472C53C0D6B2192E3BF3AC0B103F08B8271
13BB42935E6FD82A9C00F8C5C25E0ED42AD56BB240724A20580D53124B4D0CB720D9EB405F56
1045798E825396579C2AFB8BF9F48ED99331C79AB7A6311A6B007C644F9CEEFFE2B09EEC91D4
1FD02A490DF571354565A32D3EABC60D45A265926C8979E010EE019B93B09A3F2A61E13280D6
7E5152CF76ABA9EA33F6152CBB30600CC049D1C84347D4CF04035D662391EED3B1DFB5099DA8
56EBE09523BB57FA2672DEB69DB7FF081DFE3E2DD63D00FED3BD4410DEC0DD0ECB328F7EA25C
ACDA1EA8D4365956F14533E3D937B4A72B28CB77543F9C0D8FBD8951A8C61D10682EF44AD4D0
1AF81E0CB6C075062DCBFF688EC231237D06FE42D3045588FE1C0F551FB3B429CC96AECA6910
FBF6CCE6923A31154B2FF52CB73B3C24188B3FBB8824E1B3D8358E54ABDA98828B069DD78347
D9E81B5DA16EC24127A5DEB4519D1315F044571BA7142F53EC687AAFA53FBCB190687ADB7198
26C2E680AEBFA7D279A8F8829ED549DD9D61C8558202B6C1CFA8956951998003F81841A27E6C
39248A8BF806AB0D64525B86DC4583B2AA8A06E176DBDF6B6B6D38127DEC79FA039AF8AE1149
2509C0D7D01E6A756CB4AAC4A57B9409B5550D82AC139C4BEB0D7C2D068A805A175B4701E6E4
B234B44981E9246B2B5164214D7DD41DDBB59F39779EF228AC91C85F0DFCC4C288B0B513A994
78A9495084516BE9F1C8A39EF5DCB44A51F0E612370C1399798805677FC570DBF1CF3BAD05D8
2DFF8079FB3CE7154AE0867875166F71E55734C2E150B29F41989F114C11CFB4DBAA941042C5
F011D3BAC72FA34F7B7735D198773EC742DBD50C11D8C2591D3735C122000066A5189BC587C9
FCFCE3AEB787C81EAAB2DE0CD52CC2D96DCF094F6B44AE2AB82F211D09B040A9DB1E6907A565
98380C897A742888F8824BBD0092B9C4EBC7E68BFACFF72309E6BB7E6B14B26F91A28BB5640B
B33168A9D69D097A38180CD962721634876129C611D236E3FCC751D09FBCEA6411A09D95C22A
56DE9435484AD1CDD8835235BBD7EC43F1FCE08469ECA4BA9E4280A6784DD895FD7894121EE6
1DFB58C0E86B7AB192A8A24956439CBBA09D4B5494B4894F43C3DEDD045322E460934545BF9B
D870E09DB10CBBF95BD17559DEAA024EF5842EBA458A2B0CD2680C48579F336AFB55D38DB820
B36E49A0790250B3038EF01D3FF9EBFD0D5D154CEC8F750EECC504766A562F4BB6BFEFC4ED8C
E8A33E87153EE9C7D47A2DADA0480BD9859A1E110567849FE21491A00950CFBF7BE7D7E6EAA9
97BC4A4A9C2BE4714FDA4CDBD39EBE5680A216FA244B0FBA63DAF95AC3F2D2307D0AFF1AAB5B
2DF6C0A89395F97136EB694BB6F3DD3D74C511F98AF2A1E5DAB83E69D80BA21E4AC06A8F1116
F9CC46DDDA4DC804F6C2BBF9507C3DBD69F0F551F1804077AEF25EBC1D9AD75D9DC41FB31943
28F564F9EDB4DE8F9BE6291A799F038CEBFB71A6F2442F61B7C1183EA046F58BD8EB48C822E5
0A7D2AE3B981C31EDF0B0C988B12DBF015F789887983352B17631FB978D62FD8B4BCCE0C91D8
C1A784DB57A4C27313F181B9D1E3C53029E21B39E6AD8C2C1EF9ADD10D97D16B7000E5A308FE
724DC26E8B2CC9AB186A0ECADE19F265E7F79A147C989955CDF368353DF139E3EE221CF2BF82
EF4AAA9E50B5B2B8DA4A15BE059A6A3562D933DF00749794C0F78D6DEF5B84FD5CC04BD410AD
23D2C82FA606C3A9E2DB38E2169D5354C640352F936455CFDD93AF05A3278D3428CA244ADB81
87269BF048C4F9840A9D689F69E31042C94D81924A1C2A6947FC3D44D1FB5B57A28703FF1DE6
552F8134221943706897A160414FA7C4622B8A9A5F7004A74219E411EA338CC4CA71FF912F39
49039E2C61D0894701A186D06B1D5DCC3D51DF69B78F5F76AED9C7D986772AB860ABF6AC7447
ACCE580B070AC060BE67DD2ADA7EA8D51BBB728F3E5FA16827CCAA9F5350A1232F43E7C4AF8B
9D3E8872101A4645AFAFFEDBA803DF22299BC6791254086267861152B0B1DAA57AD070B313EA
573EAF9BDEA702073667E7F2BE79EF5EDBB2DCC50A79E5A93657FF7A0701BF2421C0E095985A
60522DC3A8205FD3DF06B1FA5D3DAFA6D0500F0F928411941C85A95A6933037B1B882A1DA9CC
735D8F7D25C049A79C10FF42651FF28483E80E80D8C3A742BE694A6F9385664E8F17BE9AF954
2F83359F91AFD32CA5DCAEB0CEBCE7C42C432AA719254F1171D4FBF9752DAA085E7697D32638
CC98A02EE730363459C5CA9B3BBC1296525DF02830A0824F7BF91343317C0E16A605CD706B24
347EC31E13E7DB33F6AEC119223041789CBA514A99BDD858255607C68E84B77887E44D485DC2
944482F46E7B0C3CC24BBB4A312E7FBCEBA080E23B896C2C08DC442315F36A6DBA20ABEAD5AF
F63C9433001A4B2F08B5314F6607E2D2598093CAD549ABB6811A933EEFEFAC09007453934BA1
0F12AD9EE52B781D41EEA61E99BE5EF9179414D4B16A6CC81C3B358DE0CE6A650508AA51F1EA
D09C57CB211D259AB536E4DE1A8CEF9CB346C74A5AEB109D0CE00C3E54A4B0EFDC3CEA7DC16C
8C19E5C9AC6C1B38B5EBB678B691D38284D29EF04E6DFAF9777F9CFD2028706FFAEB6E36C648
C89FB7C3081C7F77E3DC4130BB9F182E47EB6C02472322160561A00C84C6079E5BDCAA8BBD6D
01C38EFFEA6AA69C2814143717E8D597F1CFD4FB5E4D3477962541F5DF2192A9D0274BA76108
8AE97EF1AA38C4ACDC6E8F38412B5A131AD6D65C249849A5FA53285286D40D21B6734885CCB9
F8318F46E9E722242A23A1166957DCB60180216059DAC0407B673CBA1D8F7D5BCE256F6D5BF9
53EE1C88F41BB2BC627AFD7424ED6998B18C2A0A92F06E9BE1841E03B1D16C9BF35677D59E79
485A9961B1FF35F3041A0BB63477059AF50A6F17E25531EB42AB20474CD0677C482CBF644A9B
238FA937ECA3C4C115CF5AA4EFF691566CC7A472BEFA937E9FF79F7AB5AFFE0A3C9B00A0D935
4FD36F367F5A350914776DDF445625711A2D9792537EFFBF7B49188628F69579094099FAB12B
DCCBCECBA7876D0B49A05DDBF55DD62321337BD9FE131E1737A35FA430C2E47FE5825D4C66A9
960823593D46221F06F66A15BD0F9B0065F041804471382119CB66F2B9B84070864BE6BF3F14
37C76A2BA17392B638C6F39B9F7369CC1A8ED89318ABAF5A1422576ED5519249A093A5F8128A
2FEC9AE02F97B9D821D4AE3E0B021DFB13AB9A694283E28D27B37B69DDE7FC2AC4C881C3DDFB
ED32190BFFD77E8BB3C69A6E2CD2A83DF20203C79D4161032B3BB480E0C85254BE6316534150
6D564849C7E15D745C99641E2DAD51C4A0060921304B77360096F57DD8B7F10B4EA5562512AD
EFE80F135DDDE02C2FBE642CBECC06FC306BD27C19B191A3A0D382B05CC9FD25FF37ADD6D412
A58B7B716F0CBB8341D51D2A763349D956D2E825D2866C27E0EA430394161BFFF7A001BFF6A2
55F3F2A5A2AF4F756A3DC03742A50A446FDB19AE519502E3A56F73BDF9B0AB8BF05F260DE3D3
B1D864FB47F5FB2AA3BFDB06C15D6227A1683EDF1189C37276D98E56F8970B57A3E38D43720A
6DC3C30F56BC6596CF27CCBE532648C92DF5953F1811A87D5F617A97C2105910A53001B17EF5
08419049E81B7E5276A07A6F2D1EDB1C891941DC728459F81D0A141615590F0C0C3FDDDC5935
D90E0841253E627923DC3005A40EF3AC3D8F8494D5915DFDD3AFBD626F2B8BFF67AFDB9C8361
CA8BAF75AA02E2884480F17255C77E9BC450260E0C094A283B601EDAA3561389B2719DFCB8D9
2D3B288DF13F348E1FE5AB8718009EF3B80ED554F96BBFBAFEBFD83E3DBEB486CB1FFEA14E29
F558CC04581A02251E1BFDFF1CD9D54616ABA05297D96BE8DBA7ADD4A5468141D13A5C310E76
745EA18C1CE34D40FCC3B1BB07A1238A76D8E2FCB3F7309E104D5B98D97E5FEAA44F67CEC845
F8CFE03C06D2C0DBB5A6AB3E9918326EA6D8164802A3EAC12D4D01103EBB50FF885C9FAC9D8B
5BAA8F4264A50FB8DDB2757146EAEB14FDEBF0E78837FFF708519F8EA351AD3333393296B696
D2EA5A38988BBAE7CE609777828F8CFB07DE903F6FA0CB16511F9A5EA389439F6657214CDC38
2A85C81320761ACE8761F2324B8D237DD1989A4EAC5C511E728AC01D3124BD34E52C973E1CF1
C2EC56FDCF62E9865C60935E3CDDC6E6DC192607EE3FBCFAF9612E36F1733A9B417E193D77DE
6812F939767E54688996C4C4998AB63AE49490C7FE2915167B49B3D89732D8921145C6001B0D
D3EFE3C8DE3636D740F0BEBE22F50C9B0A69B57244E05D3977B0520872AF95F62F291BC19A8A
8173C178C031321FD5B8C9C98464E4F8565923CC87D547CD960CC2FD9D1EEA18719753FB9600
E0E5D2C2E70B3B6CC632A7B598B107B8AA5803299C4A6FE8F761A292DCFDD577755B7BD4BD6A
7F37E3937E4C6AEF43F6308EF88350EF34B38EFBDF5EA327EA556CF7F2B25E9002A624703EC2
93B2DA75191C894F82268E961625C78AB997F55DAA89DDFBB1A60B260C79C1D268AA10845653
46A7D0A88E88BE6D1C0599E2E17A1554F70B696F761D31FF563C7AC6E5F56456E74CA7514B2F
568720EA64061ECC8D66E970C55B96C4E00C2C951A1CD724D64C4EC127956C2461F1D7E7C6E9
8B15875C81525E88B774443C922CE66D57AAD720B068963996E4A66EFA50323DC855539B0752
2FBFDB269D732684A398D917D3C3D8FF7C846BD0C051F8A36CBE47614CD8A24DC87E5ABC49A6
558324AE931E40AD81C3F81C0584060B308D9D04EC923DE96CF7DA4A69FD4904490BC0F47DE0
08C4BC294D730AA6EA5A5B07853E089F2E2471D89091DBEDEAA605555DBCD51F10B6EBCC1445
B566562EA310EB0CC34912A952C1FD0ED762C77FBF3FA530E101E3B0F95A24581DE087528088
FA830D34D5F722D898AEFA9836149BEE100513B01DEE08182D231147717AFD3826E7DBBB02F8
3BB3454DA24E33E9279541C167DCE868F9F8F11C5B9375FFCF50F08D868E3133BF37CDC9334D
7C56816EF68D9C70F38EC1D77235AF8D2344FE526857DF21A9B7AADCC2922056ECF22CEE677E
69BAAD234435363799BF5F6F94DDC565EB268239AD3259DF8EC16A3724ABE0CFFBABE40C6DA0
5380AC4818C147C5520E3C3754C9124F0ECDF8C4B939A311028603E163E3359AC87F629F1399
EEDE87EE087BE9A9187078A982ED131DEECE9A960B09FF6B5767505CC6DB5F32FA689E67F45F
9726C03D46102808EBD619984B0E496FF0D41A17C1BEE3860C9DF18E7C5EC2572A4E956B994B
02DFB968E32A9636662FA4CA58448131696609C26F638A9CB5E009D206A25E4F8D627CE39592
876D3BD52E9E15C01173D5AF8E3AFBD54881205BFD7DD977F6C19BCF1A88B100B185956846EC
B5EFF088D98FCD4AB92F5088B2027BC73D13EA145C3D825D3E94D4BB6AC81144708010309C23
FA8F418DC9FF37BAFBF89D8D19A0BBFFC696678B7DF79305DDC98D96E98FC37B56913F6339EC
0F4015097D91DF23695DC5181B197C538919D583AD5F376FAD9DE3923765FCF21DF376C0A94B
0D0793C8439D3570CE89946BF4583C297047F5D3F19B2C4E70C4B32BDA24A414FE3ACB0259BB
C40A74C26170401B1C77CD2653DF09226C6B52707A4FB88B17AF60833B9F4037EC44436B4FE0
AE3EA77FBCEE0F1C31CBD625E7B9817F9BAA426C7BE8974378DF2560F4286E2B93C56C569E82
C27F4A59A696B1106FEC12FEE92C607056345598BFCE253E25136CA2194521A1A451D36CC5C6
F3D10395EDA8E08D0AA351FC136BC76699360E817097ADFADE51F5A479FDED7DA78FA88C8B0A
C5ABC88137FE19A2E029B0906651D20EE71C28B5DA6DE2B0B41D41CF03EC6B86D20B543D63CC
08BFCD3DEADDF3684C11407AA7F814B9C2D57B353B0B9C7FF525ABB3A3DD48011B0AAEF70E39
F19FC99D32A0EFE84769A5BB2EB40A7E2F7EC4275EF83FF5B263B8F60B96E99B12D8CEDD40E0
8A01E86BF4CE0E8C13466F799B294E64AC62EEC9B7F53B51F0E2723D0F337723A2FF4F8940A2
F9A6528C16F6A2C2F09E1ACD04E4AE9281BBB709D5D0201386B610B100F21DBB3EBBC580A82D
6A5D71B8337FD3E4D2B6D1E3E6BA7C0DD19CE0AF11F5E0FC9ED6453DDC5894F77794B953469B
BAF26CBEF0665ADA17752CEFF9F969FB54AE7E568723E465C6CA6F3472DF6E2FEE9D89190A54
C870061C42BE681B24D321D934905FE573777DF062BD230AC3B93C25B349D569346ACE624C21
F306582C31AC8FE771A8072FD9521615F240D847BF3B38C0B8D6E512DB023DE4ABB49CB7DD86
A0C8330FE483E87818AD09702C9F2EC3A18F162A4DB4A0346A54C2FFB67CBEB1526EA1396CBC
9C3EBBC6F02E3A2555F3AC4FB3F5905A1843553F53ADA4134D3F7543BB4BC2CDD3A2DA19FEB1
1C8840FFCE963182E15D0B6FDF2B4A4D92F5C6619842DD6328C1278A4826AFF2016DF7E66061
6432C264A566EF6F698855333F674285AF4A23DC5F5BD5394443CCB8163BF7DAF75583E24A61
7273ABACEBD36D7E73063ADA27F3E1EE8FAB1EA1447AA5F0BA37D0AFEF0E35603859F5F9B73B
5FAE936215F6F6A3498B06EDC29F1590D0EB7537216FDCCCFA5015ADAE555B8972C5EC22E635
6CBB4DA0A1C08AED4E45D776D81B32C079CD1FA5A73A36E98C5F400346FC841C8E043EC37337
A36FA1544E15E59810FB018C3F02312CCB54A2A5488416587B2B78D50FAE115313FFE586C491
798DDE9DD4B1BFF261B028C1B174BACFA015A73A117EC4436EBBF672889A180DBC6BA8B16DBF
3CFC6BD41EAE509BCC720E40F832A4B91A557D160238720DB76397B13604FDA0E5E570072C33
A87A9D0766C4D33F222B23FCFB7FD3E33769458CBA3C33F346222C676F45D843934B883B1390
E39CFD6E8009E20F3CE579678842D1A9BA3466A7DF9CC9DEB308B15748A9D98E74AB56B3801D
FE74D9D02E18320C6ED9AB81C400F53C5C466240760BBE36CB2A4FDDDA7B64A6EA96F3D75383
B3A057D6C83C479A84E61601E63E24239C67E5AD1046573BCB5A39B2AEDAE5DF833BAD493455
07AFB2D4F1C7BB34414A036CE3E1C29D724D80F645E56F5015DAD707C9D7504FC8C2D533B8C5
A9D64FEA3D7BAE012C2C50566CD3D244D2C8AA6342F30E197ED64DC04E23709A5D5A274708F0
ED2D31FA6C45F337711EE0950841C25F621E76173B35B275A49AC600A86BB40DC26F0697D710
BE562C488F18625595ADB5604042C41E66A5F4FCA616439D45E6CA997999BCADF3B053169DF1
1124A59FE543766714ADDC70D35EE03CBDE32CA25D602EBB1557BE13C1B6594EE99D83C37087
5A3B3D539FC95990F3F62902DB0ED82871C9F6044FF5197D94D6BFAC765CE3F2DCF66EF05094
B87F576A496FE4FAE2C1FA1C8D1AE97B01687BEFD401ABB8776C56F169047DB3305EBBAAC795
B8BEF312B0325ABB01C2E42E394E504EF03AC2FAE54DCBBEEBBE1E72B6981A8C8E2DAC8E7229
8A470E78AB5F22FF53BA32A654823006BE8F3DF5C8DAE4856709C28041F67035C23753D34A7D
53BB0F538C18DBFA6B177D37EC9592F4D6BA0141A9ECFD68FE8FEEEBAB7473A1F8799E786FF4
BB945F652C33DBC7EE9A020A81EBEDE821E7479C793326ADC2CA01F78EBBC1C498887771A7B2
A5E5DC70EE86E79D35F6E6BD31CD8D7BC0B53A110A4E3561267BC70F9AA3E1F332A7E153CE14
21EF348F10A3A7FE031A9E6490C0902907ADD1003B19CE70AAF7A9C16ECBD06F0CC334F7546B
8B92862AEC771AD9803D74483FE129E00960E00915EB3E0B7C267B22CC8A4A838DED3227695A
E9EE3365535C3239A8D39F9B03C0A9E874B72B68405CF5D5B2D7706BB13930AD3EA0A336EFA0
5209B6D45A7C8ED157252DC0542E8D59ED33F9D55C2E6F810EA63291D04232D41DA5313CFB65
431642FE309872832B18D9A9BBCBFA94975AE89B15653DD1A7F5D5E8DBBA12B688C8DE3AA9B6
7D8A156688FB36BD79023022A84C74B1E3D0AEA142E59C03C8E3E0221E5FB5A47D5680FC66D8
53A6EB3A32677A0F6D999F28A0EF7D1262CDFC5B34FA110E786682FBA508A786DF11CA797DD0
B6ED7B59DED85C124D5C99801AB5E87B422ECB671A9A4F807B8E3E557AA39745DD1EBAEDE105
0A0DDF8C8953AFAAB5E412CC1C06FF72F2715FEBA1CA923295F82F5FC64076E7F6E839377A44
F37ABFA10C4872DAA5D26A1AF04C443BF51252CDD33B0F34B9E27D4225899D3EFBDA47A4CE84
906684CFC8973DD35A9A18676A01872F23230D1D33241BC6941EA036C7F3F22C22A3F2A8013D
7711942737750839CE509D7A9CD371FAEF6A75FEBC5FC8A701B8A1B52BBB3C50F0DE0DB24361
E9CDB147373776542089E3A5B148A46006EEC01066FAB03792F032D0349A117E2045D38E8040
3DE61B79E5AFCDA735FB591CC7A6479501718C51C91405327668354EABCAF6A98D45780D0ED5
34F7D90D8D76897565777FE054C16C0E31D83DCDD74F81BE988300EABA8DA50945AE593E3B9B
5CAB2CABFE6A3D8CCD2CB6242320A8791AB24305A6DF7BD192AFF222D465E9DDEF668725BB3B
698B6C2E9330DFD418644455208ACE47CF7E798D1D07D3077511FA1B11A7B839C7FA06C29562
649B97FC42B511BD89BBEECA9D232D1C07B043CA5653FD039DB944A8B933940D5AF2F9D34347
7A6BE7CFAFE244366B57E41966BF5A30E179C04B16F60AAE34A19609CEBC23778BC1E678833B
F08105A50EA9ABB8C50823C5DB825BF2361EA64D7CC48FDD14776A743288E00DE4735E9A3B26
C52BF851444F70706D9FCB68C398010134CBD30DDA818B040D42F19867E9B09DE62192A8C5A1
4419BAE518A35317D66894D199DDE6F943F2D258CFED511BDD291BAE08607540FF0E4664EAA8
69818D604AC5A2C1D56A754DEF0FD27C384E2683C65C42F4DB4E9CFA3485A0EC9A2677DF47B2
98E0E0527629363C4A0BEE6C4603F6039BBD42DFDDA90A3F4D5AE254094D0063201BE7AD206B
604404F03BF5E14EFCEA11ECBA0CB622AD1ABF6C392E3BC436D0F7283825F697D331BD9CE8EE
065873651A1D45EB24400D33C53572C80B8CEF8D5A4C8545DD36D9EDD61383F6B0ED4DB7C9C2
353D856ADADE161E5A5308BA61F5B205ACF58ADD1D9B1F75944ED897A579A0B97BC1387EA308
C4D70E79A1DE3CC49396FBC6B7BAF1B6E317C318AC309BF9ECE446C6E66F5B2B1D510CA1AFF4
DE002F71D18F9B0B471DB501ECA309A56A995F373DFEED6AB94A5E66D7EACB9350EC5896BF5B
2133A8548A557BE41FC1CE7924416A137748FF1806A6644E4328C3CF8C53940122389CD7F0FD
BA308F726BC0478D601CE54D9286BF52B70EF63AB46D87B74EFB7C926F5C3EB3C0D997FB4E8A
64359B62F397EB3EDA2C05C04FB1DD8DA815C7FFA7032207FC5CF989E01CC2042C2615AB78AA
989D27C89661F7C11EC5C0B79C7BB0F29C09D1C1680BE3EA460C5137FE40E5CA1BE2150CA6E8
EC1D901E0A28B3FF06274D8D19EB08B6FCCBE599CDF91531A64F2A0E453B0AEDCBC99448CC68
E4CC7C12B517258A0E42FFFE03F9034F0AFFFE7131748348586F8C0DB7CBE1B00F589DA73779
C6C66C43D32393F1D3D98D0C2923DAA0C417BBB946FB688E62990F1C34A89C6B1CA9CF348E12
CCC8FD2148BFD85BE2DEB4D1CF7DE31FB09D4E216384A617E98EB3EB87F6E1AE39971C564C16
711F834FFEF61428275471351941897C9D78736BE6679385090DE06040CC734215DF9944A68D
ED1E14FB23E52D2D69D5B1DE7CC51AEA9647D4E0631E71B6D1577B8E47A00A0928DFC1A158AA
A3468C0B774B6AF3BC48561E8F5A07BC894DEAB22D3A21FE824A8612C19A3AB3D981C48912BB
1C3591C68990B9301570929B07983C280C9F0FD34DD0A4D9777325D02154546DE7FF244FDE20
8C067B40849836F9C76AB6C432F0364752C7EB45D7C51818391258E3E329CD6CFEED6FC30349
6BEFE7C34D43A7A3CB7929C5EB897DE41043B50C910B0120CC01A74AFC294C3D861F76100A32
C15469A1C41036A5F1B4BEBF4E11AEB981CCF4F62F44857F3442F4015C79BE53AA1292C5DF3D
88D1F52E019F536F1A9A26329B6B9192FF83AE5A45D85EEFBC4562264783E99F08DDC456588E
46C5FE5DD923101D3D26EE445AA7FE201E434D094E722DAC7E1FC90CF2750BAEF2993E838385
552CD4F0F22EBBDE06AB6A4DECC5C5241A93679463D3440A77899D9DB2D62C6CBD2D977EB4C1
BC812E765D0E3E3E5DFBFD1F5B9C8071AAB48D5F23D3968F02831B47FD7BE3C5014D35DDBA25
74EACC5B36CB44E60DCF9433C0145EE78064A97C821B9AFD76F2A472A7032652B15C2A96AB29
E7D46F3D501C7E46B37173EF66F2FE026959613E207693B883AF17DFFBE88531A66A592F3669
CF48C69E07E7EBC1E8BEBA446EDC282A148CB5534932E7905103F4CBAFD1DA157E2450BD1539
1CE17708CF5511AA895AF5F09493AC8CD0321B22574C7E5741FE075FB687D0D634B00DD48F22
E90388B4E43FA62B2E85FE8F2B8C05F99A5CD864B70869A7C9B603FDEC9A1F781927722BE2C3
C376B29BDADE205436702FABEB452B6CDA2C15BF1F3FB757753EBD0AA63BC54E803340FAE16F
23D56087AAD0E91C903D2F59A0BF0A8E746FBF58B8A9913B9F795DF19811EC2D2C48204694DD
45FA65490DC3FF0988110AE3980E857E534E6059DC6B46BA0CA33CAC2D35BC60ECC96DC1C190
019E95F912EDCBE9BDD1C18480840106AE11111F79468C1D7B0D39B4A87E4BA304B6883C7428
0BCFEBE08E7C408B838093BB610BA23374F0500613D17D61B66E5C5C8B99ADF78AA59ED1DC2A
B2BE1337DAC52CB795491515CF02FAF1E6DD64295CDA788DCE4B9AC9946312D6136C9A6DF5E3
F46F41BD34004CB620535F66AE3D3140C6C38A15F4633ADB13D3686F3880EEEAC27C7C1F509D
579E204CFEC143E3CD7E79632F67DC3608142A2E3FBF6292CE3D210E70A37946FDEB5C640EE3
DA28F4D9002B0C4A845E2DAA6AA87321EFAECC515B0B92865E63D4ECA42A00CB35BE2BBC5D49
82539EB42507299564FCB6047008AECE635204DBCE0485929FAE8700C2B886ABAE944A56F1B5
EF46662EA92A65168632289F472A918AC1BB5B0CB11209FEB8027C3D5C62CCA9D5DB1421CA2B
B3B36E3ED784635ED1D20DA2D90E39C954633410F679D2CC442C969145C12882E7E8F016D4EE
6CABAA402DC7B45E152583FC505C5FE9007BEFD92CCC536A8EA1238D2971036B7B4352C32FC7
A8785AAAAC634686151958682CC7860F3C574F63C7A55154AE331C2CD24033F5FE24D7F481ED
114C9F9C6F4E1706B39B9C412ED99B9A7BA074910F123F41B22EE7701C9B561BDCDBDB938B26
C21B15A86B9E5D5D2CF4DB98274EEBFF86B2D50BEA599F5F931F185200AEFE934AC3CD0908C3
E5A8B1AB834CC8A05AF72A59DB853DC4F029146DAE56C097BB28561F889D6BA1EEB7AC423F76
0FEFC3565C16306BC63380ACD7B9BABC75A1B32F5133A49BE1A0AA499916FBD9B0A3DCCC22F0
6476F79704C62FF084F1982F164097A8B4A0360D19C629BC43205A45500BCCCDA7CCF48E9C84
F4C2948E3DBBA8A76C4914D1DCAF31B0C6CE57C4A51E68FA5505D078D2531F922A6C9649D01B
086C19BBE8FFDA5FA42AADC9A98CA8DE265ACFF4F2E2A98EF48D39E5FC54C58143A0A9BE976F
3F0F0024D15D4E7EB49AE36F96949F3C0876AA215E1E355D722DF61FFF47631633ECCAECEEC4
51206CA58AAAA77214109C0351062BFE68E0D320CE627EBAF5CCE20CBDAD884E573CA6BE0F27
6FD095ED7A81F0994D19153076280C428A5C9448A7A7B7CDA48365E36B888524313D65EA7B44
DF3969AF4567D05E0C2A648D4AECEAA8E0CCCAEBE23421D7A82CA4440D05B3F2CE55822ECBEF
ABC98BB7DFA4277A5368423A106D7CEBDB46E841EC878766B0AABE53C83765D594B1F18A59CD
38E100747ACE0EF870299D87A058A7877A5EBC762E5AA111927FF102E2A42D845B964509131B
C8DA2F59EC561D4ACC7E82B28C801A716C86A2FE95608B12BEE661D2C47F147A2C4A95FA8BC3
7F2C077CBD0C7CCBA012A057BD7A98976FA21523B67CE24DF332B4E7153B951FABD58CD120C9
2213ED1D5BBB660D643A7D3F1EB903D85F672571CB052F5EE854F02B1FBE528A6948F583053B
7B828A4666DB58D87C83813B149E9DE679EF8A6700712391BF5169763AA5E866539E86731D2F
B711D7429EE1B404A14BC37A8874F178A915444A82384BC98A1307E824F45CD115B86D906DBC
B6C22CF2614F147DC393E641BDEE5E8F1E0DE44E362F8CFE9DD71D05B6AF6C109A44BFDC36B5
B20A3C2428C4B27162A8B03055D1CA98643EA92C2C10D732B1B06783B1EDD739DD307949D14B
EFD76A2CF1B94747BA5F05BCA84130B3B3E1B3D2E9306743A2B5F61F91098029E1ADA812A6E6
9AD9409FFD6B10CCF6D7BC08A16BA7B4ED0F60D1ACCE97E6EA463D03682346CDE640B28C31ED
8679E98A0B79057BCAE34B042182EFF4C9928C20A59AC246B8A19C728B8487539BAF7B1971AB
6BE8AB09B970E96F2EA12CA32A6ECCF9EF65C4F92369149628DBB357C43449B47E7B1A2A50CA
8BA94841E09B393ABBEF44381407BC2BCCAC2D56DCA4CE2AA39048B0EE2ADF39E2A487E0F927
130A32C647E346B93CEE6F7B6FD57C2A5E1BB780D77CB953CC24F167BCEA2F37E7D1A34B2A3E
491880FE33F380BCFC42AF70B17EFCE4782FB95F0EB1173D13C65C8A17C467D571A943EAA00E
DE102D1A92B5E35D57745F1693F100A3273DC9A4DA73B86B26372C2BD3DF1BAA0998D5EC193D
EE568EF1708790C44D76B94C2833BA974DC33D3FC237DA0594521AF4CE59BADD1797295853B7
3A62593D31F868CCC786F2D6B47D6F08EBA5D55E3C068A3C3932367FDE432B925F4434299B76
8E14EF149B1F74F7B139316C96EC29C94B19603A5E9BB336549FABFD2A0882557DD55973FBFE
55D80B547AD0DD535E1EB2F352CE6BEE90933E737B48DB11A142E0E33BD37A581AAE0B616628
506C20240CD37673346BB0082C14C3D5F190E47930F5C652D21CFC2B5175068A03BC3ED8BBF3
96C4CBC28FA330C00E28A8D908C02ADA9B76AD6CFC99609702989F8FEA38FD5B25F753EE68DD
D818A26EF915E3CF91660E490F2768E3EF01C8DD84BFB78B74E9FAD40E3E02FF17CB014F2181
6262DA78DBF4EC6B7EC9DD347004A0478AFF1654946ADFBA0F0672C3D5689DA0E7642077578A
C16E83990E736A9EA2A99334371571AC8C65241A7FA65B26A7C059BC001D4D08548883BF0FE7
3D1F996256E97C3554FB490063F43447C25820A584B00ECB14FB7D84598A7D51351617AF00BA
BF0EC9CB0E10782966CEE4C3FD20729D4ECC02B81F7B06035B5BB9AD8BD38A8F9AFDFD7CCF52
FADDD35450908DEECEDADA0C34D5B41A9A66EB4B18E958AAF1471B5129FB40AB3E41724EDB73
04B517F042EFAD8422DBBD04A4788ECB1788EBE48EDA70E8E51B3B9043AE23ABA033234EB921
682A0E222D103FD4DA47C0FD59B1A17FDB6B37D0DAAB9AE29304348067F5BDF06E3816955876
5E532032FB521D9D831B21610755679204814F2C27EC891993F291867CC9E08F3DB0937FC5FB
AD4B8DE41DE4B89B935B8862BBE8EA2E49E0A9B1489FD2F87ADBE51DC2145B305C1E8BB9E48F
219A35F4CC9C87DC92B32D77ED0785D7DFD71FA8E8CEFF7EE13C96C8188A5A68509FDA4C7F0F
6655294070AC466104E3FEE7B8799246A1C58B90A382164E4649CA44C25352780EB974178C3C
08DBCD8CD1BE737D8DD2A28BC4EAF9EAFECD3502C606DCF766B7F149C0FDF158A656231B8DFA
52F2CB848E3A615A804C671B68B42900F1C268D8FEAB9EEAA214750C955818298FAEDDCE24F3
E162AB5B7FF485833BF41D453397DAC7AF4E046089BEE80B043344ADC5DF403B35EBFC893675
D02EB0E65431B28BDDF472BB329F0F7E885C5ABEC6B49D19E687B3EC6AC0BF7F7BF5E6806237
44C95876A27238B0F39E0DA35A572917CC21EAD9DA2DA20180D728CF3903C61703787367AF41
998183A3B15604D55AE0BCC8961F068A4269580DE4ED0AB2EC750DD935C555731D6762A1E8A8
FFAEC064D6FE4F812222600D591A42A6D77704842B588612A7836CCBEB9FAC05E55F47E7BFDE
E345B6C7AB168A4F23B33239CE3DDC2F1C48109E419F088CEC7663943D6A3916EDB80E8F60EA
961710C7DF5F6878939F3441C4B4C0E2A7E7B9390D9DEE442686EC66386634F18A44C4C8FF12
81EA9B9FD2F495545322F94BD0240080C67E1CACA89766F5A44B4D4BA4C78BFFD6A6E21C2046
3931A8E2F67E453161F5EC9F5B43EC973CA7F580E65B51C1B2570C1D9E99D085D34A6688B01A
372564C26A04B7B3B1920E3F6B5F05CB884914043A2D08355047A86040226F33BA45F667178E
F1FE8F580D6B7402EC1AA512380EE3D9E04BD7F06B1C6590C55BDC1509B61A5496872CF644ED
E3217FA1AB191C792130C5F5C85BAC90DE012CC5E3D1D4409A3B0EC6154E08F80E80FD398D8A
3D8990D4D49C6F406DB7E5883D60DE1E8033F91DAA038B4D37A53FD1C76A65F65F88F3C139EF
9BFE3AF1CD617C0641093452E388EBBC91E8B388AB0B37EB285C663D2ABB87C905A26CEDDFEC
2A3732294970307CFFE627C8B1604C46C15B3B34DC51CEA3BE1AB58B9F6B105751EDE63A4998
59FC6CCCF96EE80B0FEEDA308E3076B1C9E16846546F4DD840990BDB4A09EE0DED46F488F22F
CAC8285A2DE02ACA27E6A37EF7AB78A5C16FF950CF0CDCE20DDC83CC8E997976AA4F275C6D54
6B4AC762F827CFB210B3021CB982A0C8DB777C7C8E388C6161810BF403AC874A2FFD3A6CFCAA
59A6E8621A3C7F3EE83FB4DFC27AEAF47B81C833CB6AAE9A8D26F2E9E55FF893B52CF03D2333
C704EC7E50C3F649673E37F545186F2B7EC279050A28ED35A1E7F753022A9F073403CBF4CB26
E4B29F12436CF9BC0ABAF3FCECC87E50B57C6D8D6D25F6A95C27D1438C4059E85D00E1ABC89D
EBB138A1A69E3D6B57C564DA0409DB4DF69CA98EF5F8D71480BECBB18827DC1FCBABF3E2AC34
67C95833EEFB9B1386357EE570BF53B56EABF79B38023A7ABF41E0BE2FC57BD17DB451536D28
268CC27B307FE1D1FCE95AD43086D5BA74F2E7395BA16A389B6458E41EBF52AEA578A1F33178
ACC79E9C338A7B088932E19F765051909D03CF6B1904718A5ABD406912FBBFEC609043B00166
05E3D7A41AF3C5A13770B1AE7D4556F7C86F33DFAB8BDFF0C7D4127BF2FD9D9D43F257D0D820
9C7E0270AB3F4282E9AB7BE3B13EFFD8E04EA47DB68FA17B95A97DF15FC5F1860F24F7884383
7E04AE681D50341FCFB991989D54B68E04EC3D9FA8341C948A559BC98F1B16D40EFAB42B89D3
6BD7F565282F82CAD82CAFF529C959E71F997F3BB98BC7E25F63479D083E03595C6AE51E809A
0E6D0D2E6813542882C558B0F8E226D9CFD23B5E23AA4F3F3771A9E4150FE4DCFB526BF3019A
516CF22B81B8279B653948D82056178B17A1FAF22F1483F7ADD64290D32F9266333F6553EDA1
0CF89FE099DB3EDB47C527EF084D3F1A50880D0C516921EEBDD1CCA2D42E2D31AD3FFC29E403
3E521AF4329C14C5A997B3BFA5A01424ECBCB79BBF8E9826D94EFAE29EA56D9DC8DD58BC3A2E
B4A5398F210589333D9F2FBAE727290B112A99D88869D93AD7F947708FAE7554C10E66A2B566
4D0B93B573BB94AD5E9376F9B702E13F48647732EDE9888B4F3860C8BEC1A11D2D9AD0F68D16
31177BEAECC9DC265F6273C8FE9509227A278EEF0B51FBB371A5C266328E864CFE045BAE9043
DB5CC27CA3A135369CCE05D168B21D6F8448DE56018E75C6D801672BE1B060F3CE416ED35330
ACCBE525C0E8931BCDB44B2EC1AADCF50FD98644DAE42A36222A191D584F250667ED7D1E8979
F41ABE91B5C896D4E216D09E77E6152C7C2E77B2293D33B53E6B4F749C2A5C8E13BB879B2DEE
C9E978C03C036ACA32E53462C2B73154366358EDE11A5A116DFE2F2A7920D72C2B3E805FB8A4
4F77434361E8F44BE49021599D5537D3FDC6D8346F6A0CDFBDC1BE0BA53D5F8597B7A3479D2C
AC79DB5DD3D6DC26AD416293B0460A92788BF83AFABAB105B3268E384CFC4A221F2EE9C9DD36
748856B3A5E00DC070112016D498F9F0151FFBCB17D0C6599A38B4A9290D719AF3D5C0ED8E5A
DC786D07A2D7DC088BE3D78D40F1FB1E7463373A4CF8B187E9A6DD431DF4264C04411A713EA5
B9CE8811825EFB029F477DB10BF1A1AE345404B314778B2020F189EDFC2ACB7D5F2134983518
3C616762954409076F484BB9EEF59B13BF377D3BCDE760401AE7A32162523AC2A493C7D0EDF0
2FEFBBE8CBFEB0D0448B2A9A416360D90C5C2F2C8D7722FCB25F40ECA5646294AE6D56E8369D
4F4EE874AC5F632691D2D1560FACF1AF9E0F8E714C819F117BEA413C9CA5917A3E6E340AE5DC
77A34A618A849AD228CCB66DCE7E055EB01CA5D005BA5C8106785637E0E2F2377696D5ACE3B9
CC6F5684F32257640AB82ACA35DA6CB584265D78DCE3F116A6FB9BA69FE829C46BCC5F6560F8
76A43FBE95C3F134C2FE92EBA0C348E3E25CD44F779179384021C3A4399F6BF4452BB2269AAB
2E30C6564E620DA93379880754F154018C8B88DF506D0D7BFE22612B7254E2E0F5EAA18E08C8
165783C1A2B5C7CBD9C9C111D49019F44FBC669334780F5C589763007C6B6289D2B2FD597D68
8ED8EB55658A7B11814BF1890FC65FDC74C50EA27872EE211BD1D64537B6C1DA029E20776701
C60F3FF14062189EE42969530334E870E50698B304A3EDAFAC9C306791175D0B1BF86F5B9ADB
18B7E777A3A4F11CA323B6402928600CC19275B4836D5A5C0511F5EE0B27CD17510F652D6C14
5884F9D33D1E1D3CA0EBFB45358925F5612F2CC7D214E8F93E997B0A8BF50A0F7DBE6344C0F5
8BD7C06719DAE4393903721269B66CC064928E51EA12C2700CD32DC3120CA226F86823480723
9BFD81D8DBC417FF789410B3AA5FDC306A2797A49520653DE9F59DF765556BA117580B98D8B7
408B283F9213DF418DDED5981AE5BEC4B20453134BC45AF3E9C1EDC3A87D67EAD6C280CE5C8B
EE847E121F41DF9A2C38570393633099E244F0CA2ADB19498200C75F92BF85BFDB95F0B027E8
F54CDB4B074AA8EF93FA137F97308246094275E99E814AAA8C36DFADEC01D3912E72D1610FA7
D3EB84CA923C0A57E997BFC4DD23EA80F3404446653BE3835285C1094170647AB240BB80D4D3
3FFA2A5C2BFC5AEAC26377FA2569E05B5059B76A08DF8951F52FCE07B3D287C6D8803861F2A6
1240CFDBD9121FE61938AD83E1A4DBBF8CCB4D95C9995E62AB3990AEEBDD50B99A66FA51F2CE
7A15E2819829D44BF0983F10DC8CADA99A718F85DC67801C8F67CD249D1F82AB48C546055D75
2BCBC2CEC1C42AAD7DA786444F6606D4916B291CF80B34B27FB08BDD0FEBFB66CA9FD2700250
2522A96D7683783E61CB4FFFAA4438FE888FE203300A3A701B112B212887A8E6E122A937885D
737D8AECAC2DA706C754EF58ADBB699DAF6CF4D65A75449133B14753726D2E9D4E1EBCCA12C3
0B3CD94FB8AFEE0C84ADD0513E188488C31404AE3E396CE84B557B02CF5E21C75BF0382CEC47
54893BC19308039704066F159EE7D9B024F61CB38D5446EA37300170BD03502AA92D7EEDC941
41FCAF62EEE6A7D4798AEEE1006C533CF945761FF227819373B0A0AAEC098023979EA3239A6A
4BD3BA66E54B4695F908B397845CC106DE0AE38F319EF1C6B36731804FE5D7F8CD9E9FEB49B5
3F87504C0269E3B96D77D95226417D0E806744FB9556061EC3A18B201C964E808443654BFE67
5C548D90512B05C333B8CA51C6857512FAD853AB9CEF74FEC6DBEF7E5C0E13502F9DA7213EE4
4C220A7E3293A76739F2BDD4F5ACC5DBB3DC1B77289F6303AE66BF3EFB4465A182B58817B90E
97F55E74EBE23C637A651A60455182BF5BDF5D11D306A34D0B1472CCFE68C598D08F1801DA51
29431487D7EBBCA2AAC7F84B6A52AB56AA538957FBB6D50538F4C05C10E6D21207FCFD183D1B
9275E1D1D4E4F5180DB7D6BC7F2F682526A21D5754B744B739F6696AF9C3D647AD07A74DD001
ECA3CE426BCB9DACB12AFB0C878A0CD6A7DC68D401B3FB75C80D56C517F10CF425BC646D92ED
B9ADBC6DF70DE17A96760162E8C72AE84C5FB941476C3B81489A403EF1ED1CC373DE8460F36C
EEC7089F4E0A8F60F183F64F3DE6F92CDC2973F11CF77C661E000FFE7745A2C506E0CE49E804
ABBD699BA871A70DC2916915B50502BB312A069F9C0F36C69462494ED731B000D027F96AEDD4
E43172F596C4316ED123BEFD7FF8B67EF2DD9B94995F222951206926E416FFC0103AE84CE68A
DE56F94377D5C885AAFE60332587AE44C4421245093E2FBB21268FE34A6B121541478C8376A9
68AA6167B74EB93167DA65C1B047BB073338085FBD167D73BFB22F9B7922865C68C895F70641
50D5094628E62D81EF5CA803DEFC62BC04D46D52ACDD0B36A478F90D6F0861C740CA4BE4469C
891DA14945B7F0FA0EDBFD910E372524CB0CD5AC58F63A0D08864262EB97AEE57D1E7E654C86
ACE1E7662841D8E7FBC5CC63E4E4738ED71E245DB2B0E835B64FFFB44593FAA8007022809990
97BE9E288E6B06180CF25C5BC1DF89C428B950588A581B75062623B903BCB2511B4D850A7671
53F7B0EA537CB807ADE40B83FD0287BBDC4B630024C93A6E4BB137A8A96D70752EE7465ED16A
F46F4FA6E7597680D9D6574E8338F1AC32B2BA02B9C3FE981FDFC380AFE9D3116EDB407CFD35
85CAD451ADF182495A63A13E78EF45CFE7C2D451DEE1BA98107A8563601AAE90D8688C6C57EE
923EBC1D6F1D938F010F010D7A621447023712053D842A65C64C8D14B3005087DF60A0343D0C
90DBF228B86C67AA4F4962CE023F30E68EAF4569F4C4A7E62953F2BF257D31E4BD7F751FB57D
BF319BF73D9028EFDFD5A5F2CAB4E20E899E1EAC7A925380800A594BF3C60EA9BACBE94644E4
9549C1A0DAE6C80D6420A44B60CD0F12A859C9FC00C32017DD1C40B01155E596C81DAB2C7B0F
DA4F20CF10EA1D6EF7CEBA65ECDE6527CC08614A76A94B01354D987A8B02FF2C10022008FB27
EAFD604096CC2E2F04D937BD921322F96038EE74C658C874814E4A56AE27CB184FA8F5F11F5B
C993CAEF2957FD56F5A586A842C6EBA61D3BF4E68F95007CDA24699FAD5217C889E98F9F1BC2
3C39D0C59E55AA28A932C1673EA621A9895C479E94444B2E9F6D82A1F941F69E9AC930744082
0E9A1E6CF2E2E1E526C8103495AEB28F2499CE664D9F11717047C1770507B6CC7E75613FDD8A
1823082DB5250F37148B8B444A3B1787151FFB1B45A74691AE38A64C02BD655DA80427C704DE
2ACDFD8342DCA9FF9CFA62F326BBC8DB8D64D53811ABB05C37B6B9FAF1E04549CEDAAB024CE7
36EC5021C22A0F8A7EBC5D14064BD5B0C341E98CF2EAE89FD6C6220E8F4808DD5143D8CC0B5F
B1D99E643CBBE086B931915D3F4CAFD03645D200843D99C9F4BCF2B634DD2245272CC6D497A4
9F6615762AC311D267C2CF3E687B296F726B159B0AC5F44ED24DA19FEF5FA651E8A5393E53AF
9B0DF4DD47C81D25C9DE7A14225B58D18F4D65839288478F33253A7A2CD037C22B5033E35C43
3AA6476CA1F4EDA558FA9969A0AE724C24849569014CFF78BFBA121DF13837EDD2135ED213D2
F5F8BE83947A72DDE6D5218C9FB203F3B5CD6547E31820547A7195B5B0CC1775E8DD953AB80E
DDC03A1CEB8B2BC85F78F0EDCF2D6E057E239E61231AE919C7626F43C30041733D5FDA6A8C44
15C4C41F44693084F32E7CEA884820AC6E50A9D2579152A113C2876BCAED27B9C36B2A3E8944
784C3B85F6F266097150F0AF9A30BA0DBBAF32D3B9FD390BD05D1B80BDAE81879B71DF6FDC2A
04CCA704D4295E4E54AA307DFC639D266A40CEA22259325811768CD41289FA5556F73B93A349
0173D9A820FFADC21B495227B71AA8EDC861A6FFD3A89B585201BA4CAD94C2F62039B549038B
7281F292C562974B2484008D1B8E8688DFFE3184A923562CFCD2351291EEFA9A7A0C3F1B1BC5
6A874EF4E6020604D0526B7BDD4555945021CCADA55F0E0273F3D9DC3DEC50E2A87BC58DAB6A
875C120110D6658A7BC148F0DBE21CB8CEB37C6030E1012E7230C31262922D13F132635267EA
2B6898CFF53284CDD4AF1C1E88B88940607EC262FE3A56FDCD2DD04240BC716201A2B3FE17B3
577EB9A787AD7A7C9B63C5083ADC4DD22BAF1EE40E11A560F5879652604BD942E435EB5284F3
88BE8D12A5BE2D4BCE0F01C749DD3A2C5ED12C68C2CF759DBCD03BAF8999A17A91A0BD74A0DB
B507CC25E2BB519375C5CBB5AC123D0492E4184062F0F7B5A1CE35A5B6A4E4E718524AFFB771
84EB54253BA8BCB67993A5D8DB483C59130C01A0CBB5AF2BE1EEEB7B5F671395EEA9026AAC13
9D6196791A3E3A78C5D7D65A5622E713E1C3A54DB9A5B3642B9381D3C7C6114031E9BBAF4D53
E138D2319A08EC453E919AF55CCCA18FB72CE6D59C13F447459224001E4A6D32AA844FD64EFA
893D811354613C43AE613B5B2709C74E730686F6D935964ADED4A7B2F595BD0FEA4F3F76D660
17EFEEDB5452F86AAF37FF813585C7DCE7E178C405E5C38AD13C454AD65D7F50CFE2F0E930AF
142443F8C72CDA9A0C95DB1310BD011D92C043A3CE00A22EB8559CA821D4DF94D0FB06C214E9
A3503D3C54C4D9A76611EE2E80311218EBB708C683CE67D34F4C8F24028076B333C5DAAEABAF
BF6624B0363B28C6C87A847DDAC8488ED79EDB8F4E66070391B19552F433256A2AC3F047F62F
C6C2DD935E2D28464CE821CC134C7D08D1BB2C7A83C4F63485F1B9F0B84483FDBF40FEC7741C
D7FCCF3F6699C15757FF30A10E7A9E8D084A366776CCED9FB7494D0986E48DE214D6D091F544
5A34C8E0DEDAF0C62973656EE6CFC46BD40284173116C43DE1359D3E5811443C4FA2795BEA0A
39A07CEB099E3112FE1983F9F9F7FFED0070FC6DBC05828B5F05F9600C9AE4D65C96D48F7AB8
75BE2379198B49B891ED55DAB2B43F4699117579532DD00F418A7BF2F4A4B930CCF3D6A84D35
AF5EA4F1FD59B23802ED52ABE53AE2A22E57472F3AE1543F96A109C510060CA79F76936A4664
B4ABF0752D989FB6C32633F3631A1E78E37644A734D6ADFFF0954DFF0F5C4BF85B5C304AC2E3
A268E4F5CBE719F4B0A227785696F9585AD741FB4E31909A311BB7F0061D278E73BF66660D7C
53B6E42E52EEB3669FF2DB9B9DC61F8B6BFF43A41A7D84135A480C39A80A0FC54FB7C4F27793
4DD209D5D98CC6693AED344D52CE645E7B86DBEDA228635370AE06348E91429A7D572206BE9A
020B63FD6E01543024721CC14AE375317E2CADC3C1D3695744A1F7865A5602C78F396F466E4A
D108DE2155B978660D2468674219D6ABAB405F28744E31806E2BA7625E5E390F42D40A8797B4
AE8E5D57BB3971BA23294E4EF3053FE816A5EC59017A393476B0209FF792059BF48987452DA7
80BF3394C078FE7036E9660AD57AC8AC4535F868F4C4B901DF2F7E259F4B53DDE4E4064D4CD4
DBEFC34338163CA9B13C89461D14261EF43B8353CE1CBDB3B7CABAE9D5314922EBAE7E9E4FCD
D635499E6B6113F47C7DC74DDCD80A293F3514BA771D44EDB177DE6C0FBBD2897C7B8FA779C5
C320AA7A173264ADE1B6569FD2F1B17463A39B404A972D5C6F2DC7E23E319B386F5620A78FDF
54DBAC40504C8A78B3209318EC37E1EB6EDE84A6D90D6CFB6CE347A795E791F257CDDB41ABFC
827D435B2FE60CD769622C9C0189390106486714AFF2A7F3B60CBC8423BC5CAEEB7F64741252
FB20757FD1A6A9E3CD0A2CB9F59E8268C1F2408CE7836D2A0D470A7A7AFB0A5BC2392B751D71
8FF44C91AE65D3090067A6E7FAAF56D720DCEB5B32AC9B9E6670350E9631780361B8E04DFEEB
6EE420419EAD72535B5266C17D8D4927C1AC7A79C20B2543DEAAFA58EBCD22E6526B8A9A4F98
E4F1A0CDC39C1A0555DDDEC60AE58E291B3F7E62AB1919CB143C13A24B31649B3139A3B72E92
D6D7A593EF66109F0FB3FE2AE2A5FFA9513D77F10588A4444CD1F5080499431D49E59A3FA581
0DE73B5439E074378B101049D89E4FC20BAFE3F99299FDFDEBE86091087E2CA7838F21B60CA0
2AD1A69E68BB424BF991427848FF5D6C8A6EC22B38B473B1D721E9750418ADC2349A3C161D1E
CEB30E9D85351147AADA5E745847B0755E6A9D077CBB8BE12B73D2D79A6B294B6B32C0CD7FEE
BD84C1A349393CB1648E07CEB271B0A852FBB942FCBD1C9F8FF982AF2F71DE7C4F57E1AD49ED
E677D803D3DC84A7F1A0DB7F7DDBDC7A4B05F4676BB75C024704285F0DC4C03F57D3FAD71708
795D7376321249949D8BF7986956B68EAA8A1AFA7E9CA00EAF2BDDB19F579E3E8CF0016E9B89
EFE303CA25B7696AD00C31CCDD7FA4D0569A54E9AFD5F15E8AFC535EFACEEB0F51EEE68B474E
F900DEB6D882611609BA2823F93BA7741C9DE2C64578373F79059F20712E23949C11B027C682
E14EB4D6524F368AF26E8618CA9F2EB7767B72A1DC9C3289965F1F079E044C5E2AE8AF531678
1BDEB26A67A31A355EF9A3B41FD676900558A6BBA6F2429156E23315A01F786A336A7F53D1F4
25F61CC0F1A5AB85429AC8237616921E54BCF16C1D0E23336459E6EA58DF54345730D2A87241
46B0D266649783B7838F88CBF8025BDED1FF3B0BC772C87B1A5F146AD1749E7A7E8AB65ED35E
1D3BBE077AEEB9CC725F866CD5CF27AA4A930CCC3CB69DFDE9FB8A570FCABBCE86B87259A76C
E649F6FBE9A057C43179D2CD7CB34913CBAC153003C3DACF5CA1B46C21429519AED228FFDC39
73660BDC28F728B50715C5B246ABDA4E08EE9CF339CAC0A883C0B522BD959A6D669AE8CBBEFA
5745A69451DF2F916318CC0C4E9F04524F3A8A85B17E306160C674E9AB62A3DD5A6C2B665E3C
29DAEA12999AE7BBDE61087430111A481DBE37E4065B9B76A4A324D9CB4C2A82B149D07D2F5F
B1DF8DD000F67363EE8C6731C7EE240B0479B79BF9D3514472018CE25775EDD6F9160E2F4EF2
7FA14BD6B1CE95AF4F8997602B899CFB8D92CF5BF62EA2956D59EF4C1BBA9E57CDE34896DB1A
0DFCF471F29A4419794FE5F30DC45DEF63A2A017B83422D51BC5712769B888E4FDB50BAC4CAE
0BD349A60088AEB8DC80656461800583621C34D4ACD19B1CAEB7B23F2CBA6D966944FD8683E7
CABC431B92DD7AEF99421CECAC61EE7A69F64DCCD626D62D1B83471ECD60A2223E09010DC1D4
D690DF232301A23F7B58BAC7B230C2DB586450998422E3059670791AD697B287F6081FED65C7
8F77447350B1562B7C752ED09B95AF107CF707BB2672D9A8813C10F1DAB5F752D9076D045877
1DF8A63BF3682480368F62EF7831AA518A232C38B468E81FBBD29F4CD55B1B73C212A92D2EA8
9BBDF713871171F770DB5FB52A80F9BAF0191CC408E486165FDA739F434758DC2F23803BB357
3B07B0B9D2BAFB29CCF8E5B544A2EF606FF6AEE50E9ACAF87C5BCA04DEA1C09EC19479D21C1D
D332982D6C3FF9AAD2019FE906DE8DEDA8736B7621D3F3B9BB49B41C719DD006EC82D02A3DDC
E826C4DCF475A5EC35BFA44768C81EC7CAF47CEA007FDB907292E218C9DD612128AF4A67A7F9
0DB83BC4392609C240F40A34F67906C276F11364E651D67CE4E8C7D5A8171E10CF729D09A356
7DBD52587848001421E00774EDB4217821E1587918840DD78ED7629B41CA6F2E94712166E7E3
C87225C8E731F03D5FC0E21FA984EB94B91A943C6BE4938EBBDB4620EDFE199155B47C5384C5
F3D14D79E5B903CD83815671FC0888A689F876B95038B53D6B8A0F4A4F2A7E49AA664C4537D1
DEB1D3FC7042FBC6230C4F30FE308852195ED337CA757DA4D7A97F70B0F9D3890DC89C32EB69
4FD113A7B54DE89377958E7CF93DFE30FCFC10BFF4EAB69A9D2619ED6E08F4EB631053DB19E8
64E7B23EBAAEED84B69FC137E7E7638B3C224C41F78772BF2CDB7F40E61446D11EDB40251E18
8692288C085BE08F657A01E21BC373C16BB65F58E7BFB2B42C82067DC21D736BFBF00ACF644D
CA5DB3D5E7E80F49A00A376C1B552181A644B772CAEC15DF2CC4FF38B1BE0F7786E98927C777
A5A0E2A69E503A83C401485734B41E1EA34221F9DD3C896F400C60DA890A9AA1578EFE1C46B4
BD4876E7496E2245EFC087A2F265CA0636EBFB5C6F0D896D89DB8B1AABF53D643DF5926BD7A3
83623A4F00C484A2B4DAFD3F44D16473AC8663EAA9D96C1D79DA7BB07AE3D8F1893A482B97F4
0AB13886B1AF9264A70273B966D26FB821D513F78EE96B6C56E7EAE9FE563338841F17951D85
DE8C5D5C5CD9CBA65CD48FD718C27549F30C0AC373873A29E0D5BD48B547BF001F84FCAED31B
EB947B3B2E5C5F091A052332E71F0416F09B27C7722163B2CB6D1076A790BE93F3ED00A7609F
A9132BD57D0774A28BA64ABB2EE3078CFA833C4A9457E88A679FA271FB2D6D728110F1AEBDA9
0D848996C4DEABEA8E1C346D27E5BA56B6B14AE326FCF6D433C85B273ABF480DC940EE0695F5
AE3002C4E49A9502C3F4929298D6D1C1E19FD7687C285727C1495FFAE73B0064F1AAA0509A83
473F76192E6BB16411738AA7589B05701621227277ED9120C0F9ACB2E8284D7D8EFA9D298835
B2C00703E0B68B522EA2581F6A53320D2A73C367E1733E6760120814723F75A6B666404D19FC
C2E4560F7D6244DA90769F2B1BF170D39D285DFA15AEDA5C8838F3E8331062BC93F5EDCE7BF0
E52967D9C01A4036960F092F1BED6CBF092CA942194A24F13197960928917D30ABD316A022D3
A1B473C0838D58D377C6AAEE06C3E80212765ED904AF5D8C65DEC4EA8DC441F58E9B34D8D31F
29607D0FEBFD4EBDD54843B44835E587D3B71E4355B3C9A5593C1FA14B34C392C6CD68FC6EC8
674D7B39B28712459631EA68C7673C2EF73DEDBA8B0BABE9FA197EEBDE74E7EEDD4EDA8C76AE
19DDA1179461C67C5C92898CD8843DF4EAECD0CD227836F243881C8D7228A784766E09A6C3EF
957F817DD141F2181AC3B9B92527D45DA41940C1FBAB9CB50C781BAF849B79946C8BEEE79D73
26199F99E44CCECDE8F1005A469AE26084B0E56E39C62EFEB56CBE109C3F706071299FF79D34
29D72AA799B0902704795DE21554A9CBC20C5C2B1975E75FEF7BCDD285AD63320E2F4E7C3E74
9C954068E507AED1F0339B35CD81C19F9F24818C2E2908B8AA5E9E9533DBF5574B5DFB8EA9FB
88730F69FC52F05A9DC3FCC67FA95A2A2AC025FEBEE667E38027D892915C9DD5AADCC1C11F1B
34A226EC6AA7072DA5064D950303B54A8761E931FEBB307F46D4E9D1AFFC7005EBBE6A9D5C67
4C3268DD910854F6CF2730ACD16F62E8482B742EE2B367C34C12631878B1373BEB878E70839B
AE90CD8E5294C7C3D27EE5AC5D36D04C3D7F83025749B5C21F91466A705A3C2DCA5F3DDC1796
A29C5206DA68C2BD8B3259C3F0AD3452A9E3FFBB337770E6AD907154CA7B0C332CC4CD433868
458748406C2B973BE388319A0297245AB18345AD624FF01E005DD2A731CEC537A39210AC80E9
8F4025F4F8C4D6991064FA05C3BD289EA8BDEB1ACDFE4B42E90E5DD2D8382882697A09C0E774
39285CEFDF13703C84F6458589EDD051495445AB83556C972AD312E0BDB24B9BBFB373CE851A
3F39951F6042738B498CEF641F5A338610F091BBE3C3A439CC147ABDD1AB4C603CD203120CBD
1F265DF160F9CEAFD3606F491426EA0F26CC1F1A54812F67808DDAEF46FFFCF7D9EFADC1B67C
3DB2B66E61354153F13867616FA79C592115E8C8C270DBCC490D09D451CEE7006CD6E23E2C94
1D993FD9923C97A41788340035DE7235138711F63ABF5F6509988A35150D378C0690C30DCEB8
D321854C712479A570D8B72FDAE0558B4ABF8003B79DEB9D5824E962F581C2232612EC5948D7
7ABBDA8563ABF6835F75E099EACE7F12FE597BD028CE305EC456E5C2C01F4B81EEEFE9CAE0E6
6F8C7336AD1FCDACD37F748423F5DB5C95CD2A43D1E682F924F05A7592A01DB714AA21D1E94B
02DFE2F5C5410EB2FE41ED73EAA8177F23A3B0CF2CB630A3A498953952D6B0F0A38684ACB130
DDCA04D8BC293DF975894AB34E78EFD6C88E450E55A4ECC3412DED05B26880EBCC452529E6F8
C1AF806978B39F109F22379852FECA0FD5ABA5F0D55BB1E2F24264B97384F46AE765875EEF9F
F3DAB70EF28F136802B9C5D520B1C99E4E159AE9BE894E737B455DAF198B5D5D1E39B730C883
3A2964F353688D769E2AF599C6ABA46302970AC33280015F0934F4E6C19278FF583B91332681
C1037DDA4C628DC853B464CB31D2E9A6FBBE9BAFA3309BF2406A4A1710D8B1B652E3DE7A2041
177D13A8D129F77BE3B52C065A203574DF9A3BA5C8F1F7D987E064E58CC294DE07A5ADC607A2
71866B559AB7E60BED5EC6A01FD5E868A3308FE471F9AC3E25D0AA4EF0E2C591B067180B1534
7A23CEFB177A7BAD354596A82D6B88A9341EA1C73C7858C601024751478CB4A39F140A5123DE
52DF3676F0FEC273BD0F04F8C49AAA60736B3ECE24BB4C93F1BABD8821A7454B84BA00513BA7
E4237E42AE4561889691537130579DF475B694D78B438688CA78F470EF630FA5B1E8C83DDA19
AAB323BA0288CBF763976B715531877F27C336D54C8981DA7CD0F3FD2B47F3E4A58DDA9AD3AA
6AC9BF52440E8D2AB0D8516F57B43EC24851ABE139BDB8ED909689147EF83B0FD72F75802708
4DA6EFB31461FCF6FD30B5E8787D59484EE769D9ED962904E5C86EEC39889833A9284CDAC36A
DE959FCF82796532BE334BF1FF765913BE782AB5AC7FD0D7C9648215AC0A0515A0845EC49434
E7B55D442458C920220E5131865DE0F78E92AF19AACE16A59AEDB8AFB75C8350D06EFD1DB41C
B94F8CCDA7C1E3BAF79E2EB359501C662F563971E91BD9FF1075D1FD3E73F421035735D2FB7F
78647920B58F37BEC350168E9B3BE3BFCDFB4E237BEB4201315E47F355682DD91332873F2552
B476BA9D06E1B90C74A5974009990621D15E136A9148039019CACF98D656DA8AC1CF7C876BAA
AD79AD4B6F0CB0E82C95ED9DCD88D77BFBD676786D087A7C6872AE433700F1265549E8672355
FA7CD35BFE131839BA190C8776A3FBCFDBF91291C02D5652CA911A735E2384CA8571FA101785
400B4B770AE9F136786D37D4960C70C3699E650A28612957B01C947ED3AAA2796607861F7A39
58AA66998913C99E0B5F2B95FB67E04F7EBA856EC61E9BD3972447715DFACD3E4067D3C4968F
E9A3B0DBB3E0482951A0CDCE5A293BC0F7851E1C36362D1A0109DC5FFFC6BA417B30BFC3A05A
59B09FB65A2EED008532AC64D4AA1FBAED7F9B6C1369F8D3406408332C5D39EE08F44F45EA96
9C17B7F57D5A573E25CF1526AEDF9B6E1DFACD2934EE83B59A0AD0C64D6C73E4C8F477BDE520
3A620854F06787A432CB872DE5073CFCF80D97585A08163C4B219A7AD478D951D20C77505415
8389A12A63EF8C4DA7BB7C75B2EBDA87AB6DD9F11337CED1E50D06A304F8F0AA7F81185BA158
D0CC7E192681CA00C90D1C16B351F9385714FF846B19F0AB9C892EB22D3A8FB65EC31DC51826
89F64AA769DAD6237DBAC4FF50DF665F36D2DCFA79331F1A21135F3EB7DC143D39F23C9294FB
F8BC32B5C39546081A9D9F06F0B8726D541FF9E072A60BBBADE4C7ABBB654D8AF6ABC5616D2A
8F9C63B1A8FB425EB977FE3D8A001C1C25EA4B167949E84D10F550DBD55837F170439FCCDE1C
1A6B637C90006E1774DDE853C649B3FD29567F47E65DDACEF5933B4E13E51405C8E3448CE574
E3FEB180E5322F23F30F8F451D68D97B085B85EBEDE0D84CA8C566624A7C4A7A2267FF701F1C
9C0DD93BEBCFD61888B8D00AB3777E89848ED315E6074137D7D16D9FD9B79BA2B03E9FA79905
1D862B1B4E608D486B6E4A05B95F1C2997E3FDCFCA30E916125335CF2D4E81DBA785E412B21D
ED45269E69D69ED45402A901A55854BE4C82F5DD681E50285124114F612099D18B5FACE15330
6510EC15FB8BFE29EEE82C6E5DA45B0DEA8A671EE816CA0CF863A8E3617300D4432F49704964
9C2CA2404510997B1FBAC4E60474DAB9505851CB65EEC397278F11744D1328BEEDC52D0A3699
9D2FB3E34F071D93A79D6F5EF3D71EAB5B28BAB69F5C56A07F4B48F7216DB2E14963EF34C1D4
AB6F42669ACDB093BDD28F70D863A05286F4157FBF6B7C5D181FCF55AA327FF16B9ED7B88E92
BBCA83503971304BB93B716B6F8B63F02B5F746F24CE9C3B56859ED1285A4FEBEFB4F56EBE56
641489CB4B2D4C72F7780B37474E17C11E8B8778F2009B6D6EF74B69F0C95D416FF58D3D5BE9
C558022CE96980FF3D45CA14CE4061D3C3BD1298FE69C702F2C09A7B65BD600F162DF9905B54
54308965E9AE3DB3B98DBB742F17DFF9AB9122C1FCA143A9116CE537B797326B3D3F089D4D95
E6616F7616B258A1F03151620F7C8A9A377DE3DDC3DA6EE41F070E8FB04005F1A4B1BE95B26E
D6BCD28607A3CC29EE1F3E6DD88FD81BE035E0902882AB5460B384052827EB999BECCF16FF8F
35605452E1C3BF79E8966C9A7411B91D09A8912FB0371A2D2C3263564BA32843A0087AE8DE68
D0683399B1E13903191074E270665764216918ECACF7386F6497EB6DD234825CEE281B26F3A9
D950094EF279799D3A58BFDE58878B50401C0475F2BCB97CE7158CC398581C82AA7BB5914A40
2DB0E9A36ED9E21F9E00FC580E587702CDD0CD53DD14E1605DF6A29FAB2DCC2FB58A5E6E6490
8D1EE41D6D354D8606D2D91D02A8FB7F13E318006AF513B756C7EE6C45A269C491A82A3A51D7
7A121895FA9C4F6876A98E5C217127D89989EBAF8745B1ABB58141E4162412D39E8209ADE758
F34EA4EA4FE036E621DFB2D696B901E4FD5704903FBCA040F5048449E43F21E9D6E5397CB8BE
E73FE96110DE3C5A664737C3273E2DBB05F7FBC9E7D0C8D0D605CAF05C86BE67132F31D7A9A5
8DD9E28C30E6F3AF14956F0C847D45D21B14266FD71A02C60C289D1E31CB612485BA321C2DC5
5817A8A4558796F31436E0B8F82490C6CB02C7152918C98469DF41E21653155CB9BE394F01D4
5BBA088CB4CC44A56CC63FC3D665E2FBA873269C3C0FE183C5BC2EE306A255DEC478E890FF23
1B8C11587ACEA399FC90DB766DEA865051CAE84E2C30A6033910EE89479BFD2F4DE25F6FE9F5
C76F048EF4172EF0D8B822595689AB7862C9681D5712BDBBDBBBF4E249B8D94A64B55960C882
5987B5E381C610BCDD4859BA160228E32A86107987AB270B55E1514DAC916461571B8FFC596F
5F556F997BE54CBD0436A838BB8B60DDD741AD0FD6CCDB6ACABBC38373A6A533BBC384702459
F6289D6C732C28B5E9F124D9CA478E4ABC3FB345853AF7772EA3085FA0D892CE7E9F35DCC6AE
D74862D9C1094EC8BC95FFBEA334F42C43D01BFDF4DFA04E28A82EDB6A220B65650EF3B23C75
5862133523C1AEC184FAE8F6070CE01333CEB3C7E456C3AE084279AF6FF7756425F234BF5BD7
7DA9BAFC6CC3963CD5115B8CE8A3D0888CBA9C21C15B36338A54345E5A34BE5EB98501534707
D4837FDBA6BB5E6DFE7C4447BC7FF8C3949915913415E8E1421152D1484214AAC19152E68E1F
73248330ED7BA0940AEDECED8FBD2659C497F59E3F388A8AE6487BA4D052A1A2C3C65F13B475
FB552989902BAF141F5CD4C4F4E0F71A6C604EBDC91CCBF155CE7E210678CCC10F50CD4237A5
F00D4494C42D9C43E897705AAFDBD74DF5CF8DDD83490684E57FF6E6786E5E051C825F6579B5
72E74D57293D1EECADE5B03E6021F25421FBF09628DDD634F6C6EA371B77557544109189FF4A
258526FB3FD4AAA4C06BBD70D9D5EBB1936B4B709CE9DE36365D6ED46362BBDE995FA78E6768
1EA9DEFB36898CA6EA2B9A2BA3DF45105E164DA4B15BB576E137D712B95A09255D0D59DCE3EA
FFF4618415DDACA47AC8A6FACCE590964CAA3D25C25E393ECD66C3AC45D2EC76EF4910ED8F81
928F1FE26DD0DC162DD43352C444DECF6D55E119017BDDAF19EBF7ABE6EEC934178120520F15
64F84CDE6883A285C9ACD5FA478FA538F767EDEFB9060568DFDB36CA68684D3C64463728FEB2
7E77C664A26FC7ECA085372BC289CA166CB06B8EB5097DE997238AD4B95DDB5B1FC4CB289410
C87D1D221C256CE99F79A47A4042C148D5365F31F1B99572E0878585D4EE888A380EEFE18DB2
8DBBAF3E3D77FF43A2F445BBA8F86BD33B0D9FCF23149EB5D01B53371D3C0797806609682494
73F9B6343736E547F511DF82B1BBA39AC8823617A433E7BD7655C938BFF8A5A9C51C2C100930
29ED1DFBCC0F904ABC6E94BEB13379BE2B978FA16B020ADB6E9E577192E71EDA9B5BD90EDBE6
AD63402F92AF3769494BE1CE6B6846E50292149D585E0870C05375DB00091A3FF5A4D02D89A0
773CAC454A52EE0791F5D79376DB4FEBD7B13C05C6A7326795CCB2D48A906AC236363B4CCA05
7420776F0E65002BAD53E400B4AC38C2F5B0AFA8965A88460C5187165ACB1F06F0714D98AFEA
031B54CF26EC6ECFA259149B4804889DB4FFC664FED7D010EF9D9D89C745BBE14D41A9A7B362
74B008B2E8BF26CAC1CD1E462F023EDCDED2EBFB79521FE129CB1D6335091C55B2899E76C0E1
635D3E3D926912DEF5C7F7E6B570D39A5198B94A0200E6DA7CD0BD0E8C8B72AA872293426B86
B2B87DA2E427F2CE99C9473C9E93238FBE285B41D8CCB72C458882DA348CEF899195A50F9C8C
547A6075FB500F5B60F505B6089FBFE634B30D383D05958DB39EFA97DA54F61B275C7740D243
9399D71953D73B84482448488A7CEAF3A304AA6B79FB1692DCD57E17D755BF7810FC68D41576
3EE6C5EAB92CA72A712B4B357EAADC25321A5C64EDA8C8818A49AE24F66E537BC814818C502B
535D637BCE8213D9E58A8378A2BFE218A4F52AEBBC2A7775F9846EBF50637C371F93A12DA379
AE46309A4C494B2A3A243C0C6DBAD687BCB08289339AAF56B54CC0A07F37C85BE78947218A8F
E9826DA4AEB867201F30FA4DD9CF1A6364CB1612E06C31C64196303A9BA4D69C6E9F935E00C2
E4FE66867DF56D48D038988A82A418E765DA0ED860E20752A1C2CC8F8F0ACF8F77050A2B3A3C
34CCD0B78733F17E4F9911F0A655012026B693098DA2F2CB6E1EC7BA8DE6DC22ED5A303BFEB0
63026AFA76240127D4819C9BA40BC34CD93CDD566057A3A25F556BEE1B94741D51BE410EF82E
6CBD710069242A9D37BBC69BA020D5FA0226D33D16564F405F1A404B33ADFEE50883937A5CC6
BF112D71C91241B9BAE58B51E8D99409F745A2E75516630AC2AFA28DC705A4B6B132E844C33B
48DFE116E8AC6318CF16FDCB1855FC68BD3D4C7C9A5AC1B1A0EFDE6B14CB3BD5C3108FC68779
4DD8ADE4825B43D234AB3EC1EE159A3D4065B9767B159ACE7FC62C4622AC028F69C530523608
151353913A1469C967FE81EAA2766180CEE4E66EA8F02B1A800992234D456A70CAB4AF99F78E
2096BBEC24E1F96EF30FCD861DC0A7461E72827B5C9C6CE4A10FFA0663A25C0429557CCD8630
AA0A30623015917FFBA31D333B750D8AFB64DB2F23A33C97491FBDFEB832F1C4FCEFBB2DB0E9
123373E4922521AEE312DF8090552CDEB230E7ECB159E7F62C696B86A64B434E56F4F58F308C
0ED87C45F66BA563945A023662D0425DB0CD0E3D1B3CD25EEB1BBA0D11CD5D897F32DD7FB581
9047DF413298F817D69944A7774AC69DF99956407C29EE12BC43BDEBF70DE82B9159FF84950B
3DD9B7F954F257404CE43CF80D4631E9702942107924D79B981B20ED13D44E3AE96E430B0CC4
769813F7D2FDCC02D354A30CAE661EEF8B0AABAF6DBF647208DAAB52356AE5229A65D94B19DF
866EAA2583E42CC3BC755DAF5E767DFA46923A8CE38803514A04DD5884D175A511E2212DFD95
323392CFE704C7229B86E937BDE0891D7A7BA320CE152A0F9E2C933FE9B15A5DA9F9B74D3C2C
F8F61167DE0936D24EA355E47C067E162B1DD9CD703362E0BA2F0CE9AD4E1F7F2C2820425A2A
3B635047CF3BBCA76E23C758CD3A06DB05759654B6C9F8F749531610231E84F733E27EFE0CE6
4736B5FDF45BD3E0342EE3E5EDA2D669B21B5D2F984DB88986AD9E78FD488D875BC893B939F9
D7D60378C7A0EE90AF26081F46FEE19ACCAB17ADE6C9DF0F6721216BF6453F7EB7E34629D1A9
9A3788CC19AFD8881BA699572B6A6141B1B280329554558844802096266F6B090EA9C0B44396
7B04E2B67CB5661D899C147A1857157BA453B3DCE979497BB171AE1411A5905DB7F074DE82BE
BD05A4D9E2D50077A4F7A64DBA7EC63CA353076A23034A05CD75D3E7A394FD56A62C3D924393
E7E53BE6F6F547D85A76CFB03DA21079F4E8E37853115363F1D118342BBC884E9F51FD19CDE8
3A514D9D0C0BAA70D9B316313F5FA80986DCB3D1C1C3EDA6777AE07B0D3C3FE941E65C6E7067
A0181E8959A207F2A076446FCCD6BC3F238EA69B4E6C8EF541DA5A8B8441968EC2B5B2F7B5A6
AC581F614A170D773AFD2D9FDFE0E2C368DC16F17126A64E0EFBD008D7CAE38324B771C097A5
12F76097D4E8698B31D816B434B50BAF8DA121F43C9997BEB9941D963EC65B45F63684A71AF0
4A827C0AA9387D652FAB45EB972DD66DDD6147361E2D65BBEF8F539852997902AFE87AF2C7CF
50CDD5C2DDA7ABE37E398A31D4BB673CB9E4AF65BB2EFCCC5B3C819C08818325E94495AD21D2
EB9F29DE877DB24F4489E751948B7B32F44D7DEDEC0B49FA1BA0484F822A5025327433A065B7
273459151A475C08E1C229256BC5B4EC35E5A0845619B61DFA0B4120B4374F36110762BE7910
2F1D2A591CA7AC118E91DB2A9EE34EB9947EE4964489EC197CBFE6C8286B8895F28EA0F3A185
5A9E2BF9BB62EA184B1F5CD617484868E17C7D55BCB3564BFC101262AF476346783E29957B17
AEFACE78A44CE3691F20AA59E6F024C1F428008205095E9A00C7C5F9C498EE9591417A1F8DDE
037CAFB5F04BB4EDED274FA2959D152B1D17B6451F49002FE7992BB5E7B0444D064C3C7253F0
6524DA638DB0F0C741590302AEAEED3BEF437F3A1F231658078B155294FF5BC52C1A0E3C847A
4947C85862559D20FC6C25DD5F79FAB4849FDA6897B1D21063A739FD52363251A5531A752D05
AD30F0A44ACB1DD987CD548F4C51B5B3BB7677FBB793F160876DC8C0A3C07FB365717C131343
A2D18304A95FB67D0FA29A86DCAA0531DC65B46D698266A694891FABBD1DF95661F044BEC0AF
1A06A289C9E2DB553216ADB79A47DD3AE1190212990937CCB7B6446E5737C445832B63B4033F
BD41AA34E0CA4F1C414A6A31DF3CDF7DCC67B620D9156E716950F8CCF00A089BF47934397865
1E3583364C6FF7056FEBB63D04887309D251EFB4E7A63238E425EE3A5CBCC74820C8A28855D4
7766A7D4BA00659BDF00AF97392F491B6B40DFB4DCB71374A7E4A47A1A095B2360E5627AD0B0
2232F8870EBAF5398E4309FF4F3BFB657C8BABE5EB0D6E9460E0CA8C72F59B3AD6BA8C00C79D
A2C453F12810CE016FA52C00A02A8B7394A0D0322AA9314E810622FA3CC1EFA67ED79E9F7218
139BE202813576D1132ACCC6442599D33FE15B0637FDC2C3AFD6B00A0EF4D4B4511BB496D914
E63214297CFCC5E15B5267352E362B80C6AA702F7704FB4D7F18E6B0F17E4B5CEEC82BC23CD2
A35FA63422B80F5F51709A4D849D84D20119EBD29DBF8C61E8A0486BC1A85DBE6537F7C0442A
6605501A0893CCA897DBE2CF6018386620689CEBE1BF6B2291A6C9EF8815C4B3181C754D8615
7C68A641430E043EA1F9AF0ADDE54123249592B767EEA80CF2BBE1F679C1B76ADDEE9DD3F2D0
B8857D2DD4CC81BB1E8AB413F4C368DC94D7EC5C7D013D2827DFBA01923458A427CF2CD1594E
2746F6853EB87EB61F275564E3F91F3146816CBE20790AE62365050FA1551E46044EEFDA585F
3C3145E7B675DD2500FD481A1FE0FF6EE154607784F05C673E7EF4AA5096E1D015DCF0A184E6
715E6D3950ECA0BBAE945909F170A893C0A30F4282FCE573189401AFEB1D3E05EAA19324E3B7
8F776EA1D234D8A07DB46FCA74B14158260681EDD2111F872B8615BB4A231F60AE9D382FB8A5
BD3459E6C5CD12ADFB928C88CCFAD58DE54EB8777741C85D2F6DF3E00EF160393497A1CE8BF3
7C25A9147A21DC18EC1DB2C6B699510B4E9C762293D49ECCADAD631BDA98BD0DC383EDDCE14F
7750BF0688CBC868CCD8EFB6F51B2F43F315B7A3F3154FA77C3BE1163AC2263B4C55FCC345E3
24C97E0848F8425679165A524B9A9B2B457F40438FDAD7352E4E21A780D52D59519D117E24D5
A9E2067B3A222B081F9380B11ECB38EB0549DF61E6366412ABBF6F199848A73C3ACE3554BFA2
22D5A717A9F19CB9E5932EFA980AE6EA5E26B65277C8EE8814D74C7B0D51C6F3CE482D7A4D9E
8BA00E593DACC901A05FC3512006B844EB3DE1363379E25EBB651B5EB986532BA60C1C4DA30F
2DEB589FEE1C30739992FDC8DA0377CCE7298EF791867031CFEBB3B4541B5DC0B3F9C130B14C
6D0D1E962E931736BA6FABB80DFD57D91F41463CD5B04717927DBF1DC7AA4BC6B1ED6E8AE184
00775D7E251964AF84F947CAF60E7D9E6C3372F07270D1E6EE2129424B7B3E3F007C03C738B7
A9DE179438789AE2BA433CCC596118AA6FC8E8AFF7E6A5CC29389F70752EA9A7F63E56447F61
E13DCF7EB5A2B0CD8092540E463A2DD7359A118600A656175400EDCD393562B67E6087F19B2B
889F4C677664DEB50F3A27C2F43E30A6542D20500CAB6F800F2EC6B2E5DC8A0E6D2DB5558640
2AD782E8F8BB5F35FD42890DD2892702F70C4D750438F7B2A6DD8E925CD6AA60881C9AE6BAA6
74820A048DF4C56CCE23A1502DF0CC1120BE8A483ED24FCC14E07627BA04E4FA61BAEC06152E
1C0530566A0AC05C79CDB08DEAF09C0D4D5328F06C480C42CEC78D58155A9CEBE4DACF0E8266
85490AB2A7932323BD4A9CB5E481BDF2B5DCF21967841C1115D33A6D77F12C19F3BAF61C9632
39ACE20327A0AF3082D107ABFDB2AD5E31FD0F99580EBFD77B23E8C296CABE35EC460E8EC887
2F3AEC29A2A21F1DC888DF64A8DBFE514A7F90B037188AC5A5D6E1EFB5EB12E6AF4EDFCFBB8D
1514ABFFC4FFF2DCDE2C3285CFC14424A89E2FF479BDE467842A5261371D83589D1DF396EA17
136DEAEC9164FC1B396B1E8868FF602E581FB55BF70027D6F6DB6E550579651DC479AA177A76
9F5E0F52B8A583617C18948AF29D1480767962776738EE04F3DBD3DF2C7A8A908439C6DB7C19
29AA3FB5A3A9D26EAF7127192DB9C3FB08ECE620046540C4691C138F209CD3617F93210E73D4
95BC4A17297B77ACF3648661D1AEBA3D1833EE677D5ECAC6D38AFA59B422E69688769C2F0020
379715F54E6D1D610EAF959CDF9245BD85A000788B72E2B7322AA586EB2C9F8E6D39F8D68CC2
41351F028C48AA98842799887466BE068DAEAA98F235F3CAE95B2EF8317FE96387F96CECD81F
E71E1997846CE211A5CD0895463A685CCAF42F6B13795DD7275E7C61C03F5B34E0B55668CCE0
3CEB71374E090479A3E075C5F9789F3AA87FC87215CA587E0A35217D3C602E034C299FB4DD85
6DD08798DB7C98FEDAA2543DEC85AFB663973BDB64300FC964C01B97F44984FA9BBAF2895B27
F17A7CC34BC843DDE0E53DAD5D2F3161C18A5FC1A3B5668AAC0C2FD827FE5A20BAAEB11A05B2
5A0E4D345CA9D9C250D625FF156D890322D21AB5ED5A5CF96B51193BF149355F9B8D097D0E8F
C78CF4613A0546C4A405E6BA8EBFA2ABDDA3D8AEE64172A0961D30CD6F0D58F2446A37159D2B
6F92742F8A5AF9CA09A1F8FE19271367CD01953959F49B0D606DB8E47D599F2F2C5635AD0E81
58C8DFAB700B6C4BBECF61CCA759748C692C201398C58457F1C4E18F2BE5A485E13AF128BD21
A5D9A2441038A0656641051745BD7E41EFE712299D83711EB17A5A0B488D264F48FD1287C274
73173C5D7981826BA9332AB107463F67450F0114062718F9C73A9550CCF3E687267EBD669EF3
CF949059D528FC4873BE21E9DC4EA735C20A5585388799A446F9349D63DBDB1B167502B7EDBF
E5EC414BD345A0C41E0E65CCD873B82E25C596408785E2338469CFF521A8390A33774B2FE011
00CE456E87691163B3C13E81DBF34A8847EBCF292D9BABF75A6BF77CFF8D4CBDD7B9A4F2E104
177D1784E7FDD96516D2FFF30671E8B220A05949F9F3C4FC7CEB971A64BC3BAC5EB768AAF3BF
E55A3CC7DA3DD17CC9F01BBA8760481EA87C05942D50B840AAF21D9DB5478C9B782C710B515E
A1074DBAB32E0B04B50648196558C9AA660AA590E249D1F89C34D824392B694D482EFFB58621
6E8E66CF806FDA8EE26F6F46DCD1F56BF42A8D77BE477F27DA4D67BA42FADAD83DB5032C05C8
69E72E9B7B5D1017B4EF20C5EB241D851CA1E511B4BC90471753F2D5EB4C072A1A0F3AE0D49F
88CBBBFB40726618FABF2BF558E83AFA313198F8539BADB4053DD588037119648677E79C3D0E
5EF3C30884887E517DFAF3470D45E027735DDCEE9C696BB047969D6265E373C1FB03621A1ACE
E357846D9D06B707836B5A1058373D7CC9C365AD9383642659FF6B2B9D0377DCCC20CAD7A7A4
AB609908687CC1AFF81B120531ABD16184BA2048B317E6F08F74CE4085CE9B81572E6536CF3A
836B25076A334E7E90346FD6CD14C629D470DC641C036C973FC580E46CF4B9B2A3F4A7DB6780
0B3112783221E3DF7244436BFA1BF643C8213C224F29044A850097321BE3DC3EFEA9A73359ED
3A10C3F69C6F55C51C94EB1AF6A51FC2F273A6A158DCF9E27A36C4AD3B40E1292EA7E3BB0F82
2FB7B20F173064A46BED551FBE2E723B6DB1E0C15DA212638379302188F9577F8CAA3791AF18
992859FAE98C3707E2D77844552B3D446206BB5A781DD92EB6B5D83A8F2184473822D2943AEA
92CB72108887EF67FCB23DFA31335CCA0A140CD736EC5F5C654F33146F30C494D20DC9D5A011
C9A103C89941B16DE12E0B2CADE44E117303ABE81C2FC7D015744EE9F7A5735CE82EC212B9A8
223FD290561B44740C9ED5E63EBAC12312A0F32946D7D1CA23480592DD0F67405E8BF40658EB
1D4E4E91F2B9A6F7AB814E2F5021FEC64E2EC7CD0C59CBFD15F97E00DA0901A1BA49BCE83039
2F51BC86062036060B1E0C1BBC961C3162906CACDB998256104CDB3B903B13F779B5AE054CEC
3C9741DB44C6D5B124AF3B14E3935DC7661DDF4F5AE1EA9101283A3150FD2A85FF3B85D7C4DC
0A7F240EBE76BC38BAED80525F549E923E614ABF93465B37ED8B190395C3FD768CAF999E5BC1
4957F275CB421D9F7D61D07DDE5E671AF8496025FEA7053533A683EB3E4D4ECC207BC68B3F83
6D67160024E9CDFEBD2CAB2FCEFC43DAD351E1361ABFFCB417F0ACE69B98BE0D786289F2201D
5DE0623D5825541039EC52D439B44B4E0EC5FA6FE3D2759D95181CD9B2D45E1B623B4CB91C2F
66445D258B98DD6ED5168520E441B20005F5B286BD4D1D290C1443FEA3B6E7873E854E465B2D
5ABD493250A4E2E1543EAD875D39D173186E51D9D16406A4F6FE75CAD18ABE3A7A87DFBB5A33
6E1984AB141331C35588B45AC9E27F1CEA9F80D23168B6AD6D7AC181C9F12C0903C4AD384344
E803C108BD2ECA5D09CF299A9699360366060A5BA2C46BEE54DCCDC98E6724FD14DFF3976E0F
71FB04DF573A94C44E1B5AE34449ABEE6FF5E477CA5AB1A056BC2C5351D4A183BF4EE2BDFBBF
344563AFC309B9D2997AABA93C028AD7D37B3A308DD08B9FC9A1D6237A6FD4258E9B1A645BE1
2E8D4B2A02C5918DEF900A2BB22B65C1FD10B0993066A44D735825B858E47CB9BD80858CF725
902D79F22E29A30A89D4B69B2E123C6CC5B0D4CCDEC4DD63CBEB78C5313F5C1B7A5E2EA60775
3124EB829C6FBE88AB31AAA5E615BF0742CAA852263026E6F85C0824F4AADA959A3F7B048684
1239580C7E4DF336663A9A12520AE27F407426AA46932581CEF43C2EE1F58DDDE9BC44659028
0173ECEDB4DA94D507B6409E60F168CD60B450859351FBFAA2DDDBCB2D2A333632C3DE99DE63
7D644A8C2C3BBF887A26274AC8981167AD7B6AF1CDDE04F9E4639BD47943DA765DDD9553038C
0DACACEDD0FFED8CB9C8A6661F8DFE3858C287C2C295FAE4AD8A9201C1B439D7B24E3FFE8920
DC3EFA33357F5E3725EB82DB41485101848C5E2363467E8F7C3D4E39401EE5C23DF672D00146
704E6328DD59DADDE55CE0B86000815D6815BB61E131193FC68D4821B234A534C1A4135B954A
BC31160B7EDFBAA90871326C701C5CBA6AB32715C27C9459E763360E1B86331D35B94108564F
B9548E449A6B89CC4E93A0B13176162510C1EBF98C4DC646D65710526CBE207E2C5BF2C1C3CC
3A72FEDB275036ADB0410C3C39B28A3B62E6D7EAA4DAB466E4F59DE1883ABB37994BFD176FBA
D2C4BECEC38782CE122EFE3ADA9F05CC558551E581F6020FFC748409DADABABE0AD2FB6080A9
AE98B00F6BE52335F8352800CDA1275687EE515C20CDEC0C7B4FF8B459F1EA45DF7464DE2C18
3C3C323F1977011089E0A9601408D91D0D85499731578A9DDFAC749F109451804D334D21D8BF
56A13D778F36600ED0A3C03B4A5863CBCABD2427DA6FADCE4BBB3C584DC8AC7AC697A604E1A0
A28FFC4DFD3785DE40E37655DA601FFDC89DDBC9D9BCA62A35A6ED07DA9D28B8A7E1D8438755
66495A44776621C927C227ED07A2B40451727AE43093FE55DD2BEA61396820120B4713057120
30DB433F6B1EDA344546C2A2A76170C1F26233B836120A749E4517B9A5D2170A567E133E2296
BCDFA99B930EC9351B5161431746F17D777826DCE7F289D516A7DB33FE65B246A6F9EB10050D
EA4CD427A2F76B6723A35011BF491B289017CC78C2C825E71F684F63692563EC569AE5CA26B2
8B45DB814E2CEC1EB89F39D8E74FC9716AF51205A17294A24622A7878132EC1ACD46C1D5FBE2
CE75C3AF1D2D8925F2F510138FDDD9B75A1F8A484FD36EAA423386C29C9C1CF6AAB6FB22307C
C1E1C020D84569451F9DAFDCA52864E236FC1610EB684FABDDBF5265971F67891EB529E59C5D
777CDCF8B21EB6B245A408AAF77F594DE2659ACAD8AFA5A07DADEC9C9BA9B58CDDB807DED496
A3BD86B7089850425ABF2B473321B5880E93BD6B8F7DBAD9C599CB6F3D85F0A4DBD53BEC72B3
9D7D6B3D71ECA4EF2682B294750F154EBB256392FD9C59C70A516DF264F8E2346FB4F127A558
BFC367538E173BA8F17649A335E8C34CD48F19CE6BA133102BFAC5C0A4B4CFAAE0CA8E94001A
E018AE70E8EB8A110FA548356C0EE606436C90BBEDF5B20E29A1C12E4A11FE25DEA58D21D70A
CAA81178CACB684A42AF9B34930C378697DE552B385261CD30CF75A8FD4D8A0B09ACBAE25152
029E07E84C3DFD47D07FE3D291B88A8288A8D8BE21222387009BFBEF89CB7DD934D697A21B83
8E99DDA444653E8C11C4DF831CE414DF72971D460777003F1E882911E4F2361A073B2DECB22B
047B1D232F67D0950D4DF64764A1A303419A7ABF192C6BCBE7EF533544EB3AA93EB2215F2ECA
2A0326E81562DE09365CE9393C5B07A060704A04A22F025177A55D17DD69910B84CFE1DECB3C
5682D1D765749F53E342BE5F6526A0206A9B133D15EA9C53991D01036E1584CFE2C31E7BEB6A
ACA2413014FD9FE0E76D82F743BFA2FDBFF36BEB268D90C38C805B4D963958A27B284B055B8B
3F1D861084BB655F10C808BB151066E1F73D6E1B519CAFCC65DFA7C5CB2F41F47C8AFF7FEEC5
7BA9B6894A556D6D048D8541C305C4DE41F3B5014ECE8831457884538D1476FD0942FD203B59
80DD377FD25C115717FA82DE08FC3D415829EECF744FB6AEBE7EA2FB508246BC65519381589E
2E8B1116ACB813A0EFF7C51D79DFC9F8026F6B3807FC1113FF1BEB7971396D0845CC81FBEAFC
FE51463DDC011FC754AEAB029F1817C27F5CB4A580685566A822E5C13B5B72521E9F3CF808E5
4EADEF834743C9546DACC41B758666420DDFB62B99E56227455B16D4962AA4D6BD68064BDB1B
C7E3EAA7F2CCF0162A95A4B20059ED97357C24FC871C79873115385F472170BB00B1008CB020
D8945547DF5D39DF9EBA8FBE1BE512B11BA728CC4797DFE9EE02D0A4CBD31E7808F653FC86D9
FC0732053EC8C7B6B1805A0F3DC5DF972F6857C104284F7DC8BC4E5EB109CE6268CDEEA14C49
389598BE6F1B6D42506724EF32EFDC1355EE20D37078CAE07938C057970A6CF10E4F5BDF7468
CDC62E1B6BD2C0C56CC69CF1AFA4DBC6E1B665FD2C97FBD047738E4BB9874EB14E69DFD95205
7802E76248D41C359BC2D31C57E7FDC79E70F5FBA09D6304A7EE6E2157B55392F7660BA66B47
EF2B21F468D99A74DD83D01B12D8C8EF9D4B743A0C79F0C429FC6158A91960B8A259F2F1ABFF
3F991FE21AABF933DC9F1BBB134502B2B2495BEBF6B5F0DE9405E3AA2E8E384A262BFC3A523A
2016C5A6D38459E66AD15A4C7D084D75BF478FAFBEC7D253BFFEB1A312A62DEC2F5E64744025
D066D8D0FB6665B74475612B7520B295423755BB8C209B8D316D363632A487968B217001DE50
C965CC0623B24CF7CD480BDE59BD4D4ABFB7DE1A074ECBF3D037B5BC4BBBAE763742700EB0A2
3D08F28004C6606E7959ED02BC2F1B33AC4FE7F72655AD492787EEACBFB52342F8955250A258
A54D5AD8AE3E116D862EBD6142008DAB85265DAAF9C23DC74255A13426E1E078654625E0F5DE
12A5206B92223F4BED4E01315927D86DD63A8B9F0681B31387AE4BCDAE3EEAC278DDDB0273C8
9D8F1C7F256E711E12B71683AC5759767795EE4E32BDFED1BBD87DC69B91950911EFA74F009D
2EC50681B3C8EB24AD5C1C54F3315F91B0E80D205733B3BC44B5EF2555BE00C5577748C35DA2
63A6695A5144D29A520B349822607E02D269D9D1251269A7332D828C933C61FBB659F546989E
B5129F3AFF2C54B8F35956C126DF9C5DA82352B3DC0AE1F0461FD1C3617A21A47921C8BCBF42
04F8AD4E717E66453E5D0FCA310ACDB9E2CBFD8744307EC86AAB04F27B0EFBE6111B9328E4F6
9C850615A40EB1A237FDE2EEC54864FD84ED84CA168F4195033687B39C597BD0C8D9310453CE
8553BFF756FF77F9E54322E5ED78A4D621A5225EC8D7361EEF08D0690B6315FFD64C3DE7F285
3EED9D6B79308CDF2B115848E4DAF4D0E44014FCAF4F2EECF297B728B5649256BD8CF898EEC7
9BDBE9B37AE6E918CF21E4FA3194A6EF9A9DD2B2832109A51AD17A5B0D74F8798F3CA247C2CB
560308EFB172D400DE54882324B6B8C9A257017E63E5EFCEB67650E12A49837E70C65AF851DD
2089714AB6244AB1B3097A6823E433C4BD59901A8258CDCAEEFFC9993E031D13E5CFA7874666
E0A4EAFB2F6F96FB4FF0F43CA14E962FF232722FECB556CFB94F531335D1E0E0A9C283705211
9AE66FA5FE9B4FDF223C81D69EFA5F0161D00C8CC0089323B3F28BDDC960BAAC510906E73813
682BB93BB9D0EF070CB1D5857FED7DDF415456787680F4E41EFBC676A53A8D218F0F3A737245
252FCA426530104B71F4674F04FFECF7C10212BC1C92A659D841D7338EA4DF7C7081079003FB
FE9DA76297EDA235BE9CE35246B9B15531CBC23035811F742A83914C27E5EAC99CCBABEBD21A
E8F8A4569207BF192EDA0263785BD6EBF11C00BE0831EB081AE363793D28A1819B4D848CDE71
2E5AE239C5BCEBE1E9D649E9C344165776ABA6153D0CEA9D036757C28FD6B45B105A246C2093
CCC315929551895BDF28244FF913FDDABF86A8EE267C59F9F85F4289B1FFB97B51A035A50A43
3B600C8B71917FE415679D7EE0D1194C7FCD9DEBCB614137EC466E83705951A5DE3963A0C203
4075F04988B22E7724DA3AF3C0F51601375DD6B9E8CDD221ED0E29FD0D973FD06FDDC7910508
F0466F50023C059BDF95B53C6E9CE713C165A5C3CC7D0F62C570412981C4F0B613C95E8E0F96
F09D620FF94E75F65B8FF06296853EB97DD62957DFF51CF010259AEA8B65D6127E0BD67C5006
F6D57E214A6213A7CA00A7FF2483FCF85B197ECD7ECA7D73C74552DB07809B09F736540ABA92
B4FB27E7140D895203700AAC9FB042C9421B86B11ED6439E6A1EBCD69AB159D741DE64B393CE
E274481D300984C9838896D4BB212B4B390C527835A0193687D3A570755F3C01BAF7F2B90AEF
567CE2D9A16B1527D5AEA2ABD4CE3D26972E26A53F3B299885C7423F8678FF45E398710893FB
98898EA79047F63F5FECF33270D11B516F42D715F9473B6C4225E220C9BD96B773F95A4F99BC
1BBE4AD69FD9042BB677E8095F06520C5E3143F39284CC7F419767C23539BF4B3545942FAE92
C1C36F2D0B7A9C2637DA443E855A7AA41A7CD7271E1D47C9EBF146662FE42A2125468DC788EE
664E12D17F8F6290139C27B3A59F60C58CAA19AE20A27C3C18BED3A15D1CC49A6B7CB52C283F
B0EBAF856AD24E782B37912CE713084A9849890D91256CC8BEF933CE8A91D708AE6D2C9B94E6
6BE4E29BCEEE5C3ED29C8318C3319F05F4033F810A8DDA445CD34B8C57C7E35B711BD51EBF60
E8172E3B9A9DEFB44806DFD68FA8A07E5DFC21119E29F5A9BD244975BB02551F23B19B1BB876
4E66EC8F5AE36D5EC264BA833176957EBF0C4DF9841E2FA544FCFF726BEEB2F58B83A86AD23B
71FFA50DA9BA37E26577B0B8B7BD50C4D5F7BEA2668EE22E640EE53F17659DF4EBBECABFE338
06727990C034933087A58B832E6631AC46ADD7BCFA08DF39B964E17020BE0691F169236D8B05
74BCAD57B93060D58149DA7CDB0694D2740B3B5F196B4069F0F8967557139109C1213D125913
6E7E8AE9F0BA964EA6A63722996176F1425D26935AB5F87DD03B757E5D60F23E1083FF60F1B6
1FA75782CD852EB6DFB379E2E12C26D219AB45ACFD75FEB22E4E66234053D30A2838C73572F8
1E92CEFD63169554BE28EB6F7C46F6239F16EBB8E10982F53551F5FE2A56BD3D0F5B24DF98E3
B88FF134BB14DDB60886FF2419A3E78825E1694C7E84FF85AAEA377E214411B48A420A051863
595F23995C081A6B109400D8D872A3A0D1ABB0B580F343CCDF6456717A34EBE7FA797C430685
2CBE076A4672F6894223E923472F9A605FFBB1D4AEF301441C436BB81324C704F94E8C2EB911
A9C6B3B1D72EE87C84BA5B0AA05F7FFADD8A4AF7F7F822661E000E6220C7EAF86D2DEDFCFD7E
EA38EA0FEDF8CD2EB437D8194DD235308BBBEFF1DCCB31308AC606F024E3E53A0CF1B874D674
53D826251DDBF2B130B95CAB3B8EDC4CC3E4B169E5FB0AA58634331FACF40685F374CB5BC299
80E4560F7D50C716F06593D043781D3D5FDF7A58B7449F294E9C2237E3B245B807F1474D490F
19FBCBD8FA74E171FFFDF9E637674A52742C5A7F9A2AFBE4AD3AF9C59DA58F1F8F35E6273E34
9833B19CD41AE14C17C6735ABC89908DDB7CFC3469C3261AECD6598C07F596D4B9AA4853C2FF
1FEE5DC342D550CD2ABAABF074EDF1F4A5497560AA45054CC7F561D67B5933EE66FE04309012
85A16EEEBD3CC30D2A58714CA03FCB802C2ED308EAFAA6D6F08E723A77CDE3D94EB9BABBD8AB
5B4E41386571FBF7EE748333C0D38EB4EB996346ABF4A72EF0D0998BCADB8754FF288E3EC0DC
1CFDACA5E4D68ACC36395A12205A5E41D39E6E80CCD308FD8F853D273FE5F76A5823D48B3E0F
8F55D82CE75750DF0B3EC737CED5EEB46AE35686B27EF931F19C9FFEC52E13DAA5F2E2B4DDB9
C7C21E9B00049EB3E4C0BBBF354A849D406810AC8744EDBD152FF38E8394DC3E8829E9E0385F
56440AE420361E054AA7F68459557C17154E84AB159FF9D44365B9FA15C6D7D3EDF1F15AEFD7
27AEB58BFC0C466A643EA2A9BE9325A2CA360583D832D405834F46F1AF1EA3FAC3CCA04D71F7
8AEA8200C74F1B5801B82E9F3709E62CC9820BC00343BCD163492853E535B09D1E6B80DAF2D6
F4BE6AB4E90A036537E473276059B462453842ED33982C31EC27B6E996C17AA459C4C2E0C974
9B4FDFA15721E409DF4F1571DE5EC8298F8F6B228F07FD5CE9822DF2FA098315FC4D6F2473E2
1E03DE808B6B7FEFF1F2AEBB3024424D8C2BB20E2E43EE21EFAF334A2E25D0C97422165D6B8F
5D35B30264763C9F9CEC1870EA55A5038F6A554B4C77869A2F0A84A9313BB8ED070F2AE85FB6
8EF4E4DE3A99E1CD634F6B47695267628182C82B1740050C3AFE1A229A1AC8A7074C62B1B7EF
AD087BB785C00DF3FFC447265643203F17F38FA4ED5991AA36F4EA6DD1210707526801760029
AD4516D6B8EDDAD75C19667B180B1F74B187E8CFAE2D548DA9165ACCBAB5451BF1BA96FD0D4A
869BAAB16341E9332B63855E56870D634D52E424556A009AD9D3E8A0FB3201845F4FD0F8A8DA
7239DCA7C85AC376E18EBE08E606359C08889970BC3B3ADF2E9EB69A9EE36668EDB4948C897E
C16F8A8808C1BDB5AC3283D7365FD6D45E317942C42FC4603CBDB8950511ACA800632B280904
0734ECF8BAA10BDE6468045E4582466B3A75C785E6335A673D640E726C66223C856FB79AC2B1
AADC58B05F42CFC9A9BCC0DC7E7488F9F6896DA5D38470F4CEE1B8C05BB1AB18477DCBC1B5B7
36D2F10BF64183DD3F69285060B421988D5790EDE699DE911F704606A6008E36722DDDF4A5A0
D5C48BB274525D20BA682F267B8DBD68D8C0C34E47BCDF995B945B0DE4E9170286F0E15425E8
CED24043EB0D8AA5BF1D1CEAE215481BA66528D7793E392C561D07D22F89CD51051C021EE228
91E19D7A2A84A5EE521E3C7374E12A5213DD28101157A4C1C53D298FA3963ECABE2230C82472
15E268E3AB1F23B3E963766481D11D86771ED63C73D2C782984B373D3D952C47539AE38108FB
E62BC22A11422AB2470DE9FDAB2E66C8F9AEFC5719987B37F0E9E9938D9DE6FF905EDC7D063B
8B1D56B6D1C3E0E7F7E17C22EE77E123E8677577CE7C712C0B7193A9F8C7FD419DD5E23DC04C
5133685C5439A6CBC23CF09AF8852B1E7EF5E475A97482B31070F5B0C7B6A18F939ABFD32808
BF46C10A93F4911DE4E560141DF91C2EA5A066EB29171E2810982F88AD38008E3EF49ECC315E
1ECD2A04703888CCD3C5EA28CF79FE89AD94B1EDB01DE36C304202A38E43DD89985F22CC192B
E788FE39BF05D77B933A305F19D365E29818B7D3D107822358FB6638D958D5EF78E469627424
2069E1937EB8D2BB235B5F6047209E3FC1B1410FEFFC0AB417710B25BD7F358CBC1973E3ECDF
7EC0CD4B42A0D764DA02CE38BD39B64FBC9606285B10A2D8706C8EA91EC338125BEF56C0B6D6
259AEE1D59C3CEA6D2BE6B59FDCF515B89679154C89D3BCA501CD110ED4CC168C71119E95E2B
12B258CACCD9B5A612546D495077C0414B4FAE7B236FAB5183B075757AE143AE88421C263C9D
75A0CE8E18024E901182027C20B6AF98096CDD44220BCE8945BA03931C5B96E3F275AB1E64D6
2E3ACE924E3F158D449132F0F228D86D3C4224E861854197FFFEFF7E6ABA85CD70B3E4307D92
C7AD976EC17A5C406A98924099CC9D7F52B7CE4EDAF3C973C2B814480EEA289248EA3D6009AE
75F1E6AA541A09CA177D5211078341DE1D4CDC2737D37544D53AB36730F89706DFA7A6E06564
E4E5C1759A43D66BF8B856C37FD786CE3309FDBAE728638C09DAA043996C43EDDFA662CAB460
C572D3AF9592DB02E54C0D8EFDC955D265B9C9B0F2352B572382F0AC6278BE2F34EE799107BB
81157E89D6C3831635D7A796910CDD6534033B662F2D7DF03B94DA4D65C116CB83AA3127FF72
1B1D30C568BBB43D75F200AB933D06A4E9FCFE5EB6460BD27DC9C6A514E11D00C482F85217F5
5980A706A5287D3AD995CF7185D239610ED48E1401E78735ACF1F645C7262214788FE5DCA6E0
5C060AAE34DF953B6AF4B50D3B9B93BEDEFAFCE76DCC5D5024A3A1EE1F9B95EF6B477673D93E
EF04343760E53C42258BBB5854EB265D4945E31298766285900FA192C84804D91872D0342A9C
F762035DFF9604BF1FBFF2851D8946D9548F07C86AC035E9F04F09EE62244CF9FF9EB41949D0
E5597ED8A8E45FE860DF60DC64A1BA3B38F6701FBFC7DBE6B72997B976AC3DD7CADD4F74D304
DCA1FAD26618CC9570D647C14FF6DB100607CF92000B823DBC4E1C11B167EB895832B1179651
201D7BAB6496444E5E917E793928561A0614E572F3F9514B14D121FF0F86FDAB99FA93020D7B
33C1DE931EA96F20BEAE977AAE20C12559FA288885C3BF4DC367CAE0FB147F91DBB7722C127E
FC9F6E1BCE00AEA6026738F27B78A64E8B2DEA1E9227D0E5ECE8BE290A575B5CC1D3BF145548
ED124426F42285C76CCA172E0A14DFB84E5D5DCA0CA37602EB14F27AA8C96C459A470B77DDAC
0EFAE8A04E97D09856F7E27DCD83421607108299611A049B8254A903FF1F0FF51026AAEA687D
2EED83544DAB01E05FE868A5242D0AC4C46170860C91B35D09B1818F2F7637598136BEC22342
8EF7D3FDA38206A6B10A24D52FA98BB59472A2FA5F990870901AF425E0DA12DC662F89E10055
1A07601D51926EF8FEF974A12BF731442C93F19AFB56438BBF67B81B172D6918F1C1BA933D7D
AFBB7F935779E0A87CBD65DD5F29FC23303218D628B9442F3DFB3118DB9D5C8FF8A5F11B75B1
37E6047962B5F511A53EFA8DD2DA4AFD93CC2AB56CA2463EECEC621CD147D51E99A66D32AB96
1975ED158A13FEFE60B7C4F38B1CA1470E49A5D8576C902F9F332179F9447724AD73683C9976
FE567312674AA41F50BA700DF9C6089073CC68C99226C67895BBC009183EBDD161CADEF1A240
D7CC0BD9F5C4CD5FF03E8963AC153A19EF4756BF84DE42076645CA4CF5AAA1C350CEAB2B7125
F699D610C10E10EDDA82D9D1130C48495C0EACB0AC3BF8FD23C970896EFDE7B2535199C663AE
E8228BFD32F98FFA8AE6D0D03058B9F9A0E4483F95668FCF69D743BC3A59A674E79B8D94D694
8324BF01DA0CDA76D866A173B38A275C009BEA2035285C1BF1817CF6D96BCD611278D7674DCB
7DC8E0B2475F871FC7A9D407314403F62F0BAABDC6FA303F8495FF64941CBE4EEC8C01922D96
46F37D81ED33D9A91AE1ECB5367826E7044E1F37AE087072CF41712C63168DDA640AE74CAE81
D5F27AB22CF370C34E93E31604D9D793AA3A99A9D165E89400B6A8ACA0BADBF61F11B7062637
91492E572FC7182107BBBDC649578EFC2C2B413E0554F1100FEB17B6DFBA945BE27BC4CD6980
A255674CA48B72CB2C1EE613EA94C67E093E2FCCF84BE20BF788B32A8702A4A0A6DDF1CEEC0F
18EDBBF3D96C05F73519AB19CA50A2D88D84CB2350D60781A34541F6B8C9E247603E2E5A17D4
52747E3D953A44B84A6D11599B59DD48252C0BC6792D7BA2EA9F27C581D54FEFCB3461A00A07
4E0CB0AA0E00C09DF9D00E932369681F907C0028A8281E0C7D69EB22A0512834FB32B1B2C7A3
B95719464A7FE97233FA907B97111961415AC338CE45B225FCFF8A05B74B395BA6CC211A0CEE
0D1D0449178A37262703F8CFD78FD0FA6D1C0FEB3E24F51DCC6F178E653FCE9A3950A1D70736
D2C42B0FB661867E7CC1587F4CA3DFC33568F3C73479B7347A262D2FB5A216CCF5948475503D
B93A9911F3415AA92C1726393FE421EE5AF0C12C21268F23F99647A3B39BA3DDC58730B6724C
E67B7AFD87AFB6CBE660FDC4C2BFDE0273D4256532E7128B692E731EEE32AFD7EC9240EA15A8
9E9DCE09E1185D0A1ACCD1113B3619882A5A80F188BA6926D1790114D8F61BAA6E358B9CA532
3D664714EC5DA53DD740D40F55BA9EDE0D94547EA87B852858C7395D0119648F4F78DBA42F3E
D90C4FF73BF467F63F44E73AC4C47CADDC516229C0674ED87FEF1B73A3E0C94D417F4FFF406A
E8B72414BDF38EB0E1F84530780455607C891856F9F54931F7BBFC0D22EC3D8C28A86ACDEE7E
94BE3B701C7462434CA2E44BABD3DCD40E39F03E376E370C1854F8C4FF5F9538C1B09A9EEB48
FBEFE56207DAA2B26A9B0AEA7A885B7ADA26210ECF1E8B3DA22E4253928D28C6309A6FAF6EDA
6D769CCB6A3D904601ADCCE745041733B15D9F2A223F23B261659BD19B85F95FE4585003A99B
348A1A56868B99788AD4B415CC5ED526C0498892E46CC9245AAE91A77F8C74D325F979F8E376
DC732543EF8140253B7DD695566D327D9660EFFC695F178F913882AE455DEF75B977EEC304EE
B75EB9D17B13F5939CD1311EC98870E1A1ED8BC8A2010F47FC45695307403266400ED0F3690A
EE398A64A485762535C3B3479E5CCCCC627B07A45C5FA2D7A4C806E6D3E8E7EB5CE85A2D75C3
8FEADE61B40C450598FF322586B8061497A5D7787ED80F9F413110A1D316C2E03443E5D94A27
BA4AAEA5971F404A2592C481A2F2BA13D61B43173FD15775D8B1E3C66A52F92B1EC99C6D9280
6B1FE4315434904BB0D69F9E9D9DD1AF7FC599E4BEB468DEEFAB5DF42715B5E13F9FA330206C
9CAFB00E80C5A3468A9125F9AECFB50DCA13F1A69E5362B3CF968CD001EA7D547F2B97315269
ABF7ACC596EA7D08CB3DE8D2826A7B09B84CD0E16D850E8B80B335820848B951571F06EE5F04
AAB6F248B7E3219D9DCA39437280B3CA107B92F7A0699C51BBFB7CD6022FC6BE4ED0B8A5C0D2
3D35191E04A75C38CE01A2F71B9C2D44409E410E4F4D2BA85831D12ADCB997512E351CEB2250
30C4E968B849B396B7D74AF78F92103E91013C255CE6A0290400E7A4C4630B88A986D321EFEF
B361E9C69FC34CD4335C197BA980A37B931A00DF9CFEC1CFE1AC5468AF6B24AB67D69A85BF9E
7045D0B7C6BCBDAAD5EDA4AC597493D5AA57FD9BA9901F20B0A7B44E5EA832F90CEDA799D931
52C75A54F14770E87929B170D5CFD1FB2F6059C14CB43C6B5318EA1466614002BFBFF9CEBC8E
B94A5CBBDE6AC8ACC65ED730D2E778669224ED77E359FA83701DCD42C615C3ED52BEBBA37369
F3F4DC5B58E27568DB7B0350B27102F5A47DF6C416393285EF5DDF7FFD838B2DC5A7A285C689
CE30C8C41B6896FD1C1C6B7A7ABEA7EE6F0CD7ADA6D3D4CF5B7173F2E66FADF52EF4EFABB943
A42CF98ECB00B072548C6E3F5C82763336FA05268E719402AEB57B0E0FDB621B458DEBC1E827
43E1FFDAA3C52E4643AC87264543923D419A18AD206942AB223D8D46F3E381B10E8CFE221AC2
10F98B9876FDD2208E66FE53FE7CEEDBC7E73E20C666EC41AF35357D2B049DC98CF3CA9FACD9
B55FB7ADD6565656C969E8206E44FA2B56EC23DA530A8CF66D408F49563E942F2565F569ECD7
D38C712F7744C19469132FC700CC08732F903A672DBF2E83295CA70965C3C080AE0B2F9BCC80
90B60D2AB245394142D1201D1F182F574CAF8B42C3935BC1C9F394F35DA2FA7BF0C8D1B80A81
590D9B6FCD21FA7D97096545F9974324357997C6286F8B1903F73620FCE3938645B8CFD61307
E010B8A26B84B2934AD103369310B60001B5B17101C7BB7CF1C69641841BE9E9BB767C5BCA5A
CFD7C3E4CF1953E6344202FDB53B22DAAA8CEFD42CCA16867614EE7F4FF061AD19B0552A911E
A83071D3DA7226E4DBEE4EC9C04C583C2F80BF3A76E86FA415BE9DDB413921002D95B849F684
BD77F8B869183047546C5B8C2517C92CDF91FF12A2B1507A38843827AD949AAC4B26CB37E4E8
B907F23BC65AE6A43E454B43CEBF874F0B2332C5688BABFAB3D8AD58E57B8CEC0A1EB6B597B4
907B0C690A0E7135726650E97DB9DCA5BB4332524EB035C1C9250DE301DD02214029F561E972
F7064A95C2531DC1F102E9AF903952B11F75CAF921F67DCD0148EE442F91420B6D4DEFF5FE0E
20FF155993DE256B208CA198DCD1693B984D3AC4DB92B7591662C9654407380C3E67B4581939
147986D68187C1741A18E757BC7E80AF41C81E766F78C6D3E7FAC3B78A679EFF9BEFFC4A87FC
7A901975F895E50EB8E337AA5EDD49A27D8D85228193DAB95908C3098235FBA4739CBE1EEA9C
8872D2879FADB091D60CBF25545AEC05FEE4CFF3D66DE3182CC52A0CA117A178984CC6DFCB5C
8EA9BF56130076118029E008A56F81D3B4E67B6ECC859A345ECC14E7B0E44B60D671C78AD183
FD092BECC10D75F627F502EB74EDC90BE09CB1EB8F3545C8DC66A39B29B56BB059B22BB1E669
9360C3F4EB2A629DAC73916388F4D4CD08AD71B38FEE36EFCFB9416A71F6F8FACA0F0D7137E6
E6ED14C93DE5857711DA5B56C496352BCEE0B5AF5256CFA88B391F6391012855237D0848A73F
DA860EA1268F46E460CB08094BACDA7223D180F6A04E8BF4F2494A06BBBBDF9CA5E098454C43
5D7BECB875B26039CE3748BAAE55B1C1BA5045AF712002E2889825F5A71031F9EEC0673E438C
F91971A1447D5A39AB17151C10FFC7D9DA3270AC5AC6C5ADAF9E96AA31DA7C39C868318838E4
72756664592B8135BAFE2190F635566112DA814C9FA312FFCA87335903210D9F99FCFB495E3E
AD582E7E9206BB08D47CEE8B2E6A94A44ED42EAFFEF4CF35BA644B2DC42F5673EF13CDA70EF1
DF8D8E40BC41BC03EFE0881E9C8E4DEDF704A64CB358234379F4C552690F2E1EA2FE7632254E
82A2D97511C6A00A52E3880CEB72085E4F7123C74BBABB43FB9654135115029BF035345A3CE7
2017AC0CA5F3FCB2C030AE59CA44A9E07F72F377E12AF3032D2B02D8616D41EB0D9DAC245360
D3389AE1CF0BD89EF108DA6F3CA3B31DE8D9BC20088A7EDB6D8C0593EC17FF050FFB6FD75EC4
9541528DA1876BBFA7B2EA11E56086419533D983ED058CC92942126BF146EE5A1175A814A244
9BE032387196FD35FA71958F0BBE59969CD361CC253D476BD052D60E8BAC7BD57BBF81F0C366
1FAD2185BE19A7BD8DBAD0BB20765AB4E64A133BDB936B03E1F605126CB91EE45FEDF524E1A5
B5BC05AD3C0B839923B21BADB66949E4C4EFC54C79421764166E6CB579B93DFE907EA4D68624
AFFD0E7936AAE7FAF31F2F854AAC57F59E2CB597FA876361EE79CEC4DF09F2A11367C51F74D3
ACE7812FA9E80BB062D839E4EC20D1814E3D1F88207B2AFB6E427286F2210D36F4C54F8C61CA
7B222A9ACD4F979E3DA1383600D38DC7081E0497965E5D4AF8E6C4D5C3455F66C2332A47DD3F
BE83E9D1F21C9C1CF31DA9C55723B5624F22188B5736F2E849EBD291D0296336009AD8C08739
FF4AC140EBD8122EF33BA59CB2F36FC470A28BE88EFE2D6408AD7CD9A27A84FB180122D0E53D
2E21F7149A4F7513BE13A3B3920156DAFAD09129112492B0ABE475E8F50E3F76C439FAC7B050
F76FD83C36FC70F6912C0EA9A8475514247C825700599F2EDF86021A03A6B357740B27B4EB59
4ADDB2199DD201D8CA3C2CFA210D6D7D90B1F23A34ED94943A2203F2A58D155A69412C819DE8
E5662E87A3713108D39548BF280EFA640E0990973B24E83CDCD5F4C92B072F7742EE1F8A9D4D
162010FF09F5629E1174A4DDE08EA10CA14C62B71A801753EB215A2AC57C085350277FAA90F6
0B9F6F90B8B4CBFB288E428D13B484C03D8DB9468A273C7843E1E5432C287DBB238AFA667DC3
EA8A61033278D5B8C6F068964F017C351438E42EA602ED7C26262C0A150946EB30B4530B70FC
71E183EF84DF37F01262F7AF357182F371086ADB3E6A3CB97D1F82815FEAB1386C31A98CCC28
F673738090894664DBD59BD1760C6A94682C5518B958491EE33537BB0C8F5E6B6DFB6C17C9A6
C8A18AF2CBE12478FD80253946C65271FA829637406B57D602CF95CA0134FE4CA86A70DB305D
EF73870DFBB48FB3579946CEF10B248ED4EC58E9CFB020D74E64F6A96EB400F46570393EB990
9C01756F0E90DC0623E0FEC3B9A1246BC777E795457754302CA5A5EC1DA2AF0A9F679DC50972
7B90D600B2AC7484052C851B44A1470AAE719D200541C99F7889B6F04D61335A8BC993DC2751
95B4B9E6CF266F3897CE567E682F278528B975E3AA4A26B90D22A4EBA64AEC418956ABD2DA7D
F3B18667A2C83AE5BD0405EC1889BB1F48DDC99CA94AEF1274B7C9C20B12E526DB5EEACB48F6
1631660A708F4F4A0F5134BF6B5A4CA1022DB2D0AD46B4B0E223C9C45577E68BB57DC7BA85E1
135F947046CD0CF01AD2E36784D6001FD056834B710546092F178A734FB0C85D8F45F201C34E
4D425FFA087916BB20BC5A7E624FD2930A4AB00EE0EF26AC01954DA211AD8826CF7F9835E794
39F3ED74CB3A46B9304C7B006E508A726D50027CD902CB74C3BB3795C1154EB017E8DFC35556
E4016327F4475071DECC5040EF8E3D1EA8537FED28BD6D3E92D054D339C82DECA73C28AE2DF6
3FF9C4BD07C48E6A0C5CFB40875F24561265058714991358BBD5EB1FEC648E3B7A34E33FF035
FCEA7577992C124992EFE77C7A605649D8F7DE1584D1DDA3C9D3ED66D7AFC363E5022AD8A11A
505E2C91E7F9ABD247E23C83A9A3A2762B2E20EA9F64917A4DD9571289B793796CE5A57F0A59
F6BD8A5E93B1DDFBF0369BA50DB10D01BFC30078C73614A2C0F6DEFE63F01DDF382D5C69C864
195A22052A8B3060FA44F27A932A14296FADD08B8215687666A38A8AFCF98AB98FC072D4B028
0436B6715FBF1B48A546B41B32AD146A076FB825DEA9CFCB32116C3C99D50146AEFE6695A9BE
612738E7FDD2588F655EF73444DD954C2EFD81C1589C6A8D604CD3624F6A5479EEE611C13EA4
EFC9C99FAF894164A1D4757FCC9750FC859AB5C7484BC191DCE20465FFB4B0AFAE07F0B85EAE
076022894BAF10C9832F7B7783C6D8D9FE3FF7525057D88054543E7C5A4005282506D855802C
D16F99841035E8A02728DC631FEFF5DABE8AD4D1EB70909594B522608E7D73D7376C3A2D1695
1DE72EAF8504E584D868F5B11D3E923DB5E545C7E459712444E23D0CBB627A254ACDF6D67F14
371AE3850D43AF9D70F905F52C6CF66C125BBF9EEBB61E1071804A061A9E321C7079808A1031
8AC36CE43A87D4243E2648E614C6E5A4B102F1DAD020052199D9E3D1906FC501B738FFB61ABC
EBDE6B51EA46EBA235930C8E06798B385690ABA7C017E11161DE2597DB6A7F552B5BC27CCD59
342B5324B1B52EA6B3D79B62F7B19A523AE2567DFD334EB03F01D20968BC3533C0F0D9FBF1A2
E0C067C92BE9D852AC01C43661B2780D9E8444A07A2C01972C436186C2C78A6246104C1BF6BB
71735B734CFBDDCC9A232B707626DB4675334F21116EA432B983824631837AE916489CF01F9D
EB500851258B767A0943EEAE7E6426E4BD9AB75F47C2260ADCD786FDC0F1723EA73C640646FE
F7F5DF3282A1A806E3117FBC009E24B468B5565AEFAEA38774B1AC1FC35AF03EF886F69F650F
93B99E859293868CC6F6CADD93F55566D7F8FDD6ECF7DBCF9CC4628BB3F4E0BC6752A2B39E74
B8833C2CE6D459E5DD4ADFC1DDBA820FF1AF37CAFF5FD7E1BF63DE8D6B48827BD2BBCA821BAE
07448F7F7083CC09499AFA7959639A54750DA774D6067CCFAB34925436B32109FA1A9623774C
3149F23049D1B5501527D102C0A00D86D68E27386ACB78E614AB2AA2834C6C843923D5B1001A
DC2F89ABF72ABEAF8FF02DA3058818AFC543783FD91671A4CE08F6151C228636353D05DD9A67
13F0B112F0A93A8FE149B66DB47224AF0DAEE9DBFB6FA1752B74D69A430C804EC3C50106DA67
7A4D2048B609491EFEE9C425ECD79EA3CACA8F4AEA1F5DBFE2D9B70D8054F628E978FE1C40FB
C8BD55E26DE2D98655D4E0F4D990EECEE9F9CF23A3A9B2194F68FC0E253B784668DA77F6316D
DD7BA2E994C6CED6DCCD3092856AF425079B8102F78E4C918AB1B4FB0D42B8A6DBFD8E0AAF40
01A44675A8AC7FD59106A4A0B25D9DD3C3225FD7B2660652AF62369584DADD882E79F103D5F0
A3CF8DBC8A735FCFAD4681AB57690B8AA101F179C61A66C1BDB4F02AB437C7164E63B27212AA
827FE5B0C51B80296F95E73EE721D7BE6A15FE5C615CFF05042AEF545BC67D31AAF45FABC3F0
0E760FBB31E7D4FC39F8892F9C8578E0D1CB2D197012E9D7B41710C111D71D96FC3A7191427E
5EF6EC697983A4E308FE71789F34A81C4DA0387F1446D2BC71CD41D1498CAAFD0C7B809BEB78
7F0539CF7AA7B8DBD07F402BBA104D2E4C1E6C6DC9D872FEDA27F0935A2931972019587D2FD6
CDC61FE052743AA9F1669062CF7AF1EAF7DCA2C60B5A78662B3F1262615D3F35EE519F41BA98
C77BE006EBC57CC7D0387E94513562FD3560BBB337AFE2F1DD63D29AC0FFC6FC321ACE11F5B3
DFB6652425CFC29C2B0F87D232022609BEC57A59618BDF12173582296F59DE80056FB75C9398
68B19AA3DDC629F464DEF60017BBCD7322A22BF803B32F3DEBFCC17D93A65C9A5204A6D96E0E
4ADAE1D7595783042F171A1B6E4A0B9AEBE0490C4B9453A50625788240FAAA94E1ECE10C0F51
4B6BC3569438228204E7995901527D3A07B6E0F4EA45C55D037F47E559369FBF303EC80364BD
3C0D06D527294FA11A7A62945F80110B7F5EFDF1D1A9B33E058A9260C9B82A16C2B473408876
07CCF396DE7275296788D016462978CB33C911EC080BF3081A5B5F2B24A6DE9F48986E3BF720
AE5738970BF8CE5774D6C8A6D53188349BD3A78ED53A0EB357829B603BFDF1EFA9A0697DE7C4
DAD01A41657AF6A44F24F70E2347B7C226BD8CFEA21BB175C554CDB4F37020BE5E36A723B86C
CD17EB37AB216D8A781E639F52BA8042DFD9771ABA28E9CFBE01F7FA2D768120788A3334B0A9
D90B5C21D047F32AF1D3B8E843716808BA1E5CB43D463CDA8F5AA89C17632734B177AF0DDF4B
1B7E587771562F75565AD73EA80728F1502660C49FD33882EE4F57B6C41945080DF701A0A7D4
B93F95F0DA439E304EF6D62D287541CB6E6D57C93C022FB13ED1E92C52938DCD8359589F0868
D0CAEC036F67BB3B6A48F7AA1F13BA808DEC606C7FCD3B0E557F30FA71466AFCD70A0F5D5094
3FBDDBE382B253FFDB932D4438B347A7F8149CD6F98A8DCD36978FB210E5922C605EE618F5D4
F6A4B6ACB8BA4106E7E3EC5556BF57CEDADEB81C96AE9C843489A4029C191EF75CEED6CA9A69
8101CD4E793376415E79F4F042AA2A73DA4D9F399D5F166659DBD32154A4F59A5094C986DDB9
B7464309AF56D4EFFF0C3D7D4826325ACE7B63193CB74CCF36DE4CD4A433EA03B4727A31EAE8
CB9BFE47D4CC4FA829E05CA8FEE6982E3C741D4353229B5ECEA4B51546AADC500DD5B5E3ECFD
BEE7933B32B5BB56A15C9721A48079FB9C9BA65777A7AE5B2D20F0D4D663917BCA1DC47B4C90
55460865D7B33400E87234AC4ACB9E62C4C9274330F36E68BC14B2C8AB221C7427A49B94078B
DD00AECD891A68C7BA05593496D7016BE5FCD2B1BF9F4BD838FB2D1B466CDBAB3F31392C7B3F
AD55117C43B22D934B8929B444DCE9EF9DC46212F527F97C08E7AE7374D98842952C8FB86835
1E09A9EC5EF57A8E3CEB957BDC3040EA8D0D8A388FF53B89DCB7F3583FD6FB382CEA5438A4CC
AE0D3E152D95F8EE54F60F07CE74282A510CDB454C7A34ECDDF46DD9B15B97DADAFA4807CF3F
B8341E12DEDB0A2964014E7B37A90B9899045C17E0E374DB0F26E862A3BCEE098F93D75AB4EC
7DCBE4B78E275DB916CA7F50A3E8B18AF6A10C730CA5AD389E1330F9D171F411E8CED39C078D
11A7CDBFE757E6C150BCF8129677027DF52253563EE9E3C3E41BB8A88FE969896C13DDDDE7B1
CBC333B7D69765829583D6512AFE8E64450C0A78C8B1AA31FFC53EC9B6806DE9082691445A83
F4119FBE903EE021B88103F84EE47CB3AE9191BB9D5D64C06FFC8F7F6D63FAE927851B0203BA
02321E4A2058BD177C6AB6CBD85CA992F09E31EBB21DE73158B3712543ACD6BAC69A10C801F4
C3B016EC26941B23823E5A57E21DD246E8169C27895F49F80FFC2F8AA737CC68AB590ED3851B
6AFE16C23959E92AE0CD028EBC5C121D04237C379CB5E02B8BA8561E1ECE07223846F3E79346
BE07E616281B8B284B8C688030521BA3489F903648612094D6622807D900C4E4F8A6D94C985B
17A94A71DCBC0FAEF05C2E4D71CC833A8F61C9C9B3A79B40A46FB2DEA6D09FC8F9250FC4C0DF
D4D81EFFFA619E500C2A0AFDB5A1391CD5397EBD62E68F97BEC1B3EA02B4690B88F3F21F1869
59ABDFC4037C87771670467CFF0BB901F6B69D76BD641F57579DE0D1E5B1689DA618ED423ADD
FBF35B0C0DF43D1A75CA6061D5A47CCDE43C9FC7249BDB738B45C690A199BA469FF930A19148
DAFA16FFE67A5537D60B2415D3DB405B60E339A0CFEB0395B24F3D4BBAD0D0FD7AD0C49C8E45
C2FF03D6079E64E9E475A0F61CCC316DF10CE80A6C039CD49B13844DCBA993009447ECD02832
31670FD5CAD316DA4B5EE512CF4AE510F5C261D3FFDFF05B124BB536D53B8BD1CA44CF0A0C91
DF44887F6D9D159DAEBCE5C8D6A69968342038070142CB1EFAFDB5312E7814F1B9C374C02D15
8A16F41F44173CBE74941539CA7B453E7EA10C083C4CEC00E735C80F0F3C153CD9C1198B9167
96694C370E3378A02979AC7E1E22A6A76A1F25A83F79CD15978B99E1DBD9D8A3FC5120604166
E837C060A262B1BE043B9EE40EE36DA21FE18D6B3C1701F9B9E28FDD21065F35C61FFEB5B204
8F621F55A47AC77ACE80E57739FDE528CA67D6E3109C60AE6D73ED3584CD833B36490E3A0A0A
EB881FFF0437D1F69F72B83F0DB74771AD2480AEA7C154960722413C6FBEA34377DA4913F853
4101C108E3EAB31A28C53B32BED4475CC3EACF59B3847E7C9C68A293A078965348B1ADBACEB1
C6F1DA1BFE3DDA4469E5AB03E00F6AB47ECC4B7773BD2F5B70578BEC0E16110ECB4582C1074B
50230693994D8A2810F284FE604D233C8380087556FC7DF058FBEB31DA2275B0DA98FE94D102
A3C3305B64BE37351DDC406A036709A2D00597E97E498316115BE3953DEE63DE963625DD03C7
D8EF07970B5058123BE4543A7955BC74BAD4C84FF714FD4586A5974A6339200353ACDD173DFB
559A9AB700918B7C27B0572FC0AA521A94C742DBB23D371CE51275EABB95F63B121FEDBC03C5
4135F22DB8FA65C7852F4B5C0892ECA92BEC78F26D981E21A6DA6FE6B83EBC9590BC294D45EC
BB60D31E7691C739235250292424CA2AC79615FC178A575DE235E439E3108736A4948752B67F
9023D06799C6C1899BFB4902E2A1EFB20100718BE08DA96093A3021B7DE85C14C536A996BE5E
11A0406ED7C3B8DA942E1A210F99405C395369A972E82082ADFFF1E3D03213FE504CDDCF3617
7008FC78F2FD4EA50D49A4BE181814F0698D6D3E85F56D9BC1403DA8B4201859004B4EC482DE
AD71A315F94CFA119C412BF4B8C7C2CA975362CB13C72B3BEEFA151A3DA39AC918AE6F31694F
B73079201EA93924696450BA0C5E81A219861ED12D93D56005FED3F58B3C688FD0EA6DF82360
2EAA0DD9861EF0F016CC5874B2E7570150788B8DF4A1FE14A0E555853977335F87A2DF58256E
7E091DC300CD75D1907A34E10654A6F8222F000362F2A03743F4CB5C38FC4F1B1438EAB97F02
7727997020206DD9D826814F812409DD08D9944E0BC29FDF3016ADE39C6C758C547623B4A3B1
BE4E27A0F1D6DD0F9208F41BAB3948CB8A7AC19E7059CA66D99B1F9409257302EE5CE0689A58
0E3D11DD2EB468922DC645382AC1DF48D5F563E14E0824E283880E31107B0447BC0899CC73FC
4096899CC1900A2FD428617EDB89B95153E88DCD199EB17BB5F4A5700618DAF84E4409EE764C
9801C4B5B94DDC0352C23A42013DE29E77993D535E96F8E1A694D045416AE607EE99757270BF
D3A15D968D927CBB72CA1D9C6065538D5EB6B550339B2DB271FFAC1EE3E4210EF9E51E4E0E83
E642B12DC8BC2B8908D151712E62F603674DDB7268372E581C63BE8AC77C48E4F469B332C54A
4AF74DB4850A880CFAE7F50953F3B6732AB45DB11397D76C43E7CAF1CB0E0B1AED2EDA7BA175
25BE32E6DDBB20F10A4A83B6FE69873E613D7E5DB751D06E4F5687D1D1A92D59F03FDCF56EB5
264379172A4AEC5E3BDFF43C35100C0EC73AB24DCAFC91083C78172AEF13E27066B78F9CF3E7
C1C6F8232CD5D8562EE8DFDC2231E0E12C934AE8E777002CAA35794ED03A1F527155D348D402
500B63851547A5E8637CFDE6149A5794E8A3186686B5035A263786C449C8754522064948B847
F1249F3F6F2835FC6AC363D8E45213CAB25F67CA1968462694E1D70BB961A3BA81F98C0CF28F
39A432661D6BF5E3E37793491BACD58B583DB06B2D16147896BF89D74A2D7EB55E25816F775C
0E3390805DBA7A99730AAB958871DCD134690497E8F18E23D2E44CA95360600EBCAB1646AC26
1B238E30B1708A860A17F90622B66BCAA0925B54FB126940CDC680B2E4F0360A8E72C85C6300
7F355AA32390F1BC4B3318F0793DED13058C96CF5BCB602CA64021444007B948B5578C3D47CC
852F10766C6F8034F11588A9BC9B52D3512C6D319D94994EDC2C362A15BA6E9E7B04C3CC2A8C
67D8DBC4457551E91D23F4C86C246D6F85C80F0A4C05CF0565FAF317109EA49565C6F7805CD1
576B466FC71692E5173D7B599F08B62E6E35AD66AEEEF9229C6B6FAD86FA070DF884E0094E9E
0DA9D618CE7F798C3C73E484636C56F313CF96CC393775F945B0C5F503C9B1BF8CB0FBD5543C
C3CDDF10586D58C85CD892DF471F3453C2FC45864322056329440EE4FDC3574FCB4288A920C5
84E9CE0AFB01AF1A63D9EC1D71A57EFB220EFD8B5B2F00838C55CCE98C08A21D475E720190D6
ECF1B5803DC74FF16598A0CFA2EA2B2A42466276B63122D8A432DE3BB3DB18322E28666696B1
7A9DC3D6011F235C29F28FD6BDE1473CDE81140761E595EA8AEB774E8D25EA72B2DB28A7CEBA
266E0D1A00420D0DFD8791D313792B74246EDEBEEC664DFAEEBF23B3DAA59632511339373583
40D7C95D305C8F9D9F6173B32C2EC80D688E9D18D7E63748A931ADCB1F1B95A3457620C4878C
45173D98D935E33EC1B5ECE6BCD72F4CEC2290886DC6FC30146FBDAE7E25397D4061E9E97A07
8C856D96D541246B8CF5A326FBF55233B7C2C6BF1FF4014A447D750979E230238B40881FD269
32D870CDFC4B4BCB15F2C995EDEA3418AB57DF6F9F7C115F324B15A066C4F6CD15B24BD320EC
7A7B7E68D9AF5C1076A5B7407DDCC8E6D4709AD6C3AC152E1794B28E787D787343DB3ABC79D6
F35F2166215BE3C912DCD1C63FC247E0333CBCC10F374BB4C1BED33FAFD46626E54794EECD7E
E2E821F119A0097D3BC2B8336825C39C98708724B51C59B37C61666331FCCEB7B5AA43E429A4
7EAF42D696C9601A2EFA69D2810B14289C6D11301B08C6322880013A038D0730F6A5E3BEAB4E
DB82BFF356E0D1FAF6C9C7A949ABC378E4312127887EE8EDD3CFEAF47A3D61C8088439F43EDB
54157F13992F5CCE8336DEB048F720B001FD685BCE3C38ED8BC92373294907538331A8DC2089
1D86A4FC1E727810FD60E0A0E016DCC674413D7DFDD49C4E7766844E7A71CCC9C880E6532B89
7CB26AEEFAEE0FC5A338B2A8E7247083296A370B64FB0F19BDC8A5B39CB0065BF4CAC12A5860
ED9C9A794EBE7AD1D1BE2F8A056A0C88B2AEB24ABE341D6C7B1426B03CF204A07219AA36FED1
32D944C3E66AF03644042074E3FC0E8AD8A53A7FEB512847B95C88ED2C43A4FCDB2E09B1B63E
E9F98390115CEDC2C7BE7EE080AF4B7ABEEFDC34E3F06346AD684785CA4D9D21FE8E3D4AF7E8
716BDDF4A4E0D4A2E93AFBED9CFD52B8B853972576D1D95CE1212E014A4D28FE2CE66856A157
433ADBF704F5A71BF70ECD5E53BAC6B4665F7DB4F009D3CF30F50090133100F3E5B47B4357CB
D611E16701642B3DB387A4351E10F666AE55CC46BF274B0743CF94090F5E5B1D58680A045103
13B5181000C3FBDA29D82D9EC8B5FA71B3A8EC2B2365728E9ACDC9BA759C2C4695C72B0560CD
CCB703DA83F1ED762747986F461DD141DC9DCEE9116113ABA98EF470CE839C8BE83647F68B8B
C4067306F29313275A9CEC272C4EA7936536E11B58E820EBCCEB65EC52A48649F78F56958439
EB9A4EEF5F82E518B3CC4CC232CAF14ADE0E74611AF20CEA4D99B60DE618D21EF5F49E41C5A7
232CE20FD39EAC3323C90C7080890B1A0086D3EA2CCB7C40862EAE7EC78DCFEF5D6967DA9270
C8B23E67A500EAAE9D6FB2A6E100C170FD514CBE2BAE0575A61809F06899F04EC3ABF9592B1C
1AD7497D7968486E95F234CD250B0E2820E72D77F1A8C0C1DB77091B73137D38C45C18D2BCBE
2067784AFC14E3D76DDE6F68C5EE5AEE8FD55660104A0EBF9146372DDDD6A13826EFAB7C16A2
DB5971FB7B89BE7F2A5AC6EAD11E1FA02CE73051D2D288E9D7197BCF7F6004E04F3209C3C432
9AD7B36753B53090859040E31571E9E29D210BBF31938B2D85529512D8C6190896EE2419EE9A
3E8D479A43661A21947C37FC0054F879B5E67269F0AC06513B36562B793B003CA8E5BCF45CBF
138566F542D80FC9A134D4DED7BDB5E1B5C1DF916575425F808189933C849281BE6DFD151B71
34C85D2AB6247167EF71B2A38DCC0E6B17C6E75B733165148A2A998239167E74F872D634DB06
09A385EC4DA53F78CD540D4035CDAE5CB96C04B16984F2127ADABB775EF5F2B497A3BED1267A
2FB43041DDACAC819945967EAB17B44213CDFC45BA3A28C664F9CA99CFC97D87A8B9B7D94DC4
8474C09B868761A0A27EBD0B07FEF224FFB2FF4E0B72323650A15D40FAA42EAA540AAA490D09
189F3F67C6919B76C40C5B858F5AF3397DDF5F41E47B516136323353F9264830848949B2C827
1606723042BEB161339F31B7B4A428B3BCFD8E5E50393706A5199CF3BEAF12AFF97EC10FBBA7
5E1DCFC4386EE76D50C2E879DFE3DDFF1EC28601E47E8C7FF8FC9E7593B6DB8967FA763E5415
7C492F8F09D43CF33DAF2DE1A6BF0B3128B31232909AA14BE274A42965383E64B9F3DD1A70E8
D341FA5C38E10475BC1D3B992C68E291F5CA9530E368A8C59B3D1DCBFE2C303587270A15808F
D04E1C0BA326F045D19D380D0CCF10D62658F1116D85C423393C9B71BA64010FB2B1A9BD9791
B246914F1290A197D1A3B7BA7EC2B48E454A7902AB6EDC36DCA62EC9849CD53B0F8E89356968
E369CD2F03E75B84D06DBEE93B5B337424659501BE91385A514FEEBD2E89AE9C41204B0786CA
B594F32BAA959090F7E3617D69CC9A6042F373B21CDF7B9DC5DF7AF62B79C2B697837974B2D6
41138DF6FD158A732CD4A855083181E207718AAED4150F306BC7D75841FDE703723BB3E88C1D
7A00091E0A86E2573174290DF4E92493EE4FB33C95B8C2C2D94F9B6995FFD88E1720F5ED175F
E3F6447FC7221D45E3A573440556DF9061700BDE8D58C666905E6E16BAC87E9AB553C36AFF4C
0865709A539ECEBBDEB322D3B458DDF8FF5E46BCC5BB96E669D016CAE12C1E59A80AB3CBCC63
E50183275F7BA7E250361B8A897DC5AC80DC23DB41E5BCD37C3772D45DD0FF94EDF289BBC2E5
CF7E2E700C7A2C7BEF61373F6AF9CE888AA3E8DF95A2C93FE1AF150E2C4ED88B4A4981203D52
26C53838F2DB24DD38C5EFA623799E55062EBBB1FA009F3F4C2FF3D813BD08EC32EFB61DF732
447B475222D242B2601464DF2A146078A06536A05EB2309DA0B40A9652A0DFC5EA33EE6E9EFA
3EBBBF747A76E576ACBD460743C3077EA814D824330CC95C7CAF0EFCC0E95E7651FD183BA7B7
CF0F2503B7C4C08CC977149F2D4D9CD72C62CA3834E16CEF235CABA62995BF3778911391205E
E8F1D7280B75143D4B1A8F2B945B16CF92BBFC14E5AFC8FD306557F8C2A330388B939C65376E
5B0A342CC49A70D11F7BFC62C9E444C7A1BEF09A205C622CB38E7F799411F1DAA552FE50A8C0
AD7DCEE62DCA50A79A48300183CF5D9972AAC11CEDB45B2D0A2C8C1BA0EDB3E48421D7F240BD
172D90AB2410FEE2A085597BBD42CA1C86A8273980767D06584B1C983AEAA86FC2AA5807E7D5
2ECC7433126E5324400441DC8858C1320263A5866D3D5F9DD5392EEDB48E90B8CCCDDD3C4B7C
63E20614ADD1D76C136FF8331FBB19E18A048722628F541BDFF327F2F96C378EA150453C6325
E48985F2696E290DF181C005DEE8067A3FBF14E348E9A6EC69B22A7D062FCF7122B006663CD3
32CAC47768E1B3DEB272C92FF485B9E87BB9E9732392510E939066956F72013D85B2A40F1752
A5DFACB3F8E89AB639A8C9DB6A492997D165727D4CCA052DDE697171229225C21B436C196BB9
F4198C35831D7FABF033950CC6B5C6BACA1EDB44DF9238A4B4701F144E7F7041B14A7A4274CA
AC73AB7181A7B32E47C5D6D910DC8F2B2B1F08897F9CD4A01EA51C31DC1884524D81010C7C1F
4A7FAEDB6C7C9FC75F2B6EBC6B37721858045DE318363733F399F7ADBA6732F798BE74474E52
F4551C5A5D5EA46959B3DA5E3E113EFD99B30AF4E0360C9E4A20EE5A4F0B3A0DD01354E2602B
19C9F67925BB68984E3FA2E48BE10E82AB95FC19C6BBEF45F2C90A47A076C975B2602646EE07
FBF8DCC631CC7DBC301E53F618D6F37E65B28D96F8802C658A4669D39644F63812B1F0C94337
EE3922C6F29C1362B252704B24EA9CF296E42C70B3B8717F2E66197E53D58205F8C9EB7CC3E7
0440702AEF95BC9A8D8095B6F9BCDB75D7153353669DE84230946CC059992E9E226343BB0367
1EB56C50C82AA2FAE58C7EB384B5A0864CFD92002886C4347F6457A1E4C68E6BD575D3993BD0
0FA6A0334B562B1B044D0E1230D8F22B4DBA748226BBEB15C6F8A4290D25691FD6BE089700CE
15D8F72D3F9BB0AA672B5E783E1045AC0E1C62B8A44518E6506D819B6FF2761EC3FB904BAF7D
E37C5690D2317E23A710DE8D919FFE018DF2C52E8A9BF134ECFBE33FA36F22A867176E10C9ED
0B35F666458B42070BE76516762CEFD39243896ED8902827AD7CE27788ABA564F2D7AF1FF4A5
D70A1C710FB389357FE9F414608BB62B2374E112DDE4FD14C1B081482E3F2D073F27E950C79D
DC0D627B39840C81D522A69393376E6FC3D46677555E1513E41E3231926BF465DC062DDAEBB9
547B671322FAAE1EF5C69D71CB061F17A030395ACBADE08257BB6E6A625D0B1B0497FFC66F5A
65BCA5ACA81ECF4497999C0BC0C84CA6A6CE7A8A45E025EC06B0F7FF31F872614A730F851373
48067E20A5E927647F1B3D0FF3E4991A9B3D8F7CCA65D8D1BBF7F9F793330A378E21C82DB7D3
5521186B5BEF956DB8786080FA31467B702A31D70DC26432C17F1B8A22B2463EE49846349B83
7134B937BE180560906AC65D27C89081D10B8D95E0553952F2E07916B299DEF59CC81490B85E
DC21E9BA36F69D7D141B5D73DDDA4E721258DF82D190799FBF1DDDC35D8665A79E574C5C7C3C
8522862C64985F44B1FE1CB9B5D92746908C7697EE75540EDEBF7941FADF24A791B999514748
3FDEC2AD204B9B815E1CA20535A538DA1A1C9E50B5ED386976A9A57D27DC66025DE09C560D62
208AF03B82514D37B232852D5019741450A935EF47FA76BCA29485D9EAC82AD44770F1692990
A4A5983B4245EDD81422B086BF04249CF4F12DE25C6E1DD8C1998843158A45A4C94235DC846A
4F7046E6C263D3B4CD937D315259A8ED2F59D5F344E5F2896986E69B71EDDE1B418C584F8656
AA50F787AED87C5338EC1E784EF121FDCACD0F68D78EBD76FAD1BB3866BC4BAEABE23B29D7DC
82F1772FFB585F49ECD6E8ADEE816CA791EBB8D9E77A4003448B1CC16F09F77583AF98431597
2427C358C1D67677C29D434389720C284B575509D490F2CC2EB642C552858703A916B5767769
8E856E5D9AA9CA3F17956F06BEA89999E2C7C74F5E02510709DFFEA199542667B1729EEE03D2
AE57E4FEAE3DE52F5833DAA6E69E6FA153AC579EB03BB6698313BF547EB077CEB92130A1DA7E
3967383FBDDFFF1FAE525AAE3D9E8FCC4F0F1D3C31ECCDE908515AC854B96EF0E5BD28E2FB0A
5A51B7258803B6E47D32E8995783A348EC9BD1E12B7BB92E13DCB980E453002FB3FFBE31B323
ACE5CB90F99FF1ED55C14509BD58A730790B390EC750C8960C7F87852460518BB233A7C84970
AA1893057FDE1A7772F51A1B72BD86524617FDCB6B732B9DC2CD4EA5956A498344ED8B5276FE
D1531B729476B31113022B2D253EAAD82404955A427EEAE603351EB2A0AD90043F8ECA04D42D
132DA12529A1C811D5FA6CF61B98E0A8C33C7D97F258E293305DF765083799DC3D4E5EAD45B7
A601C596416646AF013AA381764E21498AF41E8C0E1543573F0C9AC3ECE77DF0459B40EE26B9
4380CE4FAC98B861E4E5DF69146245962A2DF76DD35DDCB464E187B6446D91CBB2B8846FDA53
2727893ABC6FD4776A166103423917FF6F9538A2C4947280724D2D55D94C89DF0029D986349E
55A2829CDB01C704EF6FFF7764CE15565F3627B990B999E6B6D434FC353542460143738B23C6
794F823246D2A926A680204DAD137AA7F2514B7E9D5AEAE319D248480C282D1A3BB8AE10661E
305A096289E11B4909E2B6C201503AABC0AC9903F47AAE9BA24C15F887CADF2EA7592F9D6A8B
94DA55E766BDB13BEE9F849AA792E32305B2A609C36A682F92892F9C055F95C9ACABA02B5CE5
4B32DBC57BA6E38635D38AFC85A6CACE56D5F98BCD1777A3EF3B397FAD270D0C204195C65DF9
9348F0E6F11BD977F4C5BC9C3C04D62B102E66A91E2B1E0560224A4C5C1C45D3173C67099B63
46DC2F9D9D81247AB09234D11348F79FB471C7EF7FC5E78A836B1F755AF957C93506FBDC2BCC
4583AAAC45C7B7AA1A33233412EBF1792EC2491F06DAE0D35FF31F0C7150322514C28F12D3F6
4C0DC9AE70807D1902AFAF90C40C72996E2B3B04A04CF1774FAB580475C447DC23DAD57D7E2D
B0C64D51A13466EDA52438F12D6EF6F9F5EA233CA5F801AF6E7458FAEB9D37F1A77B16530E40
D6F1C2375A62ECA81BD1089CE87A0E613D13A39F286C9F9C528C1D938A62D38B23719DA119D6
FDC4C9228D98725EC547F2374033E888271C4C1B34FD98B0B30ACE7E38E86E7F7030158E3351
2B49D231E813C453DB728A65DA586227205F90B02601DB0F8D2CBF71E186FC93C88A3C22861B
62EBBD77D54DF527C84AFE21CE8DD2BBFAB0825D64CBA9658E4CC83577AE2F9394799D95487B
398E9032591735765F316E0A41F21896662F1CB32CEBF1D438BD196958499537D1616F786B1D
8BE32605DD14B421D242ECD0F89EFC42A3385F742926A324E1EA72EB3EF556BB7E85CDEB7DC6
29CB2495DCECF00FAF6FA0A5E1DA13E67CD8BD0780D516277D2F223F5CDCCBDFAFDEB3112219
7360D1A8940D3B4914BFC3AE7628B590CC51CEBCB0728131592AD04D582D43396F4351F0A4F2
FCA25F1F1A42CEBD57D5AAA551F6D427A20DFB3A4D4D61C4BE7F29BA4C78714EA92581324333
09EA1E6E2190969184ADF1E716FAF1EA4888F415CC52C542848B74278E2DB0B97B305E037211
9A7F5BBFCE14FF628AF954B618366FC86C47093BDC95E59013E543D65FA6041E10874CAA3148
B1F3BA716CAF1BFE19D0A60594D447C571C5DBC8FF53D238823F0A69E67D6AF3CF97062BCB87
BAEBF7925C5AE4E2BE9276E4FEA357ED521CED98F11C03B9F5EAA23C58F5E6BF74CE57CE0DF2
6D3CBD5C3B4A80F6BF6ADEF00987732D4072EE4100A0909AE0063AD58A4EB630F944A17E8EB3
7E82030006138CCAC753F155AD98D670DB554763F9C41C58FDF473EF62FE3E25CFAE12A7B410
D68EAEF74439B76D2E5E81C75A55547CE3B27783854B2D636A813FB241592A717DDEACD9EEDB
4ACA9212229292B4C002768576018428B12DCE4F5F3CADBDAF10770BFE44CE8E1AB363BD2861
969797BD4CFC8A62F7F660900D9928FA65A0D18E36410D5B9F1B1D8FB9BCFF58D6563AE97C3F
7550A3AD679D82683A0A40B4333EEC2673FE12C235F2570FFC73E3620B3F11ED737654EE760B
357EBF0AE424201051BCE4FC578AFA046E0D5BB2C1EF4C6B3B62E73DEAE42053A97D5CDBA053
D53D1DB508C6AAD0C6F67E91A3750C5C523589BBFF5F2AE77AE52A3E685DE556E109E53798FB
661A34425048899DB870F11A3B5DAB9132B39FAF5ADF28F2069D5BE1A098322DADF881AD4252
1F4E3EFFE9BA177B3DE6BC629A1534A790E637A557872ED7EBA2FA9B594EB176F85FA99BE832
2EE4E2CC3DADEE1A72A3F490BE4B4649C7F9767492D46B9107250755034F1EC7301B482E326D
D11FF3C020F87769A0C7A5BDDF87B6522A5C4EC1699D1ACA9DCC6387C8FD005AD1C92F3F184D
FA3CEF5F229A04F7BF5EF078FB01EF7911666DFF6C35ABFCB9208D6D4986A29AEEC5330DAAA8
91D49670844F1137F61E2E3CE673F1FC73F61E3ED1DC878AE8A16FF310DC35617E57A15EA5CD
29CCA08D7044565B81DAA60D463BF9398C455B6518175DDBA97F41DAA297708800364247C790
FAD24FFC5377CC6BADA4907812337CC12882C5436F14DF72E99FC250DE1C8AF63957751DBF95
0D498C5A127C9A9ED6A3CC3C7F9892DE68FB3AE13E93396E8AD613B2A58CDC186EC8D57ED20D
8B3FBC5B3DC0ABCA8573DB6BE5D6BC9FAAAB10EC1CCC4DC7D1956F46D5598E6D5CD979581946
19F076F513DE8D309CE266C37944382B88D27E85182421BBA3051D829DA9BD430A02A6530159
699ECED24C3D6DE3903135B9E5D26EA2E190E14AC4C2775CC5E4FFD17AF18F8DC117F76FF92E
611A3B5AED3060306DAEC80C5067B752146892D87FCEAAF1A70C3F6A2BA4BDD750DB10821E8F
17DE51BF3ED17AD217FF1CE7B6B9924A13E7092580F49AD0B55B46FE10163C3F96860E90010D
132B4A97D725CDFCE77DF0C0204B195F9D67EC92A0B7E847F7BFC28659D94AA09D9942A2491B
FA716440FE321F9A0FE92C97456DCFE34BBB4AFB5719E7FB560983E9150723520A7D040C3993
4FF0C2709239966AE31FDF14E7DD80C50E25D139942C49CD34703E72333A91E2217B5E80F380
95CEB884FFF630D85C8DC3B8FBC00744CC39BEBBF34DAB2C9CDFC77B0BAB476065986A066EF5
C3F9AC1AB6F152415222A2EC7D09DB8212EB5D7CBED9ECCFA7E888F72110407C75F7DF9CDC9A
1CF135F859BDA46C508149D7D4700D80CF71153572779DE6DF7571741793D69BB2E6547EC8CC
675251F8BA4AF4DC64DB0B491CC38629E372CA26588D77266D41D8C0A2693FFE34D8A5669A00
750668713AD57D2DC36EF2AABC8E5AB740A4C8AD182DDCC2AF69B52727FEC431F8BB31AF857D
0EFB45FCBE8998ACF0CF70FA15867067F41F78A4021D54B9484B3A51D2A69F547584172BFFDA
F4059A05DACBC274930B28C3B461B121994D11799F87092EAB940389F271B8F303C2E9DCAD70
5987F374955DF1A3C7FFCE45A7755BF803C4624FEE2872402AEE93DFA8E86E8A5DC27BA30DC3
9DB9E4EAC2A0A96FCFB6351503A427F165B43BE4DF7E060A75D5434F40CA225BB21443F66162
F2596D7884A5A2197C5276987C2949C345D6E56DF04EDBF1C2932D08F92D45709B6B1B69C2EB
E6942C3DE8FB497C9E3D3773589C6B3B1279088FDF2E2ACBB07ACD103FBE1E1879E5917D2E1A
E4AC84989DEB6DDC06F04FFAA3A85C1F7DA5DB00F28B4AD277E4F3ABDD564E706DF98BAD6A83
E078F6311BC45A1972856B931363C6868145282CEF8AC3610910D6836514D11621E9A5E5C373
EC139453188A629894DE862D4D6CBCB468C68248FE42FDD0DF15F77D319EDC3E4AEA37C5E141
04EB360C3288F7C1B59A25214611BAA3488D120FEA1E8E290F05508B5D46F2D9E09EAC0B4615
194767CBCBE20BF8F8B617907D06363188DB1D67C438B1C6813482D20E40CED220D8A2DF3FA9
7F8395551D6EB1EF5D727CD1576A4D43E46A46171B4F957B37DD495750169384852638B32774
971C62FA2F879038BDFBA4ED401CC55C7473368BA632A2E45B19B2D59CD195C12468106BAEAF
C033F85980F116E1838EC15C9D6F6FB004D351390AD817C404053E9430961E9E72158E5AC988
C047EE205E8A401FBCAF53357B986DEF62C0254650B1C1096E1A227E64DB89C6AB0F454E71F4
C8687EFE88F88377DEC8F52C10F791ED9DA3217349342C789DBCA7E232AFA2E1E69D2034ACDB
383A5BB7F860AF534DE27205BB9DC349AFE651400819E8792D60E6890676822E24067CFF9883
FBC2912077D74AFD3A2DE6E51B37C757E287D681B7F37FFE0F9E8AE50C9206D835505C22A447
81FBB29431B78A340B10A9687A6B102057E42EA9CC21E0B032F49B8352233BA2D9EE558D5D77
1BC8DE9ED7C2465FF17562E0C4D356FDB5E62D2E7768155EC6EDAF0A64590A2BC8E74A015271
56850A300F2A9291D902DA210D19A797C6EC9B77B1174C0112E4790373AB9A1634925BF2EC8D
B11C46FFECACBB4094429DC90C4B9E58B3743F0799231D2AE64113263E9B3AA926B3F4E2FC1E
3F776C5773327186DBF1812FC94882438DD340181F5EA309B188EF0402932D88497D321278FF
17A18E48254A054C359A22E112F6C331AE80100F1B7C03A5304AB4B7E24967593B87B9E6925A
232D2B4BB651E05F1C498EA6B5C1532C35C143EA39DF81EBAAF32379820B349566691EEE167E
CE82634DAC80DBCF63C8D124016472BE14A8A4FAA30B8B3F2306CF00731B56805694A024DAC3
D0850BAA8B350707CF126D137D74A1C6F7EE54527AF65F6AC1C51EF065D6AFCB7A35EDF1E688
63418BB3CBFB75ADE52D3BBAF815B8ABD4764E3A7004EFE008FEAC1DB4A7BDEF35D7DCDFAC66
F7DDB3A2404F59C3F6145E53322781DB47A352DF248CD912FE7AE6930C1709502870B0A32C58
C1B0C179FB572F75711240688A4F3C83499D8E74E7F36B00B68E948E6854B141B49C6A09B9D9
8C917C2223E8A61F7D90E8626CD5D5787078F4A3BFF1679A841C1E661C2635FAB472876494ED
1CCEEA819E5EFB9566FF90C386266381DD33A2A40CDE7E7CB4CBDC6A4DFF6E5903743C48EC84
38D3C3C07DC703177C9FCC96B95A584001DD617E89CC99DEEF072476CFB6ED411C3DC79331AF
92D9472257557BDF6EFE0E649C1C81969E0D29B7F90785FCB7B26BBC46ADD9FF0526556EB49B
45DB9A132B93BF8DBF1FE1C0E079F3B55ECD50564B8B9BF161B7BB41ED6157905F3CC6906409
254B7C4D576C8B582186D1A2809A40206D8AA9B3E7ABDC132EF27CA22A34B1FAC834A6EA63F1
812B8A0D7FE35D175FFE6A53905C5F93357D16FF31B3DD08E6489380FEBE2E5BDCAB13C910F3
C3DF0814C549801B2EB2E53CFC8731235C333F866E49618397895CA7A7E39C08D48259674863
A171473FE1A81ED4E6CF1C3119087B0E6F246EB636B84A59A905CD8969EE93A36999FC698F35
33E8CF79D1C3025A840BAC3E07E42A2E28CE44012518E1B6EB75F180B360AAA942A7B5030D11
191BF3796A17D81DEEF7912A21655BCC40EBC540F939D2054C0F7ABE2FD1C86466DF4A179A14
E53B18318A54A646B81F93036F089052C5E36F4EC0D8301DD519BF659C6505273303AE3EA05E
C44EBF1CCB7E5304334EF4E89DAB4B5A064A1D2B09417029EEB47BE11A6C8BD4F439F036FCB8
14DF205331033EE1ECDFD6CC0C6656550A1E17E9D9B053F83C4CD6CD35795EA87142D8FCC684
3697A9363ABE78382776971C4DBBC4F4DBA47D3C7EA6367620B9CD3A5BC5911F35627A1CDF1D
FDC390F3A9611E63AB948CD60C74D902BFB8EF2D71A39302A063B60124EA5408DC022C8855A3
81F2DBC84848BA83A53F63CF4359BDD2B5E6B6B1FD64EFDA3A8F39D0D456FA4E22C0629D94EB
4D1F65F9E444047E7165DCF331F10C53685C0597106E04DF0ADFA2F8A7AAE3D0D5E56063C839
C2517D09F2767457972CDEDAD175E7B8E2C56413518D6F26BBF018CA878EC004A2CF7D090E4D
B22D46698AA1CC63C29403AEB26BCBDF69083A2B0ED6D330BA57EDC64564A71FF8F2A025C58C
F2AEBF458FB5CC0ED80AAC1EB3983F899814AFD0EF98B3507CC5318F23F66D7EBB37BC187E65
6555CDE7FA093414394B95A585C5E35A1081B280737BCB67A5254C897B067E3F263A957CD65D
B854969562C02A71DE9646D47891C16AB1E00864FD3A8F3A1592AF8E27B71FE2C6A1A746FC76
8A6A75E4C05CAA475932631A62E95D2814448FF0F77C7CDB6C48A9987ED7ED344AEC1690E5E2
6220A25B3B02C09DB35294A902D420297FA32AA79A1982E70603B4F20EA50E2B13A09F3C28A4
C7B7CCEDE73D4CE25F72CDF5C0347A17EF5A58B83179AA8E67B8FEC0DC492F846ADE360F1C66
40EA694F3EF71FED444217823169D5CD9B9398A2C595505142BD041951E3A874EF42B2BABF8B
907200DD2E1B59B185AF8991B6C6BB6F9D9964ECBDED07A43CF15428774C5D446CF95A9FD1CE
1AEB2A328EBD07EDB926C55FB0A88F027A94E5FA1C626ECBC9661030B9B4F7F7D1020B205BF9
33826C531879E4195403F2EBAA16524D391C8F9590985756F88E7C97949D63F5C33199AED4DA
E90FE5D3ABF711C5BF46AE492D9E3A28230884FE388D9EE4E0B4D7C1FBA91F4171BCD12B1B17
4CBE36C3056C1EAD14A5B5F32013B2C23936F67EBD0443ADC96D305F850349E60AA8A40F4361
E5F9529DE83504D27AFBFF9F16A00BEB8EA1A637F6E99E67B01D4E4F4FC9468760BF8016FE56
E95708D600591F6A9635E31AA2DDCBCDFE9F4709D6953AC211F4B72B6C66F00A65E7593B9702
43B1F06D5829E10C0D78B03FD07362F351FDAE17AC62EDD624A5DC771DA47DE62A50C8D1BEB6
BE507BF75A183C006A24E1E2B8C956EFB419A82878C3E307FB5508F07CB7F7AE5B126E0107F1
BCA2684E6FD855DFEB9599563E62FB8E0A01FA9732E1785B7A1F241DCF52E3AE9842E518B48E
E1C2966733DBBFA49BDC82CE057AA8200A264F737D8D292EEA037D9F0CD169C6EB8A10C8055F
E720ABFCF290F2097148CEAEB66ED73690BDBA6B259E09AA931DBC2952F76D3765A01EF2C4D8
10FAF58AE1826769FC9EC397017A3D47126B20AB3834768CCB53E0529660E39CA51CD259EBB8
D704E8FED52BA6895E3024B0C12FC393517F03F31439A8C37142A169D4FC738EEE1809834E1C
A4E60E32F8A464ED044F07A5A3ED1FFDA036C2052C1265049377E31AEE320E6B5E9ACB8F7959
7196AAF8E940A3BF30A93387898137788E45C46C4D86898E4D8504690EB30DF7CC86BDC90BA0
D5475834D74C0E9FEBE84EAD16D39931B0B94E41EC1E282FE29BB38BE42B6E7B3D521E9A2A3B
94FDE9E62FA0FCC6D5A7A2C2B7D19972F4AD66029F70B712A66265338789782CDE842F0A90BC
52CEF5F1EC30AA3AD5C6B0EF19D0F49F4FC817BF60B6DD29B564587AE87B8DA6E8B795EBF474
26CD502D19B8B8955E11D6F50C5644E2BF32BB940C19990AFFE50F43E0B19D570B4172E6D7F7
784E92D2431A0C38E104D0943B34558949A3CAC6D6892D3076F5022EBB951F2F68580D205643
2090464F9242E69883581200FDA0C19FF6881891F5348CC5D28A0231D5079E654758DF62F3A2
5891590161624E57CE2354E0C1439E7C519B882F4BDCF3C2910D5D6018FAFC5D5FEF94FE673B
7B5D4FAE6E156DFEC89C6F3ED6CFD78A33388129C9E63A0783D8D2BDFEB6F2F97CCCF0FBC7CF
0AD2D8A53D562A4424EDC89712BBE2F52493707E05FF42924B6F39C2D6EAA31AE1BD08092C9C
927C750FAF0E6AA0E5F2560A0DDB00CD0144DD7647126138FA8E96193A3EBA753FCE155F4C0F
6D341E4AD327AD584E8645657930265D8BFC84137017112AAE331F0673F0A183C2FA1FDE0327
1016D1E2E4CF9914092F76449E6248D09B37CBA8A51249C3B00525AE3F7172ECB21F433AE709
2761A1AC03D155EA084273AD495A58DCB4F3A49E8404AF334019D23410730477F3DA54ED7FC2
2CE4C210569103E77EEDF694B37ED8DB9CE51EE2DF3887FD507CEED4F36F9296FB2A81ED0D9E
B3DAF1C7352C0442205A129459B3EACA9E370D8E5800B02CFED0166BB39722D9446A05E88B07
EE212DE6D2F08D99E9FEED243585168067F16E824B647E30CC185C67E07B8AAF484CB4AC587B
278F01C448961111CD8FC8CA1899B51B87B933DDB6B27A3B0DB85922E4F1EF8B5EC51AB9C537
1E221E668CE7683A47AFEDEFE0C52E8EFA249BB207E70D6F67730E3949DCA25CB1A5B371816B
FB36FEBAD6BA03C16B36D57000F35D42704CCAF64B76FA6E40BF273EB3892BB2F68181527C32
49D682631E6CDB35D7D10B7AF4D81EF5EEAC9175EF0FF983554F9623E719D6F3070AFA5205D0
176EEDDCDB4A1B079EB230E6134D32183723C8095B1C21C9BAD14A3C49EE83E84E95C3D2C5E3
94114D77BEDC4CEA14BC9A777BC1C0D74E37F0CBC76E1ECFE2A94A8DCE6CA6233FC1038DFE99
4B0F90BE6C13D596F3BAF65DCE1D71213E0882C0D12B606A78DB5FB5E76EC96C4F53DE114611
1EA0EDF2D4BF60C2F864A006DA2BC893A0C182F5614D58FDD88DB0CF115170006A8D76FC449B
6B84A997E30DA135FD215F30F11E596EE530109523C22F10C8704B5700F9418518C203064EAD
6A2A9E69320B8EBEF4B22781F7BF1E5AFDD3191C8A2290986100A4CAD548055DFCA1F96D0747
A659AC55DD24EA87A96096947511D5D17F01EE335AE91D378FB52777DBA3F53941C105C0CA14
CBE1CDF2FC0205D4E90CA1311669413AF994CB5F4E5B32E8F246CFFE3415648191FB81A04B86
6BC2552D6CC23BB95FC95264852569829ED307500E86814E0AE85378A027A4356A1FD60A79FA
BD2455DB669CFF5B39C7C7C94E3B1785C81240CFDBF7CBADA88F2E4DE35E3151C09211D6A624
4E16E8E3790351EA83A1B1BD6CC2AE3381C9799C7A344081F76CD04331AFC0C092DD75119CD2
A0DFD89727038E810C2AC765EEC82C634FCB57E6A2634F5951ACCE2C0983B0F2A8D5BEEEE254
4ACFD17D7DC176741854EE30518BBF4D718E2031FAA20FFCFEB557B4D2DDD95FD6784E272119
15F98D58D58F953253442999873BBB9A0A6D0F02AAD79B3930B80DB25AEB3844434A902B305A
2C52DB9FE985C5944E5F5FE4126D9FCCFD2AE17D4D161D2059514A8B3B64DB6ADC21E9424B6D
F07CC02147C02D93BD6B61A5EEB095E7A13C5438296A83F5A36CD1631409C9136BC9ADF73743
B9493840E9D2BB03D8AD42D1C7ECA777090FE9EFF2B8FC28BBD6EF58C2B07B0714BE4BF36F2B
FBD143FC16DB826092D116E27EDC3F2CD11F6754CD7714411470001E8472149E7C91F3646D58
B29682B2832D57658CBBCFA168B5FCEC69701DC57F499EAECD6360EDC52EBA793290672FC44F
982221592DC34976828064770DD502F4977FC5493D6F9ED92AE290A7C397B45D8BAAFCDCCF44
932DD5727E42ED3CE3B8DADAA018699950B145835A37DE818AF595BDDEE6FA211535DBBE15B3
878DF4B30D3DB9B16A77DB3B7B7D8FFB83681AD0AA968DC0708F62D74048A50AF9E1D1946659
33E02FA1EE6B1EB570E1CF83EC6B82AA15E0A9A21FBD127873F2A445D20CC33BD7697DBDD2C9
96E5BDED87F065C3D930F3515F98F7EBAA8D79D524C84D22834002E2172855B493A9243DD975
8B5AED3B23D9AD7AE58CA2913B9AB0034962403903A57676032F9C534F1798B17BABEABA34DC
050DD50821A60DAA5FFC67E1E08D6077BC24432E5EFDE92001FF24722C9F9255DCB71A9DD715
500A1942F9A92869E9D934E25ACE1015F47594750CC94BDD8D75E1CFA50784F6C21ACEFC128D
2763445E381B5FC8AAACC7AA1BEA0E376C5F82C652DA1D4FBF8E65940FF4A1C211802B80B48A
FB033B546F50E08B77B3086C27BCA63CF41B2899D5E8BFB56512CA157F29A04A991EE408F296
550B64F311D5F307FBB7935ADC6639D73C236DE7F6103D8A1CFF298CB089BEC33E2B6D4100BD
77DEC525C76D3CD4489A6C8D298BE38C45EB8E78E62FE137F1BAC189F7B94866E2C155525144
21DEB288FAF5A8BFED0DFD08DFCF6572453602C1782AA03318E55528B56AD209BE706F7FF0B1
603D3C82B6C7E757ED7B67AA52663859CCCD7392D83796AAA75A450185E8202DCA11FE1CC6C4
02FCD70A0199E8995805D1BEDF5CD3AEBDC9D706F5BADE4A0F18992495B911199BE77041CE18
ADA4673D3FCD8BBBE97E6A9C1156D4B385DCD7904C569458F48F6C9C51A4F33E33EC135B26BE
9AE5A17558D258D0F3799F9F95F2681FA9C59ED5655064286ABABA15FEBA95F8618939CA2AB1
AF24C0817019BE643A3E7B21D08FF7FAFB6677563E89D6E9180918D06028F60347E940069C36
6601A33356AC2B1E6AF83276ACD45A9ADD2F7AE4A1471233D6F87388C1E31B7717E8613D2F24
4C8CD5E46039534B8AC67881275838EAA4734A730663CEDCDF425036E4703ED9E9792A8E5263
412F9FBA9EC0B60ED95FD6F743F7D1F4B095FF53301305A4EFD7AF2AF60D4B0DEDBDDB99EB2E
BA2EC6182F4C80972A27941B80890770670BBDEF35E1CD578231D09A300635B444B0DA5E1CFF
3B5BE52546C1D18501832F8019E1A2A2A2BE525C79CE3FF28EECFEA060593FF24F1E2B3AA7E3
88A7CFAC927D1327C7A478AA7BC931B407E0BCD0780A3D589EC4DDCAA56ED5E831FBB4B843A5
429BEDE32AD8D28F190BC9344F3FE29BC6394550A71AAD6B9BB871FF8214155CA2C16FEFD10A
85F84DF91174097B26590DCDCC79F171D3C0053100387E77F5AC8AE5F5E7BE78D9CAB21F33F6
64B829D0F7F2195581430B3069E4BFFE5A04435506B9CF696C1B06FC24743229F249DD4EDA9B
955D0D4C494986A1A47B97317F626F3DBF0342CE62F98B5F542B1173274D9ED35A047F1C4E5A
65CEC22C2C7D7BF7AD8E85BA8E248C432F8880AC5D40C673B90DFD6E62E916C8EDB1AEBFC60F
09F31E432828E697EC6DD9F62C882F709EB0FA110A32DA0B395E727A8667E9CC31FD9B446C38
F2301C91E8FCE4E529159A4E198B2FBA6D52821470A8957910D16276D0CA2F64D0143BAEDB25
209350C5B6621A5F3EC4890929F3A9290960488C8D909DEA51022D3683F646AD5C53DF165FF3
77B159368DBBE2B22435DF26FE770EAC6EAD6D77A24E9CE6911B1117FF77685636BC8BC68CD6
B19DF13D6270CE35EF0BB2EB1C4C39D4A7666EB2FA5E834C68E8DB41C85B174762A1C8D5A38E
51B28191ECDCD6E9BA991A01F3336974CBF26CD3006C7F7F596890F04D352D53C5F2BF22F516
2602D19F72CB6068F3353DE4984C7CF4211BD92A169A1DB2BAAAB9A27670A83C974D55820C98
B94E70A8D7759D9DE8A60A0AC8AB69264DC5D1B9DFA6F7C551E1339A1C06687C6477EC376A0E
D7FABD027B75AD98851E3DA331E5466228DAD070E79EAD9E53887AF39736AB6E365CFFCE52C3
0A9912328A92A91CC9C8E03DC34B6DA6EDD05BCB75DD59FC7FA289FD6FF0F6C00DC6715DF7B0
EE5DB5FE6FF197CC90830DB00894F70AEE666BA32605BA6D80226D43B90D9EB6C5D2D4AAD4AE
78AB3EE5F62C85FC922116568C469D4CDCB848D5467974ED609331CDA218A69C7893040EFD58
39CE6DEE8818986C1A467D60DE11BD22AAFCB9670C8F4B7AE301BFF9599B5F93A0B62535AE60
37B4B3208164049749B14348A5284D9C328A7A6044533BF4DEFDB1E0E3D0288D78EF8A884632
5E9E541BB8CC4173133E2C2E14ECC9A0B55671D588795C8B9DCF21876C55E8E5F9A3415D5F52
485287FC85B0ADEE92B58D2F205DB1A12066F9562D9ABB097314C8B9C292F6E1BD5FB4C0FF52
C5320629F7C84D4AC086A563766DB851CE42D72A3A97B7CF26F892693C88FFE0032BB7389C8F
DEBA44D5C5242C4FF2BBB92694515B16688D39735A42802D8A6F01B43499685A96FA9B2CE737
36E47FA0B9130F36D560E56E3D4B4F6139A16AD943CAAE5483624E9EBCAADD24D5F2A3690AA9
384A3DAF7D19C525F7A7C6A6A38AAFFBFF6164761DD399AD6D49426FF7FF09B061C4AD081425
EAB4AB1F2EF4B426B0F15B2355FA590F79642DA787C924A76DFF1A49BD463B33A7BF5ECBD83B
771DAD1D83A7C1D7098ED4B1767A8C86B985C9CE1EFF872B7535B339D2464BD000B3E2E87784
45438E81EE7EACC0E5E999E3CBEFF71E87721AEFC40DAE4A0A91BD220D900EC764EF802AB771
C4413B07EADB5C6E72A3E263CAA572A145B4FF01E240485F682D0FE2A32ED2A4AB37430FA905
1F367990B940ED3A06BA0DFCC4DFD5FFE29C0B36142F86B35C6C402C87005B09E9E9CF364D35
9B3F03DB5BCD60BB5B6D22201B7E7111CFB234FC1612F4963C62C55479CF047FE1BF629B2324
70102612357228968B5D5DC96BD28FC9757E017BCBE78FDC740665B4F21C8D5DEF7C68E593A4
5E987DD765BDA4FFDB0CA5672371C718A541D8B12A4482E4EE5DE4654966E040FA621B9846A1
B64B0D1641F46422820AE3132E48106D3CD44E071D56A0A03D98F351B620136C36F8C48E8F77
A8C32FF1BED9E4703229A7070073528430264B1D64A4A3CC3B197C0EDCE6D9F53872F42E873E
24040A23B6B938F74431CDEF75B87E42B0D8515852515B290A91BC78FEE9C20CB16FA8670569
3FBC2661ADD2C24CBE9A9E0DCAA0AB3135AC068BE978CDC10E8EF7BC71410AB6C801960287D9
32AEDE93B95E5D54D193C0A8499A62A1FBDB62E0EA9884175201C2CC9050C086ED7A050BE8EE
2436B781873A2489DD35BBFA0461A0D312B2EA6429A68E505D93C1E16789DE95AE5F77D00AAA
F5FA84B257FFE97C6E5AB50125378359A1CB8BA04A86A9D2C3C91E830FC52D361A5948729977
3B35E045D46860B4744A06F37ABEA79AF5C9CBF4B8F002B92530A637F4DC2CD05C831B613817
ABC8A2E931885E61FEFEDC1C72EB5F283E0153343B4EEF25993EC68CF5D6B9F4D15205180763
4CF1DA2FD0DFCFBE38E86781335152EED0774A066B004023242D4907F3903EBB32DA7838D7BE
F452579F36FD871443996DF0D26259797B3B9B064B0393E965DCC4D7199708F27385CF8490F1
CD1DE10D6AB941940670F299FD99CCCFAD666774CBBFFC46802F316A62A630E89F4C0A231B87
34899FE59D969D30AB8D83F37A03DE09AC56E705341E5CBE54E9A593EB129E0719E0D31F1173
D1894C754EF8478015F7AD34BBFFD1CBB99C7E8A05E0EB0D658EE8254D1FE99F98A26E6F60E3
0C4B2DD9495F6395191706A615E0B25DA163EF438284B7B2465498043046D80E30E943C43782
879B38D2E8DFAD6BE3841E1B3F01859D0BA469AE0BA1ACE83760AF595D77190C99EF7CF78AFC
9E3E7917C89F61CCD034030E5D0E0D6FB227308CEABD42B2493D402C2F7A39858E33EEFEB7BE
5571E51301CF5A3820923F266901AE6CE230743BE7D1B4093791E426B07CF6CED821B4C2963E
9CBC8A25FDBFD0D071A5DAE8DEA05FBE7FC2027CB4C23F211AD44D9824DB9A572B68CE0A9BC5
C0F06D1AB01FB61F6BED278BC0CD087B94478FAF652624C7903CA1F9597E5893D92C9DA81BEB
28D34258BADD5EB205414BA24046FA3B50B511377D01AF4131886614FB68E03DBA3259F5CA49
6256408146B311FADB5ED9B07A88FE88E46902668B60338067EFF5B94B3354170938B269F93C
0716B13C30D7A64E56C8569F41C7517E5DF0740D6F2F280783AC918B602F9945CBE80F6394DE
633299C997DC1F364D48AB6B7117BE103F7CFC7D41F85060DA8A390BC6C71996191D23FE0D17
977FEB2321BFFDAFDAAB225D26494A9EABB91338EF7BF93985557F7CE044966E741A0D564C63
1938ED6C168A5079F983BF1E758300C6C05B508D8ECC08209EE9718F35EED1445353BF4B92F5
2DC9C285981A3120A9189D3221749106FC69E6184671EF400C5796815E7E6E293CEE16173716
C75A806E2DB1BD5F10E2F3C0A5F90C30987C2820292B05E2A9923FD11777B6706A467968CAAF
6C343ADEEB09669BD7B6A846ADD8777FB992AD379528D205B207851B0059E6D70DCDEE04C7B9
5C61AEBE5DBFD11036DA34BBC836C5051E7C2A2D733DC833149C7A134CD4604019A99274D145
AFB52E7E2344B8F009C7C98068A0DE1F0A81EEE49DC12C5E25F1FF76509D5FDAC0466A4E1EE6
3270839F22F04EC0898390E32E0DD06B4F74B3B1681E6388924DC0096D524C2E4A4F83669300
9279EC2566B10C56D6F9B2DCE0D5BAA00FA7F0810AF145BD75A56A5E3E40E282B82AC9553E15
CA3AF818BA92E65008A2473ACF9380EB9F5A57CAC4C43891DBDBA30594550751592D53D49498
2E566135C5091B158ECE90C48C0D43AA13D9C131EED6DF3010C351ED52678A34FB3472B6BA29
6C0B93B7AB795C26F7C0D7092F9C9B49890E5F810A2A5D28E6201F8F32FAB10DF9E80846C5C6
C717A398F27A341F57407CFC008B0DF2F2B488EE8DBD7BB1A04E4BC16F532974C9678931475F
D6CE628154C407B8EA5CA5FA11734D8ACE27C865A4540226E8A7F061879E6B970CF44728D4DB
83AFB1BD6944BFB32EAAF61BA1B4291A7FEBB8124D0F607759ED7B5BFCFB8E2D0A11424358EB
E32D65EA815C3F1240D0D2087BEE2098617833A9D769E32078B5D290FB297FDC327A73E7CA4A
0BB3B719B30DBB08E873E1C52F35C910C9E1E5D40EA8C1B3A16BE0BF3826CEADD0DBFB8F087A
33E0F17DA13CECEAF63E3489E9BC05E6D5BC31FEACABFEE47AC2DC6318514894295E2F8F3CC3
D700EFCFB97CA18157FC71EC808AE6E226B329CC58AB5CA00DCA1904FA5266537A2A4F0959F9
64E529D1FD2AE5110F6A49B9099AF836C6D4727FA1A889DAB5B07042CB564DEB6B97D0603789
3E4210C55382F95DF8DA4195649F6A55DB977A2957F0561BB7A44B458D31CFD1A990233BE05B
F12807E858DEDDF132139018B7C9E67E0F2BCA544EFD6D54B644728155BCB37EA0ED10659ACC
CE95F8DEE0269A64BF0A2E9EE9C266CD88670303B0F5902168AFD5413D4480F13C150CF7CB6A
C91A8ABF1F42272C165D1B16C9A72200B00D430E061FABC5B86B72930EF1AB65D8C37AAC7D1F
78B82A9CB08C05A4C4D31208DA6BF96D06ECECC1F6F21E2819C084C4072CAEAEB11D96EA27E2
E3A9B3A6D8B72033BF83E6BCBAF2FD0CC6D104DB47AC47B5E64C2969D8B3AC2616B567B81125
5F83C15E5C7AC37E3BCFB224F208658F0C45682FF5EC0406D3DA5B4A8E8930BDAFB4CDE1E451
47DFCBAC00D8DDB3C7E31ED8C64464ECECB17D0C4E068F7E239CFC23C13007FD37952A5D25F5
3FE986BC373B8B91A43C3B111ADBFE7D86B6C686F16DDA7DE6C155A375E7059BBAF6FC774D42
DD4230BB54E84F084A535926458D9FB3AD499E64C5642AE43E060A0275477D2D98752B8E4A1B
502B449E74B8FF0EAD13B44A55FBFAFD48F76C452E541B12B723210DC2A394E2F6C969A875E0
B0BD4771F2775099A4289CAF80C33303F1443CD04E7DB5C204B09A1563F7A0FA3A61EDFC3769
9D7E5EED0073A8218A55014C6ACC98AA7DDE538BFC1222172E46A2BC28D2DEB307C569530DCF
B033D4AEACE343A5DF1ED32886AB4DC1AF7E81183C1668999D2D37B725E59DF19E23DEE5E037
08E48478401C6780FAD9E725A843A8D763351519E46067470A31AE688721F410BD6157660D00
D64EB79D928317765736A1844BC38868E0352E8BBDCB80DED067964AA03354FBEF28D1E719DC
8792F4CAC2016B4AD352D507DBF7BE941F229BA4ED4497EF3990308FC25C980EA4FDFC927643
81D6633C12ABD78209DCCDDCFE2876DB22F64D616516E443C9A3DCEDF1F14309D27D3BE90BAF
912EF76AD96CAFCEA51AAC2ACFDA883347C4B8C3D648CC5B9F928DBFB00486913BE0BCACC302
69625CB5B2015AA2C4683DE3F47520B3E90AC40679DE63286CD5268C352C834E35756330A2C2
CC2FC7B85CFE1BD91549F02B236D1FF802CDACB006F63128B5FB63AE3149B0ACD54E9B481964
A492DF4B8B02719C6DF691CC66F949417481B592906156C6496294CE4F2DD3087F209D503B50
A0F266B509EBCBA85E23EA8EA7E3EF08C118DF22B406F6D31173FB0DECF7591FE07CEE7E33C6
9F796C439D993F9749EEC67B1EC82D0BF401293F411497AC4AB7C03CA13B5FCD2D00334F4DB2
581849828E91C5AE941A7544A68B19FCC664F73CCA8194717B45EA134B51E89B522B716424F1
6994975CDDDB817122E581E741F52ABF7B7A950FC897E8233E103EC8C38D5CD275F5500393FF
81A39FCFEAD1BB02F5F24413670DDE56C5B564CA331AA4E020F9EE5E1D50842924AA405AF8B5
0A198E1C9137C9F781A0E91887A8F33B05DEBFC639CE135B8477613AC1806007635D31A7EBD9
D93941F8868040AB87FC6FAB43E5624B9D6F6EFE00836C1788B26560D158C9B74CD0328C9366
0082AF4D54656CF3B583F8BBE4184C3CBE0AEC39F4E95E7B2ABCFA9E2E404E2539ADC7A6C421
DB03720507A940A3CAA50F1A681B7F1A005BB377710703A237D253DBAFFFBA3BAA4974B2490D
561414E17097A781F50C74083ED498208708C0EC845E0C86D17E19A17F1E20D445C1716A3361
4514A2145F6A7D10F440D87FAB06E881F7FE015F24FD5F76F22D55E35DCEA86C3331BF24A66F
A1B01B58E8C36FC31B2FEB626C7AE1170483069AB7ADF5F78E737A0129CD06021A0290D7673D
8A67E33FA1D0E28D6A19E05BA92A0A030CC33B906E8F810DBD2BD510328414F8FD8451858167
8972DA0068733863AA7CCD716C5732BBFFFA4162830E0AEE4FEA4A03E18AF3B86B59B06562EF
858113C863D1F07BE63BD339705CA1DD23AEA71B4F86B19A81E1B5ED3DC5A619ECEE8D2E0F75
303A5E9AF919D04F41ED84D8F44EA863308199675D48610B527B2A585ACBDAD04DA338BFFB31
C0DAD0F1D0E6A3C8A0E5102578C86BC996268EC9074B2A217E10719514F96AB89341C3F5F202
FBB99BD2DD022EF2A6133393C86D1CBE9A9F635C54FC68323D2CA39E42295A3D1DF5D8A74F18
1CED24600344935F7C17A9BB19B8F65A449D493A1716851C250EF2DBBA772F3A5235F0714B27
AEC1E3A27E71B83C5A4C9334444E1D6D1179E0530D66F8537974CBEE3049E94A4069630820BC
0C435FA3671897ED6BC0E8FA4A82F08347B0624D2E895ADC60088914DFE0FC3014BD99881536
AD11B47F4ED9498B8E1CA5AB175311E035F743BA94254EEAB6441EE93568E4A7BD0A3243B32F
042E950E7D83EC5F9E6FC7E9C83B3EF26A3D7A9922161D6AE9CEB9F89DBB1311A26E6046D3AC
C77769BFFFC699C0505C6E59236D6101ACF94A429FEC2CCCA9911C4C6278101EDBB3CEC29152
3359AA3AC893977D9A69FEE8F5489CAB2FBCF9F30B9836E290FFAA238F6BA1CF2A2C3031E83F
9DD55740DF5576D8121307D0732FB5577C5BBA2F5A3903744D78A2BC63D0197AE7C3B87C7BE4
E13D9F6BACCA677A401ABD6CE9CE6305C72F8943A6BD2228992BD54DFF637AB830CC215B5501
5ED887C466BFF53DE7B88E88D2410BFCA37BBE644B24D6C7862986C1BF3206D4C09250E273C9
B1E1D3889E3E17732B4C98AE4E279220E9E4517820FCB5685C9B1EF1C63EAF51AF908D13437F
87305F8B5DC6DFCC4491123481264FEAA29703C5CA28E2AC75DC68261BEB3B18A3FF99B15F99
B8170D2840386B812088684014B0D8AEF78CBD833D81D292484566AB3681A7F8E3B27F8888FD
D532F536EE633D7B451618FE5BF20FE10858CD3479D5694B40A69A2B88329A49371C29DD0D0C
CB877FFB5AD5EDB643D72E9482D44AF8138B8841CE0D00CF648A03036835137F2C408AE96BD5
CC3C95380725E81933288794795ED4F4CD7BB9CDD7CDC1FFFBDE97D2DB9EB0EBEAD03C8EACBB
4D62875911DBDE022CD3457808AB67F1F4E5870BB99C872B16B54451B34D2962FD7BD969979C
B2B2935AA8CCECDCF5291E1D8CA9AE88B6B84888E9325C7DC733D565F44051E3EF566506D419
2252F865585B906119558BF0FDDD2E72335AA29C091CFFDDDA9824BA3A927159DD3296C894FB
8655AB3DA777BDB3D6F8877AAEA3BABDB131B2D5DBF75E2A8F5BE4E58D634C86A9515EC3E3F8
6B15E879A10152F7EBDC52C0B0AAA1974FD57B5EA0D8E845C5F667868E13EBC9710FEB20A9C2
F06A0F02861C52307B6259F937B3EA8FA56350B70D5163AB44420B718F1B20F4AEAED630D45B
4F508AEAED21414BE46998146CA12A39D02D68D7DB550A83307D9BA944B0E162A3D1D4A8CD4E
568A76AE69F39837E85F115FA90F04D85A9AA0F59D92BF9ACAAB187AFD3B30AED2FCD42CC236
6DCE0F3D96C1E7F51C710B3D37E73747E2052E3236FBDBF9314BFB1D6A07EA47363AF0E13385
19F5CE15E3FE34C7E2C57CEF5554F1B62DAC49AA3FDBC28DC0B67449E743E5A0A52AAB73180E
D14D00721C7D0D7BF9AAF3EEDC38110DE8E8E359D830B0D2BF51EB7D499D2180F0F8A5737EFA
AD9B0C7363232C854340D8A13B57E48B3BAFA79A554CC7ACB3AF66DCC8AD4C3BB013159148A6
BB5BBDAD06A19087F6209DCE38DBEA7B63C3BAAFB3B2E004D7A9CF77080AB8689D687B62B6AB
E4EACD4C90E30CA3E593FB4C661A50A5A704E694BB9A7A79B0F007FFA4332A0A173E11FD954A
5DC04548925B632350D46E3AAD51EED71339E680669E845629B92085FEBFF482E7A1D0D9F7BE
AE89B2FFE82DDEE03E59D9799A6003005354B26FAFDACE75D3B66E948092A3710C5BF590C50F
0C173C90B9D81B3202D5B1877AFE26F92E7A23904C1D94D975370B7B82462B07543A97DA4804
0D9E39DE23692D19A1C7CC05B1481B7B8499B03A8B1436AC5042F4D6FC379363653E55881EAB
0E95BB6F705AF9298305927246D56D75054232CD745EDB5F9339B5870C8510D94655C0F53468
09FE431E889FAFB67C64AD260E8E78DBD77CD912D8CE16C4500BCCA1CA79823168915F6C3779
653F27FD38729B9AAE9D0858FAAB5A6284DACE63F3E0714547BDE55C80DD5418D75914127F00
30E03CB3D92DD83A0C131473424232CFBE2CC961C6351219E86585084BD1BBD0CC9ED571253E
2883045857F8E1B88A15A77E56E74491A00EE4FE7FF7D4921BC13BDBEF18822443BB97001095
DF2325C078BF6BAE9012539638A28B7B9632466A6686862F3F1FCEB1191812C87D3A5C42DF4A
DC1DE80953AE8B13215D0266A85FFDC55CF5EADF9E85009083768DD72D4BF998ECFE11CFB580
0475EEBC44902234F2F632A556561B69C5F0F6B8217BA8386B85644767FA31ED985CF8C48C80
25A3674EA6DA468B81E98A813356BABE7BC42CE4A7C74410559F944CEF9AF3A48D7243E76D4F
8214AD7F8B9692D14781050D115F8B399B611CF09EA9C5F41499DDC360ABAA10C9200EF96555
A7530C3B71BB2C0DC88EC364E742ADC9692C77D48DEA0B13624F9FC42D7489EC65020C310556
4881F32211F8D8E7FC926BE74263B6C48EC1024DCA88AA5F4ABF22B0AE4C877936FBFEDB4398
92BE7025D1B5D961FE34966FE7722063599FEA1F679A169C2D81E2248B73444DE757A55307E9
0A0D0F094E84827AAC636E0C1AA5CCC258F7723C0B31767A5FAA380DD6ABBD5D3F5CE8083B5C
E656C61B9B8CBFA0237E186970BDD64FC8A49D1A15AE19660524B51D57DCFE550DCE526CAE41
6F32CAD7166CAF886F7E306A80C15D44785CADE07FFEC05C7EE695B7774BDE9FBF580A8C0F51
B41D57A3B5C584E266C5E3A0BFAAC2B01E51E67BFC0F05B9FFE2C252F51D1ECCE6A1B1EEA881
67D5BA0C000E0454CAE3357AB9059B17B9DA41187F8DC47833402C17E70A578F2D0B29445363
E156DDE7F79E0595952AB10A7B30D5A078B7111DE869C7AB8FCA3642243DFCF1AF2A7C50653C
A240B5CA103FAB1237E593CBCB086026888629DC87BEEF7FED8E745BF34B5EC9E04742322544
9A9BE2D2B4395A76A1CA084B2162B69AF4A198F7ED21D351F4A6AEDCB1BCDCDD942F50B43E05
217765E8C0619B0EA9B7BDD8B6E0777A8D59FDCD335643D227CA3A14898B6350777326A19AC7
388123C48BD36BBA766BD47138CB35DBAA22B436E53896D1EA174F57B2976E3AF8A21BA7F4F0
EBA9025389080838EE15F99ED752521552F9D724ED293C97B96C34166BF1F515CA9245463EAB
D65DAE681DA0B0BFCAA4623C17F47F5517167992BF51A76B19680156F562ED1AFB6B46BC9643
D7815A27FE2CF8D9F8EBC10A0DEFEF591F0E2408465A9BE79224E98D1E7632ED8B764053AED5
86816877BDB05DBFF756DD3D232A79305FA6CB4A9C2B2E3C40D5B8B06D860DF038E946CDFA65
E3367587F2C4A03F48129257AFD405146E5EDBD6EB5953C421F74BBEC4CECFFA5615BE5DC67D
47CA7F170B93D99FC81871C6C3FD4B3D3562D32B5869115CC45F03E99EA5EA892FF99D37CD79
BE273D7FB2EDA916452958EFD53E48A611065FB9662361E2BAF9945A04DDCF93F3FE812E4168
0E5F1BECABC620A4317F654B6539CEC999C9FE3642CD2D24F7E9791B5DF4C54D93C91AF5BB19
20B7ADB8428CBFEB46AC0370616C34A7CEDB0AF0D6CDA1E4F791C2C21654CE191BF32897CFF1
C956E5BDE1E05BFE6288383EAA4B58C8E6221F1ED9286EE030508C8B9D91629A9446B1BE3248
5E552F80005450C598602372AB6B14C702EC3850A925924AB02EAF051E597633D16C6C3F8D19
F19CEA359AF836BCCEB2456E19596BF3264BC5F7CEC27EE593BFBBC0DEF85BA5E78800266DC3
D2A02C520DB78F34C4843BF58B6701A3ECE6B0DE065724B453EC790B14977B8A2DC45D92EAF6
B545062090E8AB0FA073BF508EBECF4FEF640FBF4929D4353851F99B52AEA8524524F4B9C0E7
E2771091FDFC334BBFEB745034350E4D8CB0557EAADCF49C5A4089595C30BDB1BE13CB6E6994
1B11FEEC7E34EE44D31663F9C9E5E2C4B50A9A84310958003CE6C904F487CF8196271BCFABAD
A16A6D9CB7A36429C662D4F5A9A4834B2801EDF54A94358E617726A540798CC9099BE197F08A
D95611BDBD0CC55FCA5C729A678674E13B4E26617881C51666B544101EE06054C403A36C0E69
E6A87D049BCEB49F50CF823153F0ADCEF8A2322BAC799443419F866810169A6EC32FE0015BBE
297A57BAA57223856A34A6DF34270920F88E6F1F15A4D937A8A2E183DD0F2B445602C14EAD16
5A305BE7A74E127D50E68BD916109B8BCE5710F98109D4A415E515BB011948D239F720D5F035
8413BB2F10DAEED59F7C09542C4CEB67F8B19FB7C1F5F0978D0DCBDB3BA5FE68C1D5E20FEB13
4297B86C88DEC38E9979F1B85B359B6B9F47DF3940370925FAD62C9FD7D305BC1A7E57F6D8F7
4B84004A1951C020667C50817EC02BCA8144FF59581D90205CD4DBF7B32000AE797AE67AB681
E9D0D0A565D02E68AFBE74C95C48FB4E2EBB6E82A81C22E8D79E9731585BDA065D4AB2B11C0B
1E236E71FBB115E150F6AACC0B6D7D3F103581923F746643F3C4F12F76D2017F6401E746AAA3
74CEEA3D346BC3926CD71D966165DCBAF7ADA064AB945B07741B1B7998705A081E88DC261CD4
1462092B705F7E76D8056649CD265079F3ACA8D60D2821F1E6683DC395EA61CFF29005C5238B
CB2512E90AC9D77E76DB78082826D4E9F2D9B01F3AB88389E3E45FEC65D4872B84A7BB5BDAC6
E9B4ECA692C0C324EEB47470EF35C9B23B3068BA032965A62129C72C94446D562948452986D6
C17F8C7E060B32E64F95CC1115EF55BA8AB73A410B3AB25FF60C4C036E75773ED4086980B52F
0983528A2311313A14110288313E466DF612F7BD27C51B8CAF0FB180D17D78DD56ACE8FD6847
B3A429509A2F1F4DF240978C1649FA575C44E7A81FE4A143C838DE9C696ECDB0C1DE6C87A84E
68894B39D6CCEC1A6EDA170D45FEF55888C024E5AD82AE3B405DB0B52B96EA4F9A2574C83B4B
5A838CC849DF3B1179E58DA3F38652CD4610DEB9F856EA06AB871ECEF947A230F6387CA99E8F
0BECAA7664EE8C01A3F9F68EA5D135433664D4AED5AC351249127AFF537C6484B509D3F24E6B
EC7E3F6F14F9FE83BB4639681B9D15C3547E30CFD795BC8C7C2A9312D11A987AE1C305F0048E
6374293E0C37C54503626A870FE8006C6A75635D8E4DE38E80940701BAC2D735E40D58C5954C
BF047E646635735D097E964A15019A908B496F41C16CE2BB232BC49DC2E4E957EB8A4BE86908
C4A6719281EB7BAB592BF4999A200647905E8B5D235024B7D826586DAA79CFF2198D0974C324
39D3032A56FE5CA89D84C73869BBE8ABFE1F8471EFDDF16AF2C8041B7BA979A5D137A0B8C5FE
DBD7B9E542E94698AFB47D9F8A6C6735FCF0797CC1C16AD2D17B3E84D4E8392038AF9D91FEC2
FFA4B0E4D1E420238810B635BE4F347017BA85B0B8BF7A8A0746547113A2B1FB034BFA4B7463
D58A66B8E664EFB22C2D40D14A08EE7AFB69F822C917C1EB9AFD088B230027A913DCF34499EF
BA3F3FDB5C9D7291AB259E428492E4979B05BEA89B313BC68D126AA0DAFC060B74B847F5A93C
B52DED757FE325A0D43770265C0036FDF13A2D3045F1B3D3F58B7360947F37BCF25365EE7867
D9B9E45464B7A3F36244CC4669BDB35661647B9477FBB44DBA2C6D1702C5F543FF356066B40F
E89081CF6984411D3F6A870A4B5E12E4419A207CA83E157587C5B3381327C9E2A13528FCEF0C
55F7E2134ACB32BA0A36EE7F3B8CAC8A77D8B0B094594AC1B19A4B0BB4B22D064BC2156F2238
2781918FE81916121D21FAAD70DE82E16176AA06C73D3171D67BA73D1742D276E8ABA10C0453
D4020ACBDC465B84DA54427EA4456ABE56244A523F2AEAB95571740DEFE9282E5CABAC39EB32
EF28CC42C1D22E7B6B1E8378C2ABC847EBFD16B17A4CEC87B809FF64C8BEB3514EC9F4FE662A
3E83D96ACE9110B9132C44F5244DD97FD02887FAC9B3EE3B91443282079F908E9EF551A77BD6
070085472F7A831EFC63F9E0AF69579681AABC46237E65A03582B41247B90B5B63C5F95AC51B
8CA9813AD56BF21323C35B5176758ADC84A2A6D4A03C9FD8DEF43A15F3A03CA8E56A9EC2FE81
6076B6284A6265A1E3D90EDDA38FA336F1C89EB0C90FFF61B081626659B7ED54CDB3AC78F29F
721F4B46B7F03BCD77B18495C71FD0ECB4CEF6BDF43F8DC3F36E429DE0D9EE43919CEBFEB596
F4DD2BBFAEA2BD41811F4EAC697780773DF6C9334180A2D954CA154F16CC3EF2403B431E4D7A
AB81CC658CB312A66B4C0897006158988B5FC7856116A794794C38119A5584987C4A29C600A3
C92597CFD83C35A5560BD786508A830B48B2AF998C5A0033B746C8D81A7FE220B168C7E672A3
2E650699BFFF1CCBD8AB4D1BBC8AF324B551972A87B3FBED889887AE591E85043282BD3C89FB
AFA1EA4D7C6059399D4BE000DCF4A34D5B8F6BABF3DA5A7F0587566CDD73BF80BB5F9FC641DC
FD932C927D288D11F14CDF9CA92E9C7E12C792C364FAF1735EE26CF7B9DCF358464377686600
846555F4F7A14882E88A3B0EB931057EA7805CD60A982396F0EBC1AE1EE626245A4C8B6032E3
E1352EB4E19BA823F3AEA2BF0C87240BE1F7D5799810A2699E6D715A17ABFCA3E61DDD040CB1
14FA682EE8CE42278860C6FCCD844E9B2D87EC886BD057135B0E1A3A72354FC48FF69F75A50C
9BB3B15BA9A8C568316F9EE513739043DCC28B18C80599BC5115DF8DB006C3A82D784735380F
4EB4B9EC2AE81CDBC45208C0EEAD374DC92D25034CFA4B1C827990D8761835305160388711BD
08483F962373EA0F727F1AEB2AB2B085250B6EAA79CE7E2FEBA294E0A1C0301C07857BD3FA19
CA17E09DD507BFE5F3A1E9C7D00DA77C2DE074219C34C43B025B4854EAAF5D67E358DE522E67
501B8E36D08E34A899DEBDDB777F9E5D84C554429EE697B576505F524883CC39ECFC31C30AC8
48CB7B701ADB662420037B1E4A2E7F6C9D84D5D571F382CDBF0B3CF5B3077766A4D4315A5599
00EB95E8536E978603CE8415DABE4B1C440154BCF18EC8F621A777B1BD022A4C85DB2096BCF0
E8FA7C871AE8BAD661B5D2B9313BD39819B19E442CC4F423FE1DCF279993BBEEED4A15D3A999
D3234B683284F9FC3B16D56B81310DF07D7CB778D9E9BEA9546D9AF7D629B875148B3C9AF569
F5CD7427A0E810DA279C8E505C26B7096C8A4B0849067934E39A2AE7588AC83006C82F316D46
40E85E384567097B5DB83847665E91CEDCB05B047820CF3529A05CF121FE734D4F5A67C7B147
14F35D2235DB75AABFA07CA6607D722E5C8E60C0F1D3BC6138B01FAA42220B4EA50901658398
6C75B75FA31D4549D4DB70295F70072BC49A939C81971C61F13C3426C1B41F5BA26AEEB5A8D5
EA87D91CAE78FC4E2E9296F776D5771A697CD2DB14488178777309C55BB1EFDB6BF5EB7D30D7
75DE93788BDFF987FEB93675EE030E7A806D581F03B2D9AEE062F3DC3234D8B693239A4639F3
863EC814C4BFE5BCA4AD110354F64B56A6B8A3A47C9C5B3FB23085F1A5E8343F33D663CED7AD
13D6BE4FE07B763682D517FA7A2A5B6EBFB0816D5F364EFD6A8B18F3841A5563AD94C3CCB128
EF01CEB0C709BAC627BD60E06AC93F53016F7D102AE8C91D2F7DDDC503D4C342CA67D63E5E24
A127535A8C359CA3622EDC945F6879416347DD8120858350B0378C9125F21B7D8B6FFB374A77
6CCDE88AFE21C1E5F8A7C2A9EBED2338B25653B60AAF830A099626EB54FAE2684C728A89D6B0
18AF9F0A8A056520F914901596A2458D043A8F458842E2E6AC22E43037931FDB4857A4D3ED4B
E216737680CD8E8BD94D4588BB93569E70FA9F45AB7984BDCC96474B9F8BCFD53F47778A36CC
30B8A35E79F925690614B0D6D4B8F9BDE3B5B5C1F425D737CC963AD4A16EECA75122E633A3CA
EE1030B1B28264D3BD2FD45AEDF5713DD99BE73DA0D4204926F9526C8900F38FA6A18F305F14
99BD59894CFAFD713A68C3F301CAB4469D1773067104A132B9C99E4B6DF1DB2A933D25BBBFF5
ED4CD174DBF591BDA1E338C3BD09DDB16F9BBDCF03FA7131AD1278A53A1ABD42960135615D69
4C86F1F900092E96870A9082497735BCE588116BB0768BA7056C85FF141A3B8148C16C9FDF63
55E157DFF848FD9F90BC2C94ABD7FB4EFBD0F74E15A30577EB81499BBC016BFFF77F176B7FB1
7C5F5A8E0208D9897AFF0402544E0EE400CE963806ED0CD263907C023E37A52F735BCAC84368
01E0C87AF71C8B26CB66C06C43D08B2210779A3B663E5F10D6B19F849BA0FB7EB53617F39398
26F19E0D2106D9B6914F0F99A8AD741C8188853B2FB236E6D67D85304438B4287A474429F0E4
2C846903972A24FC31B077A7DB8E9FE203A82C9819AA27F15EAB4DC4AA38CE6F7E82320DAA41
8686555B7D427D0BA243754FD735486039BE74BD8766CC8CE0753DB752FA5D37D170A63B1C02
8A0B13E50A38676092ECE027E4FFB6C52A2806448D04BD5117F8AE8CBF691AA253B1C41D6674
A2E1A6115A3CBC51943DE17758BB6B6ADAB461CF92E7934D4A9D627AAEFD999ED08466F5400A
73042BBE5330AC124D2FD9E4397B21E79A0895B958D20C198BC67BF06025BA1E6028D5C72C00
732E74A444874E4BB146A9FD566EB56B06E22A3E3BF2D00354CD60495C767AE2FCAA59305580
51A781CCA5EEA548556785DE47AA7A7F9534FDD2ADAECDB4EEA046990BE19E0F16E7E3C7DF24
6A410E6E7A41E8BB76459B890E0F29119447B1EA258E948B54C9E4D7FDAE6FE447EA6A13BDD5
FCD91A27FAD9D313CE30A45CD5F86649E2AB35DEFA58A4C132DA813B4DE060E793E06B88E49B
16C792485A953FC95838FFCDCE3638F3E85F6150843134BA3DC14216E239720ED4017B8B1F18
A3981EC8660552CF6F12C01C69CD5F41610CA070B77B9FF3CA6E6CC5F4A96BF63599377A974A
C715700B9960CDCD1FDDADB854EBE702C91B454C05BFC9894E067EBFBA1144328AB89A28A9F8
C85BC92CF210159FB3610F933F2BFD68760883BF26707FB419E948B3FB2B0B05D25BA48708A9
0DB241A36FEF7F22FCC29AF73B4E39DBF363189DE17B4C8E11C906700663816613B65C124A4C
CF65A2E46AE64CF76DEF145908A8BA581CF4464C690DACD7211921B9EF896386B30E3FF038C3
53C654F2B124D1B1E285E3BFD89DA045AAFBB54AF7AA2CEB2B0B9E27481C1D9A555E2A108C29
A90DE2E1972377FF7092F87E8896EC2E8DE7B9731040AF9D797DBF9F6276163CE1117030605D
2E1117440068F70B146A2D312B3610B9BCFF4A3AD8EF7C411E301C063C30F5DC378A943F93B9
DE6F9660ACE693BD49B98033A7F3FDCD82D7DC28299D7FDA1C4EB7A1BAFE3BA808793A67B580
E963BA986439542AC924BCFD82A7D14897A92739350EE60EB7F44FA53567B6BAA730CF330568
C2E09AAEC4272175CCDF556DAAA15714E2BC3560B66E3F6C76076DF9E3274052B45A1CFA0414
47D2A5AC39A587D6F08069F47DF3BDFBBAF2EABB529A358524BDD24BA01D0301060FB25C5386
3E04B907E27D207B166585544426355C2B266146A2DCC0F79F13908D5039E62719CBEA1797B0
CF26078EC4A2CA2702F2C62090449A7396AB66C2869A48FF890A3709B1260B792C9AE677E1AB
87E4FE9A70F61F7C9E83E4C0773FC1C7EE928E47304BBD1DE30F323595D0CFA066F2863D2568
2DBA8375AA68758A6B049A1206EC814EA14C39E7ABDBCD19D9B669EE1E2F67F69EADA7EA7807
7C1E8AA558AB69FFA68F128A4C7C57A51860BE74A3111386704BB92F36E64C78F52CBD1B2596
D0B0A44EC45D8D86C4DBF74DBB152ABD235D949579C6B3232D97A96DD9C5F425825EBE09800E
4198587A6244C0BCE5ACB61B29E42EB3D4C5B5B30FCE8B22784C4B81562AE8681FCDB97737F0
DCBBEDB795E5B4B9E85294D25D83C371A26643A76648764A8E56F13FF0BD87526EB5DEC90DEF
050A4DF521206F74339DB141FB35C081EEAD594862A3BB91FCD06638DEA5C0540DB4B8591565
32A761D0F8FD1E7103253B9DB617131F2A91B43FC0E5510366117304EADEF85D95E1E65B4ABD
87CC4A2F7D98675CD2FECA56EBD1A156D4E304B0384653A2F1A1AF2F0754542CB057401DFDDA
7D2E71FEAD90BB20483CE8B8F4F48E27F078F3E2BD29C03F5D5D92317CDFB0402430C060E3BF
5900D688538BB3F7942A6A1FB7480B4DE653D2E3A7ABF5B954D93922C118D8063F8533003CE0
86C0C83EF760AC25738968ACC54443784AD1D2462BF286D25EE54F0DC6E5073DB62A7F5F14B8
F40A3151098B9549F08222951E2C78224462E04CAA234C0C22EABC7863B8898159F22F1F9FEB
19EF3216449CBF1B4556FAAF35B8B9B94713D4AE0F74C83CBDAE1113EC53962B68DD613D6118
F8BC27047B430BF63A9CFA1DC160811DC9B438EE6626DDC64F0FEF6D5FEF0B075307478975F4
0C1FB21CCC6C964B5DC186C19775039EB13AB60A344F088E27E1B7EBE3100AEE0F005C0D6832
7CD3AB4D7AE43165FF24000E34D0461C0D05764CD361F6B8CC5252B16D5670F5712628F9A6B9
FDEBBEAB356CA4C33D3A9A3C21B0F52A2ECB587EB601CC0462A423CA7910A9ECA15D7FBB0F92
6B9695268E939189B0E03B3070D57966242F1A8F0C29FF016DCAD280B7F8581AD0A9A67D48F4
9CA74F7C4DA6E5E75D3AA0F5CBCA98CA25EC8CC822320D129ADE404758D74CB6220178CE95BC
4381F92702DEA42D1A5E44BC56D57A8FC45050FE197306990CFB47CA29267D96C89ED4E797CD
E4D5E57C86F433DC617F6C4AE4134D485D65043F07ACC2F8E083D34C9DC9360134A684CD3516
F021E497B8C4565BD2DB34A6635595FA62DB988E698A89E8177B10838F4941C4224B4F2C6646
066571642B1050BB6917B55345BEB62CEBC634C1CEF7337C0A48F71F0FBF84B220BD1FCDB37C
9D59ED1FBB3138C40EF77262D93141731684CAC9A86428529FD7B40EF53E0B4FE7988635FAA2
B02DD7D5EF32967838EE6FAF9401225D65CD25DB0E2BC012AC1529401264FB4FEF93D1F1855D
164C96B4A735223A9BDF5583A8DE0E29330A51F3C6199E2CBDF1389FB1739F4ADF8B19E20A7B
E1183258BE528F3194FAA83B040175DAAAA74C854A04635C7B2AA9BE205DF71C1AC9EED30737
775B372F9786EB94041A5EF7B45D14259579321FA866F29FE2B0A760B66A4AC946F3DC45BDD7
EB56794B5A65377F601ABCE41F8627C077B39E1AC69F12E8F70979CA04D1C79C8CDED1D0C70C
28D3E7BCBE93B3C887002D36DC3316D15E25EE38B0EC2FDF4D5C908EE881CD4BA7EE1E959689
FAC7EE0AED49845650BA6D2F4055E9C442D6E030422E079241D93FB7781EB3408AB1FB0F510A
A7BAA2D9F64383CF48027377507D38AF60587EB98CAB7D7A03B762B7DA00B1D87999F6B22C00
C592F02F334A13290F4FABD317D384426915F21318ADA58CCF31E924D2A86031D92DCEA19A24
6966CAF6B05F04145C826B43C74B02EC2A8F50D51D4306E93E325A4A22FA7C47294D0EBF6F6E
9D27DCC5BF0A7EB51DF6F2E9E9BE9550EE12DAB01221710E07FE53B8D07C003574AA999001EF
FCDF915DC740555E1F4FA633DA65F41BD207991A09286B0C37A095F9C9197C9DCB79A9683B07
17F0C0A6F4603FEDBCECC6D8684D49B0A230AF16767C201B4ED74F5D2057065A64735CA67650
B7B59925A891E39C26ED58FBB97F2729C9E8D11B6610BD995F7DC1072C9B6F5B284F0BE01CF9
02FF6FA1F4C8202530501792AF84A70FA857B00B701C7480437AFDB549420BC950DBBB30A9C1
8F515DAF06E6042C6C1F501947A1118B489D63A487A048A3CA21AF910724DF3660CBD150AA2A
83F93BA0A9FCA60EA41C831486613CDF0F8AA0198FFC79BFF81630E724FE2728820A63B96976
133599BB18A598FF76E68497FEF32386F692259FBF3D6FCE0B86C626762B3E28C20134F271F6
3912B3CAD9A297AC32A99A908D3237D879A1BC1C7283431F00A6CDDA59BF5337E115128A3490
16B8F0D9193331123B48873072F21A98F71E8D94B6A842E7467D50894B3A6D9E85399AD00849
005CF3BBB183662AB8E0B9A172924106A8537E1724C2869BB0831A0336D7E37214FC997B82D0
442A405DF4FA50E500F1E47B8C1C3B1A461170D24AE4E77E228C7A2DC97B8357F161DAEB4902
B7BD6552AB47FE7FA6A43A75621BF1039EE1C14A7070DFF28B9618F8D28299FDC7AE100D6F5C
A70D344F72E153353D1D7E89AAAC9513372A845C409CAEEF61A6D9DCB36FE04CC3683148E575
73938E3FA9AF560F2F22B9CF635EE550F98E49689B830CF0D1AE7D2206C02AA5850C7208BC5E
3549388C45AD0DDAFFC1389FED8D81BB1776F4415F9C0200E14EF9454F346BE7D6F87044A478
BC72A45FC4FE97EC02AB330AC72A086580BB7B473ACBED16EE55DF93243BA369511024518538
94368C6B72A20F2D2479F013561363D7226ACFAB1318A735761878DE3BB13567B5935D2A4AA6
31E195EBEF01780551D80CB78F8E98A921C23A8707990A14917D44CFBB17202410E053D0236F
77C62618D5016C83DC41A8A43F87BC044F1007888368795A16A460018021461C138BE2ABF05A
7C91661437AEF95CD09D08680315B7F0346EA41BACEEB9E5DFD7FCAF055BF173130A88D3B4B9
F29EA018AA29AB11EF1E8488A93AA366991C789A4E0D6DCB2AE6AED7561E50FEF2870C264CD1
3E5B34763B5128B02CA6E38D6EB734BCCAD7F5650361824E50CE7A1199D068E7170127D5B42F
ED60CC79B2FF7FD8F38B989C4F5416DAD971B8FE1A92D7D625A41F786DA42D936A0318695AA9
F05D51750E219C1873E8EA3FF5CB9119A2A25CAB7D81A5B4C29F9177DCC1E857609096CB31CB
B6FB9DA67E310C40132BD07CE15D25BFDEBC48B118E87E5A726970DB9B0A550BC2FC44389192
D49DB702051708500CF2454E97C7B06F3666418AD9A87C0E6C99AB82723431BBE5A566879831
D9C0E1576F4411A0351D9D9CC811638704D8E61B2816833626C08BBFFD7BD26D38329A2F0F90
DC58F249BDFA739EB2F7C766E820B6D188ADC7ED8D34C1FDEBA2F07A3AAAEE44EF47C85C05C6
92BB23753F26A59998DDE5AB4A0AA3583E838DD19C6F5D19D2B59A4DA163F1F00F90CFB94E6B
37600ABC2DE2515F6FE33CECE42010E61CD6A837B9B859EE9964E01530607092C0933B274BAC
4942BAC852AEC8894352D4E048AD183E4DA7DD165947DFF5D9DC19D778AF7F890ACF783ECE8A
6DF5A5100D3343F35B749708F79D74D37D70581CE9F512123640544EFDB1A87E7373708F44F9
0DFF223B317E4BAE8D8844DCEC56763E334D89C2A318BE910FF5AA3E806C131203B399D5E672
BF339713BF0877D225D0C7D671BAFB2246DE118EC17A5796E3ED8AC213B6CB11F38780D10BEF
1C20CE4DFC2ED315BDBB9E300FA1088ED3EB6F5DB3C93540154E4E28AD10364445A9FF266552
814F4816C2725B41149783035F8A63A61C6971407E11345281B51F137C46A7C833682B8329C7
C1F43D885490E96A447AC2D5EFDAE1FB2C57C3D35BE68E8977B1E23F7510EF0FBFCE1C68890E
6BEACF00E57866299B73D4322547D4E4F62ADD56DBEE24C1AB51CD0AB6B53651BB72D92682B5
191E6E57625B29728D0A1185D789EEDF7B4B163E2933217FBF19A1D0C3EBB87F7DF284942444
30972BA115F23FF798167874D2714B127AA3DACF6D63EABC9EEB999CBF22889C34DD79080B7D
32217A45FABB054B434C7E553C8996370D2B1A856BDC1ABCC8F7AC017284FFEAC737A643C376
AA4C3828F1AE5498AEB94A9671D103449AB0FB9501968DA1A11757D93F867E13F1DDB5B6FF6A
3D280F634484887BE6473C0F25E36DFD2C5C97C525320CA1D08282850755767F76EFC1C09D0C
197B457CAA986403E0521C1CD86487D7F8FA5860C076E8BA2FDF827E0952F95D364E1EB2C32A
33FE2F5AAC7BEF65F6E38E5A98BA3DB53970D8A0DBC6B6EDD4318EF4BAD8E919D0239CAA304F
9CCC52BDE66FED8F27277A84FACA715955D8A595833853322CAD6E5159BDCDAD52B1DED197BA
90DBC142E3F4F714CA612C5EB77C524F9B0E4178CD092D1D774B5E5B78148192ED8AA5ADB2A6
D58AEC93EF13F9C71AA36174B0DAE5340852B9C7390838A047C671FFBC2D5D1B1752EDC27873
AEC2B385A6395EC673BCFD105A7BCB6A4EE77CBD61C9E64CFD383CE46C2E24AB9A89F6848B69
1D1A59DEBCF6B17C95C6CF6FFF79BE95BE8C9F1CAF419D94632300C3E8DFB89AD91C17A551C3
B828C95FD10F3763704179CB6EDD556AFD1CAECE12302C77D4136DEEE9FDA929C9C61E41813C
CE067BDED0B7B3553B7BA60DB9D8CAB36FF23E29E9CC819B9CA2797DC05F5A6BE01E4CDAD988
831DCBE2D3CFA7D0D97BF06DB32C56711FEABD2F8EC568F8343D975D9DDB22CF770C02CF9938
506E156EC95AE81A6D48091DD7476D1816B29D746AE80AB58A522D962C823BF8F93D6A8D6D8B
2B5672D31B125BCD508DC0ACDEE60B4A2DD3676A8A2C913293BA8B5701C3D036F89AAA3FF0CB
BB72A7472B859A35F78FFEC6DF767B49C011CEC53F4C5E6946161E9C8B0718C88803E85865DD
738E057826F9DEC32C8E2EBB032458D1EF76FA0914002B816B22CC0D785EA2B34D576CB3E497
16DE0FEA38153F2537615735699A3FDDD320A2431B601376E7EB2E17FDB7A5E788119B3BFDB0
1B01BF8CC0089AA746B66607EE843184BBFE715DC516A545CA63BB645B491C60724F6797BBB8
588A21192649253928048FDB3071115107B4845C2533462D4AC17E24134ED297E77E29779EB2
DE3207911BB29EA8578EFE3F8E84B39398456DE5ACC6FD00F4278B4D27C207C211C395FC950C
1176C0E752F53C78DCA2B832E7A73E1F05029399953C257C48D179EB0A68B0A0AD0A758BF2D8
146A5941D85FFF83A27EE8EA68A9799EB78A3F6F0179AB8FEC8F8EC26A1C73683652DA6366A0
C826627AB5CB2A5344AD54B81D05CF4596C732520296DE329965FCA736BE47F9627E58CE72A7
504EBED263AE482F0F5768FF0DB500457909A2215EDE93BD99258CAF2487C072C2C3EFBDCDA2
69AE687FD6CBA067F5B2D7E036241352913EC8CE95F1BB3354165DCECC0DE61A5F22504507F6
0C0E8B61995EE1E5995407F8A85016D2232A46A2DAF5E7A0FD5E818295DF985A413977B3AA12
7CD23E984186789EF197D1E403FC517DC239138FFC1D18D83A134A38E5C9A981D902FC823A9D
FC1FC2CB85AB42CAE18DD65CD915436996A53E258E30ABEC8BE4E9E0B5E2DF90DFD30A249D6E
7905FF4566D7CBEBF55113CAF03FDDF9BDC343AAC9CF343F95F0DA45E70A7254EBB8346CF3F8
64CBCD59C053DA88A03C5EEE55A2CAC3B967FFB237958BEF90AFA1B7E72FDFEA2026B73013A9
1DBEA86E4E28254476962623A3EC55B5967363754A23BF4286359EEF4EB651BEA794B373D37A
7D0A97266BCCAFF1502689CA41EA5021D95F29527F33C03D43D6C145CC0845864ADE41EE0CC4
D7C2DBD2E2C79696C6D3017C8EA7D06C306FCE6069B1271E3FC3E0E300FBE6841B0D60C663FF
E8A3507DD14A05B18B11819E20CD1536B2D0CEA0A82E4F6E5570F90AC801E5BFFF28362F2FF4
C64EB9B57C883B8ED180392C626B9CDDCB0CB630D3240C9D5CF01EEDB818000A1625D618447E
352AA7213C7935F692197ABA93E6B260F63E625117EDD93A93BAA909C28B7AA3D30E8ECDCCE6
B5A12532CD7A7D7F21FAD8222798A38C2F198D4DA5937030B3C1E7AA8C6A651153718DEEA33E
71C59CB808B6BFF8F05335CE0AC27B52D83C197A3BDE2207C0191E5A44DB64769CA150F12D93
685CE380BF611B2D9E24E912720DE915E3C4A074AE269BEB9B32CCC92E1EF89A09A2C65E2B4B
17A899D66E0C9883D1551F81989BD4217B49C35017F0DD48FCB3005559B5A4DB297CF9F21157
AEFCD63CF234B07CE4A22775F1E1F586BD736EAA5E838E4901EE08F1643E0A9159A4D61A5DD2
C9F4F49926F0CC7A31376A9D81BDC50B17FF5B27BFA198E0E75B4EF47DC473492ECE7BBE99C8
DD46364EC21C9BDD094DD272CBDCB7B124487DAD07D4902984EA8C952357C22440C0022B95AF
1794872015FF64E33AAC19A9322874866D4B7CF58F7C6092D1AC211F4711F9CC0167A6607AD1
265493995FC49F83D3D2887662DB186CDDB99FFFC62DD6B80A7D5DB8DA9AD01219772D227656
009C831F891F85758686B1A211EB7815DA610C6A32C39605C776B708997F0CBE2CDF7A56DA95
00798345CE0D57AE9DCB64166B77F123C1E81FB35C0123B252C76DF532C7CE32D609DB2CCE22
F959F0EE989B0334E2FEEB93706B379940C0FDA18F14B31C953C90898FBB60980D370581D839
83B494F3465ED7BE63B7D13D9BE43D541C6109D6B0FCB51C300DC0A5BD56F18148EB969F21ED
E29FB2FE3649E3488B524AFD9FCC15AFF921595F40CE9E13BAD46EE5DB562D24A0DF9BF2378C
23BAB8D1AA7181942A89A3D8FCEB1267DBD36B97EF12857E6A70BA03DD78A7A37DE2A1C51DC9
A457E071313684D06D22BD23D7F57E756C45AB4DEE5A69CB4E6F3E67D637B1B290CC634BB43C
B803D921D47048E097035D69C72F898CB3083236C6C0DC6DED676F8AA79B5961177011CBE878
9D8AEFFECE81C27A5DFD717513573C2E8A10A6E4E8B21172D8D0D19547567C603A607B85188A
BFB6BD4C85CC97670FF14D8CE0468D812A4956D1AE288B4C7089A7F8CFC26B7E0447096D5FFF
72E09B3E3C1C28919A0450F9CC33F6002E2759DDBD29D781E72FC9679421E01286309B312ACB
EC36277B17513DB449F26848003DDBE37D4116AAFCDB1DC1AAC98CF5D877B953CF726519F86C
06440E5929CD16F2F00C134ABD2B22EB5E9CE25035D1B5E2FF327DA352FA479854A44BAC9B79
DF9668B5F542906FB7B52480982132A9DE7822CA378A076DB1610FCB4402B836CEF8B94EF6FE
BBCF6698072082A174AF09E7685E6CA00039A5A7EACCEDB536E12475E2A311CE1A2E376F64EF
B542FA77FA68CCD8FAFD0D451EA4C283C8EFAF5D7E8414AC5F0D2BDE4409E7CC109F99A4289C
ABCA9A8DBEEBB5CD5A365DCF323D9CE1152C5707BDA44C2CFD3FDA21A1241B6B933F7977E69F
73B92B4B27B65DEF9AFAD997EB665EB31289156876183A433C664BA0CFC9D01DC983A64FAF1A
E5D81D7AEB155C7F136539B6E3927951A6214CE076CDDB0C332F36063EAC444EB78B67957C46
F4DA738BC409A845DA223F5B1DB62C1A4089966CD5D39571B49BAE80CCE3BD57D2CEC5BAB1DA
20C8CAF9B1698999AC34C368FAEC8D31C357AECEBACE84A4EBBC9531C65D5DA4E5FCF7028155
04C2AA8E299DC65BFCE9D510D3899238A1F3F99DD38AB9994B192F478BE8A8D08A3ECCA8D5A2
E8DCE03A5133B9C5FB5BF1B65EB85D4141DEFB999ABA6F0C44C770164A7CC698D3DDF0FB5052
C468014198BA8D965505E30FEFABEA7984E520BAA1EE4E8FE6418781C8EC34544D563BF20EB4
F1B72551DBF8F98480DC025EB4ADA4B2AA18C936825E3F21DCC1E1F271A269A2817A7F4F6FD3
81A4E6113D05E6B09DB47CC75A641C88927ACDA3AD8286363B858379213439C67A2696074756
76F74BAF780BBE82BA3455609B8826704D5448EAF7B71B0B3907C0C2413D86D4D787BB883C30
4AB16299E15B7E987EA9A6EDC794921A76DAADE07ADC38C6ED357C8B64F332D61BADA3BBC1D0
55B089A312620FDEE8EA761E6D0C09481CEA939878F94B6D8EB7502852488AFC99AD2D94CDAB
1CBA1303949E6EAA8955C0029AFEA50320FF418D7721A37777592B8414F6DE996EBD3712AFF3
2C9E3CAF07DB5BE85E39FB43DB4DE15723FBD71720B08A2AD5B563C3FCCC6A45565FF361758A
493FD30AF83F4CF06445BE67D3EA7AD9E30D09EB476B4E13FF0069F31042E35B6F8CD800FFD4
5C765C368FB2CDED0AD856A199A77C5A2033CB5273DCCD295FECE5EC118761A98100EC7AEB66
A2503A7AF45BCB144A554DFB9E84D24492D4065D099DAA364E57B2D7358C02FACC44CC616F5C
93C52D0B94CAB4123B31B0F59C7F560815E3BDAFF1D2AF5199184DDA46817B84CD4139153C04
52E56CED33ED5D5FB75F09589D6FB9A8EEB7FFD261859E5F5433021C47BD493B58EBD95E394D
ED9EB1DFC0293F4ECCF64207B62E6F7C254E2F6FB2300E417DD1138E284669E2480314AE0636
E05A8177170904125BC5F722331A25F64EAD36E191039E8080C26EEEA6C19424DC230F9FE6B9
0ED2C12F21C7E511FF63F6E4F87950FEA7FADD026971EAC83B2B3AEE3DF8E61B9A1CA0F66251
CCE16525C70D4DB48C3DCAE600EAA1338D3A3D3D48FE8BC7322E216ABD119ED975FB395412C3
B2DF108E00FE21FC41E87891BFF8F58A4DB6A29DAEDCDFE159472AA03CEF8E1988628FA46010
C4B4B2B67EFAC9C8A7976A1D728C0EA61BAB8B853DE81EB3C7AB595DFCB18DFF0AA80E410C02
2D3889AB2599F0D7E488ED8E7F3E9F20D22FF757739CDD8B26D49A36EA1152534E3C2EAE355D
DA15638887F9F8405C10F4B20E6E901A908976DB1F328FF4ECFA0B6519EFD01CBE690D5F6379
B6F90D84234A529130FC80A315D17B28B610E505C3F6F87F30B09D2E831100309B5A8490DBDA
AA18A45715F02ADA957C7C251E9D9E60B873630E4FDC69E4891A6AA739A118AE532A19A39595
B25CFEAF3ED658B83E42385DEADE99C256286DFAC4FAA6B1E7B29FC95F3DB0013F56342AACAF
FB3F605313263EB76877278CE404055BC26A84C61E30838D8AE0953DF5BE4DA39FC9BAEB3E77
FCDD4736A55FF5497D26B7D658CFB7DA8574EDF485B4DEACA7E5B1F443E7004BEA47FDCA4282
81D8C60955F82CC40051FBE3183EF87841F2FB885F02BBC01D9496513EC79D618300D60C6FEC
B3E4D6C72D88CE4D8136DEC98C5C40917A322F3FBBD5B40838B556328CF3A4AA18BBD0A09458
AA841BA3EC26109414A1A9797046464F8ED2883DEAC1D51B802FDB984959E654989E55DFDE69
89FA1C1CA10970CFCC2665AD50C47E84F0EF1542F791E0DF279CD55EC21F66755123A7ACD39C
6142C6928C3F5A4A53CFDAB8B8242CC5B0AC169C1D9F79565C6CB60D2400AE1F9A1901BBB517
AEDFBEDC3E9AF16CA3108D4749EC5BF55DD2925270D6F1C8A84FD885045EC07BDFBF140DF565
4C6ED05E4387AA7556113743C68F7F4A9736F49485C9B7DD8B97363A1F3B5668A0C620FF74CC
156253F6AF4D52452015C00F68027D9FCB35B8EFF65C50F1E4FD7FB8762E3E925D376250AB55
F3E433035F5C88F5390829A36E6CE9BE8E2D5D3B8DE45A376A3AB90E886620714051B6E68E4D
5B18B0C32A93DED7B5E05B2B7D0A24C57D8914B62D05C0FE5E88A177557F43566B222BC8B1F9
AA58C8F5BDA085315258B205F92D150B7D30607C8ACE4348C74698A2AB6C6DA21C8D0A16CEB0
76C9B1BFCD2E20D3E2CD9FB1047E4E93855BA8257924BFA0FF3E0A693188255211C5BA99E7D6
EC4931630C6E624212AEB2BD6ACD5837A750A7E21D6A169C873B6A6DA16A7C48FCA21DFAD26A
5C04A488428BF080CACE2DD1E2DF59CA09EE882B74A894E43BE8A70381AF34C9CF21B39F8AAE
923C16D7EC19B79F24F4ED7F2E96ABB625D8862A1358A250999D493AEDB52A774E2F5EF5AACC
4BEE9238D445FFE1ABCA0E7280DB3DAEE6B50B35B404AE9E033EBB40D55CA58433C468190DD8
84C08B7D287593B88DA3E18ADA2D6BA210A74F57AC2935168ADF3E7D0042CD2EA65E71EF542C
E7151ECFA4CE31588F45F2A39D212716E03F11F807C4174D8893BCAE311AC219E14F4AD8B627
7814C0E887C7724D77804573F54671561BF5840F073E0302081F962B7D74CA6FF098A77B959E
9F70F23DFBACC62ACC2BA636ACC868511C5454EFFC379FDA15BC140A7951B59E2DD66A8BBC96
5C9A16C8ABBD508167DF5AC958F5797CC411F253C49A164D796D0C7F9DBC8BCD68636AF0E920
89EB03D1A6BC1A48FEF2C39E32CFF200E510E72271C8F4E9115C0A3EDEFD91FF25136B879390
5B3FCED3AF6784E505A541F669299D24258BD500966B052D62E133871BD088FFE0DA9144500B
AA760672E980C7D5E4D44FFDE7137EBADDDBB61AC9B45B3E1D4AC7C69CAA0C8E477A3D5C3E04
6A07DF1D88E2B1D42E1BE8899E9A30F8F7C4C3051E8541FBD0845C634153BCAC7C20144A02BC
1DADBB55FF72ACD1B8EDD7318B8A0608D99010BCC9D71118CFA418EB11564E674561E5F95297
F63BE0A142A639D5980EF4883A5979A1AEF037FCB19290E4C962B76654D7F74D2DCFD3255A50
308739B8A889D6FDD401F594823A44C849B10DCC77DF3084E74AC9BAB27650EA06C901DEEB1E
F56F97A3029607FEFE70A79788EC18C0E68DDE53D4D252AB42683770BB6AC8F65D8445BFA08D
967004D58CA142DB1A2030C94F6231AB84F1A33BCED4C1AA1367376BF4EDF28B04A3AE903CA2
91C5F44FF033961BA5D5975AFF6DF6E7E42EDBCA4FAAEEDCDB2F58786B9EFBD9465D7886592C
05C10D84ECA4668D56ED091B2695C9DF84AC728EF70AE848F2C189927366277EE1A837371F8C
15353661660FCFA07974AF1EC82FBB8328F0341AD9C5E7560A679E907F040244466B2A6781C4
3770010F176C377228217882D036107989D801D679B885760C651FFF141C2607A416D116FFD9
DAD6B0AFA3072296FA9EBB2D145CEDFE0F14B981B9C53686117683717B3FCAD8961709B20340
CB7DFEA56237DD38FA1B59558A8EFF3099BFDA1304B077E73EA24AC83E7DB3789B4CB7BED29A
1F63A6FB3CEC8E9EDDFD71E86064BB4EF434F7BA5F4944B089B8E63CF140335808A8F3C124EB
8668BF035BB74E18E5253E18E42B05ED64B9A81013C3060D72443697A67B1159F2DD4BA18763
8CA91B448BF2ACE7D686C627881955B5CAF75E185A692ABCEDFAC9EAF9C4FA4C5FAA503E8743
DFD0CFD01DB7039019625898D1C4D92606893D73CE61854CFBE3EB1B0995FBBB19840A9697EC
13CACEA901EF9834233CB36A8305135D82C37B2AB6DF068363EEDE7EF2C59162254CD22FB247
7982372B21207CEBD3553A6C043FB915F4974B4B48F8C83F35583225D83F8A8607D822364065
1CD3F69E9D5AB387721243D7D7E809133105C198BAA42F8E870A66F13E1BC1964279D2ED9C97
E787F7A758E25D626C4339448DDFCAAFD861943C413F12EAD7C07B831C279FC0B95D17E0FD7B
2F7277C9CDB776B80AE0BD216B6FAEB8319D467FBF3D54B51770D97FE940B4476E973F881595
F896E4B7AFA410C2C8F34F079BFC08DCDFC2CAAB4FD3BBB3187B1B950ADB7FF7976AB70DEB09
E66332D63D35D91BE86F2E334B08F226C1570F7CBB60C8D29B7F18818040A759C82F55466681
2300554CAB879AB7C25B721A92C177CDDAE76FFE32A60FB39185F95EE1D04FEE84176D213C4E
79F03CDB7D770D4FCF18711DE85FFED68397D7862093786214E3DA2DCE39956555663186353B
3F38FE97F844A660B2CF86441143B78C04FFFAA55069D999DD29C4BB8103C7F8F4F0E6EE5C85
EBCFDA04BAC7604E24E677D85FBB38F4EA29EE6C6E71CA72EEB1B54E53D9A0A9930D1EB9958D
75D808F44542847575ADD2DA4345B6602464BD9F0E67EAD5268AB8C9664C6B67F0A3964C3ACD
6722EB7F8C9935BB3CAD6E95BB31090A10C461F159CCF166EA749968DDAE237CB12430AB90FB
64CDD48F128A5A62772866FF7FB2B968AE9DB4CE06980F8320B8F01F29D8E7EF7EA7F4ED36F9
C07E4B00805FD0C8441F8F7DC78F3AEC391C2C85321FFA247F4CC89A137519B061C30496D047
D598F5319094407335122F9FADE48F9D015FCB02FDC0514EBF33CC67BBAA2EA5037D95D9F607
E40A34D31DB4B679C27D19F648C920A344A939BC14D88F425A19E7F5A2ECA7CDB8ED24B99389
F1D43873D8E5351762A08D2817772E1EFB91C31DB5490F58598449B38E01EF21C213E454975D
384D3EDF5CB31F5E8398A57FF40BDDC7D557C3CC512CF39682A64E54C56C9414DAE9EBA0D787
8BCE09307A0F7D7B8593BF056137577981A194A66B3881D45FE6A8B53D766FF89D8424B9742E
3EB86799E3D05F249C70664452204A2D8EBCEF4A73AFEC3B2A30EBE052906E5176ED8895AE8E
FC09199B4B6DEC091D8A02E8BE455A55FC6B2C99478FBBA9E031D60D3023B0A002ED20ADB0FE
D2E26C620EE67143A5BADC12A9C3906A6BB15C4613C3AA5A0E2437C1FA9B9C74B25EEB8A30AD
65C3EBD77EFDDA7312F0628D8B4C84878EE60D8E61464B2476B116B7997C37D1AF637E24C895
35B388857D95FE3635DFE183589FC897654D60A2A5A5D304276C67469C9392384DF4FB899E74
5C4B7A1F0A48774F3C7048EF2D91FDD0528026521E73CA10C7B3F3DFA6AD31D6F66F32FC944B
384A5094CC1A2E2C479000A8194533C1B6D58742F45F91589038AFD6AD1DB083D32064372E06
1BBCC60B17839528368BBEC3B8D1FB904700D01F4E97ABD57353B787D60D628720BC2896EF11
628151FA18DF24EA574EBC185FED50ABB40C8676CFB3C2F27C9D188B91E4169AC5175109D58B
EE3F798E23E181EC897CC8FE1B80BD9CA94FD19B8B504CC03B5ED7D79B9E23901A336989EBEF
F0D5C040D193B39311FFB778C1354C94E05E8952060CA8B064ACC659DE90553A52ED40235CD1
F948D6E7C3F3172D5192E8B785750372BA66B8C244A4616B0FAD0173589364B0C7F2CAE658CC
1FA2E8820C0DC4D8A02F1D42D07FFA09B8D9349CF03751C4D5EECFD35C5BF06058D7563C3CD6
5686B0A78C17C31F44E2289E91D152F340BCD2FBD085ADA55BA1B94A286850A3A576635179AE
EEDDB34A719C46B451A08B3DB60CC44B55E86BA0AED2B586C046CCF3D507898532AB7001CEFE
2FDCB53657260F5AE3BF682551C11B2E3D33A078F69698AEC88A4385CC4A511E3A85859570F2
93DA9202EFFCF22BC87E0978A6EAB5C624F99A28BA75F72D5D71C59F6F52689FE59F5C6AED9C
763F34B3642BC8B8B96E5ED98A7F325538FB72CD6E5A3FFB7314F57F6A2969AA986A065413D1
53C3D4D8BCBF4113CEA1188C28E144BE8E3751148AA04DF5E9E88265A6BDBF6F10A1BE00EB7C
760B762B18B154042A6CAEFCA68C29097B10AEF2FD362F81B96A1DFE2677410BA8D28FB7FE61
B4F025D8F8D657168150B3DFF70A26493DFE1D4F495C81852D04C3A7C02D37D4FF6EE75EBA38
72E0E6C0198409FF127B9DFA5E37E3ABE76379C860BAB88299A8FFB1B39AB5C3DC13D4BF9EB7
FCBA65B0D85C190519EA42E25BF553F7F0229D87ECC992F37904B54EBF54D8078F63F0CA5F42
8E79B7ED0452C6D893DA8E692DC02B8F7CBCCF3D53571B8CEE138FF3944AA38A00513F502852
9AB2C3410472B6663C63591F81EDBDF2DD28F0BB14CE27F73892A8F35DF6DCEE8A24E7DA1AFD
3D6DD96CA912452D20031BEB49162A5C96EEB7EE39BB85ED529358C5DAFB15A5F89B92F67E92
CC5CCCD1BE5615366F26DD36398BBD661F0DD9D89153BB2AFA0B0E6C243B5A1DF63180EF2CBA
7C818E656B6AD12601769E89ADC13A28BDB557663EDEF8D2CD7486CB20410990AF547315A1E0
5BE655CA6E3ABBB0AAEC147EB699CACD2607C855E680885F44EF70AE0BFEF0ECA0BAF3E1EDF8
67552ED85CB229C67CDCF216028C9F09B1482CD5ADD1DB0179DF4378E09917ABC2D4599EAECA
632C93034D9CBBFAB0B2B8F11D577C2146B55607C1D004B5581A71C4B49A9CA973D55F8F1CA7
E9CCFA4C7E9323570FE5BBD66C8EDA2B4A7A1D8CF487532232705E820ADE161244DDDB4C0C42
CF2F573F71A5C4885C9414570DE8A1653B1D98EAE86A6C98947582FC9BBDA836DEB5298DC1B5
9B837AABC27C77DBC4E123030F6155CC86AE28E5CD97DA087752D644F9E7A6E8B165057D2C1B
693BD9F8F7A65B3A35F540B6EB49E838D7C1BAAF87AF70141C7C55CACFB503BB982B83F5AEA0
A668D70E84890AB5D408F8D07C497C9CA81524F84F8D8083877FEE46B662FE45A9F92CDC3302
23659C7A7CC0A5398F4BDEDC1E5BCA907BE42B4321D65F7CE4FFE4EFC6D6368A45ED2A564928
10877CE9DAAE4E83D87FD8B5EDCEF05164B6B104B145FD36FEADC5E154B1CF8AB526486A120E
42DE6CEFC9438633BA352F1302B24A800FCD3D36221E67B03BB0D0456124832486ED76D49FB0
836C5FFCCC6D0AC453EDC4AC5EF3E8FE9A3163C277E610B33A38B27CEDE97F193B2699DF447C
383870DDFBCF9F06411EA71AD232EF6647C1986707DEC051F77B16D234B07332A989388B3C42
D6A9963FB849C87D8188D76A63190D1DFED3B5C5150CC3335F0404E0AC9D5E2396D5F13DEECF
E53BB4116CEEB3D1023B91DE6F9C9A36565D9A398A5A4104AB2D8AB8C753A993B256BC01090D
37505F93A856A9CA91858813133609E721A1BE63FFF99CA30A0E4220CA379C019C7BB354C2A2
3CACEA555A76FB6CA0EF0A1B88F65F7EF1B527787A35DE8082C803135B3A777EDB940A973A2D
9B4CC838A8C5BF8996739EA47C83D9A906D9ADAFFCEF702E6C0F4F045042B987ED1E331E2C81
2191A1559016837CD70AD8C075A27DCE59A7D7AF18CC6EE26A139F32D182465C6F2B2A910777
B0BCBD2BE48DCEF25D4D5039E0E977D9237B457B258F6A0DEAC98C1901131D53911BE0374DDE
ED5707D4AC9545307DF17298A49C0D32F3F184B3954802AD06E7BBC40A161871586CDDDE5E83
7A4E81789ADB63A70F769166CF0357507799EDF4BB6A622622BBBB6818D7FFE8163E3D03DBEB
038EE6F4F9C7586F5582D047A33B963A750E62270011E076157CE2689DB1DE6E6CA509575045
1B2E4A387A4CE389AD432B477D05079B1C6A880075CAB6506649157FDD9FE2B00F2B8AB68DB4
3529D24F6C3B030E5BC6CDCBEC966E49E6C8D1323AE27E368876A6C2B6699A3A0F9D2C67C2F5
453A65C9643C7C4DFB4732FFA876C9A89048E5D82500748CA029423D76F6B03E98A1E1A15E79
CEA7C10348C3C5D63DBEEE38A65CF411B4C8E2DD1A6A8B9D081E90ED6C052F06C365B9461453
6BEA2A534C8CEDE04090E72EF8FA697A525D8265A3387EA8A1E86FC817947F0AE4D1D8F06C05
BCC5F82A25709D836102EDCDEE7E318B238042B57A13660CC81F022C1D415EA2FC24A3CFC74A
B722CAA1BFACCA45EB351D4E8D1C8479AEBD1A32F04E338531BA02D52F4A2E1512DE55A54548
D8D846E2D1BEFACDB5955495713B7D8A730C06108BC80088AD755FC2156750F4176C91D33EEB
A69A772DDF17BDB2ED0A61D0438188FDEA09B52839F06BBF6A7BAB97D421894D1EB754C46AA7
C2B88CC4BF942FE06557846CA75041CF817D96CB2C4A6CC3DAE51E478D84A255A69395727E88
3465CBF85B0B5B139C6DA1F0963C8EC2A916AF7B48C9FD972B441223DF2AA97B902021B58798
6045EB167CA1C2028FDFEB259D9FE1FC3AC6E9B0BCE0AE35CA58ACE9A67D3A6064C18FDF13E0
9B7C96101E96C00B33C96EB68C575D75D39864778783C9C7624CACFAFC985F161F7AA1E68082
1A5D57B8C2C1310CB3E78E05A29FCBD07E8A70DEF4B970637A3B0430E2D4FCA9D1E29FA95DDE
B01EBB00AFDB8D46EA630F72D65B140EB474819CEB3F582EC5958D1E36C84E4CFC0BE80A5E7C
D7C0063AD6AF51A1684AD371A7A5D1C25CFFE1D97106DB3DC9AEB97EC99B5F91AAC7E664A8FB
E2E94C3943AAF35B879CE561C071C84D3F5C4964D118BBD9869512CF2227C0E6544941CE2277
5E25CCAD4B2EDD4E812ABB45464ED3244F49E46523C72332508AD5438E44BCC76AA44097982C
194E751B222DA605BA317D152440EC3B5AEFCBB2FCE756200D0D6939B83D0B9A30F9D7987B1D
BDB984561653E8E2171DAD393E04920A732D9402247E7BA1AFA738969CF696ACFA0F3ECCCD57
ED78A667E1B4FDAABF3A8A95DA4ECE78C6C36A2BF0F5574CE59E1D8651054E8454DD4975E309
2B3F824C3CEE44FB14707745771BE6D54833B2B81763D5CE39ABC3E3E8F1EF14DD1F76B73357
69C8199DC9E64632C0F309590FC822289D140BBC19532492A46AB7B52BBBD0DBE03171D06C7D
DA52754D5231FCF23D0A6555DA69B3D30E753FA7950E53F17627744967B96A5223A2A14AB30E
5E2664E23AC403583C0044A1BC320E058AED0DC84621D83BAC4B6B91E7CDA8B09D7494869643
C3AF964F2B503CBB737E477A39848418D6FA076E097B8F3F5FA758509834B7182BE7C59FCF74
43FF0004892C61DA06A8D209A9AD4A0C97AC87A66259F3503D00C12C05C6B76D0856E329929C
79D7C0B6C96DFF973FEB29D623F7C78D8549E9AAEDB8BDC125D490A7263C66AE3C8BB2CE90BA
F2BE9652F8233F3A4D25284A1DF90135CE9E4EA7E2835C1D3094FA77FA401714261CA9E304A9
ABD7024AE38131FD50CEB91EA6BE8268ED868819279BD91C0221774B99C96E68238B1E9F8FFD
C85DF467A30A7656FBED1BA42C5A28776CA65B7AA09EDC39FFE172C54FD86CFFC5B88026B654
5265E4683411CE8AEF9C3A7DC71A2D506DD2C55ADEC17EDF7F9D13AEB257729E25B6A0B8C50D
13A24588D940F43D30A26C879986D6B7F89A2F2A5B014C98F9D2726E76178E4167E7D05DC51B
C0C1B648F29EA2A7EA149EBFC741946E617C1D843FFC2B3B372DE023BAB5BC93FBD1982D2FFA
A4C77672072247D0B3A39433363B5635A608F7E13AC0E7065DEA4A11C18BE5F060B4C117F8F6
9D8942AF9351537EE0F3E678646D72F0E9F953D317F77DFFDE51EEB889599329D68877F286FC
9386A7D53618AC7D056662B76CF0D1438B38FFA25F14ED009E71676BA06B4CBE02B75EFA9BBB
090B2BBDEA49D0563ADB630CCD29837BE5BEC22EF48251AD160358AFE1B42D16EBE65C410A4D
C85F705348FD877DFCED8B7518B0BD25E27BED6B371DB00D94E7B8296990A169413353A1FFE7
7200EC6995950DAC7FBDC0F79218AB36E17E568BC55A945B1CFC5B870A947A76DE9ABBB0A84D
A498443ED84E740585F2B863B797EA7780F16C7AE0EC65B2454DF54A0FB004085D9334C10008
3283DF9EBE505C7E01FFDB6FB5EA0F14CB6DF35F23ECF83BB2F98CA5C650CFAA6BA028DCB1F8
356484B543E17905B5677634CAF9E4F901D895BA6F88ED73DE4B9A39B796FD0B2782021F97FF
F5EFEB92F99E4C5D3C0613C29837B939BFABAD4EDC2A959CC6870CC472108F579A5D18659071
6F3FD4B62B29BE715D46C86578C51947983B17DBF350D5E765406B7F0140F0BC8BFE48033DC2
9829C191A6A4BC93074E4381E4C87E89D4AB3D1534F8F837BD3901FBB5EC3450E7CA1F6DBCCC
076785EF59A75311F36C66CE478B89D8E40441B5D5FEED0125D0691CDD8677C83A077EE17B4D
AEC2B5C7D5502981551562602061B497ADA519C5E0F236F372DB52B4DEFA263E21F814532E6F
868DF026E39918724118394AAE6694AD28BEB654EB6CFADA71BFA9463E91F5E94FC5D687D2B2
34098272D3A84BF66752EB16A7A886FE2D789F1227BD1AB20A4F0E4F54F449C3106BFC3BFE1A
EA3118A8FE51C5AEB641FCD5DD4D6E8702B1C91DF42CF39988A1FD2647444648CBB91505170B
66A9BACD67FD8BE2BF15C37A494F6CFA989B4A5135DAD5E98D9C6D3595480719124BDEC166CD
BAEB2DD7DCA2AD191E95D06DB7F73E37CBB6CCA64B05813E1436508B04C52B5E399CAFFE82D9
7FAB588DAD818EB5B6929E846C5F8791C188FB92E2CF4DFC48153E6FFBD7B1BC9F42DA20FC27
CEE27FB1CD86546B38DC0EC115D253A7B1F4E36BFAF211B312FE745CE8AD24D7BB72DBCDE251
63BFDD9DEAD88421EF8D67D9CE721100AF02EF9A29C4BF27D8DC945E77BBCB927C0E5AD6FEB8
D07314C322CF3430C942D382FA2CB0DBEDD4ADC770488A6ECB0C8731CB46140DD2437369B656
162E7EA2571603BFD83171A824C03C99CB9C0A86B1BE360EE90694FA3396ED54925705D05738
0DF12E25E29E5725116EC582FE41F7257AEFFA6983D266305884AD0FE9BF09140E52DB066F19
254A4EFD01831F4B35C02D9E02D886A2CF8998EEEB4296C48D646EDCDA9569EF9F3F62F9B0D6
7CA8AC6117081104576B3BB3BE783085A1BB8B5EC4E3236A13C16A6F9BEBB6ABC22E3DF69875
F7513931FBD013FF78EBBAA962F41338164197F3A1F58F24A338E84CD29E2628118A35664782
58BE7A891E8587FBAB1E49E471A541257FEEF7FC5470ED855384CBDE7D1C25809D7642240ECC
0EF90214956EBA22153AA8D964F86B65883C99653C41BD3779E6529FD446921392FA7044CEB1
54F531E037C1B71C9BEDA6D2A6309E034DD6A3CE442777E05DAF4145E87A8C50E6A3E5F59799
3436DA29FE098C98F44620309AC5EBAA9B1C2B512FC99C6276C71CCEC7DBB93E6B2738190F81
CE4C7FE48644AFD952AE1DB3DB99680F71DE80B739A682CFE7CD7FAAB06FDBA49DBEBEC5A359
5874A25BAA5C88FBCD7B9457FEA4F1261070C49B06930C0FB5DBCD8BF3936D214ED07053D79E
602710A40952829432D23EA367451C8F999AD9090B4C77FB579B25A7259460FBD1FAFBB4D2B0
E353BE42A542EC8A8409C68E37980BBD95E5FF0B991F41E06F536B3ADE55DDC7C7EAA50A9E29
83CF8FA0786E49AB83F014B38C445ECCECDE2D1C56E46E13C1A1A8403B754CEFDA592881C4D6
87D5BE2B0D8FE75E62D66E17BBDBE5635256648DB461AB21A10597818DF2D620BA5A3EB0C602
0AA40FA057C9F02CD6AA23C92D64BD383858B74B8B244FBB147A5D53B638C1F0CAF3B329BC0D
91E7D665829F0FE6744C9A0A4B732509E603450F2124462A866D6D10104E4006E0715CBAB87B
CD88553D878E2AE9B47BF3C0F58E0F449080A41B6FC51FDABFFBEA5163FABCBC9689C285FD77
E1290E5944338BAA89F763A7623735F997F678FB6E2B28BDBF3581E0E41CC312EEE3D051974A
B18374A5D0483CDC5338024DF71A0D9C21A8E5B297CA9DB1B840015952776EBEAB586FD9EA63
527A42926CDBCA9464C8DF06699BC4472E83B719DC418F4CCD2F91074931259DA34744A81859
4B5D31888324376800E5877CBE0BF9E5EF31AA9961987B0ACFFAD3C7DD6D9BDFA36EFBF5E411
0034CD9F6F842F6E07C212F5A25D125EBD275FEAB43A05EF483954A0CCC001D229F59D5302A9
CBC0E1BCB46008A00F39369E15E16DD3F80180334BA352213B2C7AAFE5825BFD861D233E7609
DB3B839BF09BEC3999247F1D1EF1F594ACD7AD9527C1E14DD30221F4B01FCF09EAC5A6F6AE84
1C5E3A2CF2EE66DEA55DB833BFAD18DEC316CA87672F9774BF1E5CCEF022E7BD4E980A1F50C0
B228C32288DA5E9F27118692B4EC6E2E5773E7B9CE014D3741FF523B79C6E0884062CC8BC3B2
8B40369BFCF8F394E486CCBEE0C6F2C2691D25F40F431A68F76959D18DD09D8FA3550C6465D7
FE04A340A1D4BF3F4865B0F05BC625CF44998FAE5C9C57AB2A12F79E1C37E9993BD85F270263
5C95058B498FFBA6B380C442B9E58EA36FD2F79544835CB7A541BA81E93DAE332554F4FAD689
8F73D3FF2FF5E0F9E8CA01C312A30428C8AE85F08EB181C035ECD729FE097C8E71A59DBBC0FD
179D37A767BD672AC5189B2CE247A60B748E1CC97C757A89171E340D5D71A798F200ACBFB6C6
FA234263C7202322F6D165A9603CA7065C0D566CA7C575E1CED13F52A7265C9455604FF13E70
AB461019C2CD8E86A07125A2DCCF531D31604D7B72E81C7B95F6A29126956CAB69A5A043E812
7F711C72A5F0B48C5A13712698C6B0328F3C7B210F9F5D8B9895EC1F26BFB65A6F4BA4F11CBF
A15FCBF107F7444E59932C80E1FC6912ABA1E32DF1EE936A6939759FADD18906588A1A3A0393
B84D8C72F5B3CB7D9498AA33861F1D81FBF257FADA9F4EA45C60643BD3F697AD0D4EE53C1D3D
833C19195020B1B731358BBDF99011AA61261D2BCA9EEDA17A59312F532215720086B9A4FEAF
C434DE5BC1C78DA6A6DF391C9F1FE2C4FFE3840238EE898137B1283A19F4DEA56AAC6BD1F5E5
D7344BBA844351D4F2625832F0C4E51E57C84E194EF104D7BF714B230A0E3791CE0964624980
6401B1DBEA17BC560157080693DB526D70515692D2E0C33A0FF2B760B7BD52442A1C94481BC6
DC3496723E5DE97A83CAC479B913DDBD3A77C828351AC2F8EA01853DB42B0F2F731900777680
26F8EF7426DA8E4117068B599EC63385830633C581D25DD71015CDF19ED47DEF676368A9C00A
90E0827F592E270316A68710B3537A18C64330A0CB81C9B1825FF33E7E1556621AF4D6FA0EAE
3EB64E299A3745D05FFF89D63473F2FA2DB87A2A6CF6D6E461A6BC68492D8A3436CEE8BB41D4
5EF81344ED94272B67FBEE64E62A6ED38DDF15B8141ACAE2B6E4372769F368D46872B596BC17
244E8D5C7B146A7EF07D947C708CA1B973DE93F5CB1F4742F6C32D7AA08E073F591D6D82965A
DAD2E6E1F059F12B37F8E015A54608E60B7D46E0AA43B2AFFB19A03298D99F3A0BBBF053EB88
38B2763DC2C64735B6E8199B8D534733157DD0C88A3FDA057E9E683B6A023210852DC878490D
07CFCBD298E08E52FE17C19865BF207632A6A18BB244FCAA5AF490FE97FE7A543181F3912FA2
BF4C84F5D5D22116916783B5301E2A8C93343A8BF7EAFD279993AA8F80306F011A69087E0AE2
DC7F77A3139ADEB693052BE0497C478F962ECC83384FE1050FBBDE989F2BBCC353BA0999BF99
0E648D2483EFF80889D382E5AE8B5C48F9276CC3E6425E01954BE1BC3CDEBDE6BB774AD725E7
39223F7818FAF43DA63D99BD48E3FC65178A6AB101E87A16597CE4487EF67D384CA85F3F1D40
86289ECF78413D50CEF6A59AAE6465C6C80A1BCF525D1887EC96C53879BFA14ECA484F9A6029
1038FF0C7043EA6AFEB4E2EEE1ADF43CE9C41A8DF03B20A03FEC13F61F8C8B34E5C76E82BBF5
17661EC80E739BAF3E19D08A3059A37AFE1B857E395312E5D16E2396FFB4D72992738E838BC3
BFE3C95F9A55FE3FF6819FB3D98B2FF7D38263FDDCFBC1ECC0946EBFA55E33D1D8CC63ADED55
ABD7C9AA0F58EBF0722E59182175A559BFD93020B9B773E239BACF70B1C372EB60AE3DE986EC
0FABB1184A418B152C3F92FFA8F63C241574EADFAEC3A0B2D8EAD245C7D9A3571798CFE7E45F
FC678E5CCACBA3B6EBF4978B37955902A50889782FADA1ACFEE350149EAC468F98E8B29C27A9
726DC498DBC25D6547F313C199E20EDFB617A95B0C6930E3962AB9EB14A262DB187DFFAF4797
0F83C5702FC37FFB6B5578AA5E6E62999E7D44603870DB6477748547F139F139940D42A71B55
C1B815CA3D18F72C58A0A90CFEE4FA6CA9B3BBBE05E6503341141749FE82B807299AFADD8CBC
344BDBA6D9B4B5511C5782BC8892E70FF0D10863294107630EA9CA60B186A3E688C8843B43B5
1E56D43E7BF37152A90D83E2F9884F5E210E8764D260140FCC85F7D3BB02F0F7B099C261F702
BA6D258B112B2376BABF01F67F75F1401153AF646597C3BFFBB75DE5022394ED18F642BD823A
1614D520809829F92FA9C2EBDAAC05D1B8A80AB5DC25A2505FAEF9EBD239F5CB30EC7C80E73B
106CFA6795A4CDFAC83BA3A8772E3F0784A56A5F9D940F0F2F96EDFDBEDD5DEF079188EAA409
FB397132748B4AB1773056F6FB3AA643EEC85580962BB246540E917ACFAF8E37481659EB0B47
93D9DB63E28B09E28A2D0F6805A438A66D64A1F0ED19FC36E72BD5CFAEA75B856407687C3749
91A9A76ACDCBEF7786AE7D285FA08829B111B393758430013D65004A16ADFC15F09FFC416F12
51E25593ED571FD5BD4E2FEA6B2AB2A74761C19959EC4549E3139373A53A1C72085CD65DE553
A94F328D89193709E782FBAF69EBDE7B81A3AB4D1F35CB585DFF59721F8EF9BAD29E485C71A0
3473D24C7EBCF97CA3C50990361857CB893A91DB289F62F3BC69342239D960D0D933A9551D0C
A58D8CDE1CBA208F7FC7EB9CD0A4D70CC436A4EFBDDC2EF9E5F848CDB2D717E292491B72CB36
E8E7039C54256FE8144368C843B31A6C2E1612473A8E7FA99394EA991A728D2CF7C401818010
F71A2E65141A5BF9F7EE08107ABF13DEC4A1797298A6B5505BCEEE01B96C25C30891542A98B9
8940652DC97A293A6DD9ED1E6E6FC502D90A932A06029CD263DEC6C6C1A1B0CCE4C0FA33286F
FC66EBE2F390630D3491F8A4330E3F24F78C209F6A3BD058F27EDB6934C0AF0B41DEB54ADDDD
28B0E16CD0C649E35278C6B4AE354FFADD37FE10C62E8D8FB1EE3C19A52664EE2CA40690256A
474ED70B7C14977629A75A39CBB989C2FF994B2AB2DA98F833EA33352FD54919F6AC81D11923
70562A9DC8AAB207AF5D624D8780AC3F30F9A73E6465DA8A1D2F570DC4EE4CEF404F5C90678F
CAE05009C6786E281221C799341DF20E51F7B79DABB8F7FB98625AD7F43B849D496E7350E608
6229E8A7915D2E8CAC5CAD62CF02ED1BD861E3D4CAA84F47D94752BF23B31090F82AA23759EF
5464D6CD1C37CAFC7F4D257861AB5FF395AAD48CD7943C4A7F8802DABA9CFEC46FFE1634583C
643A61E740901EDB30AF5F54485F9721DF0BC16FEA487031D503030213964C07617B338E580D
51214EF8F8FB5099B274FE101CB3B190E8248352AA145B793D957FC7DC13E8A453BE0CBEC0F4
BF10A96957A589826C7B8DFA67247BB00AF692181F7856F60A3523FAE076AB890DC4842103D6
6157B53A1DED0F85126673425751118E6E8F428D654FB0FAE9BA27BA69D997B5A46463568FEB
57F4923ABE2AAAEB4F3190F19BE9C861EE55A5488D43BEC02A956D4FF905D39401765194AF45
590EDA77BB5777D5B3686A137EC55A1275BC6A3D7B5AEEB2288A95967029305C8D423AF9F545
249CED65D75AB1A96F411E3A9390A975A2CFBFE128D64B4E2B9AD8A71CDFB6D4CB29323D44A4
9455903AE04A0B22043256CAAD0A0631C438C5510D2814217636CF0A7C2DFB29CD5CBE8382ED
AB255F59C4615BE32194AD532C68448745C4D4CA68CA713DEE3E9F184A8517DBB511EB798AF7
07469EC6EAF5E1097AC0D868C9E89FB9D9DC0DFE9B8361BCA5A26AF15157137CD742FF436200
18EBF465F17442BBB3A40C55CF6AF7B2E64BE9E673B5A7CE5BD8C979D862E840663FABF3F34C
6ECB5F15DF7E7E41EF73A759B8AEBEE8177A4A404A16CF04397FA5BA7B9B45944B80DDC7085F
53C7121FC1AFF93E6017CC51D636E56CD01041F27C13B0F9E39E9F764E1D731490898138DA66
7710D631BAF79A64E1608772D84C5277AE2E85E6E320A740193E36E5721AD183C9E176D642FC
0B2D853DF919FA26D24486A54DCB57F3D089D591A7A9A6CE0F87B3D18C6BB58B4CD50AC4B9FC
4574E367C93DF65B5C2AC11C960AA96456FDC0617489B6605F8C75014009313E9F672DE366F8
15AB5DA327FBB6A90C669093953C3ABDA602FFAACFBB390CF335E9D193514CE6191B2AE92C7F
022B8D1863D99A480803E181A9001EDC22F5C9ED5E76909AA1B7507AE3FF8045215D6C8A80A7
304871219550C70CA8FF04CF598DD242C74CC77C2CD27BF531302A59E33692AB9AC80D211552
B5F23D8107082A1F6696A848FC71E57AD2E78424F842421DBCCF21407FC253B71B3D2767C42A
B72E14B8968063A1F6C36A94D2BEBF59EB1C187A4D7EA89A79A9D4845A374742BC2AE369E79B
2DF203F99126F572A31E282C85BB33B9BABFC4B3DE8CCFA0EDBF819B6AB7D7A91053368CFF42
970F2252A623F8041B755265C845B14073F0119D1F3C00900841DA89D87D66CAE1F269BF4AB1
6D5E488F0188753B0CC1C3B845CA62E3D40B847C4CD32A28931A7FCD54EB0B13B353B429D716
663523B1D9AE3CBBDE5132CAAB7659C0D359B243971149D8D1012F0F43DAF144AA50F1A4C4D8
0ADD2CC10B3B1D02AC421A4D763586066A271923D62BF39CC1DE45D1AE8AB3E83E2612AE51DF
59984E502F1C806126737FD152528FC56201D6606A4D0ABAC623B92EBBF21ED7FD7DD17E8C86
C53934EB9E2BF683D155F16A0A14B7276776ADEDAE364ED23EA8B446077FC842331C81FA7BF9
70D006CA4384857BDF6D41C58A4EA4BF9450BE1DFA4D6066763088A387947501E808964DC1AF
77A316B0022ECC13387EAB1B75F6BE569F0123234B6F84EB92B00541B6BE7AD008FE9C021B63
AE8F119DF3D9308FC0746BDA0EFA827086A6FE33DA8FAFB66FC1E170DF60D024F7693C9294FF
0253D62ED7FE0FCF78B256AFC67D72E1D026345488122214C871F62E321B719DC0E72815D62D
62FA2173ED591A6B9AEBD83061ED50953C1671F18156903D944FFB60D34A973514CE498B5E25
D2F4CA4FA556134FD0530BE707F48B919BA29C07A5ECA4F51B611E0E95E2573A6A7364D9B999
D504FC890D07C6B3FD5241373230FE5C3D7534FA3B23E0B7CC2C1565CF8E1A13E3DEEE6D768A
AA28F09AB64E32FFCB0C0BF8DDF96FFF599C6129DEAC84EF2E7E60CC20CF29910FF13E59BAEB
708DA140AAE74A8E24B03A5C05776A25232257ABABBB34BB7E740D3073ABC61EE12AA83535EC
45933965BE222BE59C76ACD00222723A0F10F1F0F0F1D00BFA615866B65BA2425B9F93A6D32F
D289CA31ABECE4C1C34A1B3C3B86927B07BCD694F20076E22F23D54B3814097AE7C7AFEDF5EA
51655BA925080A5CE8A79A864A98E83FBA9218E9790AACFF43B986D2B529AA64DE51F9088887
899AA671187BA2B87699E31B6AB9C0F79C8EC76B15B3D62656515C0FA1C23379DECEB6AF7C16
EB8C211C940A9F74FEDCB986B07FE0EC590EA66B7FBE2592675053F16B23C4A782B42B06FCEA
F89FB7782EFE7661D086242360CBF2D6D1BD7BE782410D25002BAC6963BC61C9D0A690094B87
1975263496EB71DFAC3FBDD8C4DD69EE2FE586D205BEF4F83238CAF751156DE752A4CAB8EB03
0CF92624389139F681D37C0A5434902E286F58033D8C042DBE35D394739F04BDC590F7D6896B
3F28BD54465237ABA25496D7072B1D0B7C69AC942AC0F2A5355F470D2A14A686EEF2FDAC16ED
BA18614931B09EA4FDD4FC7B822C9C98906A9132E0A045B8FFDF00A7596D7DF9425B7BD3583E
E8FA7F4D8DFC7103097322F47B9F73AF9445BDFFA036B0BFA92B2BCA8E2F07DFE65F98FD749B
EE803AF2660DD96A9F1529459CDCCFBEA5A25459EDBE2EE52533B2A04FD3731A2656F525A677
B73E81A727A948DA814FBD84062F90CFBC923BEC30F4B529B09D930FF3879B66CC2E14604BFF
7882D552FA1C96B1F820A72E0C463B6D96C93061A0DB4122097C627A2EF2A45523A68232FB39
E80A691FE580B699E09004CB63F1BADF97E987F987A3CC34A66F8B17AEAB24225CD2AB2FDC89
DC2EE1C81F357181E98DDD058B8A7105C06C8F0D541B937DBC704553A1BF91EB581525784F7C
2DD4DD7D176BFA26EC60880F0DA3617163DD68BE3DF8CA15F2B4356581A5C5AD4147F0034B54
9E6AEDA3D33F7EB3742EEA4B28C0CE48B07284009F7DFC2C615922F342CAA563E8CB5D93B4CB
6CF60EC66C2C7CCA288FD6E4E9C7C38E5B3232778B35476F69150F433FE5F00A503A0E3CC706
26A736D31B477B5A9D95A35409F84E2646074A31B177570BF02528D54FB0FE63954DE02C26E1
E1717A85C757DCCA2F15A8785941FF1AE83823704B84DF64E30BF70262CB9D71218D741243BA
89397617EB51109152A7CC4B53D469653E3FD69BA911BF5AC59D8E299BB2FA8977D9C0721B4B
4973342AF2C55A63FDDDAA41E1806BDC9EA21363C06DC3D49F10B51D4A64EB3E7A33CA73DEE9
F18B70AA6E4487E5434E451EA33BBB5C1B30FC5DF06307082283B5194AE585F38CD414D1F0EE
6F18E716C52DAD81BAA591C6A481078621B7D8789C2B988897E3B9B566CAF6AB7CBCCEF14DDD
348E3250F370A2232904E63EEB2EEEE73653E8940D7036D7070BFD4364723DA84658FDDB8D39
96897460A58E8DA2D603C3E9AD4704264798E3EE894BA9616B1D0BDC107940A42001B23B438A
3E6D56D8EC658605D15AB22F26AC8C72D2D082C621112501A5CE8B254CE52159411F16F45906
16B3A30933989E14D72FFB7F00A85256B3A89BBBA1E07021E224687D427958057793F768DC6E
078E5D7A82A9315F880E94DAAB7F41AED824877AA8C3B47F221B5A023AE6D7BB14300D13D51E
C14C6B80A56945047AF5E9E11FFFF0740D965AEFC24E03EF6659341AD384C61BD09689E4915F
25CB8AC29C0CFB4355A61F94AA48BCB2B942F23E27F9D701014E73599F8D500ED02AC937A017
E5164EFE81E5B2FB842B238C35C3E0E2E3E071B5890A357844BD319041FA86F45682B9C37FA6
4DFC13DCCC269C1E3B173FD9DD33742E8E1CF84521734B865B81E57311A2622F5B1E51819B19
9989CE7D0633326469B4E680F7A5BF9C1637E92C26C6D5314690F527886C9E95BF5EC8D0FBDD
324550219DAAC79861BD701BF1B6AD796A03DA64EA158E4331FB7C4929DCEB3AFD392BF855F0
502F0B92D82BC08BAA38931DDE899FA3DC8F260939592EDDF96EA78929B77DA1B8E7882C343A
737B43FF2CAE78CBB933401C9870F999051BC900CAB3143424E8FB1134ABD213AB13740DAAD9
78BEBD9BEB55F5FF33792C1E14EE50D2CBC94B91D3D864707EF96EE98412FD979E0FA8FDA4F6
6C676524CBFA56D2F6C5A97C53A76E1CA3D92AD82FF98477950460CBB6E54E974F7C44CF0681
9DF5592F7BEE034E725FD1FCBB669B4DDE3B392C9EE46DD03C95CC1CA57BFCC956058EFDC5FD
C1C7B88D1494BA3610A9454DD4B0B78D9D28D20FFEC73AA25E59E9D459B5A9A827F4D59F7F88
0C587987B77D137451DA291A27F181001E692057DE028C987D90F2E678D14C5A0F551ABB4222
993A9CB77BCACE19407327E204743D1A9583A68AB26AE2A6AF92959B6C5FD4B50EB563DE00DD
54A812DFC44E387658C2407352E62831BC5BD1D6D19E0E7BAF4C84EBA9368806A7E89C246E12
21DB27DFB8309F3B26D25C9DD2A4C6A7BB572F5210B1FD176ABE2F130C8ADD2D667D0BC5435C
5A1D7A40DC04A17E2435B1B4932B3D57E7E943EDE54FC3F68FA93AE572FDCE35016ECA10BE92
DD2F29840646CE419D09889F6EC0380CFAF334FE428D60F8AEF83AF76F0098EFCAE7B4D1C916
0CF6C82043CC5191C052A12D825C3AC4DAAE175986C5ECF1DD8DB548A50912165F10028905ED
75539404E2ED779B3DE400DF38DC9CE8F57E28C6C91BA449D87C81A3052C35E8085AF2491D74
6E633A7BF97D8602A7C1DEFF61F6D11C654CFA13670CE98B07D808DCE292EE1BB16AED3DB381
50D2F9113A758F7790104E5F7EE2E2DB47BFF1B75AA4860FFB49B3BCA0EB95C75FB10E8280E1
640D51B60836A9735F79C5C63C19A260A50811866668F0CC45E3DD4D0EE4C304DD38C6DEFE90
377D795F7EF9DF2C457AB64A0962A01E9329F8788D56AA5F79E6C117317C93D35FA33C802BF3
7B39A2BCD1BC795562E355F22D55FF02D2DC107704F86FA88AA650AB33853855B02FD330AAC1
E3174D7DF36339326E26CD95D83F9D7E5DF050D98A955D0BAE1E597DE6F8371C0B72A6AE3688
0E34AD16899BC42BD7F24C28F74DF8AA00DFA1F25A89CF459AF4898A091CE88FF63F6AC65928
3FB82A2E172FA6D44898D34A6218000B56D27EF7B4F6D7441885C82CF7EE5B595E5C1B91E7CC
88B90865F606E293831D78DB8E5E88A2F35D91C9F7BBD7E9059C70CEA1FCE322571FDA868C0D
447196A64A8E41BAEED41780D427266EF93BD2ECF75E2FD6CC8108B828FF03F66AA1BDC2BC9F
EE860585B7C8C676812989AF633E570AA565FB7B2121F9F4CB6FA6E0BD5CA21622A65A7F4B27
A466FA61D0890F9CB520E8F6AD23AB9625B652424DDB8D5114E95B3D4CE4755FDFD5F0DC7706
114977E82231C70AE505E4658F3EA49F02D78A8C02FFFB8C948889D8D3B312AF1C424A46AD94
18E6B5D20D46CC6FA0FD74E6DA3E592C259FFAAFB1D18B7AABBED3C7AE0993E26CB8C5F35305
357DD3ECA2F46E2108E5566EDFD9C3B4D45A2F80AFA4FA7FB71BB7B3850AFDBB17F0DF0A7059
AC46D747EEFD1935BA30DB018EF17D217452CCA42241790AB923277E0234B8DE005A7CEB79D8
E9639AE1B01CDE3C66F6ED75F5E23A0070B6827D1B3D3B643E523870547B826EAD273FFFDCAB
69416DDEBE384954A77D1C33326A05CD3C4B34B395892EB65E0DF8E53675A1EEC86536168580
6D221622C355F07FFD9B9FD5D949DBFC48558D77B5226595C9599AF033AD0EFE579983ED0327
0217D4F98BA5E6683EA6AECAB070B88E67A87B4E8548A8ACF452A6238213054CCF19CF81829C
247B8A3346F6E0383805349C3BA6F9015B317A1ECA68295FAD5A058BDBDD89B300FDD2738186
27EEF0671532BD929BA3284D4FD65309728B3A94BE739E251E70F761C07B16C527D5333C7461
9CF54ACAE253A22859752483CBCE0393A4E3A03CFE04C2FEC214561ECC98F2642180E4884437
A5CE2A13C0D0B57D4863F1A13776CCB98B8791AC87423CEC95B6768986E0CA9DBD4119817AB6
7B767F6BBF9774C0AAB0CBC28EF7A73F3824C43E644FC9F61DC6B3339FE8CB5271ECB863A579
9F85F8448D6A3AFF1F08CF89D82F042E8B75C6F5CDEA00E5C462C58EE75C36622F3756931E49
C7403BE2596963887F3BDBC0447FC2E99EFD0FD8AEB5E6F4CF614C5D4DB3E7D2496E7CB41B03
9B3DEF710A2EED368FC0A39E2BA26FE970F5933F24A970A3B8B82AEC9FB26C28089190D433C3
0AF90DD8309060FF837AFA6DBCE45531F731E904D8A82676D89BD9D155C56AA8DC20FDC71B03
0C66579C5642F6FDE6D50CDC384BBC3A4B4A1C8109C4BA72CC390C32FA577C3D52E0C21815A6
483D87589C80A6E11AED93E850C61E150B59FC2C67BBE409370C7AC3DECDC6E166A3D8B8FAA0
DFAE1C61E83F08424175238EB21D40F23334FDEBE606221DA92F4BE9FF1115DA25455A17ED9B
C603274FA328DA8CDDB10CD4E01202FA1FFF1044CBA8AE9C4FFE2082B7D9720AF6E38311E595
99450D9CDDC1022FB151C4E901605D9F8F025C40E562BFBB60A9DB0E375B84653F7E3327464E
9F5683DA00CBFC84F314758342C210A2278FF5F7EB669D2677F3D8AEFA8470FEC991A5A69507
0007B183670BC1E5CCD12C7E0121832C7CD16FEF31C2D729D39376A435941FC498ED4AF31DEA
3B0DABABFB3A1BAAC78AF3157E37AE21B4C584E2D5472E4A71A26A89072673FC37763F036CB0
149C1E9642E2EBCB7365E4D3B63EF5A06AACF44AFE6BACE49D2C761E64378B3E3D75A6373C6F
19559A07C8EA8A6A1DAF3A7ED8427009F87F38AC362C383ED3BABC300252DE456D555A144E90
0277A2B51EFBBD9A5601FDA2D40FDC727CFF1A169E1DFCEF1753AA407A20987A664786F1BDC3
A1856FF2CC86846F8EE94DF928CEE8271DE4CA35B6C9B8AA8ECB2CD80A4E60546ECA512F5821
0971E945A5FF9E10CF1B8750BC388652470243C5D379888AEFDEA323CA12005AC11F0E143628
C0EE870070FCF503227A9028BCB65C95B5DCD144DAE1948922662BE7A73EB4E65729ED9C7D0A
45D34D90A888C06F795908489AC561A6AD1483C6424BA622535F9972E561675F8CB7057CC5B9
C6967E76E07A4E0FDCE941C9EA9627ADB46BF712D9DFC5671477BE630D818DC2C05CDF3A9189
8414276EAFEA11B1094B78DF3E02C57EC4A58FE99332B7945513E8B6C3A4775348DC2C7701C2
58C1DF2D483193BB5CA930700A5EFF44691A9CD45CA2F8D9B602497D2DFC0EC749BB8D55E7B0
47DCBF720F52A77438F61EF9D5D73029A8F17E890CE8232A09487FE9AB52BF2A63C917FDCA27
A66044EB8E5B661AF2F60BB8F6C42A3C618FC7D30A9962CA34BAD88DD6ADBB87DEBD686B30F0
BB355FF73192E34804048F783D5DFD09F8ACEC66485622D20DFD2118892D5926367280ECFEFA
82C03A182D27A44012DCDFE19CE74D18D2A198F6E8316A75E90ED15169A15E24EB9B3F892C53
9BFB4552205DCE351E535CB23F8E337B294F92E62745610B0E5D5492EF582560601E11B04C02
A1C1D1A54880AD0A6C40C613E05D7A6D56824C47F6E1FE629F6B0DE70D237E130EC6B4E163DE
5A09ADDDDAB9CFAAE39E5550CD450D1807E08D237881BFE41A5FBBF5362FA5A05F5F5AB2F807
8FDB2EC78BC12708B203990AEB9F43267890E5FDD00BF9EE9051BF62D1CDC108BBD388312AB3
A4C52168FD165928AD85A6D8FCFDFF58B84089721920259ED118E48CB00AC1AC087D8A8607DC
7CB81369A415400294C5769908277B26697AADE6B831CD7C7F15681F06F3B5263E04C9FC5D29
CDF89FDF4F85F26F61954E4FD09E6500CBB910D3E769043FA53113073ABF8F483C10BBA4853E
80B4639B568A6BC162212FAE40C9290F02248F3406044BF534A74C4344211C36B5800DD6798E
74CE256E54F65231E1FD2E9966D3BDFBF4DB35381B6AC785B903DB9333345170845295292D0C
264E18450BBC31186A448637F28DEDB677A462137EF8FF211B783396C74D8B4DA5EB9BC85012
33C139128EE27013B521242B4FEC2D365D97DE257A3495D66D0295F4D1B479EDA7B4EB95390F
FF9E3FCF9A015A2E199BA3B455F49767EA88453EE1AF720A892A7434E9B855557137C45FF0B6
6D14CAE544401ED6AEC748A44B21CC6BF4B3000575ECEAD2E4C862EF320D02ED9037B70CE397
FC10FDA68C253AD13131EC88FFE04A98643FDCBF85291ADFCC85C249FC7A73D4626FE64BB51C
AF07FC1B82B60E5DA5730B94209AC65F038426BEC49CCDE8330A94C7438D495C655138D7978D
7930F8E4E236031B7DFD2DE98A97DCD7D9C66EC2B8C78C210EE3D3D97B05BAE068BE4E01432E
2BBD5FEF526EFB7327AB8DCF2CD11A90E0DE2C04C70A3E62793E19D8883FCB30B99F1BA544F6
FF2BC8E565BA2D8CFFAECF47046E723AE2AA1F9DAEC0616E49D175558B25A9267E2402A08F41
7CC256E855BAAF91782B14889BC14B57A6AC33ACD78FB4BE9C162A8EE90174FED092EB2D6567
9F6A08E9B140927C8DBB05B38122D19B66A1F94EAB81E7B801DEED355F7EE71F75F42A5A8D8D
4B4F05746F9B2CC34E696CCB63F17E580140923F8959756EACE68377073935D11CB66FF8D5FE
002162D5DF92386A35F211126AF47017A7EC3424F428CE8B9D792CDB4C8ED5923299579EFFCC
D2E6F585836EBC5AC86E12BA60AEB17CA5264AB0F47669B36202489CFBB44646FCEC78D97754
95BEAE77CA65951ABE3C7D34D583B86E7513E9706B6464F5298CA864E3315EF67949732F4443
25C2EFA9678AD8051AA90E8BF8593890F09A150FB9E9B5F9CA17FB6B234B67566E130FE0D5D6
0A8F5F20AD7E92AB65629E6E11AA34E544031028E74913441AE6252DF262690E3A5569080131
477A5A773ED4431012F6BD1050B7BA6069C248E8AC56377E8E4942DA4E0DDBF31F0A7907373F
7BB6D6F7C356CCDBE312A764A04E63865B1DF321659AD124F6E03D3B0703932B8170A512BCA3
01E68A899B36CE35B0BFAB537A8D22A02F660D49486AE8D42FF43729E35B7879E9F3B8A36D5E
E8C711498625180A882C3BD38DB0D3F927A0E3EA1057E727C5CEA0DCBE940A1B98E1C146DBBD
C4C277067730E196AB431D9E9E48979B0C132616D53BC8E6340C958056D81AB14387F952FBE1
4E19C531FA46032CF60A1544CC1317506199A03F370D46169417820901BC74B4968FB91E226E
235369326B990D8CA07E592A33CB9B3CB8B152AB4A6D038F529F85DC37A0BB15B4CE991D79F8
8AA9E5E37B14CC5AACCD975F03D6844B9BBB91EFDC4F44FF745C70401E6EEAE06B7CDE42A573
4BB6DA318547E5B5CD0B71EEBF88D1F351880B3B349395F9BA5F03FFF2D19656CCA34AAC9AA8
E17B302F2CD44C35CF5E85AACD6818D3CA573007A32A81E6777C0ED9B55F46649E4802FF8FF9
762337100A9036A93AEB7E21645ACB513F4097EDEE73E036EFE6486198C861BB6197507B1C40
CD86E4DABEC297A4D0B855566A895618EC7F258C6D562C1CCCE49A04711B1CFF248D32C70057
3E76F655BC837CF9D23123A710C004E3004F3E12E68F7AA1FA8FAE8ECA0A0CEDE940409E6B6C
3213733BAA44B69CA757F6BB8101A57A0F2082B3D9C775589EE6EBCABD6752730723331A4B24
5E6C6715F7699525DAC14365FDD2C7E2C09715E61EB85623F35D4DC30B105EC5857CC009E083
F54111CFABEBF2807CDCDC928FA86C6FE20EAFD17EAE2BBC3D8BAA50FE205D639A93BF671AC8
F050A2D7589317209EBC821623B2B0B2E242C9B7A95B15EB4F7ADE81D9C90A338FC9666F883C
669E1C4B4C75702CE335F353D816F7CECA83B8B838BCEB4B8BE09ACF6B05E780861A5A45F5E5
554772966AF65DFED35FCD3A9B618DB5DDEDCCA67E9079CB5D31D3E4C84DE439450696115D6D
8071D85CC4B6D79D015F776F214248F304D4573F3A0751018C391AA70BDD74E38AF056F7008D
C1379CE8B93AF0014FA70C21D7FB26626E462E2FBDE2EA8903A50619C68A1A76400AD6267020
17A6497E8D36CD80C7C506E031E60D29DBD2326CB3DE85898C7C7853C98C94F06D9E4D8F2CAF
FFCD9DE08FC02B237B2F0104B9901D209EF9F43F7DDB2DDCB1B656835DE3540CE270EFD3FF25
FC8BAFF9A2CE9CC347C96C720C52834F4EB9FAB058B3CE782A00E34366A26202E8D55867470F
02101AE2C2010F9C32F2172E8A59997D46BDE4FB08C4970186A07C009F93B75062BAAAB20575
9B3EB4B494B6C7EC6D9071CA72807144C7AC281BB227045E104D95063C4D631DBE9435F7FAF4
46F752794948C35A7EFBA593AA9C7A59641B952B1170B6878F08BE019849EFB024913412CD4D
5A16990B24E0371454CAD8C9E18EF1B4CBF5860523B2BE12F33C0E37D8F1137DD76A398F1F50
16FEFA47587BD0A2B0E981025CBC6C7576253488E60D73F13A437B3FAEFE1042EEABC03A7085
C0239B85C7D55D7067475AD09C8F850AE00D933F4255335EA1E0488599C120AF6535FF87A7AF
D898EFF1DB439B893AC98C032A3D9E7C3F0FF1F975B9891F6767C781E4A136BB2E8D8ADCFFF3
A0F6B8C236D4E1FCB38855BB7FC2884B6CDF072BBC78FAC8E1F2161919ACA91E278A6700BC7C
DF25789BD2BA2657304FB9F92BE1062F543697A092C240990834B3D3432FBB5AB2FEE56BAB90
8FD78CE94E18D587C56EEF021EB6C333FEA2A0336384496E8E5737F14A763158E4C7E7FD47BE
99F3B086E0A9DE1DCADDA45A7D849FE84083F04609D6A809160175D4F1B80BA471D57AC6405A
19A8A805DAE88980C1D0DA85C6DEEE6FB69CCE4F4469343EF512E5DCE31B9BF755E33CAACD57
1CD35912C2174637480F022FE3A4CE8405E7A9AA02E86A9DDB9BAAB2C5A34FB8A013A878FAE3
EEA8E1EEFD89FFBECCE87BA88A50A2A6D0599234F11D518D9CD98F95F0D5FEAC51B081DB3E6D
C109DA0082CB1F88F237175EA7F6409D3D17F558ED8D91F717B84CC6BED3D10D88F1D390643D
C766C07F5475308A3AFD9901B97382EF3F15374E5C06768E20CDF142175D4A0191CB57592EDC
66DEAA09BF754DBECA5910E7D6A2EB316CAE9A13BE6A198875FE7CC7C41C6DFFFC4AED815A55
F8EB0A5DD576171298D77B24F9E66AFD1D617A79CE51383342696B4D7ED4AA785957536F77D9
FB335EB66444652A24A472606D4653FFFCCA5C3DCE604AB2E556B2B77D29C5F79EE36876E541
74D8343F9339FDB24FD6AD27BE580AB795650B49BDB110B2FD741CF569FF6B05B44BDFFEC94F
CBC1AF10A76D0A5443DB0C4B90A9041340235F1DCBA4DE75267AC88B6CC7E93E6A7347C5DFAF
6298166855748E7FFEF5FD8E62B6C7882F1D275AFC203EE0EF372954410BBAF1357BAF69B1F8
936EE8D51EDCCF63D1E9FB915FE83F24B7AEFBDA4F548A1C7003047137C6763CEEDDA7E0C939
1E945644B4BB6D4C9A3439DE5FAD14A41A222681048E64418907F0D90A58CF47CB23C736EE2A
91C500E7D91B80481F27C29CAF18022C4AC1D46244ED1FA572602D27E525F5A6EB3A33718FD5
C8BEE1570C26D9BC4DE5A7E267D0D0525C400D50D9C6AD94F1716478753F01FDFB8A16F9D8B3
A5D3351DAE3B4AB25BDAE50970A4F661494D462432C50561656142774CC09DAFBB7A9D48A7D6
0D829E68CAE0F9FAFAC7EF69741785E79704AEBF055E3DD89CC538CE512439F5FC3006FA0D45
4F20504E02D28592F7BC55220B10B1F04206499FFC6863BCA72D559A56179C947994C1977E9D
B51C4CD27866C4BB25888684927C16AEE40CD8CDB07B941AC2534DAA7FA466205ACE09872D15
84039495A0B829946B64BFFA6A75EF8B27DA96FADC849F00C4E26D3C9BFA1CCC424C426107DE
D3A7A8FF67C0555021148D3F50AD29B85DAD69221180752193E5F41C961A3E7C6941B6962AB3
E25A53545CD237762D6CCE7D417C10A816E97BCE41BCE306BABF78B0E409C076DE14A5FBFCFD
8D72671BDC759AA05C419A43EA8BAC256FA6F1951B9F4A20571965EBE677D7345FEA05E5D7DE
45D685DE6F7951CB2D783A78B1B5DD06BE702D9EBC1E5F76E4064A07D1AAC8CE781E557F1E02
C9D2A64EBB2580350BC63A3061E92B84484F83D67145D6213D9A687F6F747190E3764FE2DDF3
050D218AB5A94DB7EFAC28D797A287A7ADA96BC88EC19B804314419D9BE16EFE705BBB38C897
3D8EB16DD330DC4CB3A38D3A50D1D0DB73ABBCEB8D4BEBE33CFB9DA72C1E025B91E099015D1C
413C992EC95832158D48468E5B138127C871E8C475414B26AD64F43FAE9591C2C571BC1E8A33
20C24E3EE8ABF01292622B2C5F2CDA3102FEA61DCB2FA6F1AFEC4BC0F25C7193CF1E81A68B7C
B8607E8C604B6F62A615797123CB9E5EE6BE7E344931997CEE8B30F9C3522E1792C7AFDBDDE7
B97331554853C82FA3322902F701D53686F74DB57E611CC4B99FA6F8295DDFA9AAF279B6CA16
99A30211EBEEFAB8DF8AE079CD5727F8C77405CEE445846359D383D8271228D554DAD9960333
7B05B2715E746237F0398669ACBD8B35B0BDD2DA1331B11DADC2DD4FE4AA50E4EF135E3B766D
5D462A3016090442A8079DC13CF993AF724ADDBD23AF602ACD6376D1C223115CA39E0DA32DE4
CF05F2C89FEF14D084630CBFB5AD39B8563BCCB51CB9AD0EE9FA61F92BD2B5740B4E949DE43B
9F7D99D189D2E2227719DC88C178D331F7C80298CCEC13FA69FD8745CEBB0AC1FD847162C07B
31FC9D5D84D85E9C3C8DE19956512B3CFFC214440EA38C38D5A6EE812EB73486D2709D0B47AD
289075500CE6D74929CCF1C929327BE7E934E7E66DA8CA3584524B3AF48A00624CC177659605
6C51145334689BDEF35FDFE1D0747E6A5F10D1E446E4C7E0514A485592AD3038049507EEF1B3
76FEBCA1338D2CA561286D72ACCD250B7808841886E56E62FCBDB1588A05DBDA80D600561DF7
4FC2933EC310B816B0DEB2BE2CA0A9A922E3579B42D17610DF7E46B26CB88B0B6ABD0BF07B8A
0B1A91B2B5EE5BA329C59C725B71336C6C597519825CC0D95CB20B9CF6061F0080DBB94E12C6
A9214AAA19C8BDB0ED22ACB82A853971674ADFD09FF79848D9F6886A9F6872906461B737D4B8
8BD09CDF0A16B84C5CA35FFA4DA2C7C143F6713A0EA73CEE94C5F74DBAE1808B8765363C534C
ED82A487B8ED6313213BA4EA494B5342866859AF799D97310CB69B1F2F3C945969FBCAD743E4
03A57130219DA070270FE16079ED80B03876C5D3085256348C23F924F4DAC680FB2BE5330A85
3422260F502189B6950A7D2DB2D79C821B3B1B9A3FF9DF3EF9AE9CFE5D6822A0042740E4CB8B
E2597AE2E1901DB4A069208752F865A4A411D3243C87F584F3CE47EC94C39D0F96217FEFCDA7
37F6025653001B17A739D2CAC6452AE527A28B662672A5162CB7A3FAF5B1B7410063BC5FFE2B
CE29FAC0B453DF98C9AEE375785A5A1B6AF74F4722765EBECAD8A70A61F5718EF1C78220E98B
9B41AFECCF32CD18E72A498F30A1EDB5DFCBE43A1720E279D20D7B13D3E1D74D2310C47D3D65
2A11E93D3EAC3728FDF74458904E5EE9532B17AEEB899631332A98E7DEEDF44B13E450E9B187
0F01B8AAB7A43B508E90D579686C3675C8CE0BE130F57E98250AFCAA8B87B95F76627663C53F
F603AAD609A05C03CC49B8482719290D67FEDA99AEF6B94A184635ABAE8F3343BC5096B8F019
24BCD180276FE5DFBE8B1ADE6E1833F645B97DA739B5751BF11C9B37A7412F2D6EED85011B30
95E9CD0B865A3AC6DAACF45C1EA45C74DFB3AB1B356E4BE2277CBFC3989CEC5285677657662A
94C05FE19BBF4CF8F00D32FE6126A9952D24091E956A9916D4AD3EF2E0524E9382AF95DFC5BA
E88B68DD8F7083DB05C2DB9B1706A95294E39F57B14EF1DD04F003333B4E6E503305B72366EA
5A0D3481C8776FBFCDC7164F55011BB256B8433D11D6A42E8DAC461F9F124CD3DEC855062A77
345A05DDD067DFFA0B7E67CC76E461F54B63EEDCEA9ED70CA4B4E527B2C0ABD2BB065CAE9C17
6A6102DBE6F5288D5005D1D0BEFCB325E38A9C4B73D3E8BDEEFBB561D04316F5C9DF4E82E70A
146506A3A9598324942D274A73905F1ABA2D7C3EA418FC1518F4C6EC479C367AC0F1157362D3
568237AB2BA498491A4AC7EA17B34332757C60585C46FA8CFD538EF3A7E1BF5B1B84F30B166C
C89B837F7DAD23C0EC40A093309586FA72EE1C9C95097601A7D61C1AF5C656514B1F9108E381
9009E996291D38C5E7F5292CBF75BDDC4F069097209E43BF97819BC77ED291BD38ACFB76CE7A
1E8A2C480C3E3F023AA9DDCD2C536644D8240C3AF4E8769702503B91A664BD0A94354B5C2A67
00F4316743D122214703F3EE9C9603ADA60D9E8011EACB162D4B1C5456BC2DF925AEEC1A6D9D
5551E8CF2A2F17E06C65F252A622A4EDAFB8C270B18E3FEA64BA2995D74E03F93534330464FB
1546539DAC16EEC2061C62CBC9B5D5605083D124C2FEB4849A567AF414A5DBDFC928038360EA
B15B2FB3C973D05C1AF10F915B3471976CEC213D666EDA842F326F1CE03C637A04B7AFD66D1F
D23E224DEC54C28163382D6F9C6D660B6DFE8AFBD61A53D5ACD23011DE38038EEAF8B6BCDCCD
C65C47C78E483A33A84E60BC04151B92180B0D957AFD673927269EFA64F77C295E98D1798423
9B18C87ED33F2C59D0507DC188AAA7156605E0A255AA267564B74085BFC34BA92A62A32C931D
A3B7463D57A9825FE85C4140B0B6BB61118DF56BCC1E17F89A572098BC2D536BF58FFDA17097
2704AD3FA65063DCCF2613600A324998057E103904122C6415A98A1E58783E4528ABCED7D02C
085D3473092FA1809D400EEA371C3474C622D5AB552CB80B8C02CA4ADFE582773D2852F22BB9
934D70EFB043C7C477AB77E3A4BCBD5E1B044D18565CBB2D40C05BF062B4EFCDE02C367A5EF3
3D17F12F0AFD3E2FE62B3728F7B90B0CF039872AD8B48BFF99510038791B88EC5C9ED90EBB89
57A7BB5DAC40B08F78B6BA1038204BEC7D9FB54AAC7278F0FCD2329880C5D2F06FC3547BC155
812E712E2061B1AB00E710C8F8530237F7186DE45E65958455A34D40384FFA488EF8F300C0DE
572A067775FB94546C70A0085DF87E18C5F98523367318891C1F9209746EB83F333C8DAC3250
CBA4477AE1D06AC432EB40746E89D29717592D789942D4F44EC21B6775308F6273A8DA460E5C
A447B9B89C4963C99B3FF2096D385087BB299799A4EE408416F5DB55305A39C3A53A78CDF96F
72B99D56F20ECF7EDBFDAC8639826FAB440AF3876A85D915EB506C66A3C869C85915ADD866CA
3873E6E258443A34DC2C10304B3EB4F8A67E63EDCD01022FBC3181A8E5515644AEEE17321093
492E0A7BA626036C0144F031B466BC0983335AEFBA743434D6087736E7A9D14791C486E0EEA3
FC838B943A0BE089500E1789EBB20FED7F327AE003F294EFFC15F9D6FB721434DB74ED233471
BC788BE10DD71E4229AB1699F8113D5292EEA2A8DC1E0EA1CED43B15CD0B7F9DCDBAD59E6945
AD881B5732260ECDAA3CBA1F284F30D72F6E932F441EB050DB7616441A226B4914AE775E2B62
517E49EABD032A16DD53BCDBA352465296C792D26758FC0D8DF909A67AA533ADD7C8F4652C1A
5BE9AD45FCCAD157CDB5451FAFFD3A3E27E3AB98578CCDC2546B1EB9E0AF7C421754E618BC15
DC7F8DB03D6D6C243E1012D5E9D5E85C7688E7A40D62EFA2C3B1081C09D5D50793629BF05F2B
995EF68A8BF421D67694512830DB48C9E55373A12FCFB054F1F93A55C5BE011654EEC08A7983
E809A9B1915C4958FDAA25E3A62B9D0E70A620C98BBAB8E1617C144ABCCB9B4FB65105B83842
601F8EA9CB26143BCEA74B170F39997992649563A05C835D458A331D5AC00AEB5E4D9B4140CA
17DA8048BA58EF926AEB5F133B25BD3018997EE808EA8CC5106FB7177EB0786DD7AF4618F599
407490FE4A1EA1DF1D7564C349CB860FBA9D02828B4EF9680A4B91E82617AAD45E24853F7DA5
197370EBDBC44193E1EB99E0E83E08244B27B82FF0D95D323CDB72A378E1176C1E4F75BAE08D
A38F5DDB6F18D3D9F1446350B108E6AA7B80439AA6FE3BBD4043FDCCC941536555899FB4F227
23B8C236A849DC121F643147D454448B1FA1C195A371B4B13D3A1EB962CF81515583AE6CF4F2
6E64C93BC6734A0DFDC2BC9864D5DB6385A7BDC0BEAD1099FD0F08C93390471BC3F30173A6C5
6BD38B5710EA9A9B283CE95A8FA8206F28A3DF67CBB4D28A00D23729700CB452B5C18D8886C8
E47BD194563988DACEBDB77232FE3D85F66286E5D2BBDDAD823BED53DE0FEAF66BF93B0C5224
972BA270C417EECA2069877C30E086BDB332405D7F2F6FDD8110ECC1A2FD2F56C35399C7F6CC
9306577D347038E5AFDCC0B1533B9392C18869E7D7B858CAE4DA18D59CBB650565A98BC2EC17
C91FA13F694C04403E111F9E67F272611787BA1C496BCEB025C0CA4B3DC6204B343AC704E1E2
80A5B1DF2A62D0AAB38802ADE32C62AFEF24728FE460ADA5531F2791021F7B26C70448EB33E8
256447CE8F23664E63A75D18119484193CDEE88F7170665C03F422A0D5BF47CBECAAA724E877
A531D6297F461F282233138D796B297E5B01354ABD7E41729F2F15979A2E655719F7F475AFC9
0FAF1D4948FEE178721A30C9F092B670E6ECD1A68A8C2A1379AAF1186D52D5931E52B107CAD4
31D677AAA0ECBD61043FB5F5C7B684962306FA3C7AF119C7BACD4C0927FC8BBD44D42FDEBFA4
296B8229832B668DF7C7C4792C6B1B8F8718BC54200950E50F228875FC037386B7148983AA91
0640852C6883CB4107BC521E74AF879F7A95B3B50D5D1089774FBDA4EC0E5A4788E14BA47970
DA02463FB04B8A2FBED6323B12C09597C6130EEE1F03540873F29BE4B0908D900BACDD20ACDF
425A1C14404CA6A394F5EA04131246217AD30F9AEE9CCDDA9434F7DDE8A31069DD27AA2724E1
8134809DD3C0C9C9664D0834374E5FE8C7679108B9C01EE7F5FC9DBF29B2AB4516C2E94D135C
81E9D9D7E201D11C7155B86D2E2F595DFF6747FD34642C92678BE8C8A479C3A7DD8E257CE682
A61487FAB620A6EFDFC752A7E75F5F7A0ED1F41871DA930C13B3B0734E7DBC3D34F7B3ACA6EC
ABFCF30F9313A540FE83C9C55812F3C65998BD71F6950E89C5F92FE3F6913C0745748264C194
5FDE9DE38AED11707F23DCF12237476184DF8A9F23C5F27C4792AF05ED121555827C15A646FA
D4EE4A801B7D5046835D0039A192EE55DCD5DAB6B2812BCCCED163C8B7EC14F7639450ADB51D
41D76B7FCD7B7F12028813F9F79A9A54564348B55519AAA238D9E73C1C3F4E33A743D8292237
71C7584114779B1D61AFE74D2B90CAE7B3A142383427FAEE521FA09135E419A3422BAF38CB91
50FCAEFC4FE482D7BBD68407DB1BE8CC0E55B4EA2AC95669C9DACFEA6B43509D42C5C125B152
DFA2CF3B72E2A6A86B01D0233877BA4EEE4ED05226EED465D3DE84C36D4D3EA1575E8CCA60A3
756120C4A2B0850B3693AEFFC85ED9778BEFEFA54CC1B57546FFE6AC4522AE5B7D42C88D7A8D
C1896FBA61C9C5AAA5D8442975AAA6CBF7C993E0D78FE01CB23EE56065E800258382323B8FF8
E29133C67565EA3E25F3E858AB47F1D4D231FED0D45EC66CB860F23F0D0404A3A49F3C9C54C4
BE095E4F112F3D7D10ACBE4572917DB12F03F46EFCD550B6677554F62E88A8D7F836F1EE24C3
77ECD579701A7CDA6E3859725DE82C6B46A75EE3C3D6AEE881BF9885986865D9EF13F70A2A61
EEC1E49AE40881F915304391B8C3E37D62E00E24B3A4396A5DEF14059A0ACFB6B44E712AAA3F
BDB4DD725503586EFF0219AF557EA97B14A08C4BA2A7CB68C97801A0F20A9857CF0D995CB7FA
0856C64FCE840108DDB0E63141AD34C9455D6A62648EC59FB041B1E65102F34DBA316A0279A2
C8BBB31D458ACBF324B7C4A21071D2093739E66E7521CB9408E06D6AE3A88366C51572F0D75C
B433A44EB686FAF6FD8886BCC2EE169291D26B775E84AFC81C93F3796E044971C3592D4F65BB
D5F0EB8557AC19940E2351CC119DB61FA07D2AF20C2114CADE57D9EE4BC735D7EADF2A88E39B
0DF76DFFCFFDAD52C07E6D147BB478FF7DF16D2176ED966013EF6DB3B9B65D2F1FA85B7D4983
1A1059DA990AA464FF4AE0E027635C66D8A2F9E12F82002E64F8EBCD67A6D46FF90388CE7D1A
F423F8930F85D76A4A2C2844991BCF798A4FE5FE35B185FFC97FFD286A98FB6A70F607105B7F
5F8E45087F6E26E01BE411D524398870C626CB4E7FE839E14B31AA55C2BF451C04F1A28EB4C6
B45665C9BC3F203CB5BDF611BE961535F3216B105CA41B0A7955DD0547B6CF93A7A2C40D59E6
43A6CC6116D8876280AA764B97B28A9D1903FA9CD05A978DEF9A3533FF9A49848EA648DAF96F
3145264A36B5A7B7D00F3A2EE79C87E053AD4D6F4BCBEB539896F63905248CF8F7AA2BEEB7B3
D6AAE0114D67D82BDE7AF61D68F0E2F2B39198D4A3CA36B349EBFB893CE50F3BAFA98DDBF5BA
3D04D587514F34DE5A3831A4828BE789C8927937D9DC026127CBE780BC320DAD6DD080523FA3
12A43E9B5771FBBF46D6CEB6357B18B09D8CBDC6FD564C4A51E7D301E460DD3B986F29DE8AC2
B3C3E0C8477D3F1AAE713D252DC1D183B4FAFF3EC292A4181090E22BE2E84E89E138FBDE09A9
D3E8D94900614EA136E433C41D95EB80B8942CBF4A9884984A70A5FEFDC90A9AF918903D16F2
DBAEE67599A43AD1CDAEB89F5C022999A30B5892F82406593C096F22230DAA4CA21B2124888E
4259885B5ACF3405064F5789FD0C3AF7762BBC192D030F3C0059518B7094D5156B81AE62D114
FE21CB15AA60A37B1450FE6F7CBAC07E603B98DAC1A03A7AFA368C95BBDFEF74487AF30D0FF4
66495D1270E641C01E4E003773591244336B0F69FCA79B1081BD234398351045E05A45E8B79D
363967279CDFB93328344C9B493C95C9DB5D9EFF8EFACE95DCC3A9B85DA06EC191DAD88817AF
D0A1101C93269D57308297200E6C78CA5921BE9BA675B569E37FC806537C3FFCB56119290766
70721399AC79341F12867324D76A8683A79F98D69F3C12EEE8E2FC40B534D3D2D8000FE00940
BE33C817BD4CDF2AA8A9F5CCF35F8CA848200BCBA7C4B4FBFE355964D5AB5E3033114066D66B
942CB30895198677E0F4DC3B8253F97C7E69E03440763C0AFCDE63C1821BB703652DAEF2283B
340AD1DBFEC6DB2F105A2DF52F073D8321A5C8DD509218E9C7D146FE1830D76E6BE5C46B5F4A
F755B4E6B041F7DA70641C80DAAE1B3690236F43EF9D82CDD3324A82F0DF8A99CD570665081B
679B20D27652C806C11C2CD64CE1C25EB0364CAB1CA281526F34FB3BAD95A410BD0BBBA97CC4
0AEC1656960FC9655B7131B90410A80A7D3E234C9DB569A6BDA7A4DA7690565902DA2A9E0E5B
5FEF6A3C8B4CBFE1D36C4F96120D27734FDF641AB0C12B580511C0CC41F04006B0B3FC156CD4
D49945AD3AA2B81A0112E42507FFAE4F6DDBF3DCC407AA968D5B0DFD3A3509CD4EB258210DDB
23D2F0CD6FCE1FCF571350FBDD20298237B250C4E15A12F9ED5D4B7DB5C30F41A467C41C61E0
D13FD65C8F78B743B833CC6066D20E6476637EE50A6DC68CA3215AFC1457658503B90E1F3151
61326AB281A8A008772088B3CAB2E6BC04458BFC3708DDA151C6FB9D3EE0F5A17F5845F2FCE9
1F994609D41B7F5949AC4191F555E1DDAACFC65064E7A00CFD822C5AA97DB7305FD731B3B897
2740E7F2FEB1B99DB69AF302F4534813AFB9F278ED0CB071CA82F2A7C1DF1A06CAB3C3DFFCC8
62AB713B52717DBC85B5564C9D6ABE6728C385171333284464DC799E381F5C1A2A34AA2A61EB
AEB49CD862E889682120F57F1CD119AEBD575C9041E06F71A6154BB55845B7A7A5C670EB4C05
AF693BAE71D6DBF7A51F4BB19DC50EF68CB69B69CE963F178008E1184306576265776F06E4C2
48B04FE9D425811CE739C97E0CC2F1D2CC9D7834AEF17D245AF1C3985CF838EF7580E3D766E0
8E99ADA313B51EAAF08B6DD00933CBEA957C0164FDD91FB49C2F01561CEEDC9DD98FACFA3A21
C13B620175CFC5F7F058A0B878617B17E0722CC21051A894A6F9A18A8B0C85C7B2A71247BD2F
9135E3011B45710B03819574F6DC526BF801EBA2E4EBAFEBDA6883BDE7FE8D81CD650FB7EC13
4FA983A153CECEE8EA75846EC55BF46B2C01BF248E1E1843EB0DDF6CDAB6B05AAE33177370C4
F7400F5C0EE80F19BE0798D49E95E8FBD1A93C215E6767B1E5840C2E140CC04BB6F5B209B8FA
D6489A05333869A7C3D8B25795642D3CB0695C75D6B988A07CFA3A3BDF107E3648B5F8342E5C
896E9187878E6D00E08C0EA566F8625E2B352084B02795C988DFF56F7BCF9D9F27421FA811E7
9AB5EEDB4D0440D5C230087385F2894F4414B078B10ABD17CB1B7A2C27D8EA752E6F6159D9E2
519295DEE56AFB501D3CB509AC5A8426EB55F8C9A1D590530FF33875F9EAE963CC627F873965
9160DBBF9304FA8E7FDA0D210B2B971E38B9DFED77CA196C6258F535F693BB1E3039B3AA98B2
ABEAC8B019AE497AE2D9776F42FEE5D8B2B1DFBE72765A246E2F634BE395C5BFE1C9956611C2
953466DD6880AC98B3A9BCD892BB87D509E2CF04D3035F1E09BD51812B680FE2CFE07203736A
4C598EB40F7862268A36C2F3B72AAA1F46F885E9C6CB8EBDD556253C65343C06B19D67461EF2
87B695FC566FCB4CB22FAC87609757430C1C012E5690006390B4E8DCB7065B588A81A96B10FE
FE6BC53310A309850C4114FEAB72B46404D5C4EC464CC0C19EE6A01BD2F7F6A1CDE750ACAFFE
0B11546C4A42A37142AA91F3C9816E2CB347B8CFD95F8AAEE1AC79B76AA40618CE0525D0E6AB
D8CF48E6F1FFB0D96C6635ED7509A381697D414C9F6FE529864C260D77F2B5AADD0EA733073E
24D0ED523659F00282C6FD81F1166DC39142975A26CE653902BD1393ACD04DB9452986B5D15B
6E3948348CD5D91D4D00542E97EE29BDC3FA3D997A0743E65FB8167B7D0A3167C1EDCB78169C
1A07573FFC633DD63CCA6B49B3EFDA62F4A533BC5069A71A1E6BEA28A2F932C0C5D047DACB29
32EEFEE3BE823A93F3505E806825FD346DD29BAF4D5FD6135E199E3AC86D305411FA597F2135
2DC1682A945251097C8859AEF2EED30A907D1E25DE77A1D2F24C6B91987B5CBBCC0C7CA4D0D1
8B7483F22AEAADA0FA3E9211DC7E46905A2D223C9D6DFD036950751AE993B4AED1CFCAA84411
239D2908D3DFD3760D1DBB24EE799F1BBFE95C24B5A0267C67F9A816EC3A08A354EAFD7DCD3A
1DBD2711063539C74F391D6442F24CA1D3EE44E404856A884F6BB71A58905B4CC760A85BA11A
78BDF9BB1F6E16B96E316BA04DB2B81741DEC49E6B5869EAEF576FBA26B483FA1896D3A3B262
7EF5225D8698B9A47F520BBA05D7CAE2965EC4E4393F39E5206C3B0AB2540C47E32C18A29679
514BE483E659F3D558B61E742AC499135A17E0A32A5E6636CEB4F1495C6BD4919BA846E25ADC
8611FEEA2BCF234AC32E6244B09FC41B0747A331DB8CAF6B53D5D90355F20942D83A04B257B8
15F1AFDEFDC5B1EEB5D7A0CAB616131FF2B545C2E856703E4E5EA9DB2380938D0BDA722B89FE
E034454485F86DF5423F22517AFE2567CFF82A2EAA48B20032D250B0072732258556736CF695
1845146231A505D4E79869B7CE4BF544046EE77069B0E58EC9936397B3D37E4175C50A883EEA
45CD49A10398EEC64B61E0F249B02DD38441C68AB246A22C195250D5CF8C1B9E1BF68EECB133
2FA4A8D7224C761A8F989CC01F79127F1DC3F2B2A9FCEFDF0E3E7A4D83BF237D3E5BB8116D73
C684C8FA1BE0F6DD48F2B10A1B9D781F3BEE2C04044EA924ACB602FC71A5F6FB4044FC6D0ED7
9F96784E58856F7F85A24B73B20BD36E9BC3154BD2FC691B43D3439135E300819DEA194326EC
07937674E91D9EC90633C2B061FDF2D4FD296A0B3023D2F14EE207D8D3152871B2DDF94AC77E
20454ABCEBFEC42BCFE6F87A6ED06D04C7599F8921DC7B12391C639D4DE22F0066C4E492A069
0C4E194C0F4459AC7D32688FA167968A6C89F1A99B82692CCE147EE17F08CE536238279D3EAC
F9EC9044BA8657193A234E123DCA02B98313E41761E23A7349D3393338DB6C6C1ADCF12D9F6A
857BA2155386B356B0795BF62064AA05489ADAC4F59C6C32A2E1503309863ED1AE26D3161BEF
5672233744FF946B4FF49B8D2E51161B35A649C411FDC98721CE82760EFC00BC049DCF13F6D3
0D12A0FDAFACBC9DCEFA0348D83DBAF89132C1FE4A044D69ABD55549DBF889B4C6E2DA1DC632
4D17BA1E05B24861961EDBA7C5B95B51DB0EE926B136687A556B672EE9DBECE52CEDA3DE1006
E3649C76C1C0884EF6BFD87AC6580BABE03818ABDC3E4CC6B4D4041CDCEBF517FC0F5EA0108D
31D827447D30037D7A12ACE70B90A7BED7DE688004C7C3B397A65499FAC27E42E2B3A39EB3ED
5894DE12BEE362836E96B16003399F15A6A8AE26E38C9FCC801F2E6F4B545CD956931918F794
C3875B7405DDA4AE9EE73DB4E35E8966619D3DC1297D2B74718015D9BBE71DE5D315BA82F9D0
80AB39CE258B5017FC2BC6B88330E75B286DCF02D7E8D2913F49E6B840EF654EB53212ECBE5C
CA54920E55AEE898E6F580CE64EE1469F7FC75B8BDB30EAF25703961629B3A779E7FEE0BC99D
E7467E808AB022876FF8E3C7CA5DC14D895087D7477A562639BA09E53E8C71AE81AAA3D5C3D1
4C6D6FEB024BD2554F5D99A542856D09744DC79952E4608D987C488282CF62EDCBD5A8D09D0D
A96A717677BCAF7E900E851959D12C72392DDE83AC1BCA19F9B17C412EC9A9759A941109F54F
98D1E45B834EC74C2BADBF92B4E35EB849DA7E666D6F9AA91F7B56BED52129525EBC7823CE7F
8582483C9B1E98D19CEB037868DDA586740C8ED44FE53729AFD4D981729463EABFFC4880D325
97728E30A87531FBDD71D353B08FF5B0F472A372F189E1E8FE644090A792B239FDE495E31B57
CB532C92C2A39FC5AC260620AAB6907BE36F13689DE9C6F02FF3B2F7A8AD7592F5AF0D4BD1BB
D08E44029F2995E715FB3C95A01F883FB9622AC7410EF238FA5B31780B9ECC664CF93055D157
8AFE311A546C1D7DB31A911252E33CCE72A3BA6FC6F29DD33B5228F984DE2268FF598AE7AB59
9475C8D58A3B7431E3B4B4BD79EB15FA06B834C4E09239551D37FF1D3ED2292EFD8CABD12FAB
26F38B182E472102CF3D9F4C8C23FD5B2010BE3C8850936A7032600771ED04B0ECA71AF44D05
88A095C5F104EB2744713C9FF75F4F9AD3E1DC59C2691002B4235F4BC3E3670BF396EED34B7D
55AE6A7EF56BD03C1812D28E112E1D53CB79D8DA34C3773CFC7FB8110CC6C3497BBFFC599225
4B7CBB1972F503CE79C63B77B53A2553006B58AF326476A824433DDBA877AE5F878ADEEC12EE
3DF5EE0CEB49A412C833FDB96E73810A392114838C01C53791C24CE0AA86C75700AF4575CD66
E724132332822570F802D1FF763FA8DBAAB112367C99E165C9253E931C20E7B74B275BDC0C9D
7B65D30A4E0B03BFEA367EE99136F9D42697B0A1F37D7FEB6BE574995D6F1DB9539875C98BAA
DCCD6BE2DF90DC7BB1F505EF2D4B22DA5F97AE1CFA91BFFDFA88EC51672A0EF976874BF89F0F
0C08366A5CEA8EDEB684807BC4F2A588AE494202E5B5F1E477738A951A8BDE48114C1283E649
026BEDD7FA2502F385CCDBA77FDA7610A6FCE8802BBA47285B89DC2EF74192C018A538CF492E
B27513E3950647E6317E9B5097359AD1B0E1EDC2A5BC8AA87BE1BF5EA5BD8CBE89F881BFB35F
6BC53A613AE0BEADF999410C0546974DF7668383EB63F11742BFBD824E18C55ABD103BC90D1E
5B35B885161E90AA0D0992A2264CDA3CAA126DA13B72C05C81A9FAE9BD638B35A2D0F0D5CE7E
A8024EC3518AF91C51548326CACAA70783F5E450732E0F47774B2B13946BA2B217D65281900D
FF88C3D72B19B7A0AF7123ED58339FF720E722933363C439D770E03C8AE5D72F287A7B77AE5C
C47A5C18610BA568B8B96BEC6C4553E1538A3989E10E8679AD4ADAA1116C7733803DCD9C636B
6BD18AF2BB0104A0302B4F58143ED6228830FEEB2FFEA1D2968909CC535114C7FE08631B44DE
66B4691823C8DFF2324B47F35B4F3928718F4952CAD1FB49F0FF04AA65B9E276E3C16E5345FE
A24CB633E04B5D0319610D321EC8BB2BECF9C39D4D141B8D8D9AD44152DB712A1F22B8EAF700
973169137CBF4A7C5993D5678E1933F078C5D97B51816B1A4EBB6676E24FF65E447E22DFC10C
E7DFF3F89546642567BE66B5165B5EFD391B5038F35BF06EBE8AAF13C75D9436DB8A994F57E2
EE9A82F8FBEB933818ACFE823C4FC4E576117E5FDB435FB6FD0827B91397113D0F7A59E06F8A
EA24C9B1D2D9CE5C542ABDAA2FC9FA0977C6D3205DD4F3E0E9BA8CDBCC94C11CB23C5E1B7737
02C787D6581530CABF709C2E5A706E649F267FCC1B3CF3994DBD406FE2303B812F0E94B5FEB9
FF670E8E1BCE0527580EA9C6FBEF8E0B7FD4938E7D9DA28530942A8FB7B72D4E59DB3C97639C
70432486A629DEEEF59638B320469C38967CC5EF7832489D9A9536435953F3A8D3E5300712FB
90BF7EE2E047A6E3E7F39FCC66411A7100D084AA036E19D0D98D3F72F0877EF11F86D1C8B606
653F2CC6B2E4025C856FB50968829C91AADE81CB27AC8CA6ADAF45E507DE7B10507275FB082C
33DB8B1674F53E847AD9EB4946FC649853E4313BB5DCD6469C593793CBE656336F46929EA6AC
69227E7D0F6BA00E746A9C30904DA6E69679FD108A9A665A1AAA6578AC43D840A740D3D9B921
CA3E5E18586CDFEF94489C15F448B31B2C11D079C00ED7DC46D51DCF5CF4FED99C7920720BAE
C04BDFA271AFCFE33EC59E06CDA93619CB5215A54E43B77B91048CC248259D5851282E8D5F09
2E00973D6E3DD2841B4D0848031842C1EC5DB4B4C3FD75B43052D797FD12007270280AC4F676
1B30415395017CAEEC7C8B23B62A93C7C68CA73295E0F18D190546C9F45464A83B49D17A79E9
45B0A2EB349A85496D9B3D47C507482D42E39C05EAF7D17EAEC6812C7B4F1CF0DDEC7AD14412
07D0AC49DB4CA2A9F42411850CC02562232EC90187A23F954450F917AF2A95958386AFE6571E
E5C9AB8F7443BF05A3037EE939A410674B8319D18B359F6F378406BA93D574CA0A2B286DA199
A1A746BD12E785CD5CB48A2E2554DFD51BB07A04F85D49819C3F64EBE1DF3A9499C6CCF7454A
5BE5DBD296F819B035B69F44C261F58694AA6DCE354B39DA08CC975E757E469086C3C054F8D1
9D7FB530EF433003533C82A17E3B7CEB85CBDAAD95A203E56BB1628BD08692B6B676E7770D89
57783110BD0DA5B48A6F84BD03A4A63A5C1A610CBEFA385AFBED136C105A5A21ACF63C3A41D6
65299EEE427ED7CD5B53B43DD54CB39B547C9F296D8E2FAF440D7402D24365862BC34FE70EFD
2D33BFFF4A4E1257AE92D4E2767C68CC58AD7D4F028A2BDB4C1AA04C09280B1A6286995BA27E
0A118440D1B80A919244DA15CD9F9625F681EDC170565CBCF23EEE93F8B9CCD041EBF0F17EE7
6A319EFD571D0DEE0716DEC3AB1F77C9F2F1EF017CF25CEB30529FEF9946B233B8E14029315E
93CB333507D94370155B1F9566AE7AEE71984B057CFE9F45D1A149742BF8878D8DF4DD92B00C
C6AC4FC9168E76077897C9C02FCBDAA8E864B807089E712FF2CEBFAD86A430222D2737AE55E8
926AB816E089A9C674D5418169F11F7267261EF3A8DBB297793E2E059ABF4380728E3CFB1B9F
21DD24B1716472CA664B53B22CCB7191C82D90CCE12F2DE1E5DA3AD66F060D18A61B65FC810A
491B61C97F7608309A911EF422F498C89CD83BA64383F2DF68B77A5ACF20E5D9E791256627AE
BA80EEDEB85FE28AE6667C9D7B0D86868090B673B5A26B56814D4E8D47C04292921678814302
5209DE8DF301878449C5B6D007A37F368D9E6AD39814B6E412C9E40EFA492B2E8FB65A691D94
F5254FC9D02911FD35D89002B9C6CF5CEA4774D7C77D820C44D7B771E879290295CA9FFCD066
B81E7FA144916982F65C814EEC9317FF9A27F0164B56689EEAE9600CA11F17571EF4D476ABB6
80771282A9E90DEEB37C3CE7BFB985D2AAD9B964BD071112444BC62414E9C247BEB1C431DF68
2C8F21335B7438DC2A2EB01260F78BCE0FAF7059B7BC0D848EE2341A80EC9E7976C35DB54DEB
301212043ED43EA39B4CEB04E9222572779AD6920172A056B59C331B044B148C1BEB95702E1C
BABB523C993211BA0E0D2DF453AE710F22F90441BEDD1016ED8B51753DAE63A863AFB958E82D
EC13F8633DF11F99811BB1EDA8F8DB0B362E2285FDE372254DAA91FCE09967D4AE83CA280D7D
F199BAECB7AB356F3829200C237DB4EF48CD94958185C1E5C0313C7E622C54A8B9195F298820
E7E3258A5C94B484408CDF1CD62AFA789F036C40DD65E6CE3A65B8118588AC51E441617AFD5E
ADECFBDD35D0261953EDB21FA4F9107B741682F2B868630062360FA93F4D8AD0CBACEBBE10E0
D67553B8DF9112369C5E7B6D070C16C224DC9FE8B21A323038ADDBB116FCE7E2B85DB5F08EA3
C4E01F0A826E7E309AFC2ED4CBC66A93AF7F9D25BB89B0DDE90939A04D6E8628827A7C2345F4
9648771FD3BE8E040FAA08F1B78BD28D0C66471090C5ACFABDE3D28114E045A60D5B7FAED468
2F668EAD422BB83D9C05B68B1E665C5384247B82231F6838C7C20023714B532FC4BAD22C4FB5
19E4A7057B044DBAD383A81AC929678FD6B095FDC8E690653B115CB182A14FA86F5350B12984
2EEB221D41EE3496A7AC36F44DC7B9AF181C5897EAAFCD57E265B454D98EE3331B975545BF0D
5A249597BD13027602024E949618375462B92471038B5A6DB5216F44A46D599649E8B738C821
C90715E6AA4C91D1C8B380B42D48C776C8EC6F5CBE7C8AD4546C6D00CF9EF18719D5259B36F7
26028BD22ED5534362D65ED76224303618A41110003AEFE0B7B4676886F470601A245E0F5CFF
659233C4D85CED420C44390E1F24BB30FD4181AB2DFA4DAB472DFD1F9946AF2525AB61B533A9
438AC577E1789875A64FE84B79A5979076F4DE803184F1261562C56B2CAC3778B49009AB80B4
22B82C4876BCFF52156278C5DB42C200457EA8F46FD5C2910B8BE16D644FFFBEA96195106F0B
97A2E3411D3176B3E126E3E686A518FF82FBDFE2AF51F21A8B516BF2F7102D7DB381A399F9DF
DFBC63B4AD8610DD69965AAEAA199CED08C6AF55022FF402C38BF9344E3E11983DD5CA801B9E
DCB9D769528A02136FC7371ADE5378E195E64A37C53E545D90AA3BB8616C3AB989F87DB17242
5158E35A4E1D8728A17A26AB1A0392D5DD37025C8F9710ED234E607A2E6405E5A0E49B8604B3
7C0F95B6D17482A877D33BE621E0A065C55F1DB8A6696A3C37C674AFDD8E8A69F9653C0AA762
203795FD398EABF9F9BC5CEEFDC8482D59349F57D2090F1F7241D16EFC99430A509F0BB63400
9BF058F3F0B1113F8721E09AA55ECD5B09C2B1D1078A56226CDB23FCB14435A5893FD659E466
59D040092EAF873A1C26B7D8F42C55B8AECA24634B58EF61D9C585F9B133F1D478A43AC19BF9
F98B883C0248163556D26FCA2E8FF65F4AAAFB06394803E1F15970F9EFB8D9BF5F9837DBEA5C
5AE0976BFC4432362C02BCC4E36D409B7657744BE0B7D53817273F091F01FCA08518300FAF89
C404806C948F37676F6E20D771A7CDB6EE532F8AEB4130974B05801175E5DF26A7662DACDE77
C41F06B8A14B8EF8691F9B2637B5F87E3933D50C64FBBD5EAA8675F97AEE135EEA0788267D8B
9ABD9E040D351F6E2085E56DD638C84FA41CCE1F70639F41CC29E3B80E29ACE091DF24D897B4
6F16A0DE1D292C8762A8EFF7C140FAD88D44E6845625BD430702B29C19F111466B403EE3B428
149F8292B2FD916509DB839B0F91194ED9A955731BDF42600A65C650861B3FF7F0D0E4FEBDFE
16CFA86199B4CA0EC0FD64C2BE5C35CBDCE8660F98932FC9F88F1704567BDFA644A2466EE58B
EB508D7C9C386E419564BBB9A38BDBED7936DC75E52E228903B0D2A5728FCF730D7A2EBDCCC9
7963C645285B7A7FC7EF0102529631DF973AA362EE2C7E344A71728367FCD338D717E1F861F4
FFEA17BBD44964FC0369E73D148BBF9EE079C24EEE646B832492A6FE28B6B058ECCBA94DFD76
FF5A585A74751B0EE17870C782E1071A17F6B6B1E368CB709982FB490FE36F4F0EA761985260
D6E1E4F00FA4B12E428F79A50C2E107C6A3865221ECFA62A5FE6684C2E8154EB7E7E2D64BF19
5F877B2B477322468D494ACD4ABCEE527AA587449EB3940494E0B14DD4842431EE6E4332D160
527E5CD2D8AB36FF54794D6F453131136684622645A31864219B163425B189727B4228BDFBA3
4A7DDF176A86440559177D6BB16714E5D7A8A43A4D88CA0FEC688147E60CBDA6AC1B4DF36A08
E74B57A4B90FFA4632777DACCA47302474288E8BAAACE746D847CE8B3D2FD8846C7D90BF819C
E50CB8E148CCC890649456D13717168BABC6C3AFE515E9E5DD6BB27D84AAE3A787EBF09740CA
8EF02531EF58CBE16F82F7C9FA63FAD64CE7E44044F83E7C815CB27A57C79218258249006B97
E7A99E2F5C2B3B3106D8A5603BEDE53498EE57E6280689F5D24B857FEE025AFA81E3C545F1C5
2CC12C9CEF04BEB0D8367C309117C815DCAE8C305D2F8ACB08835C7C0915DC34F1374510AEBD
1BD71CD6E368D7B4DD2F5186103FC3AA3E0D498A2282F7BD629E79A7E281D8D71D11D0A308BE
1CBB644E53BAA6C42A3783543D2E247DF03BA21CB95AD4C96504B060E854403655BC5C33EA2E
57CA2BAC450AFFAFE1260349DF89A00C1519F3ADE3232DCA8CDE27C2CB19DC2BEB7AA3F0108D
D0E817D75A8880BF1697FFCE374CE876C7F32CCF47C0C5FA0CD80AECCB20B007759C6D4A0DBE
A908C8E68A645F549F77B37D9AEC220060248489802E671C3F03442CA0CF0C97394526735AA9
2A5E0163E8B852B5BAD0721297250C9227C68B51ECFA01194C9EAE8EF70DD9BF6C8E8838AC99
7FC7AA073B51278E8148787B7670AAFFD646013ACFF60753BB7E4EA9783C7A74A408402F1FCC
9BDBBAFB61AD2D7D0711F63C1BC47A176976288A4E0B46D3E71427EB5333AF8C3C96900D97A5
51547E63FD819399935D0D4DC164B2CE0A8DCCB3A8FB8B3C206ADFFA64552F26B95DBE53E67D
10DB2A25B824AF12868449E84336F89DE1F153785D14900FBA3393DCCAB34FA1F29ABC23E05C
22C6B12D589B373870CA283B7ED684FC274FDCFACB5595F34A49A4236860B60D92795B9111E7
AE8AA23A0E52E892E3F309FF8BDEAD6E780118B15C1DD9D74DAEFB9D6D03EB0B16CB4B3CA846
3C926455F62E7863EBE2ABDAF646C689E81D163E7E8DD8793A939BAE974FF13F30D753F72C75
4EE26AB8D9DB342781DF8832570F6C8B8A1037362B92B7C2B73AE65B83A5A9EC7B9DA3016CAF
D4245AE6E081E4AB1463CB8B813EE26A2F812076FF95CFA62A92B97560C9A6642C0F61320159
D98C6EE94105C88121A3EB2D70185DA975894300CFD98646503E7033183F60E78027330C910B
5088E1B38A08B73A70CA9302385966418770B174EA516D050D87FC5331DD58FF962D7E500A5D
D740BA3227402BCC0ED574A4C4BAEC61800DFC913AD7F360F61DB66CD71FC2F6ECB11CA46E02
DA012456033D21670186BE3650AE265D8E145F3CA0CB03FDED3FFD2F65AA4B967351C092F040
A4865742A7AFDE36630B624C748278DD72D5F978D4BBFA644FFF02AB1B3E1C07506F3E8FEDC8
ECBAA7221482B4BEF85B0106D65BEF078B138C52CA2D7DA41F5B80B7D04AD77D8E6F8658E949
6FD1451E5DE4E39216E3152C1209D4FF9654970AE077F44A31557588409A939CAB75846449DE
468199461B8436854B3E65900741A470E34392E9BAB8AA5404446766C61327C52ADF91524E4D
FB1BF2DAE4525F0B813CE7BDCB1AC1490428641435169370F10045FE887059904A9A09A999FF
B772D65A579DD12050112F47AE5CE3786F275B7FFD95B84213FB5B5A9D91EC064EC7054C5B88
41925BF261D8760D782C9BF84D7EA8F5B3DAE9404FBE5ED8BB0E3C318AC23B313EC27D93F1C1
CAFF00326A7A5D6026FE82D5397F4EF35BFF3B5DEF92CDC9065E8A7E8AB2C143B52F44884700
E93F9D6A98AFFCB6BA353E9D4984A53D7B5E2E6ACF7A69E5788A00BEEE24ED0BC2B301ECDC93
99925961578400A6C53C1FE5B07FD69007EC229906E48380D2F2131C03AAF11A65BBE0E1F8A6
436C96B54BCAD11B6381D5E42194A708C4AFC4B60F1E9D6B01797A83F9FB21DAD55A5AF38283
16D31C568B35BC051163242761E9BAB793E623A5E918CE5E09668AAC3872608AE1BF07E1987E
90B0D590FF3D1DFFAC3ECFB0F1C9976C122FBFEF5C35E6511DC13FB8D949F742E18DAAE02AD3
66E02CA12E70AE740EAD23E5F6784F879FFFF941CF7262C317EA2BD13B35B9517B3E8D4AF5DE
7D7F1B6AA23859D47F4A3E74E8E2E62666C62E5621983F847C816E6EE383E0FA0390115F1FC3
C99E59F91692C79C31C661E9755870119BF02930C897CB31D053919578D6E66C36813D644131
018893A719825F646AACA35DF3E112FF5329585569F8819EC0F5C47A7C2207DE743DB54F84CE
9F543204B7EA2FABF8E10D5F72FF2256D1E0F1D0A90A03F510767E73BAD03C6E58A35FBA6844
7BA844CC99CBB2DF0E1913C84AF444391D1B1330324B55FADEA8C220BC97BFC8E043A1D6A501
B592628BBB1EE2302E6205BC6F6817A9131660E27FBCD7071AC8343840D867C3EF960B35480A
21067B427CF8AD7A542F76E7D2DD0B5ED6D36074005DB4BC10080B9B2C7273B60FB6FE4C0392
5501FB9C92FA58727C19D7843EBED4E3D9D210EB024ADFA75D81E28A54CDFACCD33378AEDC2E
2719C6AD1E66901E2AF59143C701E4406EDC84E43CDD7F0C3CE2A355E1D9B3A6436ECCDB2473
D779C7AF2178CB29BBBE322D4946781C72A236A6948BBB2FD9652ECD23A561C67862DFA8D300
0C9843BA53B276B0913C6638EC6A49B2E742ED0ECA4DCBBD1BC402F9BA6F48A7E88A7B6539B4
5B830D667043DDF7B4F42829735FD2D22C3F72B28AC51BF9FDB5C75C4D5D884158895902D7A5
B2776E9207C33CEE502692348000B7E3C4498208750A524E6E728A4963E2DB353C6F681D6DA5
1B59B0FE80CECAB9A056F295AEF81D7AA0B46C3E753F66814D5605C47D93BB8C8E8A800EAA77
8CB4E6AEE1CCE4BF50580C5D42B9F4EE9B8F514BC78F122055296ECCA83791AEF300B8638E36
7ABCDF755D579E6BCAEC437750DDD7CC7E38538026AF4D1D84230984AF6A774D52C6A152A069
1B38D97134AEF211EA6E9DF2A0CDABCAA92B13CF840D9F3CDC16C49414DFE9A7905B30FF7685
ABAD1BCC6127A756B29F9438380528A98A0A0FBE2620F67E41081EF7B9430778BC9D31635542
9A9B2BF3DEEFB95AA9801DF272D501B39E95409755744A734660B1167EAB1AE272310B2A5E08
6AE4AF9D5B1AEB7D2F87E1D15BD24843A2AED1505561CFD4FEBFDBEB74AFDE9B9DABA26D12F9
EC412061AEEB2F3A273A50BC2F9C3A89ECC357DAF3AA52C93C47366ED3DB5D5173E5CA34445F
1043B7010858703695798A05D7C23764F5B2B99646A187A47B71EA47C9896EEBC322947A630C
7ABAC2C82BF6165F036369237DA14D497D93D376560CCED0A362EDBCE86FD4C7ACA7478B07F0
452761F1360A2C2A6C2A8E793670094DADEE2AF68E7B66E3DD6D63D04A25B86C548820E6B98C
1B761D6895395E461423005BFC10E4C17BC80CFB8E42CA823D5FB7AE1194FC9B73621ACDA408
67259CD2CCCB39C2A25F309AFAB937110F47269A88503D5DD8BAF884EB25736B0FEE860F6430
C4BC9907742C9AD88B7EDA3DF1FB3735CEA983903EE49594BAD8D4D9B6EED121F4F6164312B0
FEAAC647DE25A08505563CA63596D9874B395EB34B7259CA1854DE2B29388C7226351262707B
DA7AE3CA5CB07554D19162C77B337C7D4C07F8F18D960C5DE3D966E07E2D9D346645994DEA78
400EFB7E422E6F98C0E3DF06234CA03726F1F2FE07717123278F029A29CA9EB3EB14C26EB362
951631462BE791A41F202A011226379C0A50014A68225E55EEBFCD1420706C58904B13B99D5D
CE66C988638577AC9DDC3585D0A2E380259AF67CF1E01B3421DFFD36C04C342BC809916CF330
90288216C32B2B3D8DC3F1332677DC43C67FF0E486E9587529E2D8963625DD010637AD10270E
0530C0481F1B2F804DAE9A933A6E47539EC898ABDA9A6712FA6089CF0D517A3E2055881DB3DD
39A9CE997A646B12A0410AD92637D45C91E6E9E02697991C20061BECE6005BB17C076A840E28
FF4C62C2729A85E4F04D073245920227E349DA897EFC2C86CCF814E13E87B5A99F49CC133963
F5571D219810981A882514E23FD11C51914A80432A51E4EE5EAEEAC780F5D90CC02200D626AA
5AAA73C498053260A26DFCDA514442BAA2A798708BD5EE5720728BB4D863F78056DF931E63B2
EF87D597A97D99457160596CACCC70071B77A01DCEE636ECB1415E86BB327BCF47B5E4F6ABA8
01569ED914C791A5F26BD4CE69AC3C4E4A41465E1EC23861F1356FF31FD4D1E7F37C8736680C
9A336D888DA20ABC0425F67B3EEBBB4CF6571326F0E577A2620F64449ED74B6FD36458D9001B
F735D79ED5B1FB8189D21A62234F28D5D73DF0C3A2AACE5FF2C12B19FC1610EA9B7535632ACB
88E23890E8AB80BBEC81A30BAA2C29F7F8769B68F3A66BD4674534DF380B938EA8D28547540C
7E6D41BC4CB22C5C6F2633E0C07D65C7313D29824A5E6C68C36150AAAF03FE049AF3A7D693F6
B49416D1270443610F7F8A3C9B1D059F55C5C8CE91024FAE2D49BBAEE3F707EAC5115ECA5E4E
35FA4889BDF1B9A8060CF2C29141294811A52FCFE945B96104D31AA4E0DB8B22D5E95C9FE639
763742AD3EFE2BEF837391219471EAAF3A5BD0A3F3610AED1D4E13EF4BB360D129CCF4BA2E15
2DCC8B94C0FAB7E675E879CCCD34412748343A781836FC6CF49DE2AAFED74132C5E98EFE3E66
59D63D67128490C48BB6BF220D53FC43420A1E9B4C5EF1C456B1BAC513AC2538C33D3C8FBD30
1C74A15978D9B2CC52BC52E3ED9D2A18A7477AA6EB25B41977E667685C74CB13FCA826648279
0E2D14A5FD4FBBA0D8CE66A0C331693422BFEEB2BEBB4BA86EE0A2947491B143E63DBB74962C
DEFED338A4CB36B072DCA304B8EA18DAF17DB5E71A78C2481F61677398ADFC652DF7C4423EFB
11CA24E16D4B21116F650DD7AFCE8971E3DC33A1212C7FB7F5332378276C5A9087BA4BC2F31D
2911C3A4F44D78A849248D8A36775C977A3CF86F080120B71C365BC0B1A2F26665BED32F4D19
59B616F43B9BB681D564AD4A1B882DB611C5D0CF424D754ABBFB61B0953D6B597F6134719D0E
967161FBF35DF042961670296B08597FE768B0B4168AFE77C034BDFDC81F0E4CD776333A0EA1
0635B256CFB848C028880C038739231E6C02BB26E454A104148C1D296B24FE090A0FEF9581DF
0D5D78EF7A183BE6B4C42582DE03B6726A23FBD4D1FC5B853BF2F48C35014FC8388924A51876
B23F059F0015B32FE1E50792F66637638EA8FAFC4CB3100F65ACABFF4D41515B09BCBCA65492
69C3780B83145DD83187597582566EABB907A04896624FF3138DCF6A0340910381317AF4E292
81BC48C6CA9CFAB2CD61A99F6256FAAA4E00FF939AE19B56D991AC42BCB3AD184514D9C5E51B
A30B8B75F212AF46887EFA32FA384E254226E070FB2EBDBFF6F3AC6C803D982C6FF6FB3A7BCF
DB6015FE4D73207537A81B3B3E79A88C58D0429E55C29290D0D35CCD9106A32A60A35A2EA065
7EC478BEE9AED655B28D8BEA95CE41DADD3EF0DA82B09A413FB3F290DEC2FD90429890AABFB2
EA24A82A5BE0783B7728A226CF3F3561A04F6E073381D2BF1E061B90ABA6F793002ACB22E859
02CC928A9C7A7A70ADFD5E29FFD2359060075E2D8EAA5C522B9EECE82CAB6979C905B9DF2FA7
09CED81824F2CB1B1350A4ECDCF856AA370430D30FE7C78FB720379BCF93D41363858D198D63
95BD55BC8FCDF17696B01D0DB89E35B7AC524D8C1D62F5537043D850AF5F2E656956D13E6BCC
934699AEC1E8D5645EDA569024E8E7B087E5E5FBE39EE70C754511BA125A69E055280D8409D2
DCDB63DAB844A90C15B200CED8032696ADB27FEF7607BA47C0E485559DACB80DDF94AE111589
D3319694BBB5C6D3D4886EBF809AE041FAB3C2093768F25CFBDA1BC5F973B9973AEA2FFC8949
D1410A6FF609D06415BB3D6E12437C3285AE19C567D6FEFC0E06118EFDC415FCB3B101F07A31
A2EC59AA3075827D5F0B648E73D48C3E9C77F599A0C1B9EB4E77C2F143400885835A48E83ADD
8F54F66899A11DA0A87D83DB4D947C20A38C574D81B8DD119BD48E4D0165260AE1B44D562B08
34F52F3CC97932DB28707203A5372A10E3EF250A8D2493DBC1AB71BBA156BDD1738847DD3915
C64B9D374475D9163CC168BF5F66371FBEA8C2B4F510DF86DF37346C4CA11863574979DFFF7B
589C5CF6D50B6982B990F981949E388060E929F2EA7C57A6E96EFDD845CE8FA8F7B7EAA3F9F2
6DF50D46D3E2EBE4F0D84FB1B715E261A049CE4D462D51DDF9A90131A3AEDE6B08F3E0D6BF3B
6B209284014161709CFDD54F680D0B7B17D23ACA343392CB3828716A9D800F3BBF0050068AF3
FDC3812C18E22C404DD53A2C7D12ED8D5A5368FC9818A5546D886EB0B1097C0D6DC7DE5AE05C
DE9C414A51AEE324980944AA22FA6315D05F7606CA6425EEA0635FCB2EBB95DF15C061620724
FD4F5C1D27F89EA86A67E9C182362A4D1A421ADB654FF23F366829E338B082F00E29C2C1D1DD
570B552BB02B0574E9C929BB77090B408BF9DA0A1289A8213BE8A9BEF2E007940ABE60833940
794F21E3F9C5CEB8AAF47627566762CC4F2D50C50A41677B1C31AA2D9A7D428AA6F1CC05256E
B79CA373B0E46064AC9004A4FAB7CFFD63AB1906FE7081BC3320E0657D7CB4136A70A5113331
36759707AEA6DBC64E087A00EA5FD5F92AE49CCA89DCF7A18A0A88BF81A96328407C6DC96DF4
7552A30D35F280D2A7032818A34A03C3B1F0A6E243183C6EDACAB695BC6F9E0A60D708A0CF61
ECE99F868C6FA22D507EFD2300A0350BF382DA6171CF320025DA665A76D2D6F4A7E965408D74
EBEC96022926FB9FE000239AAAB0A28F5C3A6153E0933BB58DE26E197D9B2D34CAD205627463
97C28E78BC18014F5262CA67B6D5E12A7C6165E9CF19F9891C204B8711799DBD438B427ABED0
C7D70D82AFF6CAE2B7A8A36447B1819C886C57601AEF7B6B96310FFF5C191EB894874819D9BC
40D0138CA569C1BDDA3C0A905B0618250302B842CBA78F3F0CD080F68975D8DE31F67942ED0C
E07D3F659B260C9C3392229D2C74E7A3C2E09C2BB74D5A29FC8AEFA1CD01417C81E64BF1AE8A
9BF5F452D1FB815244ACBAD65C627EA4460B5398B5E2EDC20327AF16BEE0E54731F16F1C696D
6051FC604CFFFF6315D065AC4C40FFF3AC68BBB71BFE06DDB15266A5894566193323827AA745
E24309CBD3613D840A37F427F8F255F6B9F479CFC4DCF5432E64B416325BE09DF103D21CF1E8
4FBB91C0491F2E78F977D7A5F2DFA64CA661F19B7D931F103651263C16E6FA72D592FEB27BEB
9C325983E52067BE5A498D30861596FC1511C4BB40B4BAC5B20CAA8343FE7FF37AF0C9406806
D61CEA0BE61F0DF4278898C9D0B523F5A073AAE17AF731D1B8A214A42E7C0C4E17A34A584CA7
C0431B42F4CF2CB7D5746E5EE9D1B91073AA77F404346FF0006148DC131AEA44A8AE61037C74
C207CD3B85276914A1E39A7D32F73EEAE059B18F215544D07694EA328C33B522E8A05BCF8907
EBABB0171F4B2A01C52DF56D423F2B4F361DF3EB23802F6D7E117284A37027C717453B3E94A8
E9903902ED366C69971D24CF2920FEB036C7941CA3DE022458C8A3B08681E43CD6E944DDB778
D8B3F6DA67F5616A976AC36F9DE1DDFF185820A3565E5532EF794010B1A0F3C511689A70DADC
68F783D074328A3270BFA0A2263EC01DC8F693D3E378D300BC1B197AEA0877231B123904B6BE
3AC0FABE9FD834DB6D51FBCE601532074B1E093518A98040E0A86569E24C799AF6205B46E76A
E4F90D4C532DAD4AD81A9121D31ADCB53CA398CA53743892FCC366A448D1FC45B349BADDD350
AD9ABA4FBA1EECAEB6F03CC71D19FC24DEFF93FA93BF2455CE441DBA80F54CA4056C9436CAA5
9B5DDE787FE87D3BCEED52ADA40BD3A373B2CF84AD49421826A19EE714696F9066AD0F9572F5
475B0FC0029437E1F9E3D147DE897894576FF15700EF97FE22AD622767DB04E84EAF5B5CAE1E
20E5D20F046CEE7D806E0078A0B229B47E237F650C5F00A4F1FD5B438B6EAEDC1B31BA001A53
4E76B943BC17F70EC59B623198E53F60B6F038BD6D7CFDFB686A2B45C0EA4134D0A2A9E4DDE2
354398A552C9A433BC36B0BCB5B27507A926FC4EAA42B00E8834E96D6D91A74AC89A3B2428DB
72DBB1AD53E9F59A26DF69F0CB82CEE002EA871825C7C102C134CADB011FADC1CC59BB9BB0A5
C215312A9DDA66731A8E5A53003D30BE2DBD937A0BD607797C684DC72762EC0DCC993BFAEA33
F6EF1F7D0831BA92664950CBD5091FCC70BEA4DE2C9E7DC436CB594C785A89D6932FEEAE1C28
594D781ABE7AB6C2536462B287E228F44CF1C8092779DE55D2C994880A14299E7CC65F30EB95
8E6EC66C99E3FB0666B926268D186D2AC8E7975AA33100208ACF80442641D1BB64042AED23AA
307F3E5BD387761CA3BBAD1CEC774BA6106DDF804C9DE7A0BB3AE3032E3FD7205C84866817F4
5C43DBDBCAFF2045ED987767C9C23709917BF8A3778389E0DAFD82A1EEC4B5F893A086031086
F165202C7689F8385D5AFB9F9049483391A0583CC1D2880CD5D4F20A40A38706FC9F41420CFD
3EA5CD5C9F580E0AE7B148D76CAD71AC647939E977E5611CC1411686303A665860E9383862FB
92E5781FFDDF3E5E0E30BFA3F7B4B55B9E576C7264F81AC52B6061832558023EC54AE9F05C1D
5659C2B861284356CA9C41D289B4E3263F75B427F951BC4DECFB77890173306D831D77C131E5
E6610EC81C9448F0CD53A842C2812D21AFDE929A220D27B8BDE86A4C1B8DFD4F11FA3E9FF312
48166CB6333E7E8FC7C5CC71E225E98F722EE58F1EA436C5878DCC75A416B4B83EF8A6E03A26
13BB4EE86663B84892F6EA88B2B9CC716F4E3FFEC40F664B3B0E7050559E480525B215D457EE
FDC859F34D72521D5F9A5045393808843572A50357FADC245E2DDDD74A053E5BDB870E9AE1C4
7CC6F5287188F39BFA023101A9C5517194FB2227D23CCD4E396A0BCBB2E383A05A0830D7B693
190B98DC7A2E6464DA0578075BED41840552250928F855C0176CBF3E0D2ED72BB78A1FBBF823
5B934F6323285ED35B69A950EF98A857A2FF08A565DC3A85AF41638D44314D931F934AC31597
9B1280B1CC462E2B0529BA31CA560AE97BEDDDFBEF79AECF36A86E2F0E4C4BCBC0FBA99E2538
C9A657C51BA207F3E201483E9089A842A21475E7D88AADB7AA69207C48B7F3923EC2355BB66E
089A5EE776E61B094E7B0113D70B3012BA610D66B7CE5BA0CCABC945A9CD020FAB45059EC41C
5F1AA90AE0D939A8E32A7DFD18AA91CF53DBB9AE0D526DCBDA9530E7F2F426B76A59A556DDDB
32064B264D53E9CB439299E1C43A86844FFF10D60F31B0984D27304B596EEBD36A4112A278B3
09635A6A6CFE13F14B16527FE728D45E9BBA1BC3B639F47A842CC6637A4DD62EAA73E067D230
EF3002849A6725EB6E3669FBC3F875080D49D1EEF03E73EDF82382F33D5D3396D1641AF25708
268F0A820F6291CCD220FED1AC44A49822ED52F38B8E5A49237028890A2B603B56C62D839F51
A9104A51CEE9C2F6BCD41DBF4AB7D4A5663D2FA5A610F9FD24401110E0CE0C6CD61C6A7B5B05
686C9B36593E05EBAE9439C0469936DB95C8232C508F43E6362D0BEA732F41FC9060694382A8
25828E0F151F77209098B7A04C18B7F9C0998A9A4C08B2AD5C7FBC7EF816BF99C8D4D0EBE16F
0C06E55F350E341A93B9B9B1780B2FDE95D80D23C6EBCF62D9E73D7C60F786A226D2121CE8BB
252C81B2840CDC45AAB6AA1F72823668E3E286170531C37242A3248F1E55B6C09FEDF08F440A
A5773A63567B82654582619D4C79B5C50B4BF07E028B0105E4AF5EAB0131A6C7BA65F50B148E
BC990415D76651B54F05F24A0CE5D8C8C1B44E0FA41FF6B09D2EA4C5AE5CD74668754A4EB548
AB3210A4BFB058EA75C54F3983A8DD5B6DCF41A6D63D4FD011A0BD37C02C8F1D53FE2C59FF67
FB256912335307C5483ABF4DD329E8C25E46AEEBCDF1A730132A28683B27F3DC1D67BA87EB51
F254DE4B463EE992BAB58A49165E6E84FAB37DFE5CF9152EDFAEC7354641D6C757464FEC1CD2
39E7B5DCFA09D0321D74D4C623F03D839B697B870BF5B996E73AE594FC0A76B49DFB0C49B912
DB6F2B48593115111CA11E078B2C42E08B9D4C69A6C06E58E0A754C3089875347BD42B03D156
925222A89B7E6AB523228BEBC753607190C897557ECA938FEB507F0E2557DFD3811DEACF5302
5BEC26AFB2ABDDB9436BB3E938D672EA83C0F15E98E558F44425F2230380107893D5853CB59B
F17DACAB0D6AD8E0834DBE9BC00F3F917980DBD463482121E447F8F5469AE72B1C982FAA0D7B
6ABC85F9A6D3D5F026C4256BC5C002A9ECEF640A91953D47DA63D7CA893CCD71A96733D35261
855E9645CA0931CAA80DB53F30EC890F095033B756387E370CFD777DCC3D9FD1C21430A07A06
C880E65700D548ADE2E6AF178F768518D0F597DAF982B4B42CE98540668C5D0D816687CA36BC
18AE6DDCEE41A375A50AF2BE6FD710206209ABBAE04376E4206D4B007E67DD250C30FBEB4EEE
9D7B3C217273D46B7015746EEE1E03DB6885592D892047C150A4A679B802B3B221DE7B11D15F
EB67193CF0447A38BAE84D5C641901E858B0F260FE44FE8DF501CC46071CA37A4163FFB90F05
91019E57686DE9CEC44CD2234F3073DED4B17B6111EB9F9E729D482FB175C2B0BBF04FB312E5
65CB6C53CE451EA499C501F7196FA6DB63C43F93C81CDD2D635392F0D15BF6EA16BE081F6994
FD8B199DCC4BFEDF6885ADD7BE120A534C0740895161C768139A709D27DF1CD12259DB6BE88C
7E512FB89E5B62B38E3B3467E72759CD4DD585F91552FDD974FC030D31431838044CE8C33DEC
AAEED5C1CB61B263AEF679B9BE687DD4C5C7BF4E37DFCCE385FAC2E49AED1A7D7EEEE3E37863
5F01CB00E0450D8F850F48ED344CFD6A51F7A810715FEF6645E3CAAE932BAF3B9923F35DE37F
E5850F5FACF2060BD1B67ABF421F5416104E98767459CB07856414575F31DEBEDEE9800B93FB
E1D43A16A267136149212FF26ADB6915C33E5B457A16FA5181B10E78AB9D57F7536CB8440C9E
3461807CF056161AC25A6109545C3073EAA5F5F58368D25F3205838367151A04494EE325A1CC
22352956C569FADEE6EA017CD8E71424F2A4E1FEB2A71863F2BF56D8BCCD070B3891040DEBF8
A5B16513DF82B921520F66CD7717C31FA8A314DE39A495677895435487F18DC207C3870A9504
7D93132EEAB90004754CE5C9A60E85E6EBDF999F5DF6FD1A9BFA71828E06E92C145F72FCF4F2
5829A4C50830ED4CB1851B180591EA960C051EE615A55FE9CC4E349F9A7726B0EDEA2EB6C1D8
A61CF886E09B21271A86B6C71CFBEA09BC11B62A2573F71E10E65A4391D7D7B54718F6C855A3
A738243B4BECD0392F5E90ED3D7E1FCE6BD1A28F50DBBE7BD3EB61CA91D024BD64EB94536DC1
37C8EB969D8685020EA4B40DB9E8A78FD5E371D378440FDCCD1362D764D09F280963FC37691F
06AE1CCBBED8AECE94F19EEAD330B64A9DCE19A5D4B42D42423A047D00351537CE608D3EA627
753A267A7178E90CB2736BEAB87FFF8156E2AD175DEEA043C7AE5495F926C6380FA3D7138DFB
AE5364BACBCF5F6B170BBECB76B865182FF34D3D79BAFA661597FD8B5E4648935AECD44140F2
A2B93958F22378BB1D660A8E80D263E94456DA8CE9EC130CC3DE303B7EF887297E3F18BEC1D6
0B84F4828B5D53CFEA860E95A27CE06CD70DCB574CF9B5F6E5B4F69D39B7022221D2AFEA45FE
BBE7927FE7A613F0898889A7FF3CF01826F20350D25D15A9BEB319D76142E3A7A473AB41AAEB
3758A8C162B257E0835072F610B0569AFFD45CA9EFB379A0B41FEE8103336C8F5C30C450FF6D
CCBAF20BD1A84B2DEDDB12705E9F27CFFEE31B8772CDAD89BEBBE2CEF932CE43EB42A7379520
181ACA00E52A9BFF67179184F4C3F0EA0BFCF26FB95E1CBE05A19A2777AAF1A331D9FE0A1073
5678B0E71E0C92593CFCFC420AD96845206E82332953BC81077D3927CA1ABF76B9B41C3F1E76
76D0B82F0694F78236C238C235F8AD2B723D50A771AC1F6119742C1E4E77391D468CBF45CE1F
0F1B0A60283ED8A5BE1106E4A2C404BAFC1C6BF5D81324E38F0B15DFAE5C4B26784D433DEE17
639533891274D4F31DE8C83AF5F9FF80B5B5B7803F94B58C8522D1BA3CA00996562A406BEA79
6CAD321EDB13BCC4C9B07D3A62F02C57F2FB03E32249B9E654C446CE761788A7443D210E08B0
75DC15DB99CE994655E029A97186434057C56FB3179BB8C6B2412678E3154B3E47939DC1BD2A
07D141CDC7EEC0474A5601A745DF3CEA3CCDF5F7DF0F2DDB474CB425DCECCB99D8747B606790
2F4678C89711327602C75C8456ED061ACEA77E6EDE95F2E6487CAE4AF685E34298918DC90748
45501DAAF3489002E447D291B1D9B2E9DB2BC4764FE73FCDCC48DC73729D89DF5DFA0AF07CF1
4BBF732E53D1CB1B49A096D32E229F7221676EC8B835C75CDB7E793C262DDFAE27F2A7E67735
5B03C67BF4A02FBBEAFD847230C083DF146E63AE07C77F39479FC535428377D694C576DDF245
5D2F51474C4C34996AD362F039E826C23D2D0F2D00DA4ECBDE0CCBE8A87B9E57DFB36F6F670A
38D3F4EFCAA8805C78986A156CC1AB286C6BEA5C4C064AC2964F77DA3E97E424F99B6CC4AA8D
D2295BBE5BFFB12E591896AA9D0266D6C453FF737FEB325EA9D96B5A5BD03FCBB3AE8755237C
4B6E93529F166D13D012CD414A1FFAE34717410631EF6AF9C17112CEFA73B97B457826975ADE
1CBFE93B9B47134CA822203C90B6494EFE140FB2BD4B6E5067568C68935006B04EB1DA929D95
240EF1D988AB5888038CFA899E4570B50F66BDAE588E549C476F84D3DF3DDA6E1226C639FBA5
7E6C6161F4D915E06F0A53CBA38280509CD9699D08105303367C76C5CF04ED3F58A8BA884E39
161ADFF7B76993190552D99051D1328EFC719D8CE4401C0B9ACA7BAFC5BB6EFEC38F020FC6BF
8680AF305AF94DA88C2EA26E652DC4F75912B5EAC4491390103CCB587E9466A0E382FF21168B
0DEA0D6237390689A99D61665C1A4A200602D648448C2DE0A33B860E57FC135326663641DB60
5F5134C29FD3C22789B6A258699AC809F1C8E7C97F9B1ABF1816621A1009501068B371F3D3E7
E5B0A9D330FFF04519258DFE29A8FF9658DC77FEC340A1DF93A1BFCC9FA6B7C77D9519FF639F
52467D28B4FCD6FE47EC5D45333D1CFE3FA75CF5DE47AD51CAAB6C8D3DDA30FFE0DA0901E5F0
2871E9706C3258680E1ECC5E9CF3F3FD0224D7D3BF6E50938A2E4A8284A215C4F9A50A01E152
34F71F5C8F219C40BACB3B229381BD2FBC9D32313FC9D5ACBB60ED33AC3CF3D935CA4AE2592F
DDFF425B63048B57C7A3A53A366083F39BB53E92C9A4A916BF4A5C1CDBE65539A9942563F666
FB6E870AD58801AB853675F7BA1440C0C930ED3CA6715F2F94AAC9971C12CA6AAAF9701D3CFA
1995EDB87FC190597D26A963AF6BD8032BFB806E7BA599DE40F3E91026A722D7B3BE1E2E52CC
756237F32D40AADA832DE7B4E8FBE18F7C5DB676A63318B0F8DBBFDA568B7E8428E0F3222FD4
0477EEF455C6BE45CA5EE5C2062F2684974F4BF726393DBA77CCC2731DEDD7140F401FC93992
8FA6EBA7E4972BCC8C7BEB78A43A12903B582EC5A2E57CD77B470334FA8AC6523172EA763DD9
7BA273340478CF41B57EDDA52F2123A1E0B13C84A300FB8F85C379FA5357109D25C960A38758
595E8972DC5262F7CD668A26392E24D0B9855D76831CCBC040F53E3E71CA57A867BEEA4AFE99
5CA8C34C54EA27FE78B4D2E26EC4B591234E08FB4527BF69C53369CEDCCBC4B44A56E3E5E8EB
8718523D69E6D1B07B89868B15F8C8849486E368383D379655CF4A7EE675FB1244D6777D1096
6B2E6B17FCDCC5381B452BB3C5387878F86B2CA24F5FBB8ED1E41ECEDC7A9C8C3B9003D8061D
9F7AC932BAB57411B12F35DBE5A21BB757A027F91C5628B701828E994A8693D501B87F6EC7CF
4FC7BC58CB0F8BAA8029748E89A26B0558E21B9CAFF9C701472684E3FD4F8585839236823D24
106D54063AAB8E4FF54243B7444B8CD15C2A1992DFD2AECC9CC734EE6936540393E6142353F4
BEDA06BC29CEC75408AFB8F53E70331BA58FC58A18050C90B59A50D3BA0482C8357D813383E3
6063C839D51B6A2F57E3B434723F87F47E4086DF04EAF386C233C8A174F05B43754EA2B24936
D400BF1B799CAE52FD46E89A5D9CCFB4D22F56D5B557775C5EC43B5775CDE7958AA3F6FD983B
11331C3DE214BFF0ED73AD05EDB29DB36E36D5F908E0B97C28AE8D502651E8D2D0F1E2F125E3
E988D79532D85E64460B96013D52D50AEED20F44B7C68E2A97A0EA13F953754055411580689B
87A067AC0385865AC79BC3720E90BFB97F124D74870FFA0CF4210EABF7A152B18B5A708ABA74
AC0885BF9AA8E8DA60363C365678C9D0A05F550E674AE975DBA93B220193188DA670E278A560
14C6C157BE2F0CC7533A09040DF699187DFDC0F450237D432648ACA2F42B582B29811557455F
207EAA4912BC92B24C2EE8902480BB6B43B4E811F9F7F2635304F03245DCF626579D13A13ACA
CF048FB50C8B91E362FD8FF79D5800FF2161E35BF2FF9E37999C1823C1F109B6B0B86D51E2D8
FE768CF36E1909880A1E80A89633FB5DD814237DF9E458F1EC7BA5EF2900E11EA6127084F22C
AEB46AF971A18DEC6E8755BDF35DFAD16123955D654690CD3CD9993C2B0DB8D53CCDAEC1953D
C94A2F6731694E30A7E6A99849CAD2EF2E0107A0C5C1ED42246775F50E1183C7A3D6CF7880A0
7144BE8158E7ADFE9E3D3D1EF5A44CE98134A4EED8429BB79C190B9D8BAD43ECE197A4C07DF9
82550C687487606CCBE3E961279930D56771291C9CB0FDC3C7FE42FCE72FA33F6029D3E1BF3F
D60C291B6E21B8382141964AE8D3A8AD491724B761096D07B425304F8D5485A42AA08F3FB748
03AA5D65894EACDEEB51447C1F42102B4FE75A5D64569A9E31A06D9BC5E670EAE2E57157DDA5
BB7798D5ECF06692773C85278DE94C934A93C365896A71EF4E1F71724FFB01FA8210C2F5F963
55F8311E118A5BA1F062AB5E3ED6D2168D85CBA9156859B4FC637FB7D0C2985C1A808A5118B7
9B1C130687131DD8B782EE38A5115B56641EE6D244C004DD7C1026D26B432712FE680678D9C0
316E4042D675B38EE87B59B91A553429E90C49CF863C702E16BA1ABB1EF52688AB42A8ABAC9C
77BDA4A6A864E4C568BFA8516835E009BDFF6731B619CD39C4390294617263FABC25020DEB94
61085861B0754E358608B565F5614BCDDB1E8EFB0F5F4421CA8A77F174BBA774F72BCD784B7E
E7302489425F2F43535C8E847F298B68C6B3EA5CFC594A397BB7825AF0F7322085B40E7C4FCD
B4B85DD2082F846AEB89378E6058355BBB53DA14294949201521AF0EB48B7852AD4876F00971
4287A9BF56BBCBB7EBBAB821AB26A9468C03CFA3523E3DE5A253CAA25B39A7FCD0F5A1076CBA
177705FAC65D777E75BC2EB610F3E3BDEBFD96B64D04824FFCA7F32116396A1A6BBF1BD0EC71
FB436FA51648EF9F83E03E4F16A1F43F432A4A7098381348F5FF771F5A7CFD2FEB9F7CF87A58
0DDA0A0A55D2B8CDC11A5D5FFDB6B7A7F7557AC8279B9467E26918CFD06172D0CEF230BCEABA
ACB3FC8BDAAC35C5993A0DE4AB4138F336941C8C50154281C98200D2675A1637684DA4E5EA44
FBF9DADA52A75A1BB83D4CD3EF065E3DA032D3AC4FE6ECA73F454A84EBCBDD3886C78D6BB6E9
546BAD4E08A6685685C19384D9E611ECAD1636A8C8071B70DBD5164011042E1909D5759943CD
A283093173E7185AC8514E7B2F4E7A3CAC71BA25614F7D16CA1909266900AB5F629F47E65437
9DAC0BE28C9DD9AD66A4CDB2BBF69144C04782AEE2E8053C6002DC04C11CBC8D3E1F88503A8A
803FE2B2B87F0826C18782C60CE682E731FE372EBF044F3BBABAF324E8B74DB3EDEC9F55A174
05978C502DFDAC52AFE1E8DAD35209187740DEC6E713180E5CE04BFB2DF120BDF439B34BEE8C
B758D8103D561ECCEBDE89A6EB1EE8CB9A1CF20B85D11121E84C9C84DF1552BC224A43D06FFF
23314E57C6FD8179B8D49BF04C550005853F20C85A441D6843C773259BC871A776C865B8D29C
C645A0E4C9DD7D240F14DF073B540C531C8A1B36431801EE47E7C852DBCF8D66FBBE72408A11
20E4691481B5666C4009146259128B029DA4CEA4B9B026E9FC660B2A078F78093FE3BCFF5564
38BA7B12957CB5C8337A536F268798CC9E5B95221210C0F832EFEB356A036E4CA8900AC8B589
3965EA506C91CAAC7581156CF9E4B56C578F0B8DFE45E6B39BB26A6AF01671E99542023E0824
4F15C40A5959D963324BBC3A2646079A277BB42DEA74F6DA46364088AEB193C26D7B17A95459
4B79A0EDA0DB9390AB741B377B2488FB4C09C2CC69B8618159E582807B46D86904DB870EAE1C
863B87DABB222422204E54E5D0FD884CD7D3E7A648ACBC6D1F85C474201E8376DD114DB72ECD
405584B9BFA9B3B50E24DD6E7F850E0078AFBC04A7112E37E2D72073E19D8406FCFE2F4BEF61
F68E9B39D5F6840FC7F8846EE8BAF79C170966D0ED8891D5F253899B452C760445B3806BEF27
2C810C0BF2BB9917A3318135F4D32EC33A450ACB3DE82DB660AAAD7C7543E34158A2ACDDC907
B95C74A28AF9F471D50CC7D0118711D47BAAD310E0F4C34BC0F967008E946C6EBA2BC5171BFA
8B38CCBC5C0D62AA0D2C4DCB54B9AE5FB152A745425632928BF6F7583E95CC9D2D3AA10E5CDD
390B488874846A6D5858E69D335899B13021C0DB59F676B059210437DA4BDAAD1C0EDCEA795C
94E090C7917A2D1395DFB33E3BA4530DFE1C6B9F345247D6B3B08774DE6FD559305A34A93A90
6736939B75102F5AD0DA195C5AE0A079F85B34062B47299B7AB763A8C16AFE84F53628CBCB10
1872A7F637176F0B06A64693F45C097F94D2C3A579D8EB99C12F79B7EC07A996B12D0CBDC93F
30C1CA2A259AE003B1C5B939EFA24C45924632603A33489B0DBACFE7BFD3342E9F0D2D467E27
DCE47876C55CA60723E6C3C9383697D9420B1F6CDBE2EAFD89ACC8B7E1794FB95D07BE835F62
04057A71872BC8ADB5988F3D895C390378C128B7110A260537D2A5C3ECE1BB536C0871C818B6
D955A1960677946AF18C0B46FA90C4D96C43F47545B56E10A8F3A35DE20DD0D62EDB70A743C8
ED6097321B947B9221BCAE7DA04308E17A4B5779DB5BFD3F15D22A225A9D6BDDA2DDEBBC593D
D2E5FC65A73859E2A30238F00EC7A15746ABC46A438EF175D2C5D76D987A99F4D542A285B80D
0199EDEDEA8AB67D13918EB4A909CE5B38495227F6DCACCDD437AFFB0EB24295021A6BC9A45B
A5F8D1F567B9BF2001FDD8322CB47618F043F6CAC77BA1CE0CFC4B3E4DE4164044028A29B3BA
C4FE8B31F9BA16512A37235A1A1DB2346DCEA8B92031BABB958E8FAE3243DA314AD48E5F1258
8442F092F23D4C5156510C3E025809BBD6C46154187B3551F16BE2F83DB7165776AAAF38974A
639EEA9899624EC7BC1BF25ECA6BCA249259EF0A7157FE2D7C55A65C0E4413AD6A8B36CADE00
E7EBBE42254A9B8689519D860EEE258063E499DA6FFFC1B0D6FABAEDC05F155D00BB363158CD
5B9874267B778CE484197A7EDAFB30EC2041071203545CA57691FF8845F915418BE105FE5B40
FC032A5B106F7D503C381A7324A643D048F9B86126A33CD733128E8135A07D3747295C992508
531F56924908494DAC560D0F28FE82736F8C65D0EFFE116686ADDCB6B144A2853FBF30F5EEFC
BEAB1011A84B537823E3F1D82611028DAC4568242432D4EF7A13CD6F5D7A41A888B3971C82E9
FC47580BEF2D76B56261F6B5CC70F5E55A5C94850ECD83689C2198A0677B8E14A24D8F0B604B
18A704E83964FD57B4A68DF2573C7DFB35FCE2E4D1D7357A7B7E6DD311BC8A4270CE39EDAC83
E73D960574D36CDF4AEEB78F4BD909BA9175D5FEA1A7DFFA48EA9F134E571E633DFE853F3B96
CFE8701BD9EDE0D179DD7AB451FF61732819576C63D1639E0E63BD8A604137975822C3DE4654
0662FA89784FB5A9DE3C27292245D79F94A3F140787683925376EE641334A69D0AE3B1DC1C85
1A4A8B139688D6C0068AA13B114469C697D45378FE842F2CCDD0BC05A556BEC06C56C2AFDF5D
8B8D9B74226371A70CD387A52AD160E86F66C15526566C74F1B4546ECE13FE0E80BEB4EA4F30
C2205043CBA16E067A3363F2F0A2D2827B7C16F5B0404D68989095555CD0C207611D9433CA1D
6900673557F3E088EF1B2E3C9ABD33428D986835F2E47D0BEDB50CF585D0781BE0A0AC98B94C
14F4E749DA408D9AA3D835AA6FCDFCF3DF6ADB8215A92310959BCA87D005810D51040A989A38
F881660DC175A6D4BA010AC170EA67AD78D56220254A575F87A178D5E16F313CCC1708B0B088
FACB7A6D5509E43D629DA3354D56479ED8573B7B8F76594872E6018EDB0979CFEE764BB365E3
193BBF8FE9A6B901884B0DCE4E955764C19755B4DC8D4E1C1717C3BF548BDAC574211D197B30
D21FF27529149D45DBB7EFEE20E907758AB2CF8FD58F63A9E580C2AA44382DB122E1A3D472F8
72D96E77A4CC51185D868D8FBEB91087587C36C9DE3F1147A5AD8BF4AC2EF7A4DECEA0C65A0C
4E8411FFEEF9BF039A07AC7798541C887B29B185BA22206AE35B829885CABC8AE087EF1BCA28
8C0BCA36BA03511A3F7C480446F4D45367D87AE71ABBC900D839EBAE7205B1F883DD5E6A0E7F
AEA0C2E708FD2D60C41D7F5D078D4D78C05E70433E7B14C0A61A267F2FE6B4445E87F7EEF042
E89E292FC8B32EE5EB93E275E8909E6615748C70DE3976B38D4E5807C65C346A737D84EE243A
666ABC87166B738C19B79163B8DB2A43E36D114C8AACEC564137E20B33997B90D13DEC25F246
50B1309AF65E3B5F10E02E0E6F763BAE14F0D1B91DA5B094FE33242BCA4C450E61AF25CFA6F2
531F6EA656697DAD9B1E17E810053155159C29E45A7B1C7184552F9E3F4C0B69F719D900C32F
584284297D06403864E056F4EBB5E18345A72C32F2CAEB57C68A5FE9DD1266A219EE21D0B405
CCC6F62BCEEE3B10DDAAD746D088CC28BC736B064874A222998AFCBA124C47014AA41A42ECDE
0D9672D801A8C66F08FED0C65574E0BDEE7D0C74769AAE62928CC27CCDC360D5F96193536822
9D608BC51A1333C5442D687EA3CBDA00A21EE6A0115CCF3B9CD79D174738D53D3A54626BFD4B
92848519634F710D3E3732D2D983E438264ABD715DDA96605EC74938B6736E3B1CFD3C0CF162
A884F4BA2C14777D5D55B551F10C479CE06B09FDC16A63156E372191D16EE5D794469103F5EC
1E26CA8C91C68FFA6DE5B44D76574BED27A56FFF9CFD4ACFD7A7968156F9F88654D8AB915063
46AB138C61DFDBC5C6A6C23F9E54F5292AA21B71768D73F482D0D0E1699A4627745DF4C0D1B9
76C40A2C1A359DA0A073CCBA1000F0DDA262DB04258C09947C8CA57CCA2C681AA19025A17DC9
96477E863527E5E384223EB94B38BB2C58D37E315FF3C013A1279099E13C98842CDAD48F5AF7
31415241F35F1198A380018CEA874272EC5F9871B05F3BF461F76C58D97D8588FC742E286277
0349A84A0EAD715B9FE4BB8F2F4230750A21DF1611D118D58F90FA121DA68E94398DF291201C
6AA3072E5CAD506B47F2253F71ABD0145BF47B74D21E2BE61EA18FC0B11DA87626AE93E3469B
01038309E02D0F2C2EAF8E741CFFEF1C539915BAB56721D1E285C90C7566D4757E858AE1D2BD
CB5C78A66E63EFE118B6FF4EA8A2BC0B7501983D21539F3060CAE99C55633E363D08AC6591D8
7CAE51E6C370FB1A2207338758654AB6B7E65B71B818AE4E949193ECF9D3421D29A2DE64DFF3
E65F0A40774BE88A0981E9DCE4D7C39D9C48DD4C01EA75E81305F3B26504B6957992CA35A5BC
4B8C3583038A92452DAD8D3DA67C1E79B0B60DD82FB04A70DDFF411503F9319EB7CF4097FF86
35B436E74899E7951366B18F33F20FD40CBA494E0E5EA1B25FF5270B33BB2D62695A3A237A93
CF45395A0EDF47CDBEA2EA8C1FC027D8537D132BB875706F37F0E834E563928D2462C04DDCE3
31A70E643B2D18CB2BFE59F1B0F85F39AEB15C699D05CF7EAB0F4B3EE4BD5ED2D1068A2EAB66
570070FBCC353E96BC4F42D1DFB4E5810C7D922B094BD112732342AE92BF07D471B75C38CC03
812F2B2360EDF2FEF91E19126C6A2E63982C6D1C4F262C185C46FD0BF67ACC0925A861721C25
9E2872ECFDA48B63A00006E40408E164CD03349392B0E2FF4ECB952179851C8535385F3CAF60
0D270EC425B38AAFE0B111F876DF18E0B9B4C22370ACA649EE7DFA3F19D643304D4CB755423D
A29C6DEAC03D4B622F8F15CAE05A3F9109AFA17E918A4AF6CA45E0EB6A291CA1B1C16BA0CEBA
1601AD25CB440253512D9AAF708FDF0FD8DABF40D66A8FDBD0F56F2BACF71B4BA8D4F9734545
C09A9AA366D9D0734586064E09F44EB3D6D5F12F114FEDFC6422D9308EF7327884C772C7A3AA
4D1E86CAADF5410EE3DF4F7E63257C24D24D9C55821D5DB8DBEBAA7B5699C113B4D8850E8A75
CD41BB11F25661F1931E2A6685363DC85786344E81F5B6603E0F61D2FEE4D4C8636199C8D318
EFAA97D1E4496398A66BF87113858CD93E3EE1511C893761A4B5C4F27B6E0C2E80CC7D656333
B553895E9DE8D52FF9D0F06FE954CC39EE920BEDBF3F597586F6F01B6F9B106B0B50E628CBAB
24D8131F68F95C50B0AAE4D2E0FE96A5AEED0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark


%%EndProcSet
%%BeginProcSet: sfbx1000.pfb 0 0
%!FontType1-1.0: SFBX1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecbx1000, tcbx1000, labx1000, lbbx1000, lcbx1000, rxbx1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFBX1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/UniqueID 5124584 def
/FontBBox{-229 -316 1737 939}readonly def
currentdict end
currentfile eexec

D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B1169C468645FE4
ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CBCC8C21885DD61AF8A523AA67
7EAEDDFA51A1F9B1885EEE0456196D634E04EF89F17499DAD982502ACC349B9EEAAE4A71A73D
1147318C60A8BAC10510DE90D8D3F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8
E1D90287A083E00CEF25195F68A2A98170E4875AA1B1ED6A435C02C357D527BF5BAE9F3163F8
850F4267F16F7320BDD6979C2F8C665632114CE1D7FCD000F5FBD3E05848929A6E4797361D30
5E2B3EF0D3289006D6D4A92B4915A07861EFFD2EAD6D0E44D7F2BC500393AB5D4E20487C48DB
19B78C49FB68EBB7ECED723428C77D753A22B7D69614D9508C82BA58E2D874CC9F68A68F2A40
B655CEC8A6308B67DD6ABE39F97FAD7503DA383F4C166B7EAF7A3ED4BB7FC5E6B5D2832CD0A6
587B17539297FED807CAED127D2F0B4D1835845D8E3FA03981EE7410C5EDBF3C000051861E7C
98A1CD97D8CFEF6B875885BFF5832E8FCD91B4780EBE0E908E59EF5D3FA8CC9D67787EB99FF5
335E365F2B9EEE281ACC85039C952D301529C2A7B52B3A174115FDBB2268D98A22B25EAAC4F5
7C64C0C1DBC34B0FE96C1D9DAC2B7FF6749250D8502C5C283B8CE334C9E727CD19A3AB4FF6D3
339E7E9C3F43BAD7A78D4C7113CD45530995E6A70147ED0D3BE8A22B346818368B4AA3AB2ECE
BDF089D4134F08780B4CE5F1D96EA7AF6FC84DD5FDF8C9EB273059C87A568B0E6B0D41B1745D
6DB55C621F115E7797466B74ECA431199CB2C9D974DB020DE52EB9C39B2CE83FEEE98D229076
8C6B6237B150DFDDCB233858DB62479384302233B6472BCE3E34BAAE8F821E9C4B6ACF55A88D
CA7FB297973FA132DA117DBA249E9555E8D93D54712FDB8107D78EC5FB3670F0C73194913DE1
94E9827FC5885666F81538768DC8AB9AB2DC5D8F87F467F5383063C18A4BC658B8A8BF0F5572
096DABE6377DA1F5B665AD553A520F2666DD0DD11F2CBFB23C53974DFBF98AD666010011512F
3CB87C93AEFD7DC1B4E461C5073A602FD9CC572C440926B4970C187D512DAD1E9EA4A68F975E
054713EBB5F86D68A4C580AB1DBB17640D5611AE1C2655778CCEC0979DE0BD21FEA49511EE4F
0FA5EBB3586AEF5F402B63DBFF55167F9D0FA24C0FFE2289A143D4896F221A2E8AB1C3689AEC
3E48111211C62803FFEDA7446497DF6799D9350DA919E521A3AB9FB4AE7D11289B8F7A74B51D
487B22D2CB47FB264C1770F950EDE8878C8F3509B2C13D6E7793BC621BEE7E660AE6B0020F13
1D0F5B622DC0CE803280678E45F29AF03107E692DBAF1AB2D27FC383CE85D4E71EFC5DDCFF9A
BEBFD0BFBA7FA25A619653934AF0C0064FF0FE0E3DDFE5609E9EEA77B703FC3EDF0B0E7E7709
4D2AA277C180BB5753BFD8DC899D45BA839CA1AB6C92463F115E92D2267A1E3AB5F5AB0FFF39
042A9B7FC92E871FD8322CD1BEF3831E313F9854C9825025EE75EF233DF483391AD80CF118DF
03E689710609BCFC54B1249A9B8A22BFE88326856BDD3C2C67B51F8B5A8AF99C3048A9850A69
2F453039D23CA544158B6189D6100F4DA98DB4A692669770658DDB7DE18B61A6C124BB7366E5
BEB8FA45130503FA7D0F864D74FC5BA8582EE5136518F5B8C4757A14D9C665F5FA8EC4BD1BF2
C30AEDABEB63E2C2A579B936D86E763A9A507ED855305C3AAD34FF0858FA6117DE259DF10EBD
100B5F39CB1025FB7D65684F432014EA0D3D0767FE7B361A131EDA5F790AFE17CA3BDD169D16
A190D90C1A690C00A1214BFF7B3A86D281DF19F1C792DDA22B4115492E6EB6873EA97A834FD1
5C1979DD8435EDA056B5BC8988D90C6E4C4570ED33B3261C01F4ABB3CFEEDD04DD3A3B5A57D4
23173FD9FFF5583EFAF124591028E7A97E5233720C258F1CA74FFC309227E46532A210B3858C
348D98B7A60D26292ABFB27BF16565D9AE724B9BEE9256DE6BFE61309ACE9C57788DE47BB027
26184270151747CD66DC82609B605A1668214C92856DB5681C1FBBBCC02A9C7F115A2F1D40A8
3912DDE91E311388061B55C0BFA592CBDEF437D0EC7BB01C62E54B1055CDABD326A2AFF5C757
938AB51CE1C5E482A0162E775CFE4BD04AFB2C8F61B44AD71187BE7915860FD84A3A3ADF7408
A357F379C582388F15A4DC0333C39BA1504727164C21B7CC08229790C70707F24A26DD85658C
0A995F085D95F7D15AB4EAD163EBF756C8180ECFE306826B96F2883A4B05B134571A27AED079
88BF49CCF917959CC156D565EC293D3151DF455091C37AC77A35A892C358E9CD54A958BD3738
71E606A5AE1EA3E49562D5B068A16017F4A427971146550F1DA1833157F7527CFB176F05CE4E
B45BF278222B8813A3F20B80159B66AC1DCCC25F94455526F6D8AD95966718D07B056BA2730C
EA20FDFD3E4C81F4CCD0A93FFA204A220751F3EBA27244EC63CD280D32DB3A68F92474A07479
6D8FEB2C4E90AC90161A3185BFC798878E5D5768253D6123FBD4D1A3D4C4B1DDC7A0E4A192D8
6C1591CB61822FE26B9807513FDF0A114E3CCCBF9B37061A54C4988F5C580422DF02F06DD381
7F51CA00DC58132BAD81C23186ABD31171EECFD873D73B6D65AAA023B72D71641DC7B6D39D83
3BFDFFA31E054E3DCE916DF4993E667FD8AE5E62FB7C6FB71739C54B9519206FD9FC89E7D7CF
C6260805A89B6529F39E2AB9AA334587DAE9A8CBED83738366B9807D526F2C04E7CDBFF660C2
5DCF5E833BCA98FE8D7A67030CDF3497C3813214522CFA6CD05748829916359FCE26F365666E
D1A3D844A9A9C8D812BE478BC282144D38D7FB25E504DF15CE088DC2F995C017BFB45076B957
9AF8425AAA4820351B168A8F6859DBAF6B367952598A3C488AE1A670E50498180737C93DF4A8
EB5FD57195338E179DDCE46351F57E6BC4A49C2DCCC001FA3A4623456CFB20E5E6391B3755A0
A6FBCF50428CAD788E30D10F40F270B6B5DF34D2FA657A3CB73FFB0AF744482CB9F226623993
38F9A87E283D1E42F8EC352745F43455DD2FFA9E324F70305775EFBF8988AA5B56B0A885040B
4E8933083F0AFDE3B0ECFCAAA1047498348617C2B60349F06F776D3F7370F573F3B3F2B3A0D6
B7524073EECC90EF618D5D67BD8B58537643702F888626C92B20570898CE5003ED2FC4C43912
A7932228F7BF4996329CCBA9A2DB045EF72190E781E785AF0F4EAE71D98FE42EB14A4A06E985
BFB00D44C0BB5403E48BA2EDF5FAA0D10317EBDE2C6D57228454471AD4C65D9D062B73FE0FBB
3928BEECA5382F852FE9F34D77FF14F809E16CA2A3111128BCFC2F7300F1E113F3BBB11F6F3A
0FC28A3EB7EC196848678CF7A809876B16C29F8969AF5A64DEE8D4BB170FDD006B758A31F114
9CECF44F126CF81B2E71B0D5A7A67C9647989DF0BF43070BC392C5CE121DC5DA8FEB46D497C9
D28274F51AB29D1D9D5AD4D1ED53457118FE1EA4974869618D0C4D02A0E5D9E42936CEAF8F7C
DBAADB4D82871404E77D16B49E59FAD0311BF204A255B1FA47305602E6CEA169778A5BC13A50
7A18F9A61DEAD37F441FED2AD0A7BC6D1D86AB0247173E002AFEF8E0E7351469AE851B519450
8297F56030078E3ED597A46CB8FA532AE9576696193153FF2A3DDA59625C437D48D1DC2C7F4E
8A542167653E15B24C430D267741F5EE049C663EDF22047D53E0A25ED25FF3EA8D7300E219F8
45D21066AD3B07389C627A6866642BCF9B626FE71DC8FFDB1D97602FA164194956EADEB88473
AC7333B6118C983780F2324874223D5752447D070F1EFE604562B140DDD407760E58565C8BD7
A51A7B8E6CBE2D9AC2EEFAFE07EC2198340D47556A1F8419DDD91581C9885CAF0B3D8FBE17A8
DD950090E255CA152B9486604CF28CE0585AF0DB9687462A0982651265594618EEDFD9866E07
20CE523610ECD179D8120F9A17DF1DAC031962112F7B874C7982BDE730ED276086D3C8E11C35
03F778D08A0B27F449262A4F3BE5D3970885F8FD9F784F99533C3E443AEB91505FA822E66988
1F21ACA4D48BFDD067037C1CACC190BFEBE072EBEF20D09617237F5DD385831848D0E974E283
0F833939EF7907886AD99CA6AC679964F7F7E2715BEAADBD3CE56E8D82205F55317F62205090
BC509CCC83CE052640A68E4799E0F0C24B95EA65527E750854A4E71B9585D333591DAD680D4F
F561527117D94230C074F215240269FD5F1CBBE7F7BB74E05A482B9EB38C96AD21B81FD2E6A8
051726990A2F6A786F1998A87A821C766B33A6FF81BBCA046828CBDE7B709224C0CE80803215
0BAE5EAA9AD1060C0F205115D38BCD0CE71C9DB02F7518B90AC95FFAFA833295E9EB740F766D
9193610E07A328469E6E0BB3A7EB5B345738799E87A1B8DEF9573359E3EEF5CD9C8E87EEFDC9
3129617B9D0E8E2069931B2949B0F5444BAC182FE78A3215F61F4B486CAFE072D901CE6ED821
FA28E28F11AD030FA0EC0ED12F86E365021FF18F22E57CF26B379116A14AF5509A63B2804572
3E2D636571C7830EC1FF9E96FDE8131EF912E9903FE000103673E189425AC6A92F5B5AA3BF50
B733A2772E13067D58D4D0D705B652456F755BBEE592C26E610749E9BFE9EE1C31949DF24B1D
96B8BF13EAAA941A1D3D75C225B3D9398B0B5548E95F90F81C4E127ABB4A99F1164FAB22A571
3CCFC4EB0A13DC385C398E1AF26C0D06911F40F3AA8D0BF8EB6A06CC4B9458BD795F302B0E0A
A2BC2280D727FBDA8F3B8BAC73080366E09F8208C34EBD9DFDC9D53737428EE579B5FDC23486
7651184C653672C46A266AE9B203B26BC4F737D99A10430D4A23BF5EB4E58200EC026ED63AA7
DCE45FE57C01261840DDD2811545BA838EF961E3CDBB0CDEFB14C6846B17E25A5EF7E13936DD
E674343F58BAB12C143C7D3E86FF123FE5CEF550998E0A3CC8FA118F01FE74D072A041C77B0A
A675EA7C4E81FFA5D6BE9AD3CBC7EE740CDFF8C5F8CE9412993AB134F94AE4169CC1CDFBD74E
10AD7C8BE14A4F1106E7FBAE8B109F41D72678167C957E2DE8C08E1D3AAEDF485B4AC9D2DDDE
C0AAE98D5DFDD90F41FA5A63D8B71EB62E601DBB47EA1ED16240EACC88B32E5487BB921EA72A
87BA5722A7489FCA2A1FF4A14E45EE77F9A5777014011803FD5ABA05A05B00EA59149C4F1AC4
CDF8FDC83722AE9E48084A5F602FE1000F180432BC1BB6D4B7DEEF7DCFF6F06921DFCD2FE7C1
2D7B94DD224FF89FEFAD9DF6BCF9D32E2F86B908056412B50CDB54AE926562235A312856DEDE
51948CBEDD018A82953269325849E8E87C756D9CE0752DB9F75DBCB8F8A23A4DCD38E69B06FC
43986C15ADD84A58F30A88F41BB29ED0EF96B5C7F91139A76BD97BA3E215B35561AC4A0E1DF8
F5548607213B197D4F4C32F5C776C4E58CAEA4F37C75D26D34FFCFF76CE57511F5BA21931DE5
2179E7E96574E3088C8F2760A784AF0AFBC823AF4A9D79C036C43E47E5FCDE1BD9B5D2613064
CF16AE6362C2FCB8F10C36AE18CC7C919A481641300BFA590200C5764F7A2E7CD07C7351016B
20B867F5AA0D031316613984514D4E1AAF6310B1848BB32B88D9B973EE260535835CA4A7FD4E
4A186803F47AF2333BE14AD592088BDBBB05AB19415005E710D4161FA1DE5EF56FB773A63375
34D4071CC14AEBFF1094E63FDA494CCB6374977E6CD6D2FC385BE8E503AE51F6A4832DE2B5E1
8DABD87A013C79AA1B419045A841EB3B963F89AB7FE3ECBC053F303DA580F1B45E9486DDB621
CF54A1961F7AE079235A8B3F59788BF0DEB366985CCEDEF590244D6ED879306C23E9BBC451F9
8C9B1A3DD9EE25ED950D41B8B1DBAACDA7CE34919E352794DCBD40367832CC8A959A9BF964EE
958BB8ACFD0DD098C1975B168B9B4718B1313E2D203A0B11D31F5A786EA9152750B09EB1D80C
21DACAB7C6882C71FD4045009C97F62CA307D63608113BD55A5328458AF41D2BAE97C6B7042C
CF128FD562BD6123B9F6E394F271D8F10D405E090D5695AE6EA02407C5BE96AA9AD0D0131B98
5A8A1C8A18F5ADAFBC8CCCBD00BE359AF19B0F6B1C37EDE8DB4BC37F5791D2388D6A02C9F888
E8D9CD449E32567E962937B9BBE02BB81A2627C6C82D381E51178B0880714116BA815A9E4ED5
06B138483DDE5B1AC5CF310B1AC8DB1D67CEBA2EC06F3F0B7193A7BA127C96C42B599C174892
71D5E6F295D48C40929D50216B411F5CF96B31B613442B58CE0A398B680F70F333CC19EF7C93
CA1CAE83AF735D8FD94448AA85362A9F65CDC182583517811D1D7A2904D024AD563AE135F980
CD2BB4ACFC0EE3792EEF1A8522595F8CDAFF4ABADA0836848F7178DBB4EF8C38A5F95283D78D
5BBD74E8A488668F9B251E1060624736B3ED00760E855D533BF5E99BAABB1C871EA4071B51AB
6F5C50DCB9460DAC92EEBB23628A6BEEAE2C87D547AA91730198477284AEE8572D21BE2FB620
2982BC8BBA2CCB5019FC0209EFB60C1D306150B8574B73057D7E74CA3D0BEDAB2EF1FAA7C74D
A15DB25CF56C3F49C79056C9A4C737E5A4BA667DD44AD71CFF171B659A3A86AA842C6D02B0D8
5D842263305367F50BA84A78B15D1004E5B7FC6650F409E9EB5EF8B27C785B196B14DFD7FAFC
10D76ACAA9FBF29969AC5BC2F09589FEAD414E8925E25320CEFD102C230A97E424FCFA92A9DF
CFD54348A67A44213E5286B13F1E17BB472EF6CDA131FE3ABE6652A9014639C690CAE1F6CD07
2115E63CEE2C0C8452F3BDD78F7634C7F850054A024A73C6F6AB09B1B5C8EFC9703B994527AA
0F888B9D3CD012280080386098A7CC2A625B3040165443C99BFD12119B1398BB469D2D154992
89C782F6FD7B4E4BF1190F3C634AA476811CC3A888B3023E98BC5D4927C1BC5A23FCDCD70FF5
53822AE0C8F2D004A285A7B89C85B9B0B1BA47AEB74EF355C3A922EBEA61E9804946184B1A15
EDBBC081D953BC232EA1A6841CD8A6797EA23984C9F74B5247324216C8E62C8D14523F0F7735
556608FC0D60FC4D384E573010CCC1170923B85305CFA126D53BEC78750427F2F17711509A4C
180F465CFF2D012E10F0065321BCBCC95E85894A81FE584C41862F313C36E187A303D221FCE1
5B021D362D5E3CA5093B1E85DABC0045AE7CFC7209F4A73444BCAF1602C2BEC27B7AD8C4D699
6D46EEF5D4CE4D431BF070D57D557E11AE811CDA7DEB05BA62B5B9D6E738488762F141C5402B
BE474B9BBE61B127F2961205FD5856A7F2F90F450E7B20B9F059087B24C90A26C7CCCA609402
B571481EE8A92BB35A7627CCC3ACB0FBF434C53562765A2AC8F76E653D58214C2341D7EE884C
F0A91A7654EC27654EF3EC4D595935B85F2BD6317212EA1192EDD96618CFBE177B9EF6B1B4E9
17740B967B4AB17D551ABF47BB156C1801D51B28CDD8CCEED586FE35A8380564F078BB457641
FB54CD028C89536E4E1C94E8A4A53E0E75312980D58C645B2FB1C9EA892247B9E1956AA27249
F011F41BD4A94B2B70E855306B2558A4E842F381B09536AE22A09694FB67CAC3D9D3B17378F6
CE0A0AA7D0B0BE501ADB5DFD1EE764FB0A17A82CF9CB2509B6551CD558C59426B543530BC4E9
A14716177019671C93C0A54BA6AD2460E9B42802E0F2A2C0F3B7017D615567906656335A9534
24156310418257493407415E2DF4C2F7A86A51787DBE827A83224C9DB0E90D466D89FF599484
B09DB5065348FA83256D139D5E7DD43BF47ABDCB2B6B2FA680C9CAA6582DA86F488FE9E438E7
587AD3B6938A778F06EBDB585D05EDE6716081F53FF745B2C7E8BD7C029AA2A13DFE8B57B94D
E3FA77DE5FE2F5D954F69DD24CBF5B99BC4AD36174A61BF5579F36340BE37B673D39C0DF0A6B
F9B65F8BA298C4EC715AE6A1A66E418AB3D4E842A1851F83F9219DDA734EC628DD876B580957
03B780EBE4372814E2663E99745CC7549BECDC8B6EE74885C9C26617D02A15FF377059EFB95F
10F4305D74205DC59C142DD61CB8F6F740E6945BC58FA5D3F68D23CFF891DA60D18A44A4D912
F58517DE4FABCCFD129E4BD419091D8F9FD44BD6933F893319E9B726A0DAFDC2FA9A0522C02B
55274211EFF91DD16C38B6249A1CCB2AE2160EEC367A6F3C5DDB07A5E30DC6F7EEC1BF31E787
61846ADD79881E0A4EA1297D17E3131E487F04F0A75A67AB1C07486B8174181DBD947BC2C099
B3C9B60D7CDED19AF16DA0F22718741042F39669E7B0A9F945D8FBB59D00BB2F197176C65F41
9C680D883820AF578BA6C55EFCD94B1E8F5FDA448B2CB6D7E30DAE19151E0ECA014B3AA1C9AF
122E79609CAC48431D94608B0DC492213708C763E9912536A45DB41C17BD373D9DE7CB043B6E
43E1878F8B649233ECD835009EB3B9167893F44F5B5251AB534309FB8FB93F9D9366F86B09FB
AF90756000FC4CF71B756B93841EC2876D4A60ACCED7633040FFBD54D9E6CEE60BB1ABEACCCA
3F3FAE280723EED71B91F1099AE95AC0B75B340D2FD081F1DD9FC432E6843FA6B78F04828030
9D4937D869924573D548A6E92FD1257006F2605BBD373EF7B3E681349A6108CB0064DCB88E84
025FA69217828560294DE31AFA957586E825B662C2049F6605C3BD6339AA89A4806F4661B0AA
E2CAD0C688709B3AAF11BDEC64C0ABDAE2F72E120FCEA1A64571CC56303F72A59171BC12C8AD
67604851C0114D834BA1994ECEA2E66F7030FA7DEAA2F29A71504090B8365EF29A386454B39C
FAD48DCDFCF0B2D2A47FEFA95C2C310E02A5AA25F08B747605C96B873AB0D27866E1CA4F9083
C25A4BE471808B2EBF118CEB96C828C938B66E74DB116A47FD6B647B4D71F957E8E1335D81EA
9A3F87895B93C8356968342996DD2AF3E96B1C6EC9ED301A064C8EDFA032F6881859912789FF
D5B7F5C11B71CBDF3C40C5E2AB2CB14EA4ACC7013D8711DE52BDCC6E0195F0282A1DFE9150D9
1FB19BA8B214D669FB91EDB892CAC6D6C60EB08C63381A58685F0B14F28FFF7930540B823B47
CB678D05608BEBCA05D8A4F2FE03B12B4A5AFF616C36261FB554AC72A3FD2C1FAC112AF6BC6A
DAF91A46400D817555556FA1C66FB5446A9665CE1A00821631659B9BEA548E4648EDA6CE9C12
2F6CAFC5A3BACD10E8E3DA30AF3C1FEA8A45EF17FA4CC6EFCD1953810E05FDB03FED2CD59DE8
5A5103721F42C453305508F61882C91B22AA2204B44F59290701EDADF453E9CBFF3395842EF1
FA0F32988069565F7D09E484DD51A0EFE5C00B6B149EF279E230D4014BB6CE5D11D08BD3F6B5
29C8322E494B0E1A71896668834383F237A6A3CDA56DE51A6856CA18300543EC5260E270CFC9
EC117AF693E5EFA6FE09BAD3890DC054A573AD964C305BD8A28A709B37365B689EB56B488D0D
6463DA7D27CBE730B902E52C245F577546F2CDEDC3E8789CD7A2CBC5FF6EB74EE0D5481AFCD6
5FCDD9503C87EBCB2E8D5605210E8EC1CE6BFFD4D9B82BFD6324C5D5593B653FC32B77EBC501
84DEDDDB855E411F593857E93FBA3A396D751F87634D897C2AB1C72F71F6C712C1BCC66C286C
133111B8C817EF92B3487DFD0DBFA493AF229268DE3F5DF40B1B1EEF52A8B5C2B7E24D8F4C6A
81F77044013943EC7117EABCCF68F10D9DF3A53589DCBB1FEA6AD52087FF0AF5320B26654E21
72ADDD16804EF5CE4B1331F8DA08DF4E6B1C9AA297DB2D52850DDDF56FEC0F5807B69A666F6C
FBBD9E97659A16AC87C229C0A49E7454C898D27F5EBCE24E5F749ABA02ECC13E58D56C55938C
53147731927D0125962083110D44A0B21DF742791DEAA027EBDA4550F354F1D8FE6345C730AD
3A4AE79D30EFA616F84E289C56126BBCAD1AF4C34C5A28FA9B88C62B979A52911B660010CC68
9C2E2E0100A797E749269C2C6F8073B2E9A2B9E3ABA0FEA2355EE7EBBFD886BCF62B2CD098D3
3367B1E66BE16F8D12E11C052E0465A1C4328D10F82EE8C08C8A4F789F50EC25737DA728374D
EFF202FD421BD28F23756B4B2633634BE5A7DF298B8C26A90BAC0E7F80D6ECD2BA3C97D4C0E0
E781D3777D921954B7F9A318FB6F24BF864743CA9239E00D8FD4C22CA3E96A7818F51861CF43
9F540D90F70B10CEBD0545DD307C739B877601A618CB05C71B10C08CF36591B0372316551CA5
6DF83B1100ACFB2351B16037E43B3A0286337AD919DADC4534C072FB975498302A9D7B5658C8
A27B7CC30B6CE0F4A8371D62A30655F98BD3689EC387781E1C5C201DE8E61C119C78B67AEDD9
EB936DAE0D21C4B77866163BD4CC034B23C9900EE477F34D077438B36D841DB6A90C1EF0501F
05A35C019999A83D44D5C9BC7BE9943122E734AC9C03A1A44D6A962F1FAAAA83F3EFD756D8CA
20D56524385F03872B182937FBF3A234CE3D0B0E8B7FBF93EDA5D61F71CA9D2A2E5EC529AF1C
60D8E5B602F552108CFC892498B7F5975A5118C1F6C48064DDAFFA4055574AD50CD393D41CD4
D639413858E8AADA3DAB2393AD5190DD27019A65D7237887D705831F1299D27F9136DDCC1A50
16C5C15C2B906258BE650E8162B0A80E90B9EDD6DBC323F6847B42CD4C901DFD9A487E8EB13C
E7E34907F54ECC133BE391E92EC656ABC7107B9775AF6A498BC23CD12BBF3A0201A0DC519768
27E5176E8813BB6D33204229DB7C784DAE7778E30C54BCFE17C1400542C01CAC6278A5CE7A34
368D65BBB73CECED1AE0485CB484FDD2EE6BFBE255AD627927694B26457AC52729FFEB61E1AA
FF9C1B4F206B778F54135D2A20505014FF909C0C0DF36DC33B8E8BE9647C93F4714C3B0CAB20
5AFE9E8FA3BE77E4B1D174ACB0943F9BC6D640435D3B95578FB7D2ECFAE8CF89742D07FAFE1E
7F0F0DC6E93A777400159BCE6D98421E4E3E4EA0A7E1A30C091CA706B36B04AAC8BE60611581
FD892EEBEC0FE1CA72652C443F886D176E6B168D7FE2630123F98CC738185A229ABD6ACC68C0
ECBA84B05280E09727D36DCE32D5639F2F1DD7E93C47990BFA995D4BDA83DA712DB669A8E3DB
858C79CC0F6D66D310F8C4E2BB9045FE927E4CEB6566D6930FCDC5B31FA66FC9F439E7751FBB
8AEC0837C870D7BD69C3F0A7699DA23281C293856E6446C26CFA5EEA25F525D5C48BF76DECAD
A82DBCFA5CFFF3A4B893D0D985380BA3A80C604118A4650A6823BF8235C5A84E237E094D7889
C33765A1B4E04D06D43CDDB2122D9F25D42A1D29EDC83E107F0611BBF6547B85B099C30FA56E
506108CDDA34D546FE736A1435F006F3BB9CBFAA6328F2E2081980C4CD8D03CF74F6FF9AEF5C
659064947326C1EE835D3902F49FF8AD98433185CB0BC3FBF1AE2786131E4C2F90CE91603704
33F1036DB8E41BD4323AA524FA29F1439156A0A1D1822D1FACD3FFFAA91038F33F335351F036
3D75C90F3FF36025C8EEBDED48283CA40B16A079E9B24F0F461AE6516086B6A7CAA3E51F495E
DCF5512F397164C6E52B455DF1397121C8E116AA0593AC6C7D7619ED0B4A3277ACB60E05C3CD
02F9677F235EEDF5AB122F2B4AF006028EA0BF223325A50FD459EAC062F8FED55BF548BD0FD3
548B1B9B398A84E6BDFFF48400328BA231DE2D065BDF0941CA4F9219DCF243928697315C0BAD
E7972730C44311FDA0C8331B0D9352AF4575991EE3F10B3A3170EFBFB879FF38BB53A651B5B5
7DC6947254801BCFC387BC0ED3CA5126AE8FDB93E4FDC621C6832598E00A1A94659A38EF503E
2E82F11EC7D1484B1F769B50E7658E008657F3843E24DDEAA2E14335BD534D715F8F26F5549E
A33C3437C75404E63329FBD4DB3D234A72EF28B02ABDBB1B173846FEA0759CE3FD1A6BB71E79
97854F1A7B26A49E415DD24850D4EFD04D4CADC12D2B0A14960831B80F37548AE788DB8F0D0C
78C6AB2B1AC4D16F657194EC983C8A6B229A4047197FC0D259DF963828796942D6F2AAD23A1B
36011A2DDB6CDEE17F5812A3E263933BA0C83551B8DF47BBC1727C5D7E7F33E05142FEA9FD01
DFE4CA1C1FD765DB57F3221D1272B07DDCC96633CE4CFA7E30743692D0DE6C98C60265F40286
D6D24CF3364D57C2883DD5E890E169AE21555966A63ACE7D9AC6340013683504F2C6FE41B83C
CE84331194319F2B9106958F5C921FE65C7D08B47E8C52F306F0BD87DD8CADB6505DA876AE5D
73679E9D73EDA2AE48BAA32C898C80DD3E614504DAED25978A39A635AF516DAEA29EA59CECAA
FAAE06F83A3F87297F1FC474E4574446B5DC17E2BB3ED6E586379A077CF284A57007B54FB1A0
64D66A018F0D58923B1360E6EDA82ACDCCDA43A7735C1F44C5DB2063BCD5BA645F0239F7FB92
9D7A6BF8902F096ADA5812B78DF1E9DA30585F0EAFA2C2BD6012C7D89563EA83FDC43660A0D1
E95A4A4BE880DD0C680D4AADC9B2D90740085128CCAA91FEA4EFB9804FD159EE6B6663626FB3
F0BAC800B4E859A76EA97839E6AF69DA9AC5401C84FFDAB17F05DDA0C6444D7C56EAB82805D7
25AD42B0BBF35B64A0E58FB19DB04C56356F7A84E08CCED7FF85285CFE48E4D04D8EDA35510F
294AEDE217C940AEBB3833015E3BE966C1ED4CE1536AE824CB02389CA50A868AE11E3341EB60
27A21D3A27D044BD658FF553C44F1F54DC82832380CAE84293ACC1D35BB6207A63CF259036DF
ECE3C79C760752AD3C390AE608777CDDEF180790786D305A96B3CA603B655296697A396909A6
9469616194071CD88EB2872B4ECF623AC9E2E238F6B34DF1F0A3C10518CA3F502FC3CC05B8EB
D16403DDED2931BC9E2CBC485AEDF00E2FF9C201B2039AE6F0E42ACD8C986CE7790D112045CA
4A76C1E2D040DDE716237E7D421564CD68EC495BCEF7FC25FCEFD6820632B09D4668432E990A
ADEE2C7160BC0EE772BD7C5A99F4A32727716180D9EF15DCEF87C9F18FC48F023D6EC2601276
3158B487C8F3CF9CE36FA9F03C84C054CF8FFA6C6706E59700C62B7E04B110AC8D18CC5A6E8B
85E80C067AB6DFB906591696682ECDC50C909EB77DD08EF27B57B734C5F6B35E39FDC8EF04EC
069BB893F706D73E463D8DF1E36B990182A4BF8813EFF55CA6F63AF1E8472293C3699D1A7749
755EEFDFF3D0CF4C66D665915D911D4E57BE1B7BFB1798E91072F3BBB7CDC0D239D97FEE1ED9
AB693211E32042818F0A8DD34AD8374572D3A3407570803990AE55BAF89B709DC017D558FE17
1FC89F9FD961F302E76FB2C271A26BE94E689ECCDEC96D1A889A2A6C9C5DEC70A111F0E427E9
92708005554F914637D1B77D9FE63E3D9DBD0DC12D3D4BA631787D9A9EE0981B0F6B4EEE60FE
D5372B6F4106365B25C2C7ACA0F010440E08285E99C6854F3A5DBC37A5A5FEE92A76B51D730D
8F6C47C76643A0EFE58D797C96A0C5CF09367793668869E0EE3BDF73C804274BCCDF45B6A49F
E620EF696015ABFB99206643B8EE483B0C0360F472E3F256BF83404986C5412C506550ADCC1E
0EEBCD06446B11883541AEFFCA2B7F2E48C1CE6EB71C81F44645C964DD7A268A1D9C4DBAD958
18B3C81ABB899803CD4EF57E17033B66BC1A665AE603BE9C370383EFA2B929F4F5B010AA035C
F61D9F3777D4F9A70199F3A392EAD9213EDCF8DDCE9E5FEBE402DC687417FA21862F9A2C7746
4C7DBE665B2FA18D9E640A94D06F1E1A9AAC793C66AA7266BE2082B0544F8F77F5A691C18D44
C4B62160EDBB047757BE2A8E07DB2D9911360464A5058902E2FAEB06AE3B3D8C6379D3499DDE
93679F1CB11F1580B25B8900F6CC40DD96EF05E57FADD085262EB2B745044853EE3E1701FB5B
DAA023FE0314F9C5EF59A3C0DD2EC4B869A32763CBB5A30E9AC3BD700B613277AED8B96994CD
98A4EDC1210F6EFAE8E909737DE521197FF472E8903D240739CF1ADFAC3B377266079CC424E9
4199ACF79A3120411A81258CB0159C0DA2761AA651E1A5FB96FBF41BFC20450142E1D0F71568
59F1497DF8A17C5CAB1947673B7D8699ACEF4A341790BB7B30805B1BAF7B8885AD862F19BFA7
53088F7DD437A950851EF9BB590C29A51FF88A4EF310F821711C74EFF0D75FF6197340E01F0A
E3FC56C21B44A35FA5E86A17A41E72A6707F50845D61A5C909C0A4FE13A720E99927E1FB6110
22253B97539EF154D1EE172FD621617ED1F9A34EC558CADC2D7553EF738C273681D55E4B9EE0
76D1510B01B9D2BFE932D8BBC97A5ADF197592D013E21E3D3E128BC9D5A34CE4252B015EA673
FCD2E91E2537BB5B9EA572CC6CBCB41CD25325662A6181B36BFB0B0C53101F27B2E6E5A85824
AD98D9FFEACAED79201DB7CFB85E03175E0AF34015EBACC3B1084AB5B05C531CBF1B16F50F7E
0114482EFBE41F9EC2FF1F0B99D1CBB6D934EFB07288D49E7566433DD59BE200142A9692805B
C2D766D5CB3960D6709CE6B4D68940FE3D625497659A270F640E5D624B8A8E58C0E7110553CA
B203DA845FE58403C03C885272B7CB391A2FEE457C328C8F020625D4BE8D36ADBDB4C3B89BF1
A73EBD9A175258DE3F01FC4182687D569D52D8FA669FA08816A72363A28F51468DD3B049AC59
F3CFF0E3EE260535835CAF59AA0229CF5B1D374BB23D7953FEA05ACB54FD6C6804ADB1D2D14A
4FE9C85E32DE0FFE588AF1EA813B2D8D5C51CF426E3BBE67384A6E0AADAEF9BECBABFF913EDE
13395A92E26201C8CC2231788BAF8DB57AA5106CB46FB9FEE66D917C11A3ABA1EEFDE498770F
46D380420EDB5E5F99981985B8191FA21D75A31BC100DC5AD0BEC0B538D279754EE2B1E53978
C85926743197131B7E8C7D2203047A949CBA139B9E4ADEB587312D3AA41D440E1EE6411BE1BA
6942E883C78C97D7A40A72F517584025F450E423617A3EC662A908F888C9F36979804D4CCD58
D1F774E149CE9B7BA3ECF62E42EEA6287D613D484DA293AAA6B3925093CE711600F5310DE438
03E92D46FE5880C96940A6968475EB8D5F00709320CFA25B567A3CC813612D8ABC2FC0F2630C
EBB516A0F4B3AC4FA3EAE45413FCE97FA46DA5ED77A15A7127658CE17FBCD70773F0677870F4
259C6EC641ECB8A7D309FAD425F643F1077B5C052AEA02AC68F93B402F3C7A383DC6A9679A8B
2AFF26B4E680EC2A0A0C111C9A6E36F6CFB43AA070D345E59EFA0E523DC5AB9CA3DC2F1547A7
61D2657EF391473D63F6362A936C3D0B3FC33807B8B1924F057AE617D6A55DD0EDA3C6D7DF53
7424A0088B69E1EE12DBB9D9E779B03F697F9F0D3CDC30D8C4423D10F8A4A0BC153265559C84
B75EF8988BEEDAAAFF2C030140BE75D12D0A5DEBA6E9554F5D979965852B16E2BA5D1B4EDF92
2F556F218A5DE73CCD2D4C16E4343B99F020FE6D725D9E3E12213103CFCF4C8C7EE3EF415F3B
E8D8C308FFA32173D6DC89C119ED0CF67EF71D7A12CCB5755B4E3A2CB974A353E1C387DED256
A727262B12C0F5E63E754B5F8B5BBE6B7D1563B6784465201D8FF0DC4718B34A5790355FED3A
807E6431FD7ABF486F8D21E6DAE28DE23B54599E279A07E344487B60A37A1329E6D9A6248910
2E6C20FB76D0330E0BDE8876C1ACFABC0A1D9F8E1D701683C827CF74CC3F9441E8085B29616E
0C0D3A9FD6D40F97909F1D8C87628326856BDD3C2F83C15335A668F5A9F9C4C64A807A45E34E
1EEE8F8446E72ED18EDA8495579AA90CF5AA24D41940DAA89F9D6EE685A47C095344862CE925
2DC332CFD3A2D4D0DAD73B99E2370A57772D5EF1F04E561534BD33723410C3392DE4ACA0AB99
9CB69AE6B5D78F7ED1C68989AB6A04BCACBAC3FE03B12B4A5AFCD29C1D1C177A1F66CA5E3820
B2AF07A09ADDB8F3FFE08FECED74A76F9D0F27A2F9AD203FAD3231F2F7D1E975CE747465CD8C
CFCF18A9D992DBC6439E55E114C67EA4E7789F9CD80DD55D1A78800BB524171AAFC6A1FBF547
BD21836357C06DEABB9274A79000E1A42D55E13B8542FA2BF90AC6AD5A34691FC956A72FBB9A
2915E7DE9595806BF0143991D28AC835776F92D279E34DAE5561391247A788BBD590F80C5E17
2238ABFFB465B8BA4CCAB52E200B6899ADB275A40FDADA4E845F6081B53B309EFB602E687238
B519ACA66B076AA881EDF89F822E613BB653EAB8C888F87671678C8F586E82C8226988500EBF
7601F697789E4E60AE0485D670F216AB488321F52E07E8199750FC74892279C6267D456B90D9
DC385061402DF2885D1A32E584D4A91C208D39B902A52F08AAE604C7F29214E8FCF04579F872
7A6E9DBBF96479FBEC2D3EE573504F0F1BC11BCFFF07734EC1D793D1EF6F0156B2F9F55B3239
08EBA738F3807AD71B2E6C9F48E1FDB759B9BE397F2E65B97B70A540B6AFAE1C1B4AF59FF5CD
14041EEAFD29A07AC3F30B052FED906C854FD9797C0839216D74436A46F5A44D336F7E319AFE
300853D3E11980C73A5A418D26B1826465917C2BA4CF42849DFBB3FE734DA39C5072D2E35535
FCC634E08E4CFF610A49E4B7141C0A64AD5E46CCFDED08FB3114584016987D62B6E9E8EC8F85
6D29E88017E1FF6992D6A9719EF2C254C6FF7518391DF7EB77F6128954484D622C9B9050AAB1
F5414824E7D224F6D6E14CDA457395642ADDB449A9828EEDB4E917AA7064A68B18D2A00765BF
8E73BC126CAEBF6D806A3EBBA999B0E7E4A03648B08146A5E7B7BA4E49AA3B92F53C34346F29
3D91A7E4D9E2AA0F906E716543B9DF2E0DA049B50D57B4BE2231F14C9C1B45D11547CF3FCB3A
70345A4AC01412A2C5330F10F5649CDD9D0844CAB8E2971AC3AAE071B00C9898DEA75ABEE5D6
EB8785DAF1018C0324AE882EC8A22FBF9A1BCE4E42D5C4AB3C9E62C3854EC94DE6122545B757
CD0A973C3050C05BB9FE5B9DBC080323B6CB8E742EC0BD3D4D46C0D5DFDC64F0D07D2A8506E9
720447CBBCF2651B1E9E6248DB0751F7717826D26967CF8A25FF4A75F5B03B72DE4405D96939
D6A9A02EBEC6D123180D5BF7D62A2C3BF7A0711BA5ADF6E2053D92EFF5E2A3E7F0108B2E939C
C8E7227BE6BF7928523D3C2FD909BA1ECF0CA79F6667E78454BE8A7F56E89BF8501534B1248B
81AC61DED60F0FB0544C28964CD3372AEEF40DF02514B0633FDD9E9ED4AD950D61FEE758655E
A15B4D9D4BDBBC9D7161786E4C0001735E32362ABC6CE1DB1ED0ABA7020A737CC1F2E388FAA0
FB27B5BFC009FC4085AB7DE3C36F56462025D0A6E54CF8D1C737CBEBC7E188897BD9222B5CF5
EA02AF73118C27E555EB426DD6B63DD7FA0A9FC95B903FC6A3C302CDCD124D5B2549BA262F83
37966F12D2D6086C2DFB0840D6781254BC3966BF67B5815C12D576C09655B265EA6655E2F133
DD294C28C45E8D3882353666622D02E1DC8BBC7C98FF98C044CB32F89F600934398CEA6BC3C3
5C608E610A14C3864469FD8D653A41E61B3998F4DEBD575EA14A35075EEEDDC7CD3A523347A8
1D5448A78AE07E97C886B3E5824D2B67AF6E8BC6B9460E23C720469C6F159BBBE9A131A1E16D
4C9B58914B0AA21A927874EE1E38421718E9905715353EBF1A1A9EC3BF8B22F3456BED984992
D4C9F33F42CE5D7B6908AA892C31792DE99F21263B0F1A03585A6263ACC5ACEB8BFF0D042654
13674AA6FA7B7590EB546643A6FEAACCE34E43B8E0771FA98DD99FD2DE827973AE35AFC03E85
0F3266FEC810E48C778D1D1B33968191E7B7F8B119AA9664081F5284CE5E27D74A3369FC2663
95746896094F7510CCD3BE1D99D3C06BBB6188E30C9B204E2ECA66D922B1DEE93E542B46406B
E8ABE6FAA066706A7D0573BCFEEE10814CC2C5444916507D01C5B9337BAB63A2C8403FC7E44D
AD90A665571324B3E1FDFC182D590879327D0127C3B19921B693B384A73E7CD03C28A550C121
56927796563D205D8DF38EDE3C52CA20C9E70118D6ED11849D2D1EBE44C8002EBB99E85F74DE
E1952AB7F6324E358C7BC68BE65850F7B52F59163235406FCD441F3C6B4DAB0436A85282BDB7
A4A81B49F79ACD66AED722934E2A18C214B49CF64D98EF0941F93508472F718490A8B090ACB4
F94DB037210148EF83DB4B9D2BB37BB90EC6440578683E94765C5408A91DDB1E59379E8AEDC2
550D949D317BE31954AF92E3AC3767F60A76E683F97CFC2DC035B403C4DBA89C6C971BCEBC55
405D49D8BC6673B1F55F90769F2EDD57B623566CB4C3511FC7F87AE75F2E9A09FA88D9C11C9D
9982F2355AF48B9A963AE82C770B39B28863D5307BA927A5E291FEE68AC3EC67AAF7B09C8E57
CF147C09729AC7B539B586D5E2BEA05C054544702ABE3AB1567417A37793064A53229D9D3002
3AF8D8E6A44451788D5C2116006762D51012619D7476E3589499EA933BC6ACBE9232C9A54105
4B47C1F087AAA15535255620BF38DD456145094D687FEFDCC705D05350ED018742450507EC59
A900EFD55C59EF495D32119EF6BCF83BC8DE73E3D32BBA78F5FA31B09CE36797FC9578647DCD
DEB1DFBC65ABD06E505B732FDDAAFC7CC2063B90EFE4FFCAEF888987D2A397FCAE379FBADD01
4322E8A36B12DD01F8A7BF4C795DA974DA5C28CB934308B58CD0127C0AD3D1956C73DEAADD88
DE3838F8AA7E1703C80A31381AD347191E2E4B727EA40F0405CCA81B91E820F6742626C94C5B
969059AF58AA416C667FCFF98D0822F37989B04CA017F29FE581873D19B5389A9CCC1FE59074
1264476DB7F041F31B0D40645DE8DCE8D6F55922717763879B75A377393524E02CDF534E6985
01A4ACEA65ACA44DE1A506EB17EE83CF18DAFCB7EA79D2B85AC4E357A183A25C3E4E16F4D01E
4ECC49E5F0ACCD6D2C9200C5AA078D1C3B18338B71D3415B57CCB45209561C4E493836FE088B
DC492FB0845D40D379822412B03DC5B7060649E0BBF7EBE9E275145BD29A60F1ADDCB01D320E
E60D38AFD7F12926457BA8C3E5B11D37D36394B4933D49AAA4AFFF4173A082D5E5821AF478D8
479B3F7CC59BB1B19737CA19A2AA8C841F4A48094CF69C41FC511546364BC6DA836B8814A424
CFF94634679BF07D873595214481C1C77EF223C76B8E1DD1559E5CFB65650B19AB7F573B0579
33D649D8BD38BF0D8A3AAEA347131116AFE58DCDCA0C1768CABE9444D73DFA50D56FA9558472
08A35B98BB24D36C26513246E2E79507AFCEBDCFE812B7CECF9BCEBB9D5E8ECB9DC6BEC06F88
A803B639B2B8116EB3061F08715816C29A27BE5DB05DEABAB3902ABC946FE0121811F8CC5560
9FCF361E64F52C39D6C74ADECEC36D179D7538C9A6C12109CA1945F9A556E59F8B0CEBBDC28A
427F5D21101676C2FD12A2E7B1F92AC6FD8364065B90FC918C3FD4AE065974F633EB3257B690
7D1D7365106D290F99B9159F616E7695F362FDCDF2C90BE5FA8BAC25708B05E31644315E9262
C144518B4D3B97C90C883AE9D28166F941574DDE84425C20B53FC5C8D3215E5CF277B9241F2B
96FAFEA0A30F7C3C6141AE5A8E8C251FB34912E3E0588235190E7AACD80E9E8ACF43B6D85E8A
C96DCFEB832748220D3FC45098ECF6CBC21809B58C08880E702E6713A4758635200DD452F7A2
E3ECB7B595E613C38A99AE690B648EE4A3DBE5D2BDE3F4A2B7C6E5D3423864DB431576BD4BD0
E9E9307B65E701E8AFEE85F3A466A1AC03A9A7F0EF4C41DC025B272C5821E1CD06D6B2979CB7
EF2BBA7F6E5C5FFE7779D31A52A9D5D63745C05B506D7685ACBF585637AAAC087D5C7E8DD9DB
763B45DD5CED6971F03920597B6893F6A3450F0881EADA33196B10833F2E36C2909D4483834B
E95120DF0C38E70D35AD3F6F0A4FC38FD9DB218F1C6E4B796D7EBDA5F981DC73647930E6F032
DFECF36138D428120C685BD07267D33E13DF36D75AF75F2867915783E5F47F5EE546DCF8876C
3BC78F23C90A93008A6A32D8509F3FEDBA96C88532E38F7EC5B29BD08CBBB38662C95E56A4AC
A4CE242F1741945E6DAF9A9A96555683A98148F0CDFB543B33A422A89DE5EB5E4E0681800513
333F8B27F14E885684EAA9C3FB84AB35A11B9F40B10738AFD43FF0D890E469F4D01BEE1473D0
EF4E1568E4778C4206146268A785CD12066878AC0E61E7D06E17087B1FCF9B5B58014E5DCF84
80BF86D7F312A667A69F80CB4D5292F40D24D9B276109EB8C26A1EFF7C43A8C25474D1044F2A
25ED68ACE9616A2C103C67CD06609F2670B55ADA034C36AD1B9516BC7DD568EE90A4254212CF
713FDDBB7A8C7E2494F6B99DC352F279001E3E063E49D31B0F98FA7C7536B702E2D402850606
F0C433901161E94ABA5DFFAE99815F3A329815EF1BCF803376034D01D2CB37D73DACFFEF7D22
B2B8E48F468F5BF1E0AE8AA255DE5DAFC118D283D987E8FCDE6C2A754BD39179DD5737ABA282
E1BCCCA10DC06B9713E7795C722ED207DB87CC4954CD55F91BA707E9C445792158D81DCAE5F5
4E08B275F0F1D250DCF79C6F0C968753571EE097FC8F34AA2300A14A3CF3B839B44548187529
08BB0FA57F2E2A0CD7BD29B0A99CDBCEA36C7DE523BD8BBE3F7BB97AF9FC22B52BEBDBC6F9BC
755F7DC575A8F599980B8B8A58AA7D5FDB32BF839E764797CCCA4FE1A5290C6D0A26EBA3156D
A487EB246BC15D241CF6669CF0C02F8EAECDB11439DF470DD105BE760B04F2F3BFA3A63C190A
1A01A21C484180A29E29C3E52E1254A8EA07AC7B53393477712394804BD11894F4C75F449D63
554C08273E9C94B8EB84AA837E77696D712C21917894DF49259A0AD94EA99E29069A6375F5B8
9C795D44B6D99A5E249DDF75F985EB18B18E2B419D583B58A595F64B1F70846758B6E0C0C1CA
CFC845B5B66DF4C58339170A59801CEC0B4D529B4569A715615647DFFFA5A3AB1A60DCD565D4
0CF71644413A2158C80CA694ED4BC1D2D20853867CF5DAC2CBF88E460615EB10B5858502151F
75745DE48DE9E2240C59FB3C443ACC12C25391C21D38F2EA585F1D51C0E0CF338FDC71D78F78
647E3843190FDB4EC7B565BF373B54BB164B8D28D0A8CAEE8D52BAE71F9A70CBBD00B2212D40
C0234DB2257971A1A311F8C65A4E35183E28642289C132AEB7C5F99E8EA94A2BDF2E50086617
F71FDCA457CA8F3033EFA3B128548F949E583D739E220B4B7CD86D053AD5584EDACD1A4E961F
1FCC19E1D94103563B5A9DDF04A40A6430DC46608075CE9345C051677E284B76E3FF60E58C1D
1B3DA0C6F6DC98F4AE9A227B1CDCD4D763AACC2E53A113D0EB48737496D38CEDB5C0BFDBD1B1
FE1F6A7D6959B84F808C9F8EABAE13DBA394D4BBFC53094D82317FAF321F848C1A51799911E5
7B17FD9FFDF3CE9AFE98157DA71D14A4FF8F5513FE6E9271771946B4A685D302AEF929C277ED
488DA3EA23130334B5B13B9432D8046851965EA1A04E90C57BB3F8CE1B3D4F571897982F8622
DF6EF9B104BEA002483AEB6C5CA5C9C818D0761D1A17B9C66DEA3E54519142C9E79F8712FFAB
149B74A8F9464DC17ED4B744C62E155BA4B9D45298EE0A5316F9F4098FE6738E04563596EC75
D2A3066A1083ECFDB45E2B8170AD5B9A25DF9B59CA88A07EAE0DD5462F796B9385C797EDD095
7EF9D73D01A155DDBD4FDAD834C684501F2C4349C48777E5FEE855CC1C808604D059F4FAC5FE
4506EF0E285EAA55E60B8BF10510A200F353847973BB70DAC73237DF9747E6585BD427A7440D
0F2286924A723A39B69390EF1424673F892DA45351678652C62CC0B93F54A2B753285A012039
3F336B47C404145FAA03DDE4FF0A20B7BCDE91A547BEE2C7298C4EF58122311AC8FEDA8C7C89
23FB4AF9CBC323F8B3EF77E5F31A4AE413BB1D46CCC77C764A00F85E9CA035375D3940923818
353CD3D2DED749E877D212BE6F37799C8D4F74F9FDBFDF38A7AF6C05608C266E4EF61EAF6956
0BF2C1646A0B79B638DF933A3E3C6F823515E76D4D26C9C7FA664531545A93D6065C57AD4323
AFEFEA6A1D4C28FF4C34ADB130C135B0BFDAEED4D7F5EBB5F790D487E48855E0BA273390FF02
2F1F2E4BB2DDC38D34072414D6E10BFBC4A12EC6CFDA497307B49AB2E31DFBA75540D0744434
C4691B77AAC845E5F8A4A67CB45BDA63F1667C01CC6BAE77151BD3DDB7D684436D84161AE1D3
07386916EA23D0F062CDB98A37883695820C7AAF7C7BE7A6A89490F54D42A818E570E5BCF148
7BEAED0DFD9B1FD632690D68D9A1C8FEA1EB86244B3925AC7D5A0AAC70B75D1723135E4365DF
A3F8FEEEB92915C8C140A40BA8307F9898F5C554B6C38AAD2250EFA583F1337A677800FDCE40
2FEAA81935D2714A1F5D23DB20D18E0882F779EB252EAAF6DD985C40B29D0B072C7BDE58D981
1571368004BA3B53730B2E83B0EAB21563BE8FB3CDCC159688355B9D00E41E85FE324A32AB59
ACECC4BB89937C030096648663F5D2A3E20BCEBA7C83A8D9B404C04A9556286923FD7A989AC3
D8E6816D8431FAD50199C4A8BFFB1BE7855DB915AA26973696EA1E30F8110D558567A0B0E626
485F03AFF0AC9EB0A0F35A507E68B1AEF52901C06304B7125F5F25F39A1B075E84FCDCDEC1C1
0DEF32D0B3430416B4AE396625AC46594C6AD5E4D14CCC7FE4A040205D79652F28435075E53C
0B98EA6AC4EF5F9C57E47C55B34CDAB0142882276F30C8835D82F47EF717845A25309616EDEB
0F891582E67DCC7C7885D8AEBB83CF21FA6A9D54B23C7686C0858943DD37B6B68024CC6884FA
F77AF027755DB73298A7771062824C0F10B1B1EB2AAD831F25BF86F73FBAFF358323614ABF3C
BDBD38B308C5693E3118506D5846351A50B9AE3182311632368D09AC881BDE8E6399F62A3680
6C7940CEEAE77800081A18489676994CD70E2C8361014EFF429B2813C09BBBA8ED23468B2BFA
5DB82A23519E25521FF327BC881586881C1F98BA02F84A4B413BDF3A6422352FEBA8940BBABF
3AE38AF6934C4E30E680D58958DF689D1AE96F07A0A5E06E4F7ADDABC675E04BC957399168A6
04F30218BB024315085C15B89E12B3F022D9953CE9C78C0CC33BD4F504E36279CAB174B72F2A
4B8A8B6C191B35AD76370FAF65B07E598C4D0B0E5F5F80279C78B98887F31FC476281C30AE31
B533092C8272B02F088194A11EDB426275482A25850964E961F1D6196B72AC72FC0A0B7874C2
5450E7340AFED9AC0A5DA21C999DB419FE68FC2C4CB9A99BFFF4242336BACEB9499D3DF72CA0
C3A119F662F8B01B4BE1FFE15EE19FBDD65BEBC8F63C04343DD910DDA3C9FB43AF5B546158DA
BC43B969D7079040BB1134C7A77848501BF6079C7BD719168A6A097E8706A344CE6E794E7B1E
4AF0629A269E6B3CB94CEB756FDB37A187F048306748E049052C8C8BCF1919E7AFF37FD4D440
CBF3FB382BAA64E7C6CB59FB50098E8DCEEA004F8F76BBA063BBC257A1AFC4C0016C662C8B51
7A14571B117B53B23C19291BF06509A2DB0F28C50663B86CE98962518988C9DC77D356CC63AC
673985152E29BB74C11F25F69B4AE5F9454124923BD771C0210A1F84DB24675838C7B7157C5B
C270972998881129555BC30D5EC7C3B96629A15EF7FD4E62B83EF68CDE81E9B42B4992D71A1D
41631A8AC7F8398C91817CB96C56DD7E840FAAD7E603D54C4AA4843DDA7E0643FFB33EC9001B
26CF73B6FF3CC6E3073313E093EBBA7B9C9BA7E81C50F1CF9A6493C64CC297192C2C212BCE46
ECFE6CF40B90CC311D835C46185D4AB2A8CF8EE1DB9B71048B7E8BF4B4F0A92C0050C7B02F2F
7D7275371953B702C7AA80C84BD3E0DF90381236C47E45C1E8C18B2518581F19B3715751DFF5
D1D9D941321966EB6D7D4C5546D3D7012EA2ABCB6CCDDA89A7A3B282DC068B16D6E602544497
83B9705E1DD80DAC92EEBB2367F64AA5DE45644BF69541FD82564EA8934A1CEB404D8AA516E9
209FB94C385487F04CFB8DD56C25DA3D728CD316ECA20164488625C9B9CF49F1E25BC1550E0D
431E3A98D6D064AF2B7DC0334472BCCFDF6FD1AEE7BD8BF2BBE556EE497FDDD29A8E39C8FED9
18F809A7B68148C3D906427BCD7EAB513F9E8707AEE1297737891163B123F6E6A9460172C821
5855A9DCF1F5F9B8F886439BB7326E860D88AB2CF7AA8072819206027739C55D173BEB787DA8
2F52B81F556B8811EB894DEA42106CBEC689BA1CCA966E32493DFA9B6F6DBDADBF8E12AD02D8
A4EC8999944601310401A7FCD4D0F6F4D53DC67FDEEFC46B59884A2F92BA99E7AC4F34631271
45D271B68FCE4E68B91DAE697F545F365D9B416DB0CF2DF27680287F2A2B1F57A9F3E63B737A
108E33B80B9C3360B484EE84376ABC40CE5118E757D84BD66F4A68F342ECF653996EA2116531
E9796347535B865483CF9F7009A6B698025B8F9C9B0708F7D78C26C1D69581C0DFB597456453
2326D3AECDD24469211E04EDDA43CBA827E1B4CBA44AEFDC5708615485D29F54D7D90B037A7E
45B7FBAE21569D576FA24DC71D4998544EA280DC343024AF849A21741C6AACDAA1A97CD9919D
7EA4BEEA401E2A3A141ADF22DC86154984A01A5BC757BF05E5B6551DF1083A60461F5209A54D
BBE95FF9D6AC69E71A01B0BE8C638A929A8C4E27D2B540DDCA14E5E8D1EBF03555C0255C80F2
EC2E843308EB189B41C38D5A6023BAAAF989FF0F0DFF88E15132F8222DB031074A26F026C4F1
DE8D6CCF231938E82350E5A886ED7EC4718C20994382EF9E2CF03797BD44F3EA6D45669BDE32
3C6A079C9BDDBE2F9A98E6FBC31B6551C5202623355E25A05DDB3648EE09F18658BB9FC125AE
6CC4F0584C5ADA6FEB6485C21742D05DD03598AA54D0EF87DE419CA77C367AA86292FEADB33C
567599AA78194418F58F8ACEF767BD07F39E57D09C64F2DAB4203171CC617DBCECE4F54CB0ED
7F9953F2BBE1101B86981096D65FDB632B68A0635F4310BA28661B02097A35B838022851A433
960DBEECD836F779C0E5BADF19D84181EC30896BA4BBEDA0492CED6E041FDD781FA3FB02A64C
CF2018CAFBCB94EDCB209E15CBE608D0CF8E9C169566226938D9AA1E20B79435A91C0FD087E5
415232B9A5CBFF7FACB4C18212CA6891D2C26BB71EDA0B23DFF34F952179E622D408B85E0900
A485EE8552A6188F322915F449D05EBB7E5B848109CA7D2302834B39CE5265CE43C11AC97A3B
D0B3C197CEC0E68669D19AF03A0248490256EC2B520F0B5C593D13C436DB38E40188125FB909
9317F42B523D854D82FDE86025E172C930D943979B5AC52EB448E2C481BDC9999CDA6600839D
B50761023D471D8FC907425AE27E4EB9F56C685DDFF2B8D23AE2E85FB09BD4813721E8E80780
65D8E43C6E95B89DCE0E2CE1926E47FCE3AE0E8DD20AF466F1E5E72A5E7440AD4E89A4B33CA1
097E0D752B945FE1ACCB4F66BE2C3A4D88F7F023E0B992EFFED9F2798B3F0D8168BDBBCAA8F5
703804B33DA76590FD3CCA57AF60F057EBA069248342ABF5DC1A32DA0DBA2FFBDDD0E1E6B2A6
5FDD311F3FC0F7B0BAB2574D98CDD54662588B5B74BB38B1B9D35C6D37F047E6E5E0C390F40E
31562F1181AA6B7CAFA5F3E486B367A3EDF8C60B1B8348B09A6B156DAB840E1D813F3745F40F
FBC30ECBA7E3C0911CC574B0BB65D76CF2154D89EB5BF5FD83A8D883281B2C98DC9ECEB4B15C
D399C71B3C82B0990106E2B5BADEFF389937E5B231699F85480256AD22E004CD0642B574CD4E
873869C7393DA0AB82FE2341E91238E4D73F14759B8B1DA7E2A4A4CF73EC8BC448F6E2B55F00
6E1FB4F45C9A1EC328513415A05129F51CE64F1B08A5D316E5B750DF89B9E96E0D9A4FE3DF21
261BE754949F648104685A0B87808EAD512E08DD866CCAE20CED1F72F6056EB662A6C53D7799
F0A8D519F1698F22E970DD8196DE984D9EC4A434DDDD021B79C70DE7A93D06427CE26259215A
540A6422D434F6932DD44876F812771C1B5E2DCD44288C4AAC829407898F9B7D513FE62E040F
C34904C0692593F7B41B150759FE0D46DF651A6E268B72B955811AD44BFEE29D5A4FCB9026A9
9CC6EF124A639775B8E36C8AD345E7045092A807C68E7282C1328AF42B254A9546D1A66FF7F5
DCC09AB6442DA67786DA23610358C2701B8F64FE20E2D18D00E772BB8088EDD2D12DC6CD0C2F
33768F79062202D9C4B9B3135780CDD1E225F2AD527EC7E97FEF606277160B180E6F9B009812
97826051CEF05B477E9B7CE781ABB2DAD585AB49519C5058A8BEE36CB298F54AA5E59A569E64
FF752EC961071A742F1AEC26DA2812AE9871535EDF8253204326580FF8AC65FE25D9C9E71769
1A28D21C3FFA538F516758B87099569A525C8AE7D37AF9FC6F4C43F6A627DC0F82C715571357
ED161CD2C4371AB789549C7062866B5FA275DC75C5EB5F7FA142FF71488951B77240EDEAFD64
F1118BE5DE4CE612F6D732CA066614FF47A0AD117D8F7C4179745D40451FB276EA41EB2BC26C
0E10BE2AC2954F2AE5AA8642BB661D5F8A379678CDE3D2A197E787F5BB182173D992588D2D0A
2C87A65534138407FC44136FC1DD134472846FDD40A2C8582308319FF7F771B09A2102BB4268
FCDEB9680404469D55B8224445427C2FBD210F78BD2B17B51AAC0CB6951E32AAF6432B57E5AE
F5D4AA4BB3169A1DD4414DC26B701B0E0D78B54EBB7D31EFCD46CFD00263BC8CBF85019EFFF3
4223CF4D2B32440C369E3A8D9229B5BD48C963AA2C5CD0D47E23F3681D8D3A01E77A8FFD3BD4
651E3E29A60EAF7D619EB102FDE1F3F084D1C0E486DBACA2844AD94D8EE4F72BE482B3C2237C
AEC43BBCC8E9EFCF30F4EDED8B840CB9501A29858990340FC73D92993CCF861A09510BDC022C
D8025334F19BD978C742666E1555A115FD6D326B4052EA785A274AAF4DE86740CC280E3B30E6
C114EEA5F7424DB6CA30597B09DF3879EF5B86EF58C7769E8FE84174D918641FDC87740CB896
E1F311542D85FFD52AECBD7BA0983FCAD5A9465F08DDB8A022F253B57E617087D82F1A3989DC
751328E391BA0D2EBA4DC44304C43D1AE9325EC7B5BB0DE40FCFE212408D1FD006CE05AC5F14
CFCA3CF3753AEE1C49C4244C9AB73C24551F4AAEB20AC2453F08EBC30CA73F6EED2E081BC622
069D78F566BA40EA02C17071143F517081E51CF45937A007D3536475E81E3553A6F67C845D75
F489C11350BEEDA281F551A7FD4845081B4C9F970053C40952FF925FE9E68E9A2AF0FE6B3FAB
7D8FF4ACEB3B25C8A97080D78AC80A26A55E2879E1F58454CFEB2D9D030AFCAE0B92DCF9AF7F
44081751B14BEC2E5BC52B97B78C4A2065727B6B0C0A21DDFBC797F1B2360A1856FBBD6E5E18
6AC9D956D44D8B86417950249F41506D0199A329C005E819D9085B0941545B8E07EC6E249B77
6580E7127AB0A2707C9DFE8B6936D72270EB83D4A1232FCDEE24551FC0146EDB5F3A5C7123CD
22F132F6932C06822DBE57ECBDF2A9AFEDED76B12B6B301879112FB48B832E63B71BD2E1BBBE
DAB1C5801EF98C554EA961D3623AF4A69122B3258EF1D99050B8E8821F838F39E9641FBFA7F1
1E37116C4E2F3D637F77172748AFC444652CDB578933ADB33F13AD02EF14D563AD263933B0B0
3A64F44664D1AC55D7F81306F39AEE5EDB97483F0A4A1FE52002E15852E00AB930160E3E26B6
4F26E1E096EC29BCF35BF2BFDF7C552A166757E3B14E2ABAC82F9A3FB137BE021C253B5489F4
3C16E33FE85A0599E642DDA32B1AE9C276DCA9772D06D80F724BC1DEFA679D61FEE51A640EBC
246DF129E72D3DD1C4C8DDCE1FAD819E7941570FB2F993BD49CA2D5F5B07B48DE067F525F6D4
A8C66224CB5AEAE6EDE2AE427E7DAA447F88C03CE4E2E08031AEA52BFADF7786B6DD081D9C4A
35D140C6E9C09FAE6873FC6E81503EB9DC242CBDD3AF1DFE9642B51C250999A9777E94327578
B4D7848E8355C04DDA48F3248670130A63F8643C18763AA8DC7B3D07344540E04FEC25758EA5
5185EEB8C469917A93FD4065B8AFDF3E8E41EFF350CC5AB107DDB30DF95639C503CB27CCBF6E
379036ACE8072BB01915C4A29E2FD073701F4CAA029F2C3CEC6205948DC0B8E314934D2F26EF
EE672EEACD691BD65DD5AD52A7C3C9969A5625FADCEE7D8312A2B05FA00ED5D40F6DC6CB6210
35F16F483B202D476FA1F42526588F68316C3B4E3BEC6EF371DFB5DE3C8D3B919A81C868E456
04491DB2C2DC7E0105C2958D5467A2AF853D3471902273FD5EBF609E124449ABC27ED4BDBEA0
FACEC1D07C840281F4B33A9FCDCA68CEEA5E0EE99797B6A0182294382267B5DFBB6ADE3D575D
B8C7675C0FAFD6EEC063794B0B882DA8C9B0CD7A482274F1CB1A3296EC41A949B77203B1FC37
CE4C92A3683AA2E8921BFC5B3C3A0F92AC847DEE0F651B604A9E25DD54EA7E9693531DFD20A8
FB3D13E448D0C19EBBB435137D4D76FB5A9CC3EF7DC115879FBE05A08F332F8E42216A5B9EA3
4DBBE5BB3AEBC348B040DDED351708CE99862A8D60709CE507E5A6CC0634F8B5981E70C66D02
3F3587FB826EA016E425C9ECFD5560197690A5C5F79595CFFDE0E36E621D5C283820219DC64B
999234D302FC69615E70BD85107930C72500F879BBEE3B9C3BD0235D344C9785EE8AE41F583E
63898561A57E9187C3D3AE0D10530E831E17374F5927D7AC6FE54A37BFA5635B42857395CE6D
524A8EE4711368B792E1904E7C50D11F42A4F0F4F9AD98B446694C514BF8D6A4E87BB1CF1365
303C468F22D872916C1D8B600D8865487EC3BF73BB414CBF11C1E8173B87B4A967974818FD85
855069C3C5CE702786D4A70F0ED5183E7EDE3BE6952DF7D2C38C7ECD1196A33D852A5A31B6D6
98D1512E3D3216C80D57ED25F19C8317A3681F767D4350CEAD45ED2834D21DDD68D1AC4026B0
3FB033F8BC413C74CC7E72BCBE0645A187A5D90582198C3B22AFF612C3D9A4C2FE729A3B59D5
792EE0DB5D8E13419A5CC1E6627977684AD02EA4E8C3AC48E54729689913DC68B9EDCFCCFCAD
5E81FE09FBA9D2D7DEB12678B4705D60C62C90CD953AC5B52DCDDC5910D48A073F0049DCC48D
D5AAB92D0879CF8F773116C88A292B7D5B184CBFBD4B3E63169D0B8B451035CAC039DB2C5C61
8FA49CE91921C6C3488FEA5231FC9E447CA2650B92D299968BB3370F117E312BFB54A0FE1D90
8868897C0775ABED1360641E07B517EA7EF998C18C16AAE9CCA83B2601384F483E2302ED408D
6BA754214E91AD55407474821B0006C9ED6F1E5FBFCF77137EBE56073E599857A1CD14814E47
DAB386C248C93E59D0BE22758E3B94832723ACF815D57DCC4E8136E003DF256C3135CC27447E
CF92AB814333C50AAFF5EAD16865CA5AF8624B2D5A83CD4E42C6FA729B3E4424DDCB9B5167DF
BB7EFDA2DADCFAC5BEB65127E2857431A6C48D6ACB7A8A0A715B762594457FEC6C9A25BBB4B7
50A653576EA7551915776879914F1AC56EE378B6141CCAEBBAF438865A23FCC5AB89510AA9B9
6095D81AD8B72A1BE22C8BCC3E6E3783F95C7CBF5CAC4771CFBFC2351866D32493F481F46F19
8F26357554CE7454167FA0018E84E0502EDE5AF41A8DB91E65981541C6E13F0FC75D68E4761B
63A9ECB42F557CA56448AF94B8F0FC430D1B45A649C863D9DD6E33946ACD1F7E80ED34294B35
80EF6F622C326C1C1BB4025FAFF8D14F533D8259C5C7D3B0918236967093D1D8A5BC16F43DAA
7303905C553DA080A7B304AA5D04121801D16F27784CC4BB4CB12522EA35D3D0C3CE69381B39
E1656926E4E5DAFF4E26AC77981D0DFA6819FB8E548D3542A929D6088BC6B701DE3CFB7BF06F
8B6A3446A720EC72FD3B8AD30C912C159519F0F18C0D7103A3A34AF5FDD84EBA6A9BEB51B677
3E79D2352D261F46F8EEB0DD871C429805F75C6C1E40D08944A743ACEBC68267B884E871FA45
5B43B5F73E9DDDCB8B91B6C8F8588EEEF3190199C8C1DA1521DE22091324E8A3B05D871D43A6
B0EDBBC79A4444ACD7093D85D47A38CE6804FA3897235D45ACB569CE4D13F0E589DC91746E75
4142133F3B820692EC804401C2BC2405D776A9E7D4DA942790991B104039E2D6B29D997C82D3
0E5B6620AD7B091D0C7462F3DC951E6ECBC5A2FE3BD8838B1FAEADFC92D3E04988F15D20C39F
7004EB3F8C99456C170968E137D5F5DA3AFE7425A058C87964E0FE0F5EAFD37F8959CF1E4C01
29D79A78D2DB8BD4730BAD8499A5599D57026DD74EAF62DAC33742C8169DC82657F4B64D917F
4428C500DE000A12E26A6AF8CC8B819E39E25CF5D5869E0E9A9E15DF71DEAA56CA3347186C7F
B8CBCA87983B8A1715FEFC86F06E332CED9099A7FC8342CFBC8BC6C9E93332B794C38BFB695A
E74DFBB769456124B92A6FF345976E085BC1DCE98EE940C660F4D389A014D3C6C541D2C7C1EB
B02C3343383C13711BA5F47325134BC61880193542CC1BDBC76E2E7C0CB5AFCE283940E61005
416A02776F86829EEB12E81C407EF78A6E832E35DBA07CF669DAAFD5AF376BAA08F490113E69
F47405BE56E54CC41D075F0548F2FAD41A1724FD1701B829A4E38CF5840780096CF8E0BB2CB8
CA3E598BFEDEC215533B5B06B2CFC4FB31D02B3D13697E62E4081D5BFF712EAE97EC91A2952D
59BD647D3A11CADCD038BFF2B746519B0E9E6C608C346854C09EA2626FAF90B5997B4BEF68BE
B0EF028FCE76070BE28F17D57CEB0142D291E4319AD8D1724D31D252286A58D4AA57A52F30B8
2D1E299E98FEC2DCB70D52F4CF2ABAC1DED6A7491EF6FD77D060338C4D444B10BFB6BB354BAF
3350599B79344C1DEB913194DBA55893DE256B5527E3099305BBBB23AC17E92E49B867C91CFB
7242C8DFC16E97A32C1EB13EC80D7A867AF7C0E804B569F3E8EA254CBA5B12C39AE8C07B89C2
2CDEA6F49C7A4049006139BD3ACC78A15F46506D7BA5FE59B5599B2F2BD6CA3B7216B26EDBFA
68E3818EEE8F7026138C1805C1F3FF98383508195ED9A43476F9E43576A803A013C62C600421
5B5EE60502B5D760E1856AEABEBEE0DA97DAF61652992C1DA0F82132FB3384D3907E8100AF98
661FB6A99122BBBA316EA9AC27D1DB8E6E0A4A49A9A09D15BE4BE0A243D57F75455FF8702ABA
23B4C55EFBEC59DB1CFDABE5E8EE48F5E711FAEDD3662034E8B0CBD3E14882B3DB093040E94C
07AFA65AF4F8E03A852A5854B26FAF94973793BBA1730F20897AE75FC8ABCCF37E5EB6DC8B61
81F492A569554212EEEF96F188B8ADF1B9A43A89CF704DA1605D411FF4782929A5ED9A05ADCC
3CAFC5BA211FE10DB357926E17408FCF911828A0D17D775EC8069EA1EC432111B089AD69507D
BFA8D5D28961FF3B518AF2028B14D54C7A9DB71AEB1C241EF91154F0DD81D8E4B3E0BDF63644
E69A089F6A6FEAE5369735C2229ACD18CA84634BD4A5833C7FF7AB532C6A0D10C39C5B59345E
B16A8BD0000D536AE9E221370B5C871E5F52BE6FAEFECCD9FB87BD1F9C9DA9AF80D3A393BB1D
C210F25B92F098D391FA47A22B05808A80B7AF640389D5426090D9EF6D9F84060C50BCC0F413
6ED43487F2C5F8567B1E76044FF1DA4EFC628D984E72E3234589970684A97562E3F331A393C9
DC84B793C678B067E06E2A19069072EB662248D9A1CCE854780341DDE5D366120B97AA4EA588
58CB7B5F8460E465CE71BBF1B93E6C4B7F44617DC8E2D09B920828C339CAABAF3EF1C20486F7
D845B1EDD8C1F6D35EEB4C6932B838A4C27C5F4C417EB9826FF33BD62FB9C24161DD09CD57EE
0036DD06B0140B5A04A493F7FF8BF7ADEDAF42CEC884C661D94CF87537534FE829DC149F86C1
728B3AFF02CF03A15DB30878A7E8AA8BF5E3299C87A15ADF9D499257D3D59ECEAF8977C23194
4286B614934B2972912FE810EC06F36949598C040D6A98DF136753451F75F4BCCA05EEA9171D
5275E24538D08232032B469C62F1C1170F21E2995899E0131E75F8296BF6298A631CD29617D1
73784073A27185C47EEB70E6585F01DDCDC631AC9C4ECCB1F3A7A76F42A04FF28BEFE906E5C6
BF2D84855145B59881B4AF23FE192ED5CC21013C0AFC92C8796314082941ECC7CAD4259A15FA
653AF27A7D00F634ECDE68906606B1B40F2C651A03320D88A138CE2F06D21DA7F4AED58D41A7
360E5AA4DB6CE5F4C8881F22FAD66BA88239A840880CF5031B35A0ABDC3F00F21F32FC628128
4851E2269FFBDDEFE06DB801465EEEAF3F7750C49F3CBA012465FA17C4240C807E105A936AF3
E7194022C27B219897FEE2AE1D7E7E58D3FF2F8AC35FB8C52C6A0C38D7573413F67156A61D82
41231F2E5396A6152986E2EF7A27509B76B7DF6369ABDDBB083F16A5C70E3FBF92A34B5B30C2
10BFA3743DA6E8EA1F140E7D1ECACD8027F447B9614001AD8213EFB60B3B8E83A5446B550933
BAE5B661F72F5A50B37FDF45A6E6038BFDCF3145E8A9BDC3DCBFCC6CE24D7EBB8C6617E6A5DF
676DAC5889FF9FDB15EEA1FC95D40840F3E6C7267F3C6B198F4DEFFAA46F1CA77A1DD1E297EC
18F30F1BFEFAC2AF1FB2725B94CECAF74D9AB694CB6F5F108A80A75F8981A68C562C230EFFFB
9642911B2B89DA53D2DF651A4B547BF0887DA41221F9026D9527A70A86403669AF5890863343
6A73AF015345530C20E87ADFD8A9EA82A7C866F2D3F771F55A19B9DFDBB6ECF97686FF80AD7C
5BED8DE7AC898C85516610100DD360EDD6533C70625C3AFA4BB53EF152307AE3243C944505CE
A25DED422E0A80C511559072CCBF81A944E86D2F4F4F807ABFE8220EB3EE0E5D963F35EFB019
FAC94148256F8B0DC75ED25AF01B85FE3FED749319AE1CC76FDB709610708AECE6232EFCEF2B
5445B1A53EFE1C2B0D9707C33CEE787E5E69266BE42586B58BBC8C7A265F852711F7FA44ABEB
12BC19791CD367DFB74A236C58B4553DDACBB1AF5A5A6AF6D64B87F1AC64A91635CA15A2F0B1
C1AAEDA579ABE603BA84311B1F21A5F865776E2E2AE74333A21E530E52DBDEB1C01BB3FA34DD
85994AACAEC7AC645F2AA8E8E576990ADDB1C0F747F217BB62FA144F0F3A03FD31C98EBD30BD
0012C6961D98314DC836B1FFF145A1F70F77C1AB9E27A93AB460601260B323E700BF66EEF61F
86DDE24E90A8074A360984128DCE336486616C0975CAC113908C0E2B6D77C8878D9A91A68FED
62FDBC1F39D6E41D4515BF1C6FD54323C7518FF120AB21BAE423B00977269345C0328033C267
8AA55EC2A70CF7D2AC62176D9FB9A74CFAB922866041E33BFF0F0E1B8B149518B5B13F77FE39
4019C69F16CD04C1A55EDCE15A46FE2009E7E49B5CAF060C89F35B9A35C1BCB52A112644141E
D01E2B8C144148A53340F57E05E6DCBC1491ACFB198CB7B23071C7262776A1172B154F097626
F3B34B4A1BF0619303E995BBA6DD954FBA149FA0021F3A82A4C019D10DAA7D97191F56FEECCB
8E93487C9883C7024C4998F54AA5E59A55D34F8B17D025F002C8C88073580409FCE73C4BA5D5
97267014148710B6F9F83C5C6A0888FBCCC2A40D0E0B56F41A415910160EFF312619BD4D6F83
6ED6F3E389C51DAC5D1DF382B925D2EE588C31C883D10C533F4BCA27C3161831DB7742CAB2E8
8D24E3762B7270CB18A1FDA1F078BE515CFEC3D4A39CACE15BCD1E051836956E4FC7FA004C77
6480EA8FFAFB732E1167E57BF66F526737033AA85F3E16F70B95DE9F7CC181B846DB09DB565B
D825B8F2248D94F788578418CF8AA1D1699ACDBEE26A665E4093F98C7B37AC76C1B33573C99A
F187A86063D773A468860BCC30F49E29904CC42C606C25179DC5560E467B8708B7E8AC1E0C79
EBDFEAE52F86928FE6E61D3C17E19B7135F0D055DF443D35A32FC51FCC2F27B8F37C1E1A5C1E
F041B450B32219FA1616F20F334C34101FF8912549D36609C2AEA605AF5FD21B4548F708E692
B3E534423EC52DAE5D330D727BE5E2BFCACF54230A87E9F78F5959CDBAE7DC032DFC2E5034C5
B95F2E8768EC1B23C0CDF2921D4AEC0B2D839A1C556F9394DB3DFFE16824F2A5363D2B1A655E
47313CF412DEB4C3347ADE4B767E9737BBF30B005D70049D3A0E2B90CC59031412121FE5CBA8
464CBABE9A27056E8DFAC7FA016CF35B353A16BFF627DD602EB8E2128B5077CF317145F4ECC5
24F20444B00F7D604CB8424E1F464BFC4A3E82A6097702BC2667C77932783E1BECDE667E7E3D
C0CBB360428C2247E91AEFD8A9FFC88060B139FA57E7FD00506B89AE05D54C8ECAF12C8671EF
D2AA74933FEE8AC0BEAC2DC56E31D305A9704D4902F8CB32200F2AB7DE32162E34F09F640D35
ACC384E9B4F5BD6F6C211CC88543132CA951A42BFAE8BA413AB8B3C9EF1D8F3CFBEC1B247645
6D7AA1D23F2BF4D5B6C9DB69208E58152DC81D9ED9F5A5B281ECA1FA9A34C845755CAFD77055
1EAEFD70BE9072CB504F2C6EB95EF24E4CFBEFF6298C4728CE33F6C7320D2EC517666A4BD98E
051104732780080136A226CACE0510FAD1C2A90FF6AB0B75F2B6F77B5165C6E60C674F7DB2BE
0562F20A45E4A1FEE61FFF1D395555029C1D33CC96731F6071B7DE1D13883FF0FB6F0277D3BB
0C51A71B6B8670FC755EFEE074B1DC13AE97EA73AF8FC8893B73CD5197286ACE11CC69FF219D
D62FF1E095D43077D1D2CC4C697E7C3104A9D52DF04B6075C65002C2839C52EA9759D337AF2F
5596D4EA02FBD0199BDF01591A12CAB8ED8531BA2A6EF7F50AE117B450785C6C1B7B64527D1C
AC795D43CC7CDF62C0E9E530D8FAA4A998CBD9DB31C49DD178417E393B7DB025EDF52DA88403
613989C5C8C7D7CA641EBA5F7539B1970EF16CA5FDFE8AD94BFAF5189CCE3D47F08AE5ACFE74
314113DDBA2C7D246FAC73122F8B5A004BEB3FAB23C24ECFD16BB0B8C05F96BB1654FAA5CD7E
500AE3D6B57226A38DC220B253EAF199CF628A4B98B5871A592BCC6AB7413690929ECF462660
0B1F810E86A608A5C9E0E1EF320A226D19DD538D7ED833B36BEC00E7EE6C6C559D5748D14599
CC66DD9E1180888C9F941BB4A94C36F342C26E14FDDE5F493AD176CA9D26FE74C93F98094B31
3837415182F40F5675183BECA8CB81EC0A7CD9BF33BBBEFACB3EF2D3AD6C58AE5D8235BDA0B2
AE3AED4EB7449F059AE81BA76D8365B0EABF4E9F85135D5CA8483B84CCB66BF94B6D6296133C
CE7B133EBE0C17FAE49B3D8B81C9A1A2E16E78F0E841ABBF2D646881E95897331FAC9FA9B370
65B782300146AACDC1D77BA09F962CEA19BBC8A82A5193DBA9FEECCAE914943649DFCEF7EA89
4883BFAF26B1CD5F63D72AD889D0E603260A277E2467F1A3CA298F8F6B755F9048F0458B4BEE
50C60A056FF42A81CD56DB5BBE7EA4C6E99A654615785F0FCE376DEA3D6705241D65650EC122
0CE9C69803E8B6E1A61CBCD8F812B0CB258E8AF00D2C9B74E7DFF2D1D1169D560376C2E71623
2672FD54790EA4409446D5119BCFAE3A5291A2E11326D538612C3B32731347395388F5FB1BA0
B2D4A1CE33EE4B71C160CC90E58BA4C318793A8FE40855776174D2702F19D2A6ACF480100BA8
E09A1855D5027A5F84AE6B5A58C7B22CCE58811F9CBD5F84B57B0D98E6BA906B26322F080A1F
BF9ACE44048A1D8EF3B6A3D13C4430190C7F565B61D2CBEE29013FAC80C57D472BCFD574FC1C
C350B1C797CFBA8B9EF5C5033D4A4426137D6E3D5C68F784753476A9C9C8C6BB497580590756
2725164A7AD7C977B52201AC3BC10049F8A302B5BFC1486338E024938D24BB7EF45D168192DF
328784CE2E01FDAFB78DB4054DA4B303547A11E6F187C8184145A27C0BF7756FECB338729F27
D985F43812A3D7E83F92B6F1F1158E7E3521C498D49BBDC0BAD261BE5769C293203B27A3D6AC
E8AB1D7914265254FD3A73BE2F5E27D5A1C4B1A7F4D20D78B843661D72E55E2C90FBC50BEBFB
57C5E540E2DD3B077E83EFA7FB47CBE7CA39EC51F0C076896CD6B71990EDCC616459DBDB764B
1ABD344D9B11BCE0E7D1ED59A3B587ECEB80CF44CF37F3899436F5047C329750D1A1A580B3F7
4170AE1BD89410B44FF8035AEDBBAEA7CED897F61A7F21DE5E2D2D26B27E484CC57F07D1D435
6B0999CBEA4EED97A0CB3A0DC3FFAD59B4FD088DD8627021901DA7F13FB62728B7045740C36B
68F27697EA8400B33CA5F5C34F34EFB31A3FABBFBFBB1AEE8AC1C09C44247CF8F779789CA3A8
CB93A3C4E3B5C94F9E2A82FC866EFD56FC32EF2074D511D168DC6B8ED1D7F410C499FB56F86C
6886B1BAE72E2697C872A164BA00A69E2D767B7CF04ED37CF49364A6F746378B056526BE42A7
C8ACFB2DBF6162FDB3B1963EE4B1A7B682D7C49CD1BF602A14506877693475CC319CAE139689
963A4A2ED287E65B2DDEF8B1739F434F42F86F70CC454EF2967EAFF00A94D71B8FF38928C649
2C0EF3E186745254D7D61DE7DDB8C715FAF30FA3CACC8EBCF1EA96A170282604E1F30683B325
26B02548C33D07A68FBF52B0E0C86BEE448955186DA29C7F0203EA04E2462B96448D4BA987C9
746B062F9FD227CA29995862400065AA32A6456BA8E8E6D4FA688FA1B9F7FE0D3A2EDDAB2363
C7F29670EC5D30F9D990120BE603FF6C454EE2103510A06D995A4D6375476235B10F36819545
76B5250E21891CBDEE81A485EC8ECBDB42FA603B3BA55967FE625A3F9FAC7E2BD8C3673F6737
E01761EC0F7B7DEFD268E21174C58EBFC89A42C994A5F184C27848672CC1CEB6C233F85D8C82
4973473F90C1D53439C4220D2E0CD90240AAB1EF5943A4AA40943BC29DFEE9B8FF85EC59D04C
AA40BE0D7E25402BE05CB3FF018E858EA712B5B01043174C3FCCCE549EBAA14B3F6BBBB180DE
B09ED78ED11BFA9CD9D9A0585D88354198A836E1944222C1D32FA494105875EE7FF48FAD20C6
3FE649C7006F0EADF7C6125E42BF1C4ECA320826CF6CCBA2C8B0801001BF1533592828CDDDC2
D5B633059C3BB802AC5AFB434022C1DBD73A0CCD78D03508AE60EE316E2F0AE1537D24D7F2AA
CD7FFAB04D67CD973CEBDD07DB799E4744D0CFFD757EB0B5D38F93AD8930340A64E3E4EF7F98
0858066D35C6E667DB8DA599C6734088706606A348E706E08906E41035C53E2277FD0F5456CA
68683D07E37FE092AA5E6C1B2EA13306575F3203D04539D083D1EFB4439B26DB58A079ADCE7C
934CC2AC665A358233C333DD21E09AC53FD5E9341BBD8C7914667C461FB1FE0E651949BF7526
0C7EBAF92F532D3D09D9DB48EF8537CF035C4897EB01A7508F49FE3522735F20DBF5BA7F7510
3F935CA1BA92C7EA795191E95AF7AEEA1E993DBC6C4CE0D23072EA529EB169599B428F3ED856
CC243D66EB57ED5CA890719E16695D5AB39E06F5BF6E2F4F4CAD94451D0778FE86F82BEE8599
CF7A95F11C5E9136AEBEC4A0D7975BAB77F011CB1E53B156002DE62E974739C4D997555D6387
EC613B8F25AD77A3E27D70CE0D9202E191C9BDE16F81D87DE3C3B21FBF3929A9AD604C4C65DA
382C4551FC5879DB92989DFF94F77A20B2484231C937102C975470E5EA3B26B9AA3F093EBD6F
EF9D474143F93D6E86E7F4EA7C12A507614959BDC37FED8142556F1853BF110C80528F0027A7
5DB0BD174CA5E3C980DFF732D01602B3643C0DDC45B73A25C54C60680EB4848766215A56CD33
AE909A1D825723D2F078B86B1A3B1502EC7D9A5CE18AEFF1A4412C51BBDBA109573FF165E909
3D45C14DFEE24F66A33771C28BAB6ED0958EF8BBC189448DBFCE47EBFF9402C8989B92004327
D321F6F920FF0E42596893BB0DABDC706E7C9E79F00B2CF788D86A8FEEC0B04DDB591DE84949
1F7AC601FF52EF304B2ABF989CEC3ECDED234C53760D42EDAA69392B0A274C22E794DF40749F
E2B458CEB886E98D50A153C94E4FB31CD47A063FE294CF640488B04B024EDEE083FEC7943D4B
34476BB07F41E21191773A8612FB23776BFF09699679250D8CE3F6A4ABB72A1D1804686C70EF
9ED712170C2DE38AAB4AAD47956EDB53BC8EB8D9EAE4DFE339ACB65AE9027122930C4767BDF7
232ACB2F8CB49DC6635057C7105BC5461FA69BD8EFD6B1EE9A9358B0764B6036E65EDBDB2FBE
20982917DFA1EFCEFE2171B290E6A6B65B75079919DCD731A162AE5B6CB444DAF8D44A5F2E87
CBDADD2F6875D231531ADC3BB91A65D17BEC5BBC68CD3D4FC91DFF7349819689290C5C449D63
551722C66565426EC04E20CAD312C641294AEA7229EB608EFFB42C27D982842D585EE624F0E6
0A3DF8EAF84E1A8A354917DE56E719296B4714CF3E1150A0FF472E2C145F29B5368DD156438F
D74644662582CD1DBAC668D2E7B491109C42CC9EFFC99E6D7D6E8D3E10048FD2939F017DBA68
5F1C791309E42F52CDC85AFD70702287E41E2167A6ADA4E81FF184932001FFBA38A41C9B3A06
DF26FED59B8885989A2B6A75F498A2B95BCE204E52C1199A914B8E2A6F948E27D74E88B53070
8F7D56DC1CCBDADC71F0047EC42ECF7716A366F4AD042064D8E273A8535041799EE1D678FED2
3C49DE098C6A86DC3FE7F786FA45CD9B6A5F953AF0A54CAC5E59FB26060009BDD083BEA2BA1E
5CDAEE76C21A12DCD47C32A89F92482EAF1850F7F1DC2FC3CF22CDA8726505AA0B7DB05BC5AA
756A9597187433D7CF4F304B82D3C2B4F056899F058875F4EB04F3AC51B8116F01B3363CBA76
94F483B81C58E4F50B93F8AAB0F50608A0AAFD7C3AB1D68B3A103F349DF52F6AB4C347CBA5A1
0953AEBC7499CFEAE1D11433E97B0F2FFA9A774D77361F8A08D407E41632EF8AB4258F3141D5
AED30A34310163C7B7A8E65D7C3D78E5280AD5C775119B0E1E0BA3FB5C63616936312019EBFC
1B50B3B05760CA00A276CB893E1A190E8813B44A1558C6B006707DE9243A446FF4BAE1A86611
C57D1A55B429413F9C48A70D09F8DF3035A1DD8ECE2E9F8618514DB69D9BA2780A2083D69119
4EC63BB4735632BD2FA51F98F5ED5A65500FDEAB1BAC9BBE118CA8FBD8380CF8E504E34A8D6F
D9A6A61A245FDA07AB1080CB319492BA8D3B84C2C6BCC1627EB4B49CAEA96829FAF28E45FF72
686F8DF2B85DA3C9310C9479E238FAF04964F7EBB4BCB61E7747AEF188614F219A346FBD485C
5EEF3D3A261D6FCE73C4B7BE0E0B5472F424654FF33B6626D39DFE6656FEC6960E0FAEC4E79B
BB8E63E9A193F5DBAA676CAE2D18B840A209F5FD9453A9450F5E9377F6A3A20D9E49EB804C17
5E8B24F0741FFF9C011CB64E44364D34EC8AA1E3BDCBF96F029BE93E6225887E6152448F0C8C
0FCE2BC0F6D9EEE845C8A9A30B2B13242044C12576B202E98164362A3FFC36741870161DFA31
F2C9CB98FC8910219C800E4C54DB7AB757DFE1580FD96D42FAE7E24CD87EE9B65F940B6E093E
8041EF7A18CB3FF7D520D45689B669725866DA9DB1DDD535DF00256592645A84FA5980A0751F
80AD3F489029100F95266B6BBBBCBA2E61D80E9230DEA1DB2820B346F28862267006A74C1A4F
CB8AFB0F6773E543F7BCFD4A6AECAD0074C97C1F1EC43681954576B5245D03C27840B386A9E6
74FE1E6449C79AEC7158F414C7A5C8B9F3903409D1112ACB0A383AF1D2D61AA9AA116F88A37D
9C0522BDCAF8DE7E84C2BFC6D4C60138D68BCFFFE7223B86128E9A0CD8DE8661038640D42801
BF938429CA9E3D2431C78EDED3D50F4B789E4277569D62E52F4B02A5C4368867133322892B52
E7E0EE28635028A3E6769BBC8B65BAE6CFCBE0195C3ECDBEBACD6E9F4EA03D1EA1FE74A43DBC
B7196A91C285C20C8C5185C45027483E583FF4E0C9A5C6D7B2BE7B843C555A0BBB5A1922B811
ED045CDA0C2D6475E3382E6CF8A210F9F8943AB0ABFF487162F3A92A1BBC4196B0E26E1BB823
179B82F93030CFC75F15A6A0661FB6A99122B9D21C7F6A458B07FFA3FF30902CCAD6A4C71AFB
59FDF238F197D16464DB347D46924D0BF4F7C38152D8A0FD54F28A8D5BEAC8436AD2D3156D39
70C4F545329A4EDE98FB23BB4D12AF9709412A95C87322F042BD02372E961F2A8A6A96E4C923
B4A7F5632DAE32FF42006BC65F2789E655EE72138F88F3B4EB5FCAF43E5D814D8AD6548EEC7D
76E30C2674EAD40556E2BCFB5B050A18073850192CE9DE987834F56F6D3C559B82A19E391617
283FFBE616A81B909A408123494D46E3E130E8074736326E6D336E387D39FD8CDBCB9A295DBA
E8D4C43D6853B639DFF7E987387BDD3C1967A9DCE720965AB170884182059F1EFEAFAD128618
4FCE29390033BE0A612423E91AC408061C00E55BCEF84938228F3948EF7AF0AFF01A402C3A9B
ADBE937E94170AA02A4AF378B0DA7B3E796E534A6C3A414024959C2FBC43A34C39C3A734179F
ED6550BC077AC822D81F2329A4BAB6EA939C4771FF471CF2101E4F51D917910B3F8387F0BC2E
290E4F43B3F9416C5F18BAB1A1DE5FA810A5C19EF605230718A52F743388CF7E69B1A8ED3236
A879096768CDE7916418825AC6D9B38DE72CA04178587B63D4744DBA6EA5F193768537CBA955
F23B500781391EA242E027E650FF4A3DD411C6173491E3C6DA68A0A4B7BCC7A35A6B217BACBD
AF7314FB0E6FF9B6C8E9A9F06B67AD3F07AD97D175CF77A3924662C6E14089E955324472C10B
99CA03057B86EC68CFE621C6736DF918D2EBCEFE0280AB07CBBD526FD8FA29169C4C63F4AE8D
4329D8BF17EC68245373A65DCBE8436D611ED746A7830430C45724C0AF000707D06DE464B6C9
0AA7B4D591F779064F19E4E9ABFE24E3AB42202C01F2D62255A7BB6FF58DC4975300DB53C9D6
C78D8610F8E2CEB57E387690328F0C1CBCF648A048C21F01C076254B1BC507CF858296C2FFB2
FA3EC59F569F87474B3A03A99AABC6057D3B8DA7441C84D70638253725B505FA3E90A88F4B02
8B8C6FA04F4D4186CE3684B7A376277D98BCBB357004F54A0559BF23B0D5AC4950007A3442EF
67E28B192B6906DA3A8D172C61E9C67715CFE818014E3C8BC250A9762DD13F9B40A07C40C576
403DA5EFDDFF3D9A14EE05F1CE3CE77BF5198A1A215A1FB9D9AB46D57FDDB9EA3D4E8F9F3866
89A9EA8180F826108242891C957D6C484140B905BC9F799C16D3C1083A45AAD3894D2C582D08
17BC28DB99777B3A8AC543DD7C94303226BC26D1D9275E99CA96AEED4190788F109E350124A5
E1BD155EF36E4FF9963C3C6D8C08CA68A5A961DCA77986563ED55F138F6542996C58B5295BDE
018F839A82AA4A1D15282B065932DD798EF3FD4999C3CB4C0AC862B298BC17E3C7202940339F
2B9E85CBDCB0E63F36F52A1CB5718E9C3CAC9B9E44910CF18BB9AFB7A634AE3263B0762E3D64
F73048E0B40F7F7A31BD17D276C6D55511C51DF4536829284819422F841618856EE6BDC11580
3D24A89A01557CD89A2D2221722EC8933F8D574472E68F93C70A0967078EB89AB14DE5B7A3EB
8BAB242800C65AAD810F68F3390013F561C5A86F47D70E41C95273668704A7471313C6E2A018
FE36E0B5198A9A4C151631C3FFA4D99B0FFBE5966A15F753247E54F167F9917FD5B311AF423E
E41C532402F2C48F370A2934C921B7284C962F3D1DA92972F0ADA5E37F670E0030F2FBF78A98
681FC5AC7B16E3C0478FEEC42EDC82E19A3B9DB7DF3342DA7EEBEC1B9A771554E6311C1ADE1F
F74E1FA37A82C9B20D645367E63B6459990EA9405A3391B121CF00CE4DC9B1763189C1B1B3CF
15DEA65DF84B6C41CDDC27EE9114AC5133515A0D87C4B9C12CCD5C8FEBDA8A58C50542BEA93B
F5BE8D6F265FFAA109DA07F1D6AFBD6B4C5275FFCA2B17258E9CDE435D62B1CC951F4DDEC713
3827EA3F5B22E1075483DCAFBBF3D185A69BA3D4D4EAEAF81853BECBC41DC622CB7BB213384D
DC0FAC380F47AEF475860E84A9CC6D802019EDE1BEB270FCC221D25FA324B7C26369BB046960
D919936D69C536B998D05F2FA5DFB3B47C63C847F6DF60341F697A6D60C627EA84ECB0A335EE
958FC6D6DC96AF38BFA6356E5089540B47033219079764AE0E52AFDB7ECD8CDF9B4641590D22
1119225963DBAF3F1036D7E268AA528FEE46B1751506F473CCE92C8491582A457D5036B9C893
FE873B063A1B870ED021F291072DC3124E2F3BD66092B262C6E23C67E9D1074C2D182F4760DE
ED7F5B85A73B9A05998AB023DC40092A2B5B2DFB5B9E5AE7C33ED45F6E94CFEAC581295A27AC
AA899E438604339B5AFE57C2128ACC54151FF8A2C76A4A699497A2328489970DEBC9CBE6422E
B3682953528A9D29021CB37CE52B9D94A3FF6959958B4A1EE2EB30DF10A5941A327C37362920
0D9DD0A42D8DC3822CD06C2446213C88B29F85291ECBE6FED2D0FF15B693E3B5B42C7D5C82C5
5E2CB56F10423CA996E54C677ED9D63D3C5CF9FF226394BD555CC5AAC961A24C9C50D7C92B4E
8F04286D206ABC60AE82F8C34A0FA4A73204299F67F6BA72984ABCBAD4E7F7034BC89F6673FA
97DB2001FF960D8803C055B29B8140D3A265F2F347AFF5D3BABA3BAEABCB3F839826D747BD2A
7505D974DB93289B6B5C9B7EFBAE86BDE3E554DEB7C910815B65014365512115DD37AB83049C
690C922863401A2361C3EF5CBB87CA7141CB24FBE1D2E411C49FB522F2089F993BA2DE3E8783
E6676F187BF19725C1903A1842B1D937D7D6EA625591CF94EBDDAC8BF5AB49B541274E025D1F
749DA7430955C7C2F781734560B14B50767E7032D433604AC360DAEE6BBAC5A5D58632433A8E
B51239D309BA49E362690482EC8E52005C92AFC694C24735B6BE000B82C32664BD444585FD11
8538A588E1D8916CAEC5C0EE06E1E4D503E0CF80A41EA7CED0196AC6475DEAF3ED583E587439
734EF155425A326A7DD8EF40B319CCA3F3ADB26E6368BB7FE9F9616989FE0CA17C0BE1BB728F
3766A575143611112A535AF0E23561CECB0A58B7387EFF7D797AC9EDE44EA194D665321A85D7
373AB319D8B53E57B7219F3C429F60762E31C6F545EDBFD6FBA22E2C72A1EC0831FD1DAAB8CF
BF5F0E10F3BFD0904E1EDC715C173EFC703F1C156D27B49568928113717C1D5F8295DBAC6CF3
1721C904CF15212E2C93D9021EACE71DC25C845EC2B4BD71F3A38B922A0963CFD8A88DB7AC01
1A888DA37535F3E27546F8F9314CBF767685C0BBB47F280AD0C6AACF5794B994286655D41CCF
524CD128BA093F8B2CCCEE52337B381BA05BDCD69843E66E2A1CC85152DD455CDC3623F796FD
2EB7B397712BCB1283094479E40CF48C8E1DCE0FFEA1C7FD8CD3875A14C18AEC4EA447EEDAFB
18AE2B79C13196AFC4545B05ABF45A08A60BDEB4E5D2A253C5C8E0C91E67253B494CCF28FA38
AE78F4BAA0C54B8B39B9AC3FA27E9A111A94925D6796A2F5BB21A8F0763DB31E44938AAEDA8E
CD78482E3B2BF7A17CD1CEB88FD7D4505AD3B543983D837D58951B2B36FE7393D51A32B05A6D
EA508E736225D5FF056E2B40358CAEFF58ED1946F05CA087858B9C5242D441D4F7ABB609B5B9
5487182B736A777EF21124A12F34E625AB46BD6EA0CC98D21B79DA5E4F90274B8DA8A2ED5B14
91F47FB9233F07DAFB6A4E0AEB9C29F2A3093EA5D57B4BE93CF6FADB1EAB72D2C92A4D448EE1
504E7625494315F6B8314293CECDEF3F3C9E211FE57FBF0758FE69002602EC3E612E57AF727C
073FA5C28C2AE16CE219EA81AE50C1A71B7C593A57EE173290AA4F11A6B235C0F84B93342D35
1BEE74C599B76F43C59E72C8F918971460221223F261F37A5536B6CE71B66428CC50FB33E9DE
095EFED745F32529979E04AE0E3BAB790BB79096DDBA8AADAB7E6CC2C043403EBC04FA4A2BEF
4EBA56D0CD5C995CDDE91795518BF16A813D30450638E7A67C767DC6B4EF85342A5EDAD8257E
2DB274295954742BAA1E9EBEDB7CDD402C3962DF54ABC17C9C60C0F64F8E6E10D7C089F480F8
3AC3999D51FE0CA33297DB9A6A9696F7FD4BF59552C2F2B1D1566CBCBC5F9943FD5EBC4FCB3E
94160D3CFF4D7995CB8F5B2A6277E3664DBF59D6BE5F6E1C85505613F8509400BD928896F1DC
BD858DE0E66474D49843E6ABBFF0E4E88C5CC73A7C53893E7B7F10A543FD6CB3D913E41D8364
3A77D2C8A65AE4963A2577012164F165D2CEE2456BFF5E0B40814CDD17C1416ACAF5740B6B67
EC64601578A6940DB54C2872BC6442ED86FB7997991CF61679A28A0E4472611FEC160D5B5215
A5EFE2B3AE0BEFC950E4583F94CEE054C454B25B0297A313F27B711F60DFDE783ACDB8C77412
B54512BA63B01DDC9ECAF262D614A28BC31585A8FD6EBEF08AD772EC0FB0F2703140F0E18F67
5BEFAB74342DA11EE9E0D3520058716A740ECC529CF01871C1771FD1A171FD85043DB79278C8
AAE11F8E82998D4F63864D87D8B40D62CA9F42A9B9C8AF689A5298C3B63D0363EF0F019E60E1
763BCAB4C3E1229A9CD25F5CA016C46571B98CEBAE2A489A9B59E74CE7F5871C423D7D85DB69
1B2E6FF38C9F37AC19DD7B29E2B77758BC62A1E7FA76F74F323614FE7D328352D23460992AAA
0629B686F8D624E682D12F98CFA0015978CB45BF065CCCF7ADDA154E8F9A39D21D804E06B40F
602283EFC7CEC632E9D8E5928BB90B313A1227E6E8970C83B1B2307631109DB9B926844051A2
6275B2FAD39F5FD22D590EB97225AA470C83A29FC146BAFC243B4386C371A3DE001EBC588A71
03FB07E176327E919505F1CECD3F30197043B16A813A365C54EF57EC59562E60C57A0B767302
96BC06C455DD35AE5A61BA58C2C143BFCCC97A83CF0C892863BCE02C50AA67AE659CEBC0DE88
FDDBF0860E5611C00D8C04E592E374E7684B3D4D4B6AE5768231B2F23EDC5F794FCF735043F7
CCD97ADBAD700DC51D51525903E00489E84FFD8F3D08315A8C72DFE2E5AEFC140D6E054E9E9F
A9C574A6CD33313E8162D7151872DBB909853AB615CE6CEE9D076C13CD6E94C77208D8CC2162
74CEBA2EEC0EC777DCD26E500AC3EEFD1551213EF9122A3D19A1510BB3366B5C5B842765F369
C321F6B9FB64288BDAA70D1522F3C4B03E6EE6892AD1519D38E33FD9B4D11B4EBC50588D5EA3
551A4B840E2B1C16D12A3F1D34084731088F0DB1015D9F63465ED38B769D3C2DBF18231EC70D
E0843B5CE4782FE54D4E5A8FFB4CFFB0C2F2536E254CC2C790A2A43F0E1EE779C8073A50E49E
F2512BF711D2C89E2B21354078E121A7B85B7CEE6A41975953257A77C30F3FE63A0C7F0304AB
833F0964D133AB2AADAA9DD4DAC233AF644BA4684442461779ACCEA0B35D9465E183FBAAC4F2
5ADB8BE95525D632271D3D207C86EEAD12DAAC4D06261707B3A5EF1E53BBD12527CF7CDC43C4
6618E274C1A7B5D44A5013815F4BA5A5B798929A21CC8EEA6CBD04D898C9986CD0644F4BA2CF
9801C9B285223E63F5DAE4ADB0BD875EF3E56E885151A7A5C5E2B14AE603DB3E828770A0E019
8FC061883F1C5A228AC636D4BB0F8DA1284061C3695C6114EA53BC79F2D2F1373503C1A171BF
4B368AB4CFB27A57C3CFD952A48DDE9A840E4F4CFF01F3C8460AFF22D9992D765723917A535F
D34A4B0D2E99E31C637DE45EC6C8B662C01C245AE0C078B060A78AF90302949C0724708253B1
785ECAF83E5B304FE37AF3664BD5E89A2F757E3894DF28B31213D90E6B705882EDE58C251BEF
F1FC79BCB4D54A910B8D51CCC5A284F4A759A9F7B2536276697DD4B9C3FF253F3B66DF89DA2C
86611AE2AC1A5E04D2423B5D06746DFBC45BE490F614482C17230EE1DF3DCE5C5B386ECF1040
6A4F4EFAC3B255A5E7B507E681312625A9EDEAFB877464F0624A26A928A14BAAAD9C3255F2DB
9CE4BB0A4BEF6114103867D52E746B3357253C3BA4A15635CB4F11DEF52B69A0D7F9B21FB126
15105D9CA096613095E0D8F348D4EA61255B89F2EE22538DBF9A28117CFA9DF84AFF4759BCF7
826260A11F0D19D24FE2778D6E9A344BEF49E8787454F5FE9206F29D124E78BA566DF7BD15D9
D4B9CD4951B86106D83DDAA93D0E4AD357EFC963B7D89C92C02728377B919C7501D7D363E52D
3A04760D67B945CF42986822B058C6F3ECF0B22682BAD76E8469C0135B52EC5A996DA50F80BD
A142CE6556A8FC7F10CCC746E43ACAC3D62053184AADDFE1055E4B8E82215558B7DFE041AE19
8C87AB86A5978CC125B7471658EF746FE30F69F58609F71192B1BEBCCA0E69F505C9396015EB
A0C90CBA0E86BB5A261DE658A91F4AABF7B62C30BB460507612D8354D5A92E83609184B6CC5E
E3A2FF77B0F983CCB08C29E6A866DF03A5566CE9461B67523BF5B8789387301AD06D01F35D8A
2293D6D78DA5B0D5889C484A6FAA71AEA7CEE0742A7A86088D75478088AA0C2CEDCF5E5FB5D7
71B835C68C1B5B4FF9D3CB34AD420EF67C5BAE6C8E2AFA5672C2C0D1533D18B0ED4A9CBD5092
42A0AEF30B46772B05A02C326362CA1447AA443B595DC90EB5EE30A97C89C6A63990CBDE1AF2
BC00C312E9DF1C5D5D63700A4827AEB35D654077C5B0CA8598DF98DAEA2819A9325F1F0346FC
16AA5AA7FD95322A48C811E65392F70C5AF7EE6EB1E5AF3BC4EB3A15204E9F30941BE99C2894
70F231E959F882FF4667C62FA954109974AA8C98A117F9CB201BFD8E157FAB877A8D9AB6C1FD
8CD99B39B17B17DE4241AF68981CDEDB3AEAEEC59A9FCD8AE1679A5277FE8D3E71E53867957C
62DF0E999391F4824DC9BE9B33A430C2D65C705B27869EC832D7598FA2D4B1CB9D6AEEF37DC2
C50213ABF50A870A5B0188E09EBFEFB43823CCF511C5D6BEB92D5AED6821286F458EA33BDF37
9EEF66638139F8B824D729FB2400DE429B5F7D172825A9A084C34F9A3704531D86EC6593E036
235B1BF496284EF9A3F8E29F0311D271E41B6E7B202A8A60A8DA79DE9B935D213883836C44B9
92F6896F83672C571EC883F7D8AF611CF09B60F2085B9956C12A613FF69954850B0532936A70
2D73A49309EB22EBC36633820CFD304FCBDBE85903A44CBB9FC5F06AC0A50F9E03FE61982085
6F68FB57776E9EA0E071AF744172DE472600FF45FBF555FEE31B18D41C9021A6B10658712B33
0433EB14514BC0210871D3A922183515571A351DADC12B1C5DE018AF923716684F70A9102E54
CD77C666AF8C93636D13FBFDB7D90B8F9E88C9BAF69ABD1D93CA146C45B349DC468225BE9E71
81D0EC61B91B6BE98426731F9FEB7490903E8538C68A3CC1F5FC41A5972D76C91D17CB9AE38E
EAF9CF9571C1B66AFB2D06F7AF7660BDAAA5D7E7A8C3FC6816E475D78BFA24AE2C6CAFAE517F
633B176D6B83703EC0C1213567E15B27F8DF5139D6C1DD6884477286778F82EAABE4FEDAC359
03A8B043D417333344022A8B1137AD7682B9B504EA0A6A4C397BEBEC6A5051BB022063F721AC
545AC981F1E23C823710692F5CA8893E9A1C97A60BB19B81936D976CF9B00E978E44274EEB4C
8BFE9FB4C92D446429CF77AD94E85ACE0926F0D9E4E7535F06A2A7DD4E44A048523148A3A2B1
042740B5F16B1DBD57710DC57092189B69B7611E27887EAAB496AA24D9C9CCD820DE97AF5D35
AB5800FF6AE86A001A21291DBB0394D4F0450A022E777F1995DE0AF14332AA0F160C51EB1D9B
090FD414A6172B543E722B91BA1FFAA1BBCEDF105DE48546C1494F5C37F072D23907AA348E30
92E360C6020612576711BD784F50C657C54FEE3CD959B55A58B3F4A057FB3A70C25E6812EF2B
543D5BE9EC86094BAA959E5A90748CFE4F8249B2EA1936A55DF255B00C088B3BB7ECDC780A37
B69D7ECB199DE1FD16ED3437858A4550B536515937C57ECFB72CF377307396B18E9B83B13BF6
AB00F6013A0865813A6C1247D4DC370758CA42F95E1BEE28799D8B4BFEDF5A706DA49ADC5AB1
428AEB243217EC0EEA4F644BB0A0083150425F948B29B6E036DBAF5EB5E70E65696D08B31A3F
52A544C7227E6DABAA4DBD281F4C0422F374EC4B96357AD7818DAECE3307B4D497C607DF5D7B
A20F6D646792B7350B8304F21F5F819E22A9AB3F5250669AFC980A2DC05BD303E88E340B3121
EDE5EF34A51E8E828E04EDFB7B677C2F26A7ACEFF2274E398D9A4C10BFB6950F005C6E3333BC
2349767EBA19CD4A63D7433B0C7975990692B0D1CAC287470F076898FF26E606A7F335EE639F
6BB9B3D683DE5C994BC001F3676B1566C19DFE203F5D065428ACFDEE0CDC104AD0990F5202F2
EEEFD298603F30DD3C3DC05781B3DB8DF6607C423791048C0787DC2BDD0A34AA6CD9F7FC0FC8
35A97BFAE8337F17DA5A91168846272161B8540A201932E858A231BC247A1A40CFCA907309A0
AEF99344003CCB9DEEFB4B04DBA4EB4B7817AD8FB67C9F619A215F2D49D52E3A4C04CE42E3BE
498429BACE9864A034DB7D1212BE26AA1E7C3BCED90C219BE5DBD925AE885EA345E4CEFE11E1
6366041A647FDAD26668576BF114B4A3904CA3AE9870B11DBD6D4FF54B60393A16C79F2BE734
9C1237DB63174165CA4CC3D802CD45785ABEC5EDD64882C516B8194D67E5B843B26E97139342
C39EEECF081FF4175F60BDEA6A2B34D93594BCCDAE6422F45CFB62461D2F2779EB8A34631D92
1F32F456AC132324DDC7EEFB224E45E5462BF74DB3AF2F46C5B6842DCA6637CC3AA24D65089E
D1B8C8DCB7A4B5667FECE957B7F1683536D952731C078B691B97B2DECD827AE0ACC58BD6B8CC
D1D5F14FA7CA833A908D1BFF01B475FDED978303EDF7798A7EE114BBF0370E25812F8087F800
963DA155AFAD3D999203C4B84A1F16A716284866AFFACDE3DE770E6080AF16981C8D778B6D89
857F00C4FDC780464C9897DE53A36583461BC8AA3E23D4469EAD3479D42E47AA0F35FC8E203A
D4BAB62705C60E746964DCB3A0D2ABBC02B049F56FD742C9CE6E288888D2B41F154FF5E916C4
FCA20FAD24EE7985D9F64240B36908E4684A6A6E2B96B8DBE9DEA494DBD5669848B5B691FC8E
B2432E85C7C5B3B9B0A999FF7A7C877B8B65A8160D56E98250B7A0377204695EFD405839D546
7841FA411506B6E94E44F22C9C3885377BE3E056B9599531DB7FDA5CB87EED8D5B7CDCE38395
E2EBFD1E556EF80A4124A8330735F9DF83E34A026A1EC0BC0359F64A40AA09B878B904CD9FE5
4C5E8FCD7451198751DB06A6B0733CABB52460EB8B949D220888B9208AB6655347A27FE11034
09E3CA54C341743719317D5BCE492DFEBC285FD7BA6246FBD68F6568C0DEC5DC5699D90931D1
ED89B710B6F6AF4EC43C394E9D1499493FA3BE9E98694536E827672A4AF1927883E86315E6C3
820BCFCB802322E73551B58932110C32BDF186384D5EB98DBA7FE561C42B1C641CD36235A940
3088E499970AE1D26744B76D2A19F423326F4147ABA06B01B39CB8D216E655B079C6F58453D3
629DE36B89839CF51AAE54E429493F6C893078AB6CF34A0A7216094E1672A437D5FE8682221F
A0BB5489172D85B088C03847032AB77F8FA1BFAA4AB13B2B6AF77A5693BE5717CDD6492D9FD6
7289909DE9F8334B298C5AD1A39ECDA579CA9BF9A96F0548505E15B531E26D8B9D964D0B7469
3764F92E021307809B4F816E12C4670646EF127FD89F1A9FC4C8DA8989F0549D764568BEBD29
EC580824F34AE5104613E1DBFBDE4F40437B0B712DF6DB0F9FD002BF670D47EF33997F962987
8AF1560EE31CB449C53374C4403D38C5AE6A48471AF494FBFDDDBFCF656D184B6BB7281DD5EE
232CC7FB0133565C35E1B4873A7792CD50422A6DA3534D3A86F8BBBFBCD682C21A484FC74BA4
B4D47AA1BD8AD089CB18EF41777A650B5C5F4E3C3ED4DC8E6309829E5A0F4C99F9B8E23A8ACD
DB0EE2D60502FAC49565A129F787CC74DFAD27C68D80CF36A85FF0AF2D0B908112E4B07DEB3F
4F9D14D52FF375341BEFE2F5A44461378454AC9D3B465355EEA4F31515DE90A95959A9F7A426
D0AE4231584201ED1B39A1B4BA3550E7DA36CA65B8B207F40F6543E2D54EAAB95FA55FFBB306
7F2927987706E28D6AAACF3A5E5186FDC043315EAE6DF112D61D3BF3816036E49489EE19D689
6F548FFB8148F7C2C86E9B87AEBD353BE6DF6F4EE76B69C9A1E3A12161DE39BA51908B148A28
B0F7C3A0E1F32EF856A482299DEBEBAFD2A7CB484BFE85A20D30B1602B31D77916944BA0AF79
3EFB2550C17EF479ADD5DBDB133493892984A5EF039745D2EB6542B21FA565938175011F64B3
6E441834E161E90F9651D1CDB7923B5A8DC1CCAB4E152DF3C58F0269C13C7705D65458BCDF0A
4FCD3E355223A2FB77A4638FDB5324AE40D0FBC72B7932E673A12FB32189986C8C5AFCC3A6DE
DA175E0B2D47E7D3FCAA7C2BCC28F9E72A55E655FB92FD34DDA81004C46CE598FB921D8467E2
34760094F0933A6BBDBC2556B934470115B5C166A42207655488F54E7D1ABDAFD9EFE3718B53
D39E2ADFDC493ED735150BFA293BAB6C0FBB8240B9A52EF10C48F2B06DA9FF1189A5E5A2CBF2
68D79B510373A2A76CC8247A098480CC110B4C93B09FA14780D30B3BA8889F325D955386BCFA
367BA503CDED570336EC511B1E51D3E14C9B57862933307DC7A343FCEABAA9B38A188F63D669
DBCE1B4025D966A99A90D1A09B9437212F72A1AC20333540FE6630CAA4972634B8B2B284208C
3071F31926E666D2C1185D6ECFCA7A9A12B3271BC233583D175512B00173DDBEAD29993AD175
891A8DCA18FD287985CA9FB98539F04B2F6622C74885C3C8F228723994081E053968DA3DC13B
C3E32B23C32AC45F008615BF1A879B476FEA848594338D919CBCC3C9FF61A52C02F4974BB193
BD67D441F2AB8CBAF5306AE7B44736AB08641924F75C2657D8B8533BCD4CA681D9774BE19FE9
28ED22A930E30E0DCB09A61AECB926D870253F690CD4EB239EEA3209179BA522A7C0A0D11301
3C9E68D1575F3EEE877568ACAA8A22F606D808436E4AB560EDCE47971F25752B5F078B23E88E
1A9AA61013E497A7BB6D03B3F2C389156400D9995B45663E4AA39C00D72701E3776E73283D87
599490AB2596071DF3580AAE2AF1D8A7CF7D8BC35A55E304C2FD3DE8CF20D52BC8B6DD79DEAC
CA894DE2D59DDAB9F40499284239A4107FF9AE136CEBCF6040096FB92DD3D78C0181814F6999
B80AC93CBB81E869F42E3EAA7502432A7C8EC7E1C2951B8DA5567EBE7CE227D272C5ECC8C87D
6498FBFF17EE0B7B42C167396B5930771C7AC7C13DFEE84770F784BAE7B4FAB0D1F768A2E720
EB17B3F3FB5B38F1D47AAE0B8FEF03B96ED7457482DE656B356DE39ED17B59B811BA630F4FAB
D332E98B1BD8BB2EEC64725E1E7DD8AE5E62FB562187DC4FE8260869292ECAF007F5B70A19CC
7D3ECFF5D5D633626618ECB0B5EB3894D3DF7BF96467A06CBC78ED552B181C6974610A2F93DF
726987323674A6848881F36CE08E0CC5080BB0A3F31AC3A55AB63F7E51291EE6468290232940
8749B747B431FE0EBC194519040CC74C4A8A27BF26F1EB43CCEA31D5125035363062AE0B06A2
CBEDEE65209AC76740FFEA1302A873685A6A9C4A934A94EFA650F37721E1905DE66C6B7BAB09
ABCF6FE7920AEDABDBCF240F07DAAF673A1BFBBBC6C2E747A946B205AFA7629E506A4815CB05
79E57BECA61666AEA28A92B1B7E8D4674DD5F68DBC05FFE178128A01500A28DBA0C720ADD4A5
64E44EA75944B819BC06AD48EE0926D12E84BF85EFCAAA134B5EF4D882043B902DB57A61A1E2
E7D9F64D16F01A0726C928E9C8241C8ABC8992AECE3DE62836FB8789DE48617007B7BA4740F4
D19EC2660CB4B3759FABF44369F31CC18A77A798534913202B6863CED158AC6EF4AB774B1AB4
029D14CBA6E2BE8B41E5A8C840464303C44D35FD0954640E25BAA67D51F594153F69B2C2F6B1
FA598CE253BF9754F8A30AB04E10919A84EA452C69FC3A8104FAFC4819686FAC85849AA1D344
CFBCD43D7F87754A087A81A700B2FCF1A04EC21280869029EC7C33CA9B59F279F9587CC8A692
412A9034E5434316F5CB8096EC9187880071FD006F8C2CFD535C4F6986A97CE9A69CF82BA2B2
A4F4CC74068C578E9B809A2BD7ED802B052083A2542C3AED68F97E1C41771C94413E001FAFC6
7F9DC7A7938CAA88EAE75BBE2A9A08A41E19AF99FB8BF1722A119F42BE43B41234EB1D3A7720
8726970DE23CB6119C9532EDC055459B71FD6EF97D782A8C67EB43CF5684FD19C81C6378E456
F9E748C3C8A538EE2593B76BC77844EFE8F3D987A6CF91DB6519064164F0C125E1027A2FE2F4
CA008AEE0BC7606830D8A9564FCC5A4149DFED477D034E23BD5F96D9191E13792576573BBA6A
17AEB11AA7A7D79AB74CEB8A643CD6A58F0AE9D4C4A4E44F1E42B9D167B9F6F6E4B1B8AE4E72
6F2D4854C3547DC48CEFC0021483880D698E7585F7741B9B837FEACEEDE0A028B62F2CDB8577
22E37ADD1C28A70BB427B7B850D53DE6210CE4A9499CCE5DAB60E7FF80BE145F7C0E432976A2
FA792DA41BE746D823D9C903AE498EFCC58E89683E54E1C1A75759EB49C32F4AC57B9B9BD3CF
C10615A834394CC9AE9957673E8F08BD7C0A8286F852EE244F69C10FCE17331A7E7AD5BB006D
BFADA160CFAA223F63C433AC11FD9791B309BA0E3B30167CAC5CE7D00914B01976A6EDCC8B1D
A5DA96096A6A0BA7BF0273B372209A7AF2773D3604F7949A24F60F8B9886DCDC8ED69349C885
9AA37C3A934CFB45702BC810F90B0E9B035FD83957DE76C9A0FF73FF2356DF0F4FA0371A5EE8
75A7389B39CB5537924F6DBD866613F41D6579961846B85014179EB8D88B702300CD5A83CA0A
45451A6680997366DE9F4CD163C537A9142B9CA78F506B7A6EC04DC851F80F023FF5871AB619
503E2F7A6FEEC862331B11EC8C06F4526FB88DC014EBA0B0961F36365947680E9EED6C5C819E
C348FCEBF76231CF2FC714138042906379B4C9EC47D56C0576E74713568B93A0609FA9297AC0
7E551909E8659CCDEB6F9091A76408EC82A0CBC421C9704FF2671816F501FB88C92F0362D5BF
71F30C7359D51555367C7816A3B6C180E09BA676830DC246FE862E9C87CA9989D3462C126C54
4C61CDD96FB32565225FA1EC24F9C5CE094E16F4FC39B1762666907A7A1E44524DF9895CA665
0441368E75DBF3E631175648C89AA78EE72A8A4B1AF9FC5B887F366911C4EE6BDE2E2679CBFA
887CCE4084730F96C0325BBDF9B18DAF05310FCCE59EE5CFFBEDB2586BE9CCC25A00361EBC57
054DD2725CC3EB406683300BE03EBD582D7BD1DAE4EDF5DE2432951521CCA64CBDECDE5CADF1
9B4BB0EB07C9D3A46D86BF1B8F2E3B1A0F535F76DBF29DC8DF5C3FFB7EBDD181FD42CD25BFAF
6396724892FDE1FB2F762BD67279A2E2964B5EB95F0075221EF7B442F5AD9F0FE51B8A8166F6
96C5C8234EEB59A2E02FE8EF2E29EC78EFCA9D6FA9830847F95C992BBDD0794EECDCFCC60682
1195039AA8EC800060D5C6428BAB0B0FA5CFFE36C26910E6B6CD876D7174A7912F717AF6326F
F48955B50368548811F0211E20C4C883A3CFE23DBCD796B6BB81FA1BC959467345459F0E2301
B308D04C6DBD4B5D433D19B731A4E883B28865560224F2CED37008E01329DDB8C52D05E89077
6191874AED5C4A67A6F41EE1512E4776B882367C6E31CBF8818431B716F8C863FC7C929E7805
64567992A16E7DFEB9BC453A26F2DD31285AEDFC17E59E430BB933C457138808E55AD61719CE
E812D6F237E0D0D735F3888ED429D2C2C3582071D9B3BF38BCBBC41B32E037D35C8443F3E4FD
7676E55376E7B40CADCAEED9F6CF567BAE5D4FDE90D5F65C03480EEA8A43B755BBA5E1A3C269
FC0B22742E8822DAD2864CBDABD623F25B7D087ACF04B46B7899FA74C7AC4C5846D4C1CBB677
84D4ADBC3E9ED17307A1ABBA29DFE3C95A0A5A08FBBD28252B769316EFA8DCCDD0C956F1D22A
BFA3CEF95B60E62DFFF3F882218138B1FD0DC5A7C09D7F6CAA9E62FB6C8974206D96586E3B4B
F02E6E5EA120D21F0E9EFED957EB62E33FE943D33B61050734ED667D60F83485B7157F765B82
61E30BD7D070C22E8A533C19D4A4EDB5204843F90E1730DCA9A539EEB0DD5741C3AEF6FD1C24
F3249D158629105A4FFC243BA585AD82B436680E40F964407D83CBBEE14FB11EB74DD06466A4
EAA94F5B79BB315C582A8A0DC688056C7E4E1E7B902E4E3C1EE1F3C60EF65D297B0EF6CF5E27
89E520055294575E974F1355EAFC3C06CF79F4BC1BD42D6FD9F8C070D0F9627F33956BF91FA2
7413DEF0412B26DB11BCC4DFF554B7BBE4635D9527E78FB9FDA65A897093622F42BE089D8980
8D6A694C7F96F2A63A281AD9B5CB0086E31FD1632B0CAE8C87EAB41276F7B9B677E245A6747C
9AF2B61A45D3961ABE618021127A701D2DB7C8F51FC8965ABE96A51BA2A7D9EB88D563FE5C12
A79CD7507B296A4EEF70AF58225A1677F3E3EEA0D7F3A5C54260E075E95A791AC56A6D1B4A21
9DFB31C867CB1C481DD790DFE527C2F1478D73269192C1517ECC32995011EFBC045F8C6824C8
309E1EA59FA2958BE11D486A5A6B548B25239243C713FB34993D753AF9047A8BDB3FFFD0D11E
E997E539A262BC3478886C7E07BE5C4B43B5B784ACA65F61014A4512AD18AA35A1433DA2932D
A35AA253ECB41A2DCFEF37EA1A4576EFD096AB0CB3CE0148FEBB651F6A2962FB313CBF85DC85
E0AD928E4EB4C10DFE80E74F2753A570BEAB484B2535A19E94D9A1F215E6864DD9590CB4931A
59B07F05D1D91E144D69E51A578D87A9C4007A22B730E767A880D55B240039A07640741BC719
0D6A37908D6C7373FC529574F1719E223138FA8EC7E819B428BFDD9B49315A7DC4590D4E9A8E
ADDA92AC464EAB7655B106D7F1B235C53C006D8982BEBD3AF3EA19279DC1DDD041DB679981A5
79C1711E2043A5554399FA2BDDD51BE0FEEC023E7D069243F9749ABDB84D9784C577E30E3FD4
BE3007CE71F66EE02480E849F16F31EE851710980AC5F849F66274858FDCA13C557B0A8707DF
32DF049DE6857D694EBB30107D2E1A00F34E12518F76DE219BC7D7787E8A3089771C00C6FD28
C727495D19A4C138DA5931854FA57012D92BDF0257432E4A1F862655E3716899251FBB7843EB
AC28C5AF602611ABAFFA0B6E493A346E90B11267D1448BEEF6B24CF2AFECEEAE94F33560C5DA
B74CDB9786418ACA62DAAE816C652F24E19C84F61352157408560B3FB4B47A6F67424CDEBDC5
F654DE1A1959DD80C190A0732D8C82F03E6506499740D7D3F8EE252A2ED12B848FAC9BCB36C9
C9E924B97050EDBD7793D853072F45ACE353E0D54CCEAC085B65925C74880F12D72E63C6102B
6DD6AAA2242C55943529B3E7538A93099F12FE270D73C24621D515A78A65004B02C9940622AE
F675F94E4B68700E0CADEF18F89B856D0B825689A9F9E6309FAC85D78D3DC4D1D0365B6AD515
CF3FEC45FF764534C0951ED7D19DAA8FF353884838F1A394B17C6622064E835FD0C61A07BA4F
C7A6AC6A71874A48E3B1F56A0ED1919974322DB8F81436CD2475141BC7EF3AA5008FD3321C98
8E7E8F101E3B0AE7F05D642B0DEA349A9C3DA3A58A4A204444BE6E45401BD50B235C3FE8A34F
C9718C809E26DC8C6739FCE1B4F2E181AC3FFC057C12F55417BA17557D2787AD08F3A696F93F
33A5436087F03A264ABE1186B4BD9151F820278196B821CCA42D00443A48F8FCEEFB00E9CA1D
855FC13E258A610EF2E53A913241673F79C3234F24DD5C42E019D97A2F2257B6BA5543CD8836
FC38EF8A8C3DF963187CE18168E114AA9FC0403C904FB3618B97A45601B448934EAEAD7710F6
FC3B4A3D7CF25369BFAF20FD9C8ED443038397DBC93E1327BD5652CE3CC2AA460AC63DD2247F
AED168590CCC4C3BC40E735428CB4833C9F8138D3C1E77DCB6E83F5DE62FB6057E4F186A2885
C4D8FBE867BF31DA10B7BA76AF8F7B12B3777E4DFE59BEDB7DEEE35CD07F4CEA1454B3AE9A29
108C8C2E71040F114B37661865B2D0BBB5E7FE60D1C89921ED7DBA472F51373DA76151582FBD
7BE9B1847845E03AA518F22D2FCBF1C93A2A0AFE97C2EB2CAB9982B8F0DDB6F092E3D6EEDAA1
8E304D149FC547139A856E39161BEE9D91B0A351AE863930587B199AF473FD959F43E1BFBAFB
0F2FED7835447B78A694A58F943447BF9D37224F3A81593F1C293FE520691FB483E21859214A
D3D03C4EAE256B377112BC783576FB77D4E3859889880D9F4F459C33F4E0981AA6D5EE4F7270
FB90BD476A3A24280923BB7485A6F2AEC4827EE121669B331B435FA8D90F00CF56DCC4879706
329DCEC94B3F775776FD4408AA1D04FACE72B1E5B5A0134D3D9DED2A239C7084C035DEBC543E
BC7A85496BC44685F43FFD630E1834E7646474A686608639337217403888396A5B5C59BFC338
D568C9FB3A337BC6FEB055248BF19E19A3C53835BA7527EBAE59291FD3E4A0813CD598A6743F
52636B50B035E84C38CAA9DE002FAB34668AB7248C6C13C6E053F26DD1D968C37C80D8DAE6E4
541308604578143FD14828AA316D2E9073B9F8FF76683D3A2376B8835EF97DDA4AA71FBEFDDF
F6318BB9FC61F99A764BE5335DBB161C01CA585B8DCBA3D63C00EF09CF028FDFD086A6635619
9EDECCCB668121479805EBC092EC8A22A6469370725B7AFF124E5EB5EF33026A433A90590CE6
08D541FDFB09D90C87A470D41A6E1913B9914FC6AA8F592C665758045034FEDADF9E48BE0B35
7B4A9B13CEEB4E1EB762E2304455E07C960B2E1AB921B52D1FBCBA1CED9E0494DACBC23BAFEB
1B0BE2BE7E4B2257DCC69CDE7DD63E009F8CAD02B9108AA83DD888EBFE02B7B3BBCBA2B29D87
2A311FC21B9CB1895115C3F1BA523009DD342459BAE5A6F4548E343E30AB425D4F8554BDC91B
7D50621A6588F7569E46F23465F88FC5903B66FAE3B4534FBEBF363A5C65181754E72279935D
C1103C1AFD0D091752471724F24247D18B6513CB295D8EC4382E139466F475845ABD53F620CA
11E0056C36A2C5320737531FB54B0F60E6BE9FCD74CC3FC38BB8B19BF2F78F33E861CDDE2A49
E95359C8DA132B2B8351102A33D23EF68EA4BE15710D0C0BF996A68ECA5669BC1BCF74C43035
69A33DB42567E096D29CEDB0375DC4BD33D2C90B46455C838E66588A317647BEC05E249847EC
2C809965C764C89C8DE23A85796CB7719CE323D5532EDE49BEEF2E6AEF0495CE2FDAE440AD4E
9CED262B838B3B34B0534CDC4316A94DBC8A536F47101CD80F3CD170F615A73DFB132DD95C5B
25D78C1881575F5E631AC50EF57AD3CD56017CF51B3387872D6FE412D08C38E62D6613174373
C878BA0068670EE0E20E16A10E2EE0DEAF4336277DC6547E13C74AD551F412E9DD080019D9CB
B744BBEAAC2298037EAB20E583F83956098D171DC9F09A126F55D26C31537433EE24A3347E7E
0FE33495D7538B20234CAA509601408ED2E00294E4225E947FB6ABA52A36B866714BD52C7FC1
6DF84092B1CA4F601E7A419FD25E14A5A315C3A0C676B66A0DA92324735F7A40172C05ECA3C5
86FDCFB7E1551EA9683A3189E91805F41305C2C438D2AE063193AC72F873D54EE55D3560CF97
086FFA23703E21378D495F643A274997F80D218D4C2AA13BA6A45EC92A7FB94E1F9C2E5534FE
AA823D791D7B0AADB7502AEB0D83579B27203FDA60016EC71E329013383E93A76022165245C3
33EA59B22E2C19EE2B2FF5EA7F80B9E18F5D1C2EE608E97C8A913E7A45C9A571C51CEEF92425
376F0CA74DD66618C28DC4F90B790DD3DC9E3A7B1656B6CE3F0AC00A4BA351D9E5B734A0D88A
BAF207F14FEF140639DD4D1BB9AB08BC2DF09F3F421BF35C35C77C3E5D3E448AAA53CC640C38
EACF329BBEA0B2BE6EDD3B896F5F690EC0E705E39EA09A36FE00906858BAB1157AFD36B09074
E88C493A953807BF6C68B197778AC64D83EAEC36334E3AA8D84414AC23722C67D1BB097BD6E7
F2EC83A71BC665F3557AE328710F7F6A9C163ED12CC1CE8799435181A7354C7D6A6028FA2FCF
1C8A2CB77880F415CBB9C70B30BEF20F5285BDD76865EE4C9245BAA9F4DAF13F2C84B5B5BB60
71919E4180CD0F10A12AE24498236EF38A1A89D915F400A895CE8FD3DA778FE012A6BB0E0651
0DA69442EE22165AB2C30B8433720A080A2C1CF16E4083DC74005AC5E0562AAF790FDD2075AD
DB3CC4D327A3C71F93346A2F181BDAC245EEA015D979DB2C782F8931B26894EEBF2DF6FE0ADD
589AA161CA92E816F83D0D65D7C361A0E318E124514D0477FBFA01CAB0BCF80664A0B8983BB4
ECA0B7B2B43F959F4D79520D3EB080A1039D774E7BF75AFABD06E18F71F17EE98D145943916C
AF77E2F01E91F33ED5E21EAE52E468BAE580E584AED890945CDCE9D3320D407E7D39C1C44B2C
7ED49192FAE7C777180D7AD4E15A019D9EE70D08265CC911FA521BD7D85996B1B1D91D8F6EB6
2A5B250F278A1C1E44E1762DDF59FDC82A5E40440971CEE6636F8297D8BB1FD5BCB5219CCCF4
B5A9E2A680EBE4545D995DBFF30E9AA8EFB583FAB79820103C5AA9DA7357D95E283DF5D49A12
A11D992428031EF6406980433DFC4D3369F1202F177794CABB6FF0F34173D7231E79630BBE00
57B4846FD1F556388073B04200B408A70A5E79BC4464D9EE1A41C932D02C771132D1B169B1BD
9929D2306E1D5F0AD7757B51122F8BBC817221D23AA134A3C5AD7EFCAD2291DBAADA9F9E6875
61B739215D11DFA1E59B1ACB8F19D7693824AE73B48156D65E423BE807C3F6A55B5D438E50E6
DC6006CA558944ACA109B057E9B18B8F727A28AE57FED80CDF905303F66F6CB1AF8B9BAA3A34
3B123216B4326CBF3D8537D0CD8319074651EF17D36E13AB84949DF867178FFA04245ED736CA
50FED4CC35D6A7E4B0072F45E9472F32F184A3DF30CE1E2BB539D285915DDCDBD51E09F3C083
BF5EAC2C6DF79AB7497ED91E42268EDFB99274ABE6D180700A4C1567E61A845D42F5E402C4DF
1B83AA38D44034647CCF7A93062A7D37857BC503ED3CAA2A845992715C1CD68262EBD8940719
1FE504D8FF6356DE3DC4C81810AF3347B90209857ED39FEF290BFD041C75765065C35BA086CE
2BB55D17B0D611E01221D8F5253FD51F95C385754A4D0A65B4968C1E5FAF4C4D950DCDED74AD
E1DD2C3A3ACAB396DC28D64DAFDE63C917001D984C0496F398D08C0BFB4D8A27C43833BD68F6
386C831114ED1051F4C48AD8CDF3EBEC69435141DFA4D0AAD7FB6CAF387F3FA91B1F079E95A0
6546FE501DBBBFBC44E93468D4C7C4B395E3D899719886B85D12900921C99DE4826363DEBA2A
F3935A8BA42B1A69603CA279E91E18EAC7B3F4724362F46BAEB7EF037CA1D3E30ECE1009C201
D149190855DE61427E76165F4D9ECE43B10DA3B9F10229BCA5F9E7F6F8B5C8929D349C0B3ABC
BF32C1B6B97C1585835E531B0A3D8B983ED7926B7A4FBB40856CBC050180FCA510DFD4641190
DF42912A9CDE4CB36D11F4A2073890F529528D2276D11B060AEF5EDC2EBC8CDC816EC33ADE0F
0CF76638F751A251A3D8D8B39F928969CFA3087E2C8F7F842BE730B7ECBE5D98657709C200EA
7FC17C5FB28FE9A5F50D024ECBCCA210BB1B1A8AF6904CCA1CEC63BEEDEA457362B43290DE4B
F62F539044BDDCEF5BA83FB533B9868A9301DEFB20A1246148E56D45124098F921F200A8A583
697945D547B3518BA310712C4F95C93892E0FB90043230E389743CC9F8D46A6CF49FDA4C1666
097DE2CDEAE1063E06B76B9BA2AEA52F11F31518B951814D5EA5CE7C3D8F2705ED180E477FB7
2CD3AF3443E684C96B6ED915B4187F44E247205C1A9C8B5EA66BD5B5B9082B6B19BBB83FAFDE
2C209600F6A6EEE1C4E4AFDEA7C45FF8CB8258E02D7D046F2BF6199E39DA90CF553D875B0D9F
D8673BA2EF8FBF6378FCD14D880EAE5FDDFA423B106348D63030ED491BC1D2B72D95AB903B33
BF3670123AB0C51CA61F64E0593E4CAA7FAA7FFA58E1CE18CC50897C10E53F9AB1C49387FA4C
24E4A864F9E63242C0FD651B41DCAD47FDA72A431E06F3439488FF2E4E1B5520685C1959FC56
61DC0F3D7435B75E28318AB2809B3D54909D91AB298F72F064A303E58543D8A4E42FF2AFCFB1
972DF675DD4AB950FEE17464F066791757FA75B737624897D2DAACB5113DBCB5A3AE66C7BB1F
EF9FCE0D33999C05AFB08E0EEE40F291514426EC0A7070215101FB02212ED13DFF160A7DF70A
80F36E356F9113779FD189726203ED3796ED033484A7BCA5978EF1EF5E189D396CC540EF8058
73EFADCD6982F52D09C5582F9011E919AEE8BCEB377CA109ADFE13B0B9F394C7E5826FE49B3B
3267C0043B141C771C226BD7D12AF545D1C02A0A60CBCA5ACA96DCCE2E70D7BD1B88CA6203D2
BAD9694F72DA4A3917939E77AE277BA1B2C5F43F878124991A2ED27340B7D4AB92C166ADF80D
AFF48C8FF3BE21F936F8B5DE1508AF16D425CAEE4B76B81F243EE7349CDF19AD28E1863C494A
1CD32CC5FD92301954EE1440435DAD418EB13E954821C5F693681C041429A0D3B1AD746D7F1A
914380519610862530D4691A073AA95FEF57068332294AC78E04AD40097C715BEBD207A6CDE6
28A72970BA6058E27E3DF6B7B57A194FD9F97733D252901E22F543DE666DD579834BA9D99F9C
7005743F966EACF46067A31ACB1A5AD036783508F5ADE8B169D9870C8731EFDBD5FD9CCF3E2E
B4DEF8062C9CED465539750467FFC930F56940FBD755F511CE48454A438C73593F431690B8B4
ADBAC8CD8CFDE567AC310C3072DDD51CD40997B040DFF752AE6A4414F69C0790CC20AF960D7D
BC763C4E2F1ABA5791768DA2470858C0C6359F1EDB882189B0793E11696E9C20BC1B8A4C08B0
D221864A1F3E57930531B900A05AF323E89613C7E8A0982AB0777C80E518340CF6655711E38A
7D83A4299F036CF67AC40D6ED5E3984A42935015114C408FA9165002102F6C987DCA09963625
02A0A3C963BB4A10CE89F38DE6F088397939C617C7592D706D0D3F332BF51AA67EDF144B992B
65A1185322D5BF25AA127F7B94C03F552D90625A97C52F89D5CE9ECA2AFB208E1C82A9689181
8B109F50EBA01EA7A01A6203A3D7C0E50FE6320FA1949DC4E9D316E35C9D1A50539E9BBC72BD
528999E850F9CF0880237E76D9D5B0AF18D7B17FFC33DDC06DEB6E7F82891422D2CC5485D017
AE3286C61E7574A6F354B5D1B37E773C4A6D0417ED2F5E327B08972CE43C6B142AA9324ADA07
FE92269C873A3CA8D39BC16E15D77532BA17DB4DDAD01EE6D9B0DBBF20CF99E69B39D790C4FD
38B1267E2AF28DC4C60D93ADC6779A6DC085916F163790A41B192093F391848D71EEE37897D5
AC525FDE52CAB2C3D9F1CAA4BA3316CA15B50B0DB60ECA9D1D413361776A616DA67F94945511
F0EE2B516FFFC6B8433A704A0B74B8BFDF61462A957FC2DC7A7903F3B18C76DA78A8FF8CB53D
0236902E8D8FEC5C5D7AF1BD7E114641B25634332D04D7F8588CA5A4CA6C60B7CCBBE4CBCD61
FDA534BAB02FF4FC7603863AC411F67207966B6EA2119B1FED042E3415A7D96D4ABFA494BBF3
39F16FA18596D3B19D39F7C9159B11C61F5B108450619B64479460E9A004DBA5CC50E94861C6
227DED038CB7400011AAAC50F152AFA9D0378DCDF5BB58DCDDE464298B3F919F3DE113C4F870
75FD170476EC302FFD10973A23FE13F82E601F0937E16233D3E50BC50776B4CFE7FDE93C71F0
C30F1AF6B5C784E1E6B776532B66DD5708A2A8FE537FA65328607C3B52EA523F5C1C45C2D5B3
E3267B35D4F017B90248757710B0386549ED748A10AA7AE2CF2DD1789F33135033A62FC44AD2
3CEE76684D7B9BF48C34034C16A08F89DF00713BF9E0A77635E5DE2BA6FCEE6B93FCD81B2F35
4CA49C32892FB257C72B76806CCBC30184CFAC3CBA468D0D2C6E8E4FF3D49BEED81D946D8EBF
5A29BE6C1CF69BF22A3E8DBBD16751EAF5A30712BF5E3EDD8B9BDAD0A85F436A4874AF289B49
EF0C8B765066AE8CA137C38DF97C4FECFAC051435434A2AC5327777523289C2479F23BCF971D
DAC90D40C9D5F42597A17022BE2EEF3D0E1A4FC5291CFA262D34897FC79B6C807B42191FFFFD
165520ECE0201959FDEBA7D2A6D14F586B78D072605F7DD92C9CD5047D6843D387F0EC25A889
197E5529BE5D06F39C4FB350008A90D4C5C8BE7E626BD1737C5BF169D9666227C0D1E92A073C
3123D9839FAA1E9F6318064842B09C3BE5F60E026AF4C236FE36F4C54E5B99C8A0390B596D85
45168184E310C747CE4F2CEFFE2980A156FBB1E738CA1375424756E4A632F68D97126D81DBAF
80B00BAC40E6FFB720C038F18BFF3DABA9048C24FB5DB14C3F27A4119EBC33430136D11B7127
154B35BA02EEA4DEACA1B48D393CC109EE2FC1166E90BC9936DEFD1718052F089D96004E3FF9
B5936E2A53BA4F7EF33A28044D8E3D52CAFD84C186A03A6E3C0367851A944BF2E10FE2FFC1A5
939BAD6D9B93CCAE5A65E9230B7A6EF843A9647EADDE7BA2E55643BF782FD8898BCB37E63785
FC9EEC4423699B5A2AE4DAB915E4E596D721CE397D9000FB6F5412D2FF78035E9545EA06F820
E32B164D440EDD435604AA7B4A5E1E48FFEC9E6B8F0128AF7AD9C6A068AC01402FD5BFAF60D0
760B8AAA4A4972BEB8ACF059826BFBF82C350D5E4E06D49DC01A57AD132C81D24DED1087A6ED
7D189AC13E9C9CCC6FC5172BAD2171F1446891C6CBB562CB936C86616C0929D6AB7DC401703D
9A8889483BCE1D0EE093DA6BAF808EE4C6849ABD5F260D20FBC5F9B37A966FB4BBBC54E15B8F
601E2F00FADB039BF88B69F3838D85006AF880EE8F440D09A7C52E09A3455F2BCECE960AB5E8
CE36A0FB7808EED33FAA8E8CCAB3C682857FB74FEEEFC32D04BC822020F39BC5DD664D60D707
471029B50EF5CD681994BE631C802F30A047683ED077957ADB549ED4B8AB9142B23265613895
2765FF47D0676C42B7B0FCA7C832F6FB50906568A75734ABA5DFE9C86206CCA9237879C820F5
202A5F059DE4EACB46B3A805BA8BEEDDEE50DB67458CED30D4D37B1F8154BEF5E50C01D9B737
E5FE0592A9512E42E648F795EEE9C57C6FC597D083E8CF26B3960DAFF51207340CD54D087A36
93923152EF8B18D9D30D4AB0317F782E01081945EC0E7C9118A2AFABA56A5B15757572526470
4FAE124AEF4D6DE9774F3DD85056FD0AD1692814529A9371B79551E1F130C80B67A5A963BEC8
64A5C05FE62362E778F8712216DE536D56FF25DB68B3CA01157C198962776181FE47BEA4FE2A
2499191668A525FB01744F0E25769D3D973E3DF7A29B8E434D0ABB881C7EA42380481C26DD7E
61A1AD103B1B9A6CE363A6D81F02C3237F2DBE2BA4F95E60BB14568FF0C30D31C815E40E4638
D4118443D3A4E11DB3675096CB06A60F183ACD7006FA6E28C994856AFFA8368543748E8897C4
3F22716A89F7682076D0B33E00BE5E4F48E8DFF62BCB5B80D9925E692DE03B6AA6AFD65BE127
8ACE1C2E4E57D628B9385D27FF42BD6E9373D460B82C4227C6AB39509C1911631AFF96ABC159
91B8B02E46EC910C45129CAA4239EFEA234981DC31492073ABC4240DAA6A746BBC7EB4A09584
B1B46F776D64CDD45C286A55F014FF0633F61F9014F88FAF138B94A218A3535BC3D86D3B7E71
D7849EF030B83037552485BD6E141DD420970007F5D9EA3C1A1EA1691E333346DB432A016459
FF9C50A93EBA78040F96097E5942A6434B9557B35FCCA1F0B2F0EECEA3CA5E0A77854F634650
DD066F97570DD472F35516729B3175742E5F3C84FFB5F55D52B268FD25C909DABEB44CCEBB26
A312330EEBA0292501650AB88CDBC657A40666FADD5CED1CA8A229D6A88AA7581C4D0FAB62FE
CDE434DE45540058F052AB86A57A5E53654A63F11C293DE834D84A01F2F84274D8CFF539C552
1E2A62DCFD8BBA93E269E8A6CB436AE06CB13AF633A68B635FA9D27D0BD0DACA0736C5520815
BD8D6229EFA3EF2F6521EA7C563E381BE994AE735A7D481B7A1751F569D37F7156A3EC6A8616
AC553914ACA30D3342CF7929AF299A932EF7294E0262E279C037ABFD6B34147F8BAA977A55D8
C92D7F4B4528B333C6BFA30B263A6E7AFCEDBEA856E82290AE5FF9E3332F577A73FD42236F03
A43A29887DBDA58EE3BBA9D5A7806362F87B1851B126339C98F8EAF25A81EEA96031B61D5426
AC9299B71F9D9AC2B322FDAC5C0ADB309934E0BB17B05986904D4051DCEBE9B9AF824402DD9E
3A66758B8033F90B5F40256FDFD4874D451FB8DC7343EB8775A35EF49B4F3944FEE03DCE53BE
769C4DE48018FCC9F39512F6F9E71E541F5C32416B1DFAA1C48609C9C562B30E3A0B14D20025
098077774FDCF7C7A1EB0900FBB5E84B8EF71B7861BCF0F15C1D011CF6CAC5547A39297BB601
25089D23B3B68C6267281B226F7C77A1A1EAE754341886346AD631FB74F8B70A8FA0104BF9BE
9CA6F2DE8B1B909C9D00ECE147D13F6F561E97B60F50646BD68823EFEB0DE6B928D39DBFA217
7F57B6F75C4FA6EA05789963520AA5F56F2BEC7992CF13295FE30E7203431F73C7EB8D1D091F
6227141CEC1ED6EA859F8E152225071540AE2BDC3DF3DFC3A13D66C6A230A2D98A2707AD49BE
80BFF84E410749B8ADAB5FC5AC3412317B56694DA2C672BB2C9EECA7492924A9C1EFB64C2D08
E930C4E9423595B4B64C4B270098AC0807CF724B078643C02F6A525A0A7595AEF6ACD56A504E
16B4EE61369BBA4FF3C389C891C6CD206E9A2CF7C1C2906279560ADEEBE751B7DEE60883D52E
E66065F94E069432D68AE50134F40A68A9872F59951CB88A1FB17A16B4997F1DF547582E8FC7
65175436C785363AAD590B45DA2C1A09CF12C0C24346EAC964AC08C8221F4F5735C0D06B95CB
78891072AD9742392AB602B860AE001DD0EC69BA7605D3AD6E2086D83188F87112C4797FEA14
97805AC7EC5FC807934FC6AC45818825842CB647CC65DE3AE885EA10A023D0AB24A1D9658F1B
892B9D9835D6DD5E622B6CB853F1DD51BAA1F39DA9F7044E17BC9EC1C59CDB39D65EC7527BC4
1464069E3279019F7ADCD602C3595E228088C90373678D5002AFE4366D5DC0E4C3ADAD2181BE
A7E0CBFDABA0EF06BA998809DB906C824AE62C3BFCCCA430418AE699A6D419111FFC8F3FC1E6
CAAD316542F2FBBD0A1B12DE51DE7D4A01AF820A9901CBB7B19EF2165261E29A68975C71E7B3
ACAD5A7463F42AAF295137EB319BBDEAE185DC56AEFC33CC0602E9AAB177E50EAAF062C1C3DB
B9631CC5E2213A004956CBC6056851E19172BF158E05C62C070BEB70149D1BAB6E3DD3319A47
FB7726449CB0164369B9B05D7E1DC6C9B8E5E6645D9FF0E73D76472C1989CECC2D7660970D1E
2B25130BDBD4B3B671AAF2F6F94B987ACB5C34C2F4B60E12D83FBB52E0A42409015A448E6552
95E4A3F797424DF80063642A01C04DBF052FB6F184077A3C3D50B04CEC26993ACB5E32AADF30
EE875D6635B30187A15146B3C9363AC1376B5F0FA44E79F982F4A2FB99C622D44AAEBFCAABF3
EE5B5C0321FD09BA352B1763E6330D157EC904036C29898C75145D0F94703DE83604189F7064
BFE1D5A18DA11C63DD4FEA08E7C3126E21D1D9D9FFCAE4522A9C67568EDF217427D2EB90C434
64620462FB1615A64C1211D6B9F44C51847C127B1E592439A14A88B0EF865897F98D424E3340
FD0F81DCD888C41B5D368129F7E5ED2B849223D21559B4F05D3EB94D26AF9ACC47D021853261
2844CC93C517EF9D2F5C0EA6E04B7E90A9F855C8BB2D46D631E7FB8AB8AE932E75504C43A7E5
20C948BFAE556185DD15C04A8ADB4381FC514902D6F1F0F414DB6371C2F31D0982B98D9204C3
83456215DEB86C89C1A9B74330E8C405BC99721BD49EAE43EE0A46436EC246610168937491AA
2A4812B286AB492F11A2BD1AD739C2452EB9241D4AC091D931C0E7C1B75C6D7CC2711D90D88A
D1620935CE1B4A87ACC798F4B72A69281031D09584367263F0F044010315BC78F716C4B80FA4
55265909738871EF1991141CC56B8006043CB85DC2DB33FD52E7FCC783999EFAAE05D8600C01
DCB03BDCA989F419DCC51616D126EA6902D2C138DF9DC1EC256AA1B491BA75D5C3A4B7606005
D9FF6A022CC2D42F665754D0AEBF7E68972033EC8FD660D4408D5E3B104EF4A8F731B76F3AE3
F0550F77445872061D5C7E9BD9120A288A428AC39463C9F6B277C36F9CDD59E8DDE38A35AAD4
10E5941E71361EFD99059DAD065AE22C792C83EE3E4CBD47FC5DD1BCBE1BB5A0A5AAF5C02EC1
0EEC223A0684E399BB04ADE1007CE6B92D6987110D0899F3318ADFF5968CCC46BE2B2FB17808
D846CA32F40AA4AC96F1D3995C92C49BEF4887B46E328242FB9097F43188039CCA864264EB3B
06C92D93E7FDF6A575897B447C7606D3C0BE25DBA7274F51289716DE40DABD5136546D563198
C4524DF8585BFA6B9DC5C940D7AF5BDEF991B128B4E9BE6371316836EB3675FED1449E3E2E6B
1E27758A6649F3A0DB0F538350CEF5827358F51C689576BC572FC03B838DAFBD6B4D72F013ED
D8BB873E8E9275BC71274D35F3CF82FC01F22DDF1A83C3B6EDA325589EA639BED7F1BCFFE22A
16C81B2082E7AE333C7D5141CAA6456C6CAF53C44B7CF8D68C394FF8AB0A1DB293D5B5B1005E
61FBFC5229C22E9D5001B1682BA4A2DB5870455C8E2B9F5024C0152C2BD4F2D0E604416D9D3C
FB0F5FC36A7A5945C082ED80D4D07DE58D215E0E156057008817744E43A7E19F8CB66F76C0B8
962048C19A4DA30B62C34611CB6595D6C1DC91D11E42020483A96D2BAC7F1376D52D6D10919D
6F67B843F71BDE8D3C5456C95B50715906E91F29BBEC8C654515CCAFB0824DADD938B21AACB0
AE66AD2C01D47ACA5AA327AD8A280414A9C048454684ABE32B0596D3FD9E188259249A6C4921
094F4B14519C72DC7C5F56BB829DA7B5FA5D8555D9EE38B8B59EBEA62B582E8F21D62387825A
88A520B2BABE7B93C21DA63A39F4886A76D24915B98CA94E5AC75C69C215DA29A5410E06B8AF
17F5D0DFF45D43D423541A659A3BD32C5DD2E9CC5115599FDCCA804B2F657EFC520621D5DEAB
6E5B75FF62EF50B0216665B9B29A16D52AA97A09FDD37F8FD6E7827E229579D55C7070F5181D
CE042B610FD7F37785C42BF0BA798F6DE6CA3D45191793E0F422A14F6E029F7EF39EFEC17421
0BDD255FBA651E4DAF565E47C965E8E000F4692A91C2F0E8CF7C0D694902760C0979F63854D6
6D0BA01561A6BF0B0B68522BE54BA346DC802C545D0F7D22BACF488AFBB93BADE3193FD76C5E
2B41726B8E90B1C706BF9DAE10D5349A7BFEF5EE3DBB5776AF524B3A9199D1F02A4D1161B56D
E63E06746ECD42F149729FCB3B03F78A113B0D2E9B303834A35562B12D0AE29E3986B4AB7926
BFDB6F97EC46891CB538A25E7E4C6A101078E766D3F33E00A9F0AA26ED2E4FDDE87F0C540AAA
845B391DDCA20B2B4FEEF225A7486A578AB5D0BE9A25178118D8B11D44CC66B61F8EE7035229
00DD011410A0204D8988800080AF6F29F52819EAABC279F49B10AA1BDC62FF136E8162B5769B
CD00DC3A9BC08E43DDF132180BADE997101C276DBCFA67594E1F5F1E7489A3851F85CD8589F9
A88EDFAC1C6811ABAEB8F6B9C96DA27B341DE1AA5AEC345849FE63C2C2A99E7E3627686D8575
252594B9E3ABEE02A577205B685547444517D3BD024D57590078996CC33E18608F1121499560
02608B592097E5EBE9FC8A0FC2C75D8A0A3AB20AA4770AC3B214180A53BD1D942BF06B5D09B1
B3302CD66AC7ABE7F746D3EEAA0DB079FEAA3B68B7B9C3D113CCE7C3B0A55160A7044CDD1D69
8610039515E80F739C5AF2B0ED905B41DF7323C8B907648ABF899BFB72FEA0D90C294C0E3144
A16A52E80BF610E68F146D92A01FE6C69140453D028D6206262BB6BEE1ABEB08299B16977963
7E659C1BF170BE265D8412D905A83D7206BCFA3A86DE4BC296FC520590FFC43AC2B97B59D58B
85F806E3C22257EDD46C4EA5E8C3C4760E9531EEEAA6389EB3CA14E63D2540A50C7A514CE27B
F1965392C76FBBF6BA70C12B89AAFECF3CEC834B248899710550787BB32A0DAB208E1506916E
BC1068AE05BAF9346A59C15A4C39DDA3D9714DC41354CE0A4B533ED9E85371E67472B37AFDE9
2DDD626601F4A8E14AC0D387B6C0F8081B5DE23C888D00D493CC5819A88F4B9C3248765958F2
3C48F5D8DC0EBB8686216F3A92BD23698C7605FCEF3012409D2AB341941F0AE8735C3C6A8F81
C5ED8DDEBB32EDD8523BC16B3C88BCDDA4B8CE7605A5393E43B3F000C240E3FCF146A70A548C
C09E58CC87B9B179F59D3CBAAB5051E07A73B3F1AB13F700890661809A47D3DD48E91881310E
2383F5B6238940AEB6F40B277DA76C7AC8DF66DB3D058F6297E04DD6EDFBB3DE232ABEE365E5
40E4306D7D47D5AC4BBCB5C1F637157709A7D92A7A8D8710F60B076B095C63E083DCAC9BCD8E
6EFDD042F673497948562A5DE6C36B88D7F4B8B11D81CA2D3E3A171AE45B875116E6ED0C8EA8
88A134733D0964730160AAC3CF5ECE083B463F310A9FB7CA4FFCB3D6FBE98EF93445E546838A
24BF96EA70B8C0F68852C73BD2CB88B616E4DD1244B96396F99370572698110F0B761C28F901
09D63D0B51E2EEAC91014E5809E048F60726E40B7C5B0876CF8F9EB14DAB7D56A63A813BEEA6
E738B8A1272D827E951A0111BD85BA61737B2B33ECC7415AF3A92C1756111DC61EB99F9403F7
7EA633487473BFF1E709FBDD209BCEA3C60A0A510EF9190AC0501B8E822D05BF06486C460F31
72AC4D46CF32332BB592F9FA21E72B01CC622299FE1C3EF052D2F7408D3C2574F52D09840211
D45CD822E373BE8C0FBE04B07223AA13681231DD24394FF0ABD022C630D7DC49BDA5C58386CB
94EA672E9ACE4E55100420514CE12D1FE9EC4766155BCE25DB9EDCF21D0938668670187FD1A4
19F37B9C1AA77CDCBFEC130AB035A1AF99A5A11C5F8DE1FE9EDA01F2A482EF6D2E11E7CE6B49
A78A715C2D40389D04197C7EA513F3006E81CE76EC3298C66A12AADF2FB17FC5C55966671FE7
7FD1676BECF7874891C47F293D0DEA2D947D55A2C2C6729A0541436845027F06A3C97F93739B
017B7C2EC5A23BA6691F77730D492E31B7BD0BC1CD404F77D073992172C0EBA2AD228BD96DF9
5F24BBBC6367F93CD851C2921C6A607BB71B345121C7E4FF95C3682456E46E221C34DFD42B6B
3F207E2F75C962A5F148446E2B13CFE85072CEF5A86DD4617DCB95F736E05FAB2AB2386EA6E1
1558827294686920A6B1F76FCC7D50FFE64740C1F89C6E9FF6C9E373D4CD72DCDAA2C02CAD5C
F2DC9DE0C9C567AB6394BBD689276681C3700CED7889CA6BC195B68E86FBACCF0BB176661529
934A4E79109066E9001AFA6F5B08A53A2AF5EF9910B43A44D15F339ED7A94AB5F4851B4F904E
3070C1AD13E459A1C6F3243D5CCC104B417F3330381F60AA2F4DCA2D3D3A26A436E4CDE078B4
DD4453B21B0A344157A8FCC46A72006CC02829BBC18AF6595F89A9AC8C1E87EF5A373AC39298
4CDA935A3FEC58B0B63648B68DCA1E19E76AB591250699C1F871CA7D1F15FC1857F8E50EC2BF
C75D2FBE35F82891969D2DE9FDDAD785734B348E90DCD8B355F228F60616763F87F4EFEB6AD8
1B569B083BF074706BF2A0557F55BFC42B4CFC231BF3A73A7AAF721B21C0F7693686AAE322F2
D59E50C52A41B7A2283A685DF89F94FB336DEE0709CC777CA87063D13637DA9D48135E50D16D
5657618E4936AD55DD2F42D1085A7D53CDD2AA6D0A066A0909FBCE887B6A6310AC75353228B9
F4FAD0463AD98FCC4F854B59DA2BC6E66BCA04E347F32022AC24569100B1D9E11D2A3375D333
2A7123A2B49161C771E5846D622EEEFFA6E233F7A3E3C78FAE0DEC6FDFAB6E0549B22ABB2D54
C789884815BE881AEE3DF129DCCC96542F7C16C65C516A4A954EA0C68BCE5B969E25BA55836E
1D48319FCA33F0CBB863A127BE6153F5BAEE3DFC44C0CEA75E5BBC60DD411F2E2A0D9AA96BBE
42675AFAB21A4EC3D4B5A9FD32F14D434C6FABBA3E214587D442180D8D60A251A3A93F880C36
BA671EA62B5CF37A0C8BDF6F6FD97213941E19419365503DA65A5F362E181B52B987B09EBAF5
777C455FFF9ABF4CC3A4846B210AB293656030847963BB0423158D7E032782BBA8E1AD0AE200
D0E1F41D5ECCBE7B2C0DF5EF35FC8AAE3658FE012A3960173C2FC763A871C5B6E8F1744CD268
D4F44762909872E027F715F35ECDDC5E0875415852E56115B6DBA91963AB52838D793D77FACA
79C9B5E5BA7660F32FDCA8B55837297760BED34561620D2DD5B69ACC20EEE48421CEC196E3D2
89A37698C11E4E92E8D058269419B3B34FD01EA912600DAC576D5DDED1A4F77688A6E2025450
B0526D88294314E61AC06A0CE3BE42FBBBDB4FAE537DC4508697B9F34FD09FC20FD13C4F5F29
DFB2C7758CE70F0456017977AF4D149E0F57568CEBA36C0820A1FCB537F8D1A33344BE0CA048
94D6551FC16DA08F3D7BD1DD91CD0989165F89DDF0A0532D8D62FC749A49AE19E3555EA185F6
D37229FD91B85CE876AC808E05105095725EBE113FF7EDF96625A6A353ED1880FD189D25D125
D8D67C445734889C29B5968D9EE2D118F8E1C594C78741CB8345EC4ED9251C4B4A5E1B36D4F3
ECBDF589D4AC077407C05E8045A230389C9607C63D7C76529C9E5DB14DE8C7208A080C3A6C0D
0D6955B8167BB6C9F6187EEDB5FA22C0FB78364D995AB1198240BE5AA847477B048B8932F808
1B36F9CC57B3110C810FAB1A362A4E9148C7DDEB9DC85A5E4A4CA958F29033BB94E9C5F3914D
3489BE536CD9B885733949077AA20E5ED6E8FACE1A6F1AE32137FD01BEB93DC8BCE412CF19B0
150F928AF50AED5AFCF7D93D448EC3B8526118C95C8CFFBCFE1B3BB779D79EF673D20E7682A7
262152C8C96194CD744EA53F958B3B8160A2B6C7B3C8C2A3A5C549D0723B741E19615EA0765B
48ED2EBD9DFD96AC61FB782DED44342E2CE14F6193C376B13EF18116B0754BDD3F1DCF380C74
3901AD6E4A4D1D9E58B1B842639670422B7463BF7A64A343BE9F54E06F27D13CF1C8127A6E6D
2823E6BB3F912FE95AAFE9074A49905AFE933E694B53A72E8A417CCBED81C9DB94A179F71C67
6E162C44CA969A85168FD7FC85EE34AC219C354DE071D7EC22D996338D4F102F8201EEFAE43A
90E2BAFCC65B7EE92591032F6A71283377751F4A96F4111BE3745853B5893FC0F331AF628BD6
9DCF102E67078867B397E3BBAC1B2F9C67CD436CA9131852573B4799AB4DB3DD36FD218DBF88
8C193AE31ADD19E5867D93227F8BE88FBAA34DB44302E9584B8AA109A0BF1832DB0D42A22A96
24716D3FA0C4229645FF6CFA883879CEE0C1FC089C2DA87CBC4DCD37072A9CD4DCF60D65566A
B26FC18FFCC98008FFCDD86170FBBD6A3A5F81279DDA0383ED1B16B3723A60D785EDF2998C1C
35CCC1E2DFA67DF7CAE65C6F1E83A2FBC56A562B4A93864E95ECDFF78B81C0D2062FBA23B1D1
736A201549467903F69352D2CD5FF66BD238BF9A83A53A53D3024BF3E836285FFAB1AB6B74C1
774700A2300E712E00092524E91989D330B1BF784BB57D545AA419424753578917C2882063FC
3D228844FEEEB49265AB2F3C77A30CFAEF740BEB1680F7902BE9F74A88D7DFE5896FACD1DBBD
D0B4826BD0A39A25E2DC3305645A2016370B070B78396D9ECC6E16233BE422EDF1BE41ED5EE4
81245FB53C58F104720A1715155FAA3B6E5C4F5C409BB885763CCCB3747FC9771EAAA231F2CC
74954C214422FA3DF7A081708F3F37ED8F47231A08141016C7C93FAC357EE8CD1202D904B3A5
C18A7056C62D83BC82F0FBE0BEBA99AFA8FDDA4722CCBA40E96BCB09D63F596695EB4B4C018F
1D0C265AC82ECB107D62A87D0911D691D64E7C2E43C72841D729BAAF7073607C9ABA1A839E27
FA93012188D0143288FC2246752DC24130C46AB704C2C356F6E91DE11B6BEE2F10D3824EE501
DE26847827F4C858A521E49EEEF788940EDD06DCDAB958E3B09E183DDD1DBBF1437130E9426A
1AA8434668B0C55E21279AEFB144C351FC0FED384FFAA0E727429343B156309C21C6EB439F4C
9F5F7C296541CC61EEDF66623C617E620FC6CD29188CF2D0C7D9A4F5B9126D1B712B6D92E049
E3C6560FD9A7A737D8545096603138D448ECA6DAC756EAD17F8352517E3D85E4718D7E531D10
0E5F007C419F072FD0D4B9DD7ACE802FF96F938F63897AF521B868F18A972091D9B909849542
F962C9EF1B7FDE5B6A31ECE68F3ED6C0D2DE7F75454A94AA948C9107CDA2EC0E2EA5BE8FEC46
93477CAC38292C393288580DB916377E849F8C1896A12F7D91B0861CDCEACEBFEA119D089AE9
B36A92CA44D1E03CDAD151207D58EAEF91711716CEB7313C917836E71BC475EDE45163942064
C7C1BF1BAC4922A11366265CD4EF5AEDD919CE5A5B2BD0C08368B73BC59D5CAE9C7B86D9ECD6
F901F8BB5A4A7F3E0C827B88760508AAD5656FBD6B587377A2326D7221F888057BB2119039BC
0F52CEF66D014197BBD49801C1128D47868A4DBA705809A7433E35B2ECF25CDE3D7DB49E21CB
CE8233021254638BAD8A90C1821C0235E2D44C2DD48DC3360DD3163CF9155F733A961448DB44
5225DB311538069DCEEB65FD5A110201F00152502641D306090EF0C13C709829570D2AC71FAD
E61A0FB7F14A7DB228E43A38B2AAF7D7FE884928260409E1F4C00D397141873B6D148CD5029B
CD5742F3837D16D7EC2046A6AEE8E854CB31839146CFE712177A907BD8BE6CFDC0F6F2819587
9746EF65BFF5B7DC4F9E71C96A8640E4B3BDCA4C0AE2B892FF6AF3C2642F1BDD600B68C990A4
2BF3A2D58CD3F3FB3717107E6832D2D7DDE3565613F454BEE93CD06D3E5023709A329C3E7573
735D5F56298EBEEFB2B8036FC110B68E3AC7EECDD6F358759C74EE7CE41E852797DC12A99C53
07413A30DCEE77E1ADD6745752A9EAEB2A00D1FCA6CECFF3CFBB4EB9DD19F5B7D48F31E3F1EF
AE72AC822CD14090C094E48B83F18360CCC1C86CD367E8A2E6C5E336BD34DF2786B8438574C8
69DE915F90D2D2FF3E316EF9F045BB783C139724CEA9F3A27D8A9712C709BD9EDA39DFF692B6
981C57085CCFD8D3FA1BA921EDFD50B3A4B5D14C429AE16D13B748CE6D520FD0DE385666C2C8
867F0D00C32FE180B1CD5D198E3B13EB3ABBF6F3D9375A21F3A22F61D8434C3128481C4C1D7F
B391D9994101CDA967A6F757D9C48281AD9F93F6FBDB607AA72751359BD68795ADE2C2D123C0
87948C690C3CF9028192C9CC6793A4E1CBC503B37F784B63074308BEFC5BDC9D627863301CCC
AD56352D834A73557CCA16175500E2FFFF376A66719089C28CF7009C473B48218333171B573F
C3A057CAD6C7D189ED995A4361EE0DFC65D9F483E8E56E882F3B5264F1EBEFFA310367C8C121
25FE39438CE96B442495CF55139F86CB935992F2C8915674811284F123DEAA45B1463C4609AE
BEF6B25B035703C0B5583B19A4BF9335D87FD3B1DB63828F5445DF55C152135B0A5F538EFD1E
03F52E99CFD49B02546F19765065BA82B0EA778775CC770072D70F0A63098F71083A2F076BF5
87765D43F981345D86DD0D13E8F13CD5DA27A746036E67DB9D72C2540D5B8FDD3B6C47569D32
59CAE085AF2F979169228F8794845C5065270189D698639FBC820014FAE2A64329186A3C32D3
D81090E3C06C4A7424A0DD72FBF86365A76E0C2E2BA5EFA97FECC3591B6A4DBCE968A8EA9D2F
EB8885F23A62357E98812C02AC39491112B8955CACBE35C28367309E54FDD6E7AC4D82D879A0
1215896DF1C3A51B5DACA7BC9BF3C6FB02B68775B9BF6A5A23CC52175B5B20AAD62AA6143852
E09DC72BA38BAE08699D4272872EA356322510C5FFAFCD103701EB16A650A579F0744E08FC39
BEFFAD83C6AA7DD26152F9A14CBD4AE32504B6E3385657ADE7EC1BD514283A45CAE9CBE1556A
E526C2A6422A28EA4F2C0DADF32339B070B98411C2916AF2A8D1C252EAA6484C3E95B490FBAC
5F1F44394B6D843A397A7B0DD41D92CE89380474A138A51F7E9B1DC6965E71B88E7FD1BDF8AC
57853810BCAFE1B1392CD6D041AAEEE93C10165AA5CF6A1D847E2FAB6ECBE93DD6DF55896A33
ECA22D9E450B1F4859AFE8AA91EBC85CE755B3DEF888A06F928213B81259695E67A40E8527A2
2A6F073AEDF9EFD21AA4734D7DA376A46F6AFE215A63F980D4FF9D10F456AF4FDC47EACDC8E8
C5A409FFDD735CD778BDAFDD716A309EC522BF5955354B59780FAEEDECA5B91B0C356A6247D1
E2CED896389B26DD39E44DB8A9899D7490B41328A15BA714C0D992BDA830C2463650B0DEE2A0
B9D9CD0D835B3AD16421CFAD46E5EFD6D8A3BE50C61FF533D8CECC391D422C219F09A68BE996
C02BF0A7788081042BDEE1F710AC30488593A119CC6A2DFEC54F88D63D879D03606303ADE92A
2B17088518B24904B53B62F2142975A166867B00A837FC07B8CD8084CC59971BE2A69EA0B035
EF4A4604571C9FD935280338F7C64DF34D6348AD4827E906DC2FEBF17D08445C41DF72A6D905
AEAD400ACF029ABA656D1B1F62C017303739B2F212A1B39E065D0889E3362B981324BFA94BF0
8AA99B2D93D6F2D4CD480E757D49D1322ED72EC13E280498279430D9C7E8A1BD5385ED911E8C
5094C23779F111858DED33D62BF9622DAE2BE332B6AF371E2CC08E696F322E9545689D1B5794
2494BC1167E67E997C7E81D02B41AC66856A9920233660A8383AEBA06A1698AC5B27852C80C0
AD2C69C232943AE1D21FFDB4A8A5ED023CA722A39FF2CB6CCBC66622E7E09040BF6406589FEA
B68AC2DB51FFBFEE80930E977ADA1E62512A351F95AC61E4FAE027CF14F0D835A550912CAB98
156C2BE582A7A103ED1BA83EAE461265A288108E2DD739D421594AEB8445ACB4860050C69C04
3942C895BAF4D3F60A601503B2C188C525792639183DAE145F2473FF4B00DB3613BD31D7F75E
7B95F9CEC0328DEE85F9D917A5386C183BFE2E088FE56B05CAA6FE784759557AFCF0BE9E296B
B45452B227F932EDD6F71E1783938F450A01DB075A703638849467CFB04712336C4DCEBA30EA
3AFF1504EF61F14BF2F87083284CDDE554DA2C3B3C67D4E892BEAF7E6FDE66D63F60DD56B138
271184F25222AFCD1B9B974F2F6D27177C054876FECF23571FB007F71D7FA113030B96A7A4F8
BAAC387498FC0F9C60C73B9F2CD58ED1A4860203D10854E2DA7CF488256329514F1A5E943F86
12954FF5A8882597D115F2882F03F8506820A20AFC7C205FAC8F083822A19A9FA25EAB7D098D
C1F0091A5F64475C2247EC52041754CB390777E4131C7EFC4E8925CDCACFC42B4B35629C34B6
387920E3A30FDBDB10CD868D29D7F425A3585A0452E2F4BBEC6D1CC3EFF1E9B45BECB7A521A2
4C1C59646A78DB2B88DD19E3742BB7449FB24C97B64FCB066F40DA9C1D7626AD942E670169BE
DC2BCA91E5E9C3502D7584C97F8543D1584C925AFEE24833DC24564A7B713387456EB88F783F
186510D482F06CCF9D5A0FCC7CF2E435C8ACC67E0F303EBDF830588D8FB64975446480F2D2C3
D69F60BB21A9B3F746A0A84647EF53A6B3CF55F6A49E41783922F3DA5E076E62A7B2317200CC
D1599AA5247ECC27E090055086C09A76A840ADED0783AE6A77E9EA7B5D33C963F3A9FECD3605
9E4E1BBB18A89FA47B995D00030EABC29753F54A2A7F7AB5F2C81FBEACEA8AA8D9F093D6601E
41D82D81F253BFD0EB8588629992A4B9DCE5E3963166BF5D6C926B3A1341BCD7BA107097147F
8745BDBB5CCFBF15C212D75F9970AA12DCB4853BC8FF2477236E0B00A705ABBBD51A347AA753
31E600B7C4929F6A0F4E6067C5A01EB929469B67BE2F1ADA7CB82223AEEDED9D031A853035E3
4C2520EB5DE41823295486FA7978EC3CD6FFA5E1BEF86579234274B6B2E119564E57FD21705E
A23E9CC7320C5CC2014F7E5BEB6782B08B9F887402A2FCA87B91932E2A0C51A8FFEE0FBB2F84
E3C3E7BD71CA3C5BA94CBC14333703F14A9BE0E55E717C901E4D338AC40D9E20723BCDD77C09
5F95F791F87A9877CF8BD3E2D0D6893C88BD3CF2DE490D847213D1CF060F100F66281B1FF015
6CFF45644BABC15DD487F29B5682CECA31956C641ECD77B76A6B9226D2FCC5369462388C3178
A9BE915913B3BC763773D1D040F7613A65F335D98C90296DC00DF5D4516C6E00D2A0A5651818
9DD667DD7C0CCA7D34FB7E325DF84F496C4EA62C9D41AB705D52B2B8D3351640B3B17ABBEF8C
C55639E8368C255A9A3F00A8BC31498D184FF12357C22B5E9981C5668733EA47483344201E60
2E13455CDA719D66A5208D75D90EDA419E27A22AFA12F7F8198B7056A114FAEDA45C3E0F27FC
9F5DC6CB6EEBCBD858A1BE1733ACE559D3C5C6F951316304B607E80F2662F001F30449E71FF9
4998131216C2AE345C753BA66FF8467315BB24D431828A04CFDA801BE91C2846B4EC8C0A8592
0BD76128518D0B5A2B425D698BBBEBA0E6C71E2D9829EA5698AB101570F580CC8CB482B5E233
A6366BE2F588626591C806C98BED87236012969A34CDD9451BAE17723AE3467ACC7712CEFF41
B534955C6B77E7F622E081B0B541ED1ED613BA1B662EA217C61F8A84BA0EC9D4629726137F02
E0C3D6CFB5B52DEB204FBD92A3EE48DD278F268304098BDEE5B785E207B911DAB961F3262EC2
4CB7E248DFB41DDC58F5CC04F0D5AF93F43FF16ED222ADD096AC8CE5A7BFEA02B504F3B792A6
4ACAB80C562D7A7704112C2F48BBA597CFE8E8143D36CE10C2F145D2FD2EB29FB0C0B6F053FF
026D2E5DE6212DC1734C333DE2FC0CF2C5164071EDE184BA47EE6331C9E20CAE89B2B2D737B8
B3059DAF73C458E7785EABB6BCB4A779BDBFDDFFEB6CF0A7538FFC4F4B7C09753AF9F5935045
C8C6EDA15FEC89C001F9A61F42066FFFEFE508378703CBEB92A08216EC1BC68162030E976549
F7B1A8D239F292D9F37B694CD20381AA971EA17E78089310E69E5AC969E76956FE07C00EF8EF
3A3A61F9C34C55045C8BF388CB2C0287F59113756F835CB2BA3D1857B3312582FD7A7E9C1677
F687457E232539C79B86FBE6F14B69F3E8BA51D00E776A86F440E34984583F4C9529B6E0E367
2F20A7283B1517AFB2A00943490FB8897BC55B5645177F449D27B66169342896ABA708FD479C
0FCA5B88981632C5F0A6689F9E856FB1E0329ED21E3B21C8270175C72F918721DCA823652DFD
2E051A1D15856A20BCC948D40B7C05700E0163CD8696A037DB3EE7F76408ED350B3ED333F45E
72D069EB2A6186EB27653ED3822BFB4003E17D5FE303AFFAEBB6AD8FF9EB4610A942E51DED0A
55A240F8474D226215CEF225E21990FEF6D77D92ED5186B10D460B8A668376D3419A084047FF
44866D1D2F17527C5DE3D017EF5DE841A7C8F05A4500A3B1A383C5461866BC09DC3F5DBCA2C8
0C7F07A6A75B01CABAEF1165E5B78725CD54D73F1498AABA5302E4E137D7271689757F8E92FE
7371F0283845D81F8653CEBA0DF7E42AA9EBB53838386E2C63171A65C835D1E1804FC6104AB0
22749979E76B089A073027FB267F9900138B8925813B5A5BEFB7551FA6C5B86758B3DCFE7013
1F661FC0EE0C2CDCAC3541E87B91ADA1479DCD223C3689353075CE0B0AE83EF43BFF1EDE4C0D
5F5421425349E3FA34D387AF76C8CA4E4020637F6321BFA2A74781602241D7D84424FB24847A
E14E8B06DF5AFF1602A5B272E6D88FAC04EED73B8318B32628EAB64804D671868EF4280E355A
41E500804B7AE3BA9FEF7F21E791D23C77466A87E124A1EDFA77D3B9089B1E49577B50078FE4
ACEDFBCC46F7A8EB73443A4D23551FE403D12A3AA7160B05CB69FC687F7F833607EBA07C417B
F51D6582C17386B91C890ACA050B15B2BD99839C981798B9D133CA1D9B5623A6B64637CE51BC
0CE9FEF1D5D287E50FAB49BA05E8172FC5C349C7076A3ACC5C05EC9DD36AB591AB379AA21D88
999698EC359EB9999FBBBA2FF69712196DBC2DC691E0D05BCE36235ED99F77B68FF72C2476AB
B489EF60096F59F7D2D73E9EEDBFC6B5E3AFF9330DB06B6F9301191078B852C4728B477A90BF
9ACB0C1E6029EAB4C0F0D91F31301CD83FFE9E01FE5ACB400C0E8CDED49B074BA1D1BA16FB9E
2B125900BF6FF159ED6A33AB644B425BBDAF274284E12D096937DE3D46A1736A04D5865793D1
26AA2A0E6AF84878FF48CCADB5D4E81126B1F0617F46DF045EB7F400C9358EC592FAC1513F6D
4E84233E33ADFD284B55D9B0EC2050C1BA5A2494899BB200BC2E3A418F1EE7F250AF0F404533
3EEEE7AA74913A2EA46F193B834ED2CA482A2959787E2C1C2D9016116DF009D295A708FFDA06
B997851AE79DA93EE321FCF0BD0E4428CD19367C81EB8E7AE9C8D4A85DEADA840C0159AE6189
3BFFB221D0AE70D2B0347ACE3AE42576E54A2A4AD386DCCCE9D92435F26D5768E4767E80C31C
9860D0AA7D1846EB7C744814F5FFB928E3A85CAA214ACD339A65DB81235957646EEE447C6167
E2E4FB4365E89E7EE98340360D6013FC071BBD267E9541764F0CDC95FC8D3A6B3DDB89AC806F
5CEA95ADFE5F1C348C4666B9E6A73EB9D618C359DACAD4C1FF0AB1D9579DEB156A903D673CA7
F216C8EC338B8BED3D7EAEED2C876278B7BD84E12AD27604BF8C2284BEDB4AB159D61FA75886
02976D5528CC8E1AFA658A149E97B920DF779AD8987177A71801662E60959B77260591A7BD1E
015490F7F26EFD8E125B1CEB42CE14970F02145CB00D43A9FF64695956BDB828C1649801F89D
AA9549768D6FA8E2CC4C47F23618A6086B20F13D202F9627616F3F23641A349B9A4A4069A085
90E246A553BFC76D686C2DF13EC4ACA340A5B16C079450094D58D4E53AE8BA4F77A40DA2A9DF
6758E67CA8EBD423B6F47AA0E359DA1ACF1CBF22344A95A7510978B8E67FE488DC6680EA1DEB
F102C2F922FF410D83BF2CFC65A3EAAF42E575F3F49F4FAC22ED83F9F70C72A9536AF8518865
C2A4B998F74C7E345D0DCE963C86ED5AFD399182D9A3D081E0D79B1FE7A5D0D668C115105F6B
B8C408D575B26F0283BD6329691664E656B6986290584FABE990B211CB75CAFCCD6D980EB9FD
5EC2D6F40B18FCCC0D2639F5E1ED0C36B48FF57E34044E0527BA8C3E815E281D55A2B831100B
0E85597111D3CB06C938D104BB828EAD7B3DE21CBE3C8643FF891BA8ED6FCFF261AC36793E4B
E58B6371A5E8AA336145A38046B20EFB291E1372FC83B875BE494F2C15493B3EF6372A5288DD
4B18FA93B87C989A6383AE797C5A9124B68138C12348C3A3D2C6A23A0B6E00BABBDFBFC9AD8A
4440B8B9301C83EE902F341334D76B79D3B85E592F9C98C7175DC973FA92D00D5C95C3030300
1D9C70E9E842D67753EBBE7CBAE50D7F406F96C974A00662B2C9C2CD650B835EE65DBAC1806C
AA05C217EA50C90A7B8864FCA7DB3983A55F935251D5FBB7204C48D15CFABB8909E0FF104AE2
7FC91E8ACFC529B997BE9F1FFD7420C2A9C25CF56A81D126ED8EB68697BD3831980735EEA356
C3C84C96B14A7A4C4C8BF8DE81ED635440FD32BA50DF55819903E4F6A94D1A57BC9D3A707C77
537F7AB6001DB9FF1882D6644DFDE85C645320952FEDFC3B695CC31B2A0DA2CE1537B9932DFC
05FFDD976E59A9C5DF4A27751F1C71CEF0261D9A7A2977DFA2D8EA7FDB2BC175206B7EBFBBF1
9CD4D90748E85C61872735B94BF755007D088E7A6FF4BA5B8378DB8500E9195EE1CAFB634251
0FC3892E86785954EA2A624C195A436CC89AF84BC4907B017B073D7F24ABFB3476213981DBDF
DB2226F45AFC9878EDC12FE4966224DC1ADB2ED2FBF4A9DF6E51DF1EB5DB56549D61AE54E50E
9BC475C90FE57064D902A0D4F9D4802364A5D69FAF41BB5DE1DA698E05E028A8A30856643F34
78D8F2480EF9A3B42E3FCCCA761B0F620BD2D1AD047C00E50D16C3768B712A0F4D384F3D01E4
1F32BCDE7866E92ABF69B922647A63FE6D6E7E71C1F4C97931228076DDEC712F8927CE547585
125AC7830AFC265C27621B7617E2296EDD7D62975AA87E5AD0D6078CBBEB9111A6628048B390
9B3898B2DD8DF400D8D0CA7B9BAF3046FED5226D5149CA64EA3ACA3B80E8194DC6ECB35749C3
E163BE3875D426EE0E4AD00A71F5C3B6AB4A3470DE50135ED4419E169D3A3D66DA67C326D3B1
1611E1628A41FB8CDF7D6EEFD0CF72BAB29C5ACA88778B448EB6A21D9E5656D5C00E35547ABE
5C99CC0B80A1C497275183E86B9342C35DEB31755D112E8B287EEC081B5983161FAA8F75A14A
592576D31F086439A647C2AE4932E74E98A4B1D8B11E80157646A1A24972992A0F950443772B
0F3F41CEA8F0322DA57D1620E6C7141E428F0B46D8C072C29F30A07A0D909B0A1DCB866B07FC
C0AB9C5A2A37998CF4D14712264DF8D16C4B2ECA08676F29663D720A87DA0675F7B7DAAD5E0C
1380853366CC88BF6D9DA4736C80A33A8FEFE7D6390BA1AE485DE2BEB96E0AAB1C92EBBDDAA7
ED6E0811792932F647A101931BFE9AE3EAEE5B33F5A0723817EF1AA779AF3427F14F6BFC720F
77844DF74A60C6BB54FB95ABC4CD99DEA1C9B0B6A2F80DE2D525C07F6DC3A444DF612708BE9C
285AFE91E7EB58E9ED2F4E883857C65F967A777145837C44933F74053C57983FFAB26D6D4BA0
9D4705C6FE8D22BEFDC00BBA3FB95A8E569A3B058B58E1EC179C3BC3C21D97A9F4396AC692EE
F13EBAE99216BB5C408185E5931DD194E694DCEE162BDFB8DD6D39CF87C6CDC2941F71FFD1BE
670038045B167E5D3DA89B1996DAD2C63D81FB0096072DA971B8B12BB8D52B9A7D56B5F171C4
EE600F2A167B2E3926587A274B44A933F8E60B19B9712263CC120E8563F2D5E4FB5FAD8906C2
50FCEAA085597053E30DF1A903AE7C6EC35A80AD86258AEF19B1E938F77A10A148EB15E325A7
37BD147308751DC6527B8E0688AEAB8785A2BEE96B7C5C87DCAD03DC1CDFD68C39839AD583A2
74B16FCB3315AABECFAF463D288BA7BF57AEBA434BBB8E88C5E3E311766FC8F53F1E13C305BF
969D872E317C9CF6B4D523EE2F7995F72272FB710840C52D0AE69048CB69AA4140BC135D0355
128567DAFFD35FC37751A0FABBD57FC7F61DA9ADEC3AA311B67BF0D0F97BD218E24E13AD5CB2
9D1582AFEE107469AF72C12673EC794EB2F4F542747D4F9AA98FC948B256D4CCCAF8EC0AF054
60D7D51DBFB3FC818C8C5C404888E3550BEADA60F130681FA73853DD599A9B851D55D15A13AD
7C3EB74B7361EF0AE34F81F0C38BB005412320B1F3580E478FFA33902CBB7B604BCC1AD343F6
4F2705EBBD9A1D62610FE252E24E1BE56D4CFF7A229D7DD265A1190FBD7B5FF37F4D9576B670
6DD8ED83B8D650199F3B367C5FBA52BED7E16FFFC7E025A38F62ADCC9559E0DE55D238381873
87674113BEF7A342596FF332C28BBACD78CE01BC523B673E768ABEB16E111F6EB7396E1325F9
E88B1A7056329436A561A672EE91F34635F774566467F973A511ABCB8C8E7CEE7976812A91DB
6271A35874C1F09BA0BA64AA8EF5FA6774DB1DCCAF1EC2D62522411257EB0D58A1A1956364EB
4CD11A1B66EC7B6C1FC5F936E076DA0C520B5277E8CDE72CDD2B3BE15236580E43177FC2BE69
8B009DA921C149D17833BB0C810A902EB089D9FDE5FA496B89F9AA21C3DEBEE576F21BF183EF
F2A4D20AFA7780D1902DCC72614E62CC99482F489C72646E0A62873EE9C3D910A0A738695E00
62593F648D978D72DBCC4D51D4E71030534B689FAC80005A344E0EAB1D17C73B41F2C4FAF348
0B7023B014BBE5778639A68681951D3E65C22BE1BD35A9B9A1E5BDEFB537E02F002ECAA20819
6866DD4997C7064A3A35D2EAA6BB6786BC610D5D3323B8D27312E3F767F4D07B99E3132E7562
87F7A6A432BDBDCA46D3D8796B194D43829532C67AE0011161D6B27B1562D18C1F1BF5428C4D
73181C6DA2A7C8621E8AD9D545E102202CAA6A2B6FC574BAFE6ACAFB79E36945FE580EE63AC7
FF220A76BA2E762D60ADB5006FC0F18E785B0CF5C1AC475D29828EC6D1EAC755B749942032A2
F936FC5FE238F4C53DA24A8A9AC01A7F8170E991E007751D215146B5B86AA627AF9AF1E772CB
9E8924C982D322FCEA26FF01CB2768163F2C9C815D5F6CEBB483815252E131EE84F9EC295E01
0AADCB9D9DF294EDBB3F74FFEA9F105C938349A432B5926E2426C192663438A5E39B4C81F46A
0CFA516626C996F1ED2989F55C462250B842513D746A017EFA62B8CE645B2EB507CD80CB03F9
47973BC5266286777BC3AC9FEAF36407F7961345B1D8FE23F592370A081EECBFD5853C87F8FF
16D1DD7D277712DB1D4423E76CD20CEAC28EA7C92F248B6742965667B442D4C6992B62461B71
2AAF67DC5550204DAB8DAEC3C5FC517FDE4AA4B990D5A7FE92ECBCF370415EBDA36ECEA6E54C
92B438DDA5A8916527254CD12C6391D5884BF143B7060A19389D7FA9AEFA79FA9B177B0E1568
9AC349EA5DABCBFC1B9539309D3C2C7646D7E340FD30BFB810A8658F786FB21FC87FE9842BDA
555F5E0B7C0F41717D25ED41D3478B1C751C1AE3AD0857FAE83946A9677D5ED3F8780F260C96
B7D96BACEA06830D19BDFBD989B0F48FDBDB28ABD34F27128C30FF7F691C309235350FF85750
48391F547E62793E747ED172E9AA61313C97C4EBC08D5C218D1E0DC98A6EA358545F33128248
861A00CC6C59095FC8ADE816BCD479DF10075A44222BDD3ED09472AAC8D262299C4F53CBA3EC
181555DA15AAE7CC7D9ECEBBFA71EFAF47D64086D5D11E300BFE9A587EE39F7832B761D0F049
786555E7155471BDA0EDABEDD479D6CC125253A64C97751E3115613A1BF2ADB2279267B6032A
332BE94ABF534E25AA97911DFAA1E0A0223B0A4B7B3F8C564A063FD139C3D8748263232CB222
7E1D42E974C357672B86B8A6A825EFA3EB142ED872D0B21A2481B53C3D8E17DF68F1956BF3C8
6B0F94037F21121C7453DE5AADF6257A65973BDD6A3DE68A1737CD2DD71ED54F7BFD25CDB683
71E097F8B09DD951C5EFB53EAA6752A772CB38D9DCD515CE880EF621FFBB37012F449EF81C24
06A74359F7D7EB0CF7BFA62AAFE0EE099933DE13B096D45B44BA76E6919F917464DFEDFDCCCD
8EBD55661ABABD341E258373121D9B8550FC29ADD3909FD81A231A7B43C9C33EEEE35DF3A77A
536C53F7ECAD920E78E78A792F57783B850554A37CBCA8DBB88D8652A592997EEF20AEC43D5E
ED517C4207BAA864D576327D461EFB0E4BB36A679CD11022FD7001F1B623A9D800EB8C493DE4
6D25E31C6C0A5C5169A0CB254DA02B4050FE433EF3F91CBCC2F06E0FC3298624299D1B6DC697
C2F974EF359A0EC50961D88FB005E93E062A74175B99D791F6704EDE81391AADE2ECB40F12ED
85D438F3BAC7A359617048D9DB5CD0A4842B011711D3AB2658D26FC5FE87CF5DBF8C7FF2EC4F
39E7FE87A12C93EBDF82FAD9C45A40E8E48535394B7D11B56F779D1167069B4FE21D5A83DA95
731415EDE2469F2B8E49D804D83B12718F2A2115CF158641FBE5EE291BF383BF959D22D25C22
A83E65922235725B3D717642DDFC82FDA62E250433789CDC5101DD8B6886980401A478EB2834
F94EEE977AF1F5355C274C206B42F15210279211C3CC585FEF33782B1DCA3E7F200F8778C2BA
04AA99EFB44B7E69767B45C292C4638378E128A9704A3945B9C3776766D0E42268A65E856B76
88865433F49BE6745B23934FAF2E8DCACA7C4E44CE6FFDE565C8193A8610AF873664CE59F309
F16D70A4C34D60BFC49A3EE93E2655286DE0E0AD8D2F16EB8C615B553F09A4C25217CF0D656F
0FB21607CA4D9008F1C3F9C9AC0D590E02156903F4DA288227E50972909B048F21A617B7A514
F5B10B1BCA4A7A90193FB39D5E4DB6F64331E91776CAF6004C5281D4E23955D8A5A3036C9F9B
FA6E9908F12C489A9640ABD5CE63B02AC1A72B60DED477A861A002AA288772BC302BA968A57B
AC2BA553707A400972D39343F94280EB09A7E8B4859FD655D8210F448EBD13D5B3BB52B57CAF
C0F67712E30A474146E60392D6A66B87FA617F46B3F8565CB3863C7EBA46966B1122C43B1E60
C3267AD803B5330586BC43FD3DFF0ABC6387F4055966CF7F20A1BBDD0C43EC2CA1983B2BD8EE
5152B7798D964A98594BE8413B080734B4CA10C13AFDF9BE16CC8B89C79028AD440D545EB034
BE5E340A2BAD3A12792FE69DA10C0801BBB9C55E4BA273D29757E990F7245B9CFCFC1768F12C
D31D1D33BB98E3EA9C6BEC3E6BCE750D5E994BB73C0750B2A76B924999C7CDD93B50AAA17783
94D15E4542C1E6C1CA49B7EB715C4BAA0B46C460E4AB4F887DF575CAD0221411AF1FCD4AAB24
D7AA33CC366B70ACF7A42FA5D9FFE1BF375BA91F9F420FC18FB381A2529330A9EA319B57DB70
79FC257D85B802EEF410FDC2C1278C8B62B8AC12391FBE7CC80F5534746D6B0281F105C01523
3099D6982E91E89A1A6FC71FCFA8065016306F0AE93ED96FB5F416EEE47F462E3421F4310EE8
CA3B638BCC831780286CC4B05FF5D79D47918BFB5110EB13CCCDE0F09E3254B7363F1C1856E7
86E304B69CA319656E66BFF07AF54E0AA7D442AE47E62C1E4CC32AE7EF12D22161E1A6B925E6
7C04E2E3CDFEB5126DD5CF7F0541553E58DDA26A640FFA7BA9583CC92830356E5337AE54D6E6
EAE775E8DB38AE231F9475F7E1C03A497026B7C3BC1525E118A45C75FED32E4C2C93518F306F
BE41247B77DB6F42F8F1F1CE15B2ED47F76FAB998944FF249B6ADB51213A9A38F6DEA2E6B543
8902E8CD40E70AE4D7CF004E9E93FE5B57C8BC1A77BF21C95078EC7FE8EC4462E409DF999B39
E87F82D04956BC916B11B0AD418A648B5C9B7FE4F54668BFB8B74F5D16D3DE6324DF5EA98769
9B0A0350C37BCA6DB7BC36BA2597CF925EB4F0F91A3829C12D1392F78534F71B345CB86D74A1
EFD4C2C8BB850D51F8CAFC01DAC7CDB736976600B215D583500683E451CDAE96E89AACB6DA35
A5319D64613AB1D41919DF2A261A3B7F4D1190F7EFAF79B4FCFF76D86D560BCA22FB2978B5D7
7CB3933005CB417CDE01C842CD2B8126D699AB5E201BE3D219FBC030375DBFA2114F2869374A
C288AB663F486DCFF2A31F812A24E0E4D9ACF3612857AC6AE1C64E51C8DA7104548901AAB02F
1916EC56B545077847F6EF76A549A864D96CF03CB3FF444EE6FB7ABAAD198449E66A4D6ED387
8600DB88DF63A1FD0E7535BC2967778633BFD784F7A96049F4D3FEE08791F648298EF31E3E5F
FAF2707925FA7726EC1E4A6FA9B8B4EA6A9C41DB7F814104E520C02A4E862E38C16FA57FFF0F
42D73A953D7A6608F873CF57E14DEDFFC9575B5D035C76863E56EBEA9115C86999CD437328F1
B2C3E8FFD44DFFFE2BE60E89E3D2BA52F69AAE0E476BDAB8727AF9D4BC7120BAF7F937131DC4
BF494C3C9F342432D08402CB6BFEEFAF57761C8E21F2417241D55C187F96221E936D57CACCDA
5B07DF4FF0AFAD90023E0451B0CCB0BEF51D4C0847B4FB6B73BBB4A867BE2B2371C9D9C58823
5AE819F646784A2BEC094AF37AF84CF2D118261D5662E1B6475E774FB2E57E2E1DF28B2E3888
3A54D0FBFC081255B2313BD1D981E8801690386C0C4483C08BF905D8BC924EFFF6AB104EB236
2D130A4BB9D20869B8E445E5679D7390CC66EB9901C675DB7A38F006CC74B7BF81A27F23FFE3
36E6A4D255C843707D8D1B09DA329D38154784C9F3A6BDD0DE5504EDD1CA3A91543E7160A7DF
226C09115E0DEA07D6CC16B87DD9A6649BF00BBA66472A307FBF88317E4FCC40B98D169AE6D0
00030F0970245D1512A8A6ECBB89E7804D4B12233A681263AFC055D63DE1177F9A6503F32E06
9046DDC7DAE19C79AF53A678C4D24127ABD3CD01DCFBD8032BAE41AF6245531803C9312CC11D
D506661C442BAAA575E896649803BA9586DF910762D5DF72538F94A6F7C02E2E244B432EC527
325CABD51D6CFCF3D4C12193C8CC2F708694EEFB36AD832E56C6C75BB6C94A2C805DC25E6D59
7019097BEE6F4BCD59A8759ED2280645022837BF8D0CEC27FFD09AD06C0823FC0BB8B73045A4
C694448C2C60B12E10BF54234290ED5A0AF6B31380AFA19B4D9F0AEDDC3AA3A25B0CE2FE8683
1D35536FF94A735E9DF0F3EB829D2B1FCC39BBD5A3634B406256331E8925A9827F5370F87770
CB3D50695425807736DAE788429D3AB1487FE78D13F9651A47E8F4ED18E22B341A4FB3BFD1FD
127F4493CA1751B0487D19CCBCC32B8C4A109EEDBBE9D0B12C9A04CCF1451166B653FFD6CFFB
C28BA71A4BFE468F4A97E3E3260B635CC4BA8D41CCAB99B2745213171CEDBFD028B94E343DC8
1F3730311D5BBAC6C6078DAB062ED5BA19006301B91B001F89C3F1F9EFB4233D18BD11897A02
0D35F30AB0FDEE85C6137C7A8796A091F452D5ABABC8EDA0FE4787A0526962C7CCAC6422B415
0AF85763E1C82D606A4109498720973935F41C5EA27DCC2C378DDDB0147110BA8BF3B0914F18
C121C4C2F51F84D54D9A69744B3DF42158C7D221B8718C8925B4FF816B5ED8E735F3451F3C1E
DDDC52828778CA9142AF9777241B9B904724294E7EC209FA546F79FFCEC2BBA044DCCA6D9814
BE6A884ACED3053A37E3BA0E777547E2C58128B650ADE89ECF1313F4A8AB10BC636001DFB507
52690502795D7824A1903544D14A400141780D2331012449077169939B831BF3ED0B8D668AA5
F23D50B2EBD4A8AAED7F496DE5AFDB558B187D6E6176F74C133C4EC6C3BDFC348DD2FE25A5BF
A13CA4F98673BCE7F8C6AC0D0B3792F6ED3E2B6463FA5AA14F4B5B3945101D343E4069F1A523
5B62A63274064612EFB6B80BCD94EDB8A60F92EAC50A76380789662E4622620BE644E9F06DAF
F6611C2CBB5828A0A70782135C57EF37855B5A65413DEC6A99E43E8707B45F37666F7C18925D
FC144B2C3F94C2AEDCCF1C0D0FF7AC3B3FEA92BB3931EA203CCF07BF635BB680F7CC7FA0C8F3
9134B7AA29EF2A3B54BDEF1F8076297E675E3AEC8B9A9E66D3F78CB85C35294739DA5531988F
C03783BA926DDD135AB064F88739198BE7D241DC2F3773644CC409DF3FDD2BB7B8113765CD81
F7F190103EAE7550AC0F1206647DD9104D54376E96DDE4F60A041E6F78EDB64D9C526294A7AF
74F1827FE30585CAD62B3C0D9D6EA1A356A086E573631076D47E9F9C3AA488DFC6B1ADD4D68C
C9C8C73F7D43D4D53E6D9A02BA5D36BF8D5815925B9FC73BE1213E9C14217C60562B87A2F6FA
2B43E17CBE1327D8903A530CBDA5B08CD22F9F550B9C9ED933D721B2CD5A35F8C804FE4BE143
43E349ECF661D0A1D02F0580E09A802787EFC1C2673543F6ADEE0433D620F2D03B0E1A366A6E
9AD2F64077A606FA589682FDFF6EA2375F0709871AA662D4D500E5666D0BEE9FF93A701FCD0D
53B083F28532315E9708358F36F8F3E283E8CF4418CF700F9A9868DDBB6CFCB678395B4DE2D4
F25A95C64C7C4D0A2075518AD956F9ECA0CC166F10FF76796DB1C6E3B9BAF1CD455A9B698BC4
8F8AC9253D185235711A8092BE26C3849892D01F4982BC2405B88A18C91FB290D72548FA08D7
2F463E211656E09886F8421DE44DFBD35F522FA36549FC533ED420A44F32BCC29D1C1FBA2271
E9EA0AE25D6FCBE72594F1DBE1B46FD56F9014FE2453F8AE844474A8C7D39115CD76BA26DE42
4769B47CA9663C5AADB03564CC7040B0BFD567E38DE0CAA5BA136A01E037559410C4AD92CFA1
DCA09424BE97DE0C60A9640AE497666AF9DE1DACF8B762FBE34CEFF1895929A1A745D88843A3
C663529E04786549A24A3D889CAC3ECCBAFFFA54A0A316C188AE4BF2D2D7600D8892EB6B147C
9277ECB5508EDC89A5627D11857A63287D8D627EA1B7080B2F7E139BED3952F5E896746885D8
7DB48C7880860C326082738AE575DD910AE59C3CDD5D1C9868BA3CFF6157393D5D25059E1C5A
A7C37DE7CFDD92A8E10AAEB8059D68E5194F25E9C6F15574F3F7F4EE2407C797E896CC771FA1
981AAB74E1C13AEE3BFBBA1B4CCBADA353FF88651F5E66898FF523ED91075AA5AB5A0982B0C6
A388AFE05D0F5631C64F9D39A081EDD4FB5ED332E9D43EE93AB572698F1E62FF74C9118DD527
15C7DCB45E66929F516082E2412602104A077E2863491C25ACE9E12BE6A510C95F15AC9E19DE
448918F6A1FB073641E457281F13B2755A674476B266A9498DF80012D24BCD44DB4BB79D68A4
DAC72E4BCE88331CBBB105D356AB2B219B49BE45A356134D5B24A9C0207026B5D9A4787B63CE
5314F9704DCCA0DFB76F5FE5794AF6D3371B99D9A70DA1B31AEBD8E58E8C9FF240FA189A2F9F
64A2B99689F9DCD05D9533402FB064537631BD86BD24FB176045922E22A971B3F1C51097C033
DC7E17D1D11E28A073BD2540CA727C309C3D627273F5B9DD3564FD935DE8DD0849A81FB5FA74
9C3EE5AE520FF2A140E01A788B3BFED645801AB665B90BE32AC61A2F818A2E0FA263CC91DE26
94092A40F1DF0A5583802307E51E76A7F9DF3F6AE16C8C861CC51AB15BB70F4F2567D3413081
ABADA80C87E69E588F5079D41C0646CCF3235F07A890111F79DC74EB1E6C851835B50CF73828
C02B4DC447AA0B136ED340C566CAC7A3C2C1DDEE0077333DDE50EA1437A332CF947829BD1668
278603208BD6B6C1E67E63BC90F37C2EB96D31FDE498D3CB8265F87C517CA8F393C79F9D84EE
B1EF5DAF9654DAB6C0B02B7CAB08E4C1E4F4696DAFE924C8E7A944AFA2B6B763C44EF7450920
CEE20AD1862A9D5C4AC6D65B3377239F1909F9DC4F8B50D8ADFC48B5AB04DD09D23277A811C7
3F1A387CE4264CD45D24C2D276DEFE0A34F5C8609B716F291D4FD16826E1B86E0DFD90613E42
9205E16B2B1927A53A346A25348DAD9646C29948B513CC7235636712EB3C387A68F0BE1A8140
32C51876BF10572768A2FA67A2F337E97FA63904EB5612B78245E9FF90D79089795C5D5BD261
CE42DCD5A138A45DA85AB735FED2A4B1ADFFAD6FF8D75C6FEA4213FB1ACF104C95827530A280
B9265226993127D11634FCA5C4E22576EE65D2F94DE2B8600D157D1F6A8F1C022613D5E6A83F
B693A7A0D9489445A50EC49ACF253D5B923C782CB33F3DA1929DAA820C204C7FAB6E1707E1C2
64407C15FFD4D31C41DD2B3766529209D4791F674450BEC0DB3DD0D2A129222B4506B06F3557
AE564F50F87C889D665090ACBB0A496DD3832991FDE97F4ED8A4045F3047335E2585BB36665F
C777D815BD3BAC63FCCFA4D6B73F3D76A5AA4420901C3DEA579CECD6FE763851A979C849FE0E
43E4EC591B104182333C7CE0C2366C329CCD6F72E38130B78E488B2ED04D8C1B02E6BA006CE1
DC74F8DD5D020D266FA685436A068C30A21F733CBDC423F21BE438C48E7BAF5CBAFAB432634E
99E8DD592426D21EB275D0CF8F22C795BB18C40F6C1140068410A43E1D59E809B04BE17C435A
7D8E7A84686E44C199895405A82B20BF9DAD1FDEF237C1A031879B1DECE2EFA5AA3F454A84E2
4F2B8386818AF87B08D5AFFC6582B4FC285BD3B207AF9702A404F367CFF4151CE48F05C4708B
FE4C01BADB9438F0D0379325D1983C51FFD412AA30DC2EDCEFD3ED27EDBE235C3AA2CB8D4CCC
B7D8AE4DD0CB9BDD2C3AA7EA8BC1F43115B1895D0BDB97DC15DC56E941395CE6FFFD29A347AE
BBE6A5B8E6BF28D8C806F0BFE851E716F2D2ED87DDF2EB6B8904774910956733E5CFB0EB34DB
466374CCB8F7F78659FFE42790641BFFAF8E5C379684DBE977C67214D0A43F2791FC9B198A98
CB2A22CBD67D9B8C96A7F875CD2FDAC350E4C842BC37803C7691CD233B403BC7364F593C677B
B10B07B560D391B1F7E98D94E01E1C9BC1792D23AADC3C16DE81A2211A4ABE73A2EB219EB08C
07CB45C9274CA45542BAD119D0E54E8EF7B040C8053DB1BF51F703E12E41D45C50B971A3EB27
F816769D08FF6BEA13234C40FF69C067AAEE10F7285C77766C00FA8F2515F87CAE964DA1E663
1F0D12BF419777D41A91218D33F27B1402F09956FB034C7940CF2E935F4A1FA821B7662A14B0
6E85839FD932A9539E14D306CE043C42A9FBC672318D6F89BF8741C8593DD7146C918054BE10
4D817D9A8343E9D2CF6FA9B80BD0BE06C7A2B79B276BF1C55BCBBB70452621A24887DB97B726
0FB0854258A10EE2FD118237E474CABDAB1D4E5FFD7B61AF1249265BD94A216CBD90744B6F3D
0B9D02B798DC9516CCB8E39D26236903AD35389486623598D423CAB164AB711A52557570C8EC
DA8EFA2AC3592E0F969BB4C204349E26FAE024BDA7D9CCD2775C90CF3BF9C7E6D89AE040E930
751848FF7684583CC8A854F0A95C38ECF126ACC462463D92A4566CF327D5D6F808168ACF6BC7
4109A73B8FC6CE6D106A218A4723A759481075BCB069330DC1CB53A4AEB5B9F67219C51C0972
5C10A3B14F59C4B63B59EE1A89D3B61D1EFB402C4F95F7DE5BA695ACED72D787ABFBD043DF71
F25D957F6871151F3B434C8360CB6FD2EAAA4BA23A2341909C80E16E800EA11F861761369869
494949AC737D1C13D21C28A40651273C73F641A952FE7DB4ED97C96926286F7B830B2960C450
1B226BCA71E2FAD0D56576EE9C67FC8E8B04C45E260DBA33C4153167B32C90AF0D3A40BE7F03
3E7754C81C4CA52157AAC15D529637ED692B6DCC61A4FB147F8E429B6C97C8A0481F9DB69943
30C22ED8AAE2AD7BDC7B93E57F5A6CA41116A3EDB11D673360C163C70128D5A83B7BDEB50AA6
0E04912024E0FCAF278C53CBD96A30E5F7A7E030828A5517E7BD643FF651D8EFC2A38E820AC0
B3B672EE77A698469DAD1B7B1C28A200003B552EDE33D4968BEC87BA493D764761577F1FDFFC
6BC28299FD0B099C3E8EB67BA6F1746D54F7DB85ED3544C9F5B959745F90F6CCAAE90DD7F2FC
71921F763AD88223924BDE46A01F6627601A2FF3278B70FD9B257451488EE0F10D7AF2513909
3E50CDB4F50667AB993962986534D1E2CF24621A059FA2A8CD6F91A55B4B88701A1E7EE88021
DDC7ED62426C57E7589C05848C74D7036FB38A9607566C214F15D7F6FC9D90D553D84C22B958
659D88F2275E959EC343EF582262A9D6F49E4C50EC1A0E7533F6C5234BA657FFF64F84017F9B
9F259F8B1049E7558DE871B69ECEAC076580CC4D738F48ABDAEA5C73DC3377D9A4EA09CD18E1
354B44DE351D846B42D402DA61A220CC9ABDE720642422DA55379FDFEF91BDC3DE7D4886ABD1
22BE11D6B32EDD85F3ACB8E288DB315B76E030999A2F279CDDFBC6E939DD85E09188A36CA7EB
F108D66B17D7A6F05DC234B4F6E3D7A0CF0DCD4E7DE301FBEA8FD97FD5112A58D3B71BFFF452
D4F6B4E1D216EB0006FACB69FA76D55243DFDC47690CC32FA8336CE94E7D96969C5A89427A89
A918F5BC403C65913C947B34E7BAC506EF8464F7AB45B63E7D3794E0C2F228FE3D597C55248E
2BD4F657E5F6B8DC48D1CF8E8F3C15DAB033953EC872E743C9AAA7C34257FBF3073AA7F31A03
67155C7786C35834163289DCD576CC419091D6B75E548824BC537E0B4B499E4A0F2E0A9D05D2
CD18A419EB14D59B5FAFC539BF451B69EAC426732BB07B2FA9403F51C7D7C2355A2146A2FE00
97A1070030F931AE4F96B4E66DD5521C63A6A15E681E8BD48E655872DED418F0C48CF366D2D7
D0C783FFA8C86E00EE9FF47A7A200EEDE14B0686D6F930A07D086FC3DDF88B1F3DA515CBA49F
8E649B8015A2C374D1825AAD4DDDE192BC45D27459F5E27B2950F5E3637CAACA9D3EAAEF1984
D4FD7208A000B5C064D6D5A1A8168043A5CACFB359DA085952FFCAB9F0BE07C38C44E08CA564
6A9D0D5D9EDB3588AFAF85377A0B7F92D7BDB891AF8F8AF031D640DF3241376A3F0BAD4D3D38
61DA973A11DE360896226FADF173DBF7CD8F4B9E17FBE047658D9A924631683B4779193FBE7F
C9698030F87D7A35CB9842E8099ED86666413E32D51939A117C14396CFF4ACB7740A9E0ED9AE
3148D121AA83AE0D5BCA98355F472A529DD218702B6D0F2D5E7E81B55176B34C011EC0EC9479
21B3B26F7AF86C095DAF0DF8E9AAC7A52605D14B7AD48C4E8837B8453ECA96087F4E1ABE1E2C
306868292C9024EA8F4293A228B143BFB3B7B43B9F06F4175829FF306551E32C5445E26DFAB4
3CC7096A225ABDB7A5771CF92D84FFFF6F88F7379BDA3B227830C50A409FED064FC99424BA3D
CD97DC14B18A6C2AF582BD134D56B834E46D2A36A55EAD979DBE9C69224EBF79E6BCB77F6B2F
6866BD224F0BA8AF43A6B6A257E6522D6B59B1CC8ECB17C1A3AC0E69BC46034E1EE175279860
475D522FFF99B5E9A196B1C17C054389B2DC87019E7FDBFDDFD39B71C9A122F2E452D8834861
DCDBD33C2508FA0CE5DD63A850635FC9572FD81FEDF11FDF6425C74F74C486042A7C640B726F
3482F54C04B7B4622A6B7A4D465C7DB8B6D2105AB0FAB7BB5E64039F9618AA60CB52CF4CA21B
873FE894A459D2601F3BF64C1C1E110C43586FDDCB8B3F892D298EF4B9ECBEB59FD2F2F83851
006C91E9509822F6F52BA5179F21D53A550701AA188A8D20009F10440265287AEA9B225F4E06
FE4D972C729EB46D9DAB5D41068E1483840AF065D18A16FCD03FB943A7DDECCDB51963B47E70
6A43D2DE508105C63425E05832D316A024E0477C90652CE90BC2CDA518BAB1E5DD71EA6AFB00
A051EE3577F569FEFFE8D2DFA5C495518E328FB1EA192CBC304CAE51FC1C6372BAE916A64F12
F8596925045F2035BBE44B11EBF817C87123FD3578C0B97C25CDE3CBB7896D2FA75B8028EC9B
F2D11D4FBE13ED9C06FCAD797D22BE757AB2624FF023FE9E7C5AEA8EAAF79C7384DC85FED595
535613B30367BDADAB3673046EECA0DA0F01C272915DA085C49A37A79F0B23D2A9C46C4A86B8
ADBB045F3D786302E37F821C0B43177DDD83F0A235D752F8BCF119F7417B75FA4CD82EC934F4
EDB824DE9733684ED10D8AF2681B9D95273B90D5D00E7A998A68CBE3B4486E79A9FA52A2C6EC
42F9B0B7DA40CDE3DACF24AC6DBFD11BB9D7E4936E5515FC489FCAD4766D4C497416157A714E
F5A01369B65DDDD545115763B92C56151A5F5717EF9378CFFCD735B3FB3E8EBCFA0BE2BBA61D
F7A54D59E6CB91753778A6959ED99EE459124D9E8CA703073E198562C6FFAE0D2DEB55D5348A
665B119861E9C5CCE61AF8CBDE8A3EA1727CFE864E480EBACE887215CE3E87FE0DD4DC6A2689
E118981D5A5E314D02444E562909601F8AFE59CD4DF39D5D4ACBB9F7CE7158BA30B5836A9AEE
44284C46565012347C08817BA9EC813B68FD47BCF3F93F080D6069430A5FDC4B4BAA34E50CAA
8EAC2E1D18B48E05E7C4139F079B464540B9287D3A7783B6C4A85713BCCDAFD3BD7C56ED9FF9
AEBD8FD24C7BEB64B8E8D2505768802971A7FD7C58223AD4C20FCA349897CD1CF7626D7D10FB
6C5642F5F0C220F231951F0E03B117AEBF772B579956853D2D293C2310B2F732279CEA45431F
AD2010913E3EB8E8655219F1E8B057F240366A9315966D10B503DA5218638978C840FED3FD79
496B0BE81810BF01BCA63985DE0CAF0B947C2A798E479363C950DCC4EA95722E3608B8340929
5A57D8C8476CF05DE58E83FC107376E962C361E5059998ED0DF0DC0B478E2ABB5EE21AE105B0
E8F09C76585AB2FE285A128D5B3E4F59F6610AC60CE338EA8D9301ABAAF9EE65AEF454D9AB3B
AD52F4EA6EF636ACEEEA998B7C818A28281402136CD371DC14653352513F7B132CEE73B769CF
1C94CCC21ACB506B546CA91653069DAD7AE475B25D1175A7C3E8987CDFD71C30DFA7A88B2828
87660AAFD197874C4CB9F5C149BE1A73AC8D6D0F51023BABBBAE5EE867D0748DA1932344AE62
939F0DCF71CA03C8F9D90DFFE7BE0C558558387FB7732647D9CD622244E8CDC88B54822A8031
44067D0540791758016A0C6C6BB02E08A6B603E8411DD1AD5CB0AC86E78BF61F8E37133A9752
548893478F552B1AC4F8DA6F09F7ADD2B6526B64698FE498D582EF9A319DAEE5C8A0D0D5681C
A5532AAA46E0947C7B7A694652BF5FDE78624CC3A58A27435E77D5EF0E7A05018BD5E091F96E
A874B3DBA907A5B129F6DC9C32A262A8F63F35B220E976EE84F32CAE1537DFC258606E7A2721
4D0B7AA620254896109AC1CF6DCEB24F5FC7D617C7FE8B546E300C258C8039099309EBCD536C
F3D8EB9A3AA35BE59F27DB2F2F65672E1D3CBD957B982D02CC660522796E55C12CD9DD613002
4D885EDD47911F05EE0033BB3B60C1CB2BEAC35BBD386B4C757F1D10BDD8ABF90D540494AE09
C7D32AA17F6DD013D12D5C01CA7C9D0933DEC2523399D149358F108C976B9D386B6A9B987ADF
56272D7ABD036705D2A8B3904BD2765D1C5426CC7A4A23F79F71C323A76EBBD3C48C8225944F
69D336AD5C42CCE10B9FD4CA0C2DB2824C7C4AB1FBAF282BD1571AAA728039E641B58485C72B
661168180064DF7437FDBB35BC27D8D354DDF16ED4C32EC649086496413C80B55A5B3FB8053C
665F9FCB2386194112CF9C79C699C49CBB4ED25FFA6CE595A9B4136EB8C39CA84C4FDADF7D78
544E945931C38775AA8C69908869AFDC08FC1D2AE8AFF317E3BC7145B3CF153D38A20C4CFC9C
312DE6EF0976F0D98F93B4C479A081ABE85C0E817A92CBB36D405967FE9C166778B546CED8C9
0C05A9449353D30568D2FBCB8D8039E18A75BFC5E5D146B973899DBD2B272DBCBC9FBB9AD724
4B61725A05C59C517F983191B41C79F2372F12A8AED2B2DDE9257169D9B30E088CBE652A5A91
826B1DCD4576E7180BD8B8F20D5264AA5659B0431E4E0182984557133AA04B3234BB7913ED38
5DB2BD949D82F58A83099E51741DD0453B03E5CA4C45EFE985C005E4CC848AA74A5F8133EC1B
0EBC1FC5E50A7934B53A27A475A687D899DBBCE644993A3DAEDAF3D2E61D6437B8785C780FC8
D954762B8F70FC3F67D6BF40657F1BC6B4AB879E3C71FFCEB237E45C1FFCB2B64EBA8DF44A18
76C08C2F054BAC4D0B019215280879D8562B9CCDA6EA85B6DFC70FC7B209D7823FFD804D5C0F
9089E81455BCAABB6B517DE9E3B9726201A3390AEAC91EB9F3C007FE22F86F23FB280AF59FAE
8CC93A82DA5B0672A88F122232EABE3558473203B04EB499F439BC2D682F30DB63C10F002210
CCEFDC73F3FB232D6EC92BC7321EB0F589FB03BD21C4C3E2D8C89C9B4C001827112C30AE0755
A9DB05B78E9603F7E008C1B37C439DC27A288DFBFCEFBD9D3739D41DACBC31C64C7D688CF274
20C8BBAB64FE1410C974ABCC4A9AF7CDF3005DB34E6A4A263A52AF64C9C0191F9D4D2A3FE7EB
52D89A3A0D008EE83843E8328CA4DFB756D183A16148089A1E41E9C7504CAC15BAA2A4AEA962
3BC796EF228CE5800E5F4240D174C92D565906654CFDFA87CAB1D61B2C52D39DD14BF168DF5D
4A97C0A606D0E113DF85F42D54E47E95F3F8DF4DEF303BFE6FAE0359E93419F846558C75688E
9451BCFEB2FECDE6CEB7B8676F4FB7BF3568176BF4A8E705E9CB68058CC2128B25706979F376
BB57119F43338D9F4848D161DBBB103B6BD7D7F1FAB06CC2890C842151BEB82522F30E813FF1
9686AFDAE20C95DB8B70616B2B6707586AF0D25A39CF5E9513B90AD6E8934223A5830D887102
30FCCF968A4B48E797A581EF0A878ABD8CAD1A78BEA46210E9591935127FDC4288E5FC32AF21
BE07EAADAE15F468B039FDDFC179D75E0AA4253E5A2E187A7C57BB9564AD5374A7A96020E7EC
9C089EC81A073A94697371C5A736125B9DA6A45F3E5F1BEC7DDD4B579E7D9E02B4271B66B9ED
41BB8E23C7A6DDC46EB4820E3F88262BC8ECCB13B8E94F96696AE52135257F2808ED6D01BB51
C25F59F41184020901C736E8632D84FD27EF863B109447E345CF4641E4D4BB68D8508E3651E8
85CA090F6896F8728DC74C57414C3A2A52209D4C585222A52484E9B12FC5F0E6447BF195282F
B396CD53CE5A9634239DF2B7DB76C5347A5B31FA3B9BD398C7278299EFEDA0B3ED30B32074F9
E49B78BFDA4D0B968D62528340CEEC441E28DE3F14731449845204474A54BD972F5B0CD63759
896C4ACF821E79F72FB70BBCDCFC31D06B670257CC426C69C1CD37F7DA54B4051C1079023D38
0B006F84EB7003CC67D87BCBF03E7324F34FAD9A8CA9A18FEC714E3CC73B4A07E28F994E545C
545BCA3DC899C69E8128ADA4F828B356B3A09738040C18A8A272CF06FB542C29E396C8EE6376
91858080708B1D8BD6A585EDDDE454CDD4E7D5EAB5754846194910C20E3D0EEDDEA700B469CF
2422B67D68BA917C5F252AFE338281341292C954A8D643D332ADE0DDE6A11639AFD1164148A6
47E83F075EADB4FAB846FCFDA646F84225FA86058DE2E55592EF9CB892A1E1E9EE2620DF2A68
3246D027CB354B153ECDE841E655681AA5B70D58A6EC5DF5EE8380D3758978FA130B4AA87848
82D0B91B0058661747EC62EDA1B32C37EB333A1D46DC4E894FAB088AE9DD179A0C559E684FAD
7BA886A8E6E56180C0C2750A35E2F59F58EABBD3B3E7610F2803ABFF71079C952A7BE047CAD1
C3B33DA8B9935B6B96D10EF24B73BB8F908C55FA197F04E38863A95012628A60747EFA2B3D4A
83D91A750A7142E8B87CA54660AC8094CDC5D79A757F311A2E0A20983B091F3970C10AC8FE2D
16A43E3478F238C9980BE45CE052EC464DBDFAC0BD7D31A8EE8131143731FFF23D0E8FEBACE2
796F653A0D4A4B9C277FC493F99C0BDD2C66D10A7C6009EF52AFADB66EF1A53AA184FC5A5B68
B0F00D8BD6998E6178182712D5F38D153F69ED545ED8E8CBDF60EC3A99C74A12B28A8E41EAA0
7CCC784918BEF4C17529AF0D7D1FAF9E96DFE34FCD8D01EF6A0447212A07420FC26C97C290C3
85A74569304F93F980868F04022CFF01BAF7C69B884B36CA166A47C0DAF9BA58481C0CAC090D
A38E8BA22C2FC1C5C63676574CDD42C1F0A3A297EFE5BBDAB44D12AB7669156311F1642F55DE
94D0489B6E0C1F838527C40FA4EFEB254738A2C0717FDA2215507C833ED679B574B650140487
A9E3D86F5B9BF8C859FF76BE03349789B5E9C9E4532523538B3993D51804A4F703C530C9EB9A
40832D45074EAB634AE1E0DF5FAB78B9A9D473DB5E5C3535FDC9B084A01E373B5CE922804F19
E34BE5FFB495A47FF343B6993D60CE2C5B0E0561405394F03B2B5906D781C3E6561844A1E22F
82CFE0319249C80A44D1A8B7F7EBA8F75B0D755A9E3B98CF7E193DA9E3BC6A5453FB777575CA
23A8349DDF3BCEFE215DC81DE2337277E7437A98881C2A4EF35338EA0DD34E66D5A243AD2418
D5815FB8BE602BD30C1A85FF7D7058895CBABA4A50948137B1ABBF2D4610550D7B483CCE1193
58DEBBEA1449B5112B405A39DB26E644608E396AB88D96370C3FCC317D815EAECFA15222CD21
0047E509EA5B921D53ACD79C5CF1B104482D1F7C4BFD3C29CC11E5AE9002C5C8342CCE2B3C53
8FFE571B68AA203803D9A04F7F02AA552898C7AB2E1C05C2BC8B4957194F92C65BC139C812B3
E95236E964AAB25FC78998B786D1AA19227C26C43EA194897FD7F79BB3C0ADA2606E4C18B082
B603C23D56521A9F8D2A4EF0770CCFD811812A7EF9B795E36C3085788A3EAD9D5B86CEC97132
1206970FF4FE65B83A9231C72199F8D008972C40C81DD6B109E0D13F166331782ABAB229AF27
5761B97246977BDF6DB1E5D516C0950703A0DD5D147631A4F17AF7E4EB7206D322306B31BDB1
E49340170684AD5F34E995D691380D7A95D8B10063941E95AB8BC78A489FDB91B4D269AB9EE0
6710A3B5655C0D90E7CBE3F2BBCDFC850163311C24BB58478CA8A4C1BB9A54D5ACE017D1987A
60BE3CCAA3162ADEA7E1818B7E2FE3A2CE46280B10E9151AC705653B036C77328AFDAAD0F32E
F0B47BA3AE924CDE85824DA161B5980CCDB18D9E6F89DAF322043D7BA31FF048B12003EF0DB0
B537023561A7875B22B032E3246821EA3AF5521CB033E3B8D3D0BA1D6A861FFA7AC3DC947D7D
95F2717F6EBE133A8AD2AD48DAFD8F23DE3C0BF783AC57EEF6389DADFC536FF4B420442053EE
AC22AA2342AB619C2FD5B68595D42A59948472DFF13E1239B4F55D5A457F2E42491D6DDF265A
5536652DFBB4688F6E391AB7F32C796BD10084DF8306DD60B05ED079EE5A89F3881566CDAF73
816653C8E35DCC7EBB03CB4BD463E8F5F0AC1BABF4E62E0D96781F0B01503D9C3D2A92274058
EA63187686737F370BEC9595195B7CCE85AA39007627CB16CD422E25E40C5C201C33A6D2E2A0
DAC0EC02B045ECB0D8E084933345B6E662F65B1F57FD73F02745D8530E057E41E5B14BA77EC7
E8812149B4B30B10A09406FD04EDB18A6A328357017C4B8D028CBD6ECD5D9B2BFEA30201E4B3
E13AC6E5D29E97F3104D6D88FC42EF20E0148BD3C4399A3F8302E07EE2B1C1AAFB92456229EF
AA68BA551B18BCBBF4C5F0790133055A4180F71E82D63295A38F0E1E6099196EBBD1A8B91168
00E037495557EC96C9A304950BAD622D9DC2309E177B0025202D9CA5F9DD610E11BD332CEE5A
28CC34C78E9A848AC0EEF2EC07B6791F983C0A9E9982DEB29DAADB644672FDEBBC7D13404252
04AF1FD9722B8448E178C85F54776664202074D1B6EFFAEB67F74B099AF7556CB9F07421C378
5125DBD784EE997A574EC0ABB9FAE5C10F87FA3866E0DA7D0DC13E9EF9CBD67123436422A395
714FB4E2D56F3D20C39EA717E33B4017026DAEA2BEBAAFA54A340DB819BA876836570CC1DABD
A43370D236ECF02EA8C6109FD79330DE4A299C575B843A44CA2667B858EC772B9EA24615167C
CD5DD226EF0D1C736BACC3CF4EAAC155F99E091CAFAF50618B1AE7BDE2AED82D1141ECEB50C3
CF647A2705FB3FFA8D7B07ED8988E4534D181C4FE9E0439E70909D85FBC2004E1C58F2EA4761
63A9AFE8FB6195BFEB80D9E1F0B9293F6A4E83AFF5B83AD1DF31A266323C531E9167445592EC
AE4E6F8AEF6E8B74B5BAF91CF2CE6E27B27F0F6D132F07EFDC20A1116CB044478525141F352D
568140C59CDB6384EC599ED3069D3A877695169293187A65A119311FCED00033A64A28053BBA
5B3EE485572C4B75DDC7200D53209D5C1E12BB84C25DB850E60C3CFE5D0261F4D333262E716B
2D9B4298B8325F40A41FEB2EA92F9D19EC9CB168F85EB44B7AEA8501F017E6C8E2675DA0B2E2
39D40F06520A8873F24B48758D9B1D74706CDDE341C80C9F4AE453F6FDC03BD0E38D78268628
D8B197443E184567D87829C666A01679ED17F6E7AFB3BE108A8646DAA50246B6A06AEDD8E612
F18FBE9116423CC248EB4D43F64985CD662AFB1BD82466C8833577C2748F09041704EB6E5273
B002BE0B8E081C3FADAC1F70D4790D8EB6268F765F681CC67CAD01EA1415C3793F06643E90E9
D68D0C347228D3D2B1A7705AD41C4454F79320D73E4607A48779BB0BE04C984DE3A15876108D
9E2C5EFA2CC6B6162C7CEC35BD3C793624C4F1A198FDD7AA0E92692D913D9DC30709BE2A005B
6F799DA8963F8105194AD67C5DABAC89DCC24148E292D10AF7AFFE8F1CB8F55D032A966E0A85
9BABFB4A37CF97B182DFCDB63B32263CBAD70CFF35D66378F9650E393B8E4EB6F7ED55D5E084
537968D9FBB9AA522E8451FDD2DE8291778AD086F198BC07884BDA1E1024D78151A16AC661B8
735B7B068D2F2A5D2EA965C445B21531AF022F8AF3A4EBB8D5524FA89B50F7AD76FBFF0DB9A1
DEB9556DFE6115DA506E27071EC40AA1BE458514C66CA8385B419019BDFD7E10C6546677C800
69742780505AEAA070FEBD089CD406AEF48AAF1D78769551C27F2DA972DFBBB338F42C08B8F9
9A89FE5DF24398105EB6EFB0B0F2A0301B173D99435B1AFE16DDFF92F07040A6355C26086A83
B2F7382FAA495B34CE4BC8EFC18D8A0D9C85EEEEE841017BB6FF57EBBE85EC6FA228E8AD5295
B390B71E92BD31FBD96586FE279BF672F00C6A7BFF0FAAC9F2AC1D81014AA56095D05CA7494F
BB85C908B9AA131A87549AB96FFE218068F8FC55BABA11315472071D6E4C11D854D7AF0449CA
2ADB43D6E17A56FFD4B724B166CBC084BB1BE98A6503545228C82ACF4BA94F0E1753E6C7030E
2EEBE00C23837E46510B965D956CF87F6100BD686625386A0BA6CDB303F1ACBD09E305B49738
40545C1414571ED4151C577D87DF6F0F984DB60370CF424AA354328974749FFBF7969397D3F3
0C9060186F0C6E377A101068E74537C75C8D9BBE14F7F7C039D5146D6C7165139AAEE3CFD8FE
69DE28882030942095FF8C307F7A45E92817362567817056D894860D0F195E9E4692CE09DC98
11EECBE2CD4E70B7E203B0C9348BCE1A42F681CB0423050841D114DE8D6DEE5BF829BCCB8F45
9643A7A0EE6B479A4DC4536C9677DC3571EAD47D47983E9C657E457FB8AF185FF5BD5D1B5721
6B1D9446A1B2FAA1E4D5615A05583BFD336E62EF9A20BC6992177603852D1E5064B56EE6C974
4B09EB1F54FBE2ABAD451C51A7699D365698D99F06F3F22E65FD956B02F93B35E672DD0AA087
421DA18485908A95EDF0F19B98E23FF2867A3AA5F1149638C49F982F92AC8DD5DCAF29975ED7
2C6A22848E6C9E80F625468A44971E6831615461D944A31543DE467D348998A692A65A1D4024
A2FF6691C0FDC575C9F14EC7E8E05281E975BA7095285BD62F6879172AB23B7767E20A22C358
B08410A34C45EBCA2B003B7B43CE6E08F683A6B9B4DD500995DBBF564182D3C6F0EDCDA8D19D
1BE16488504178E12C6C5F91A0C4FCD92AD6617281C65B2E75D64BE408E79255FA690290EBB1
5C66E146E455F4A46387C9EED07946DE79D54C842D0BF5B55E1340AF35CB01474D20D9CB2B5A
5BD8F4E2E0082F154B6EF90D72C9C02D985F4E2CDA694F139EC138229E9CF2B88294CD035EE2
23063AC9177BC956B55F64617C2506AB16AE3B3A92B018F4DA71C0BAF5604BC43923C693BE9B
8AC83F65BC9475293B9E56B7E6FD56C583FDF6FE956C029F49B19461C99F34EDC1900F10AA37
96ABB3848BDD0F4CEC129FDE991C68EABD0374008189DB5208B607E8BD40F4F97E1CD809FF7E
8801FE836092CC6F6D2D074F262FBA3C92A2DDB267DE961A0A7AB1880902F1E670AD0BD12641
41463C59FDA3CAC7AC1827AC563D0562C2211639783ED5F98C456E064DB74A0F946C06CA8BDD
F5090E5CEFEA9E90DF4E00A36009EBAC2292D9DEA29F43947346E8FFF9B608B849A255927C68
690116EEEE8CBA5E65874CF289ABCB1E22AE47D5ABFFA2234C6201E00B16FB9F6BD8A3AEF45D
638D8684907375A66F9969DB79A89B4A1EDE30E687A07F22BBF0A23ED84A42ED1B7F81F85209
84CFAF5E69D28204429BA50A656709C931802A80E368FF9F940F019683A0BA79EE9629D15230
DF528472A77D2700002D3282BFDC48CF0974F5A1A9156AA6834E46E4944970307F0AC7DF0FC2
0563AEA64B3DA5747DAE3007AE5AC4FB14954B32B7F50A76344B319B0C8E32AE01D6ED6406CD
EB8209AFBC82E3BAB73BFD0754852392FE66F4341C1E15596EE5F94262B7987C8D8EFE1A1F80
D4D1BF137A8A4E2376CF4911D277A9E18DEE0B2819DC9CF0BF1CA5368038248E71001001F6ED
81A6C1842AA93089220CF975B569FD0A5579BFD870183F740122CC5E7D1916AB37C9F7E6F0CF
77D0305F5892F7EBC7CDA0091E3A8850C894C322956F7C002E66F7376070C011A08C7FDCC25D
52FF9511E690AA06F1081ED4CCDC6C075513A9C87E9907318C16AAF0E32E929084BB64597C3C
791E36BB50CB5AFE8762B93168A7A1C6AFB1D9E9246DF1E919AE106378F47AA0C796726729D6
93C6A21C768A22F194AE5850289F1AE261ACD98F4D896D90B1A1E437E0CB006BF6D8CF7AE556
E52AAA773E08C12A0E37827BC7C77204F29409FCC1F81ECD1A531383FB441DF90B705D876310
DC60FA0EEE5BF21F6154E38B6DC038197AB32AB5336E445ED02E328D78F61D7ECE7667E9454D
A5311B48157645970ABEC6EB5D1AB59D48D2144C14EFEA5D1CDC676777A0535230D4886A0ABE
9A2ACC7F048175EC51C9F5ED61EAB19A605A8033B17C1E97FE80EB000E26BE15CAAC840785B9
DBD0BF3045D6AFEAE1469D74ECFF7E2F1155DA7324B05DA4FD9F6467FC807B733764DB7DA8A3
8F6E90282A8D15793E04088D0B96ED899585AB2317DC174805C0C2E65D3F9EBCFC1B010C02D6
3C008A0E6E771FAF5FDD836D6EBFA3DEF0632A7BE4DF6F9112281328AE5F167206367B340BF1
4CA2CC44EF370589B2E2349ECF839686A7B4F380D57DF00FDFE25558ECCED2656A5D93936E80
6C7C8CBF5FDC12063A4FD5841E34A005B50F778BFC0E017B94396E1D81B6F2E0F9BEA506A386
514F9B4255B5726F5DA1FB00542345E14C99CC1F8E82846107624C2F42A57240866401771834
5F379F55277739DCD570C8A5B130B9C59ED5354E70D6D3B1142C121C31D2602DC87BA62CDC13
5BE987ACEB650320509697FAA5A16154BAC7CCB1C87D5CBFAED4E5118DAE1E5F44D588B72374
2BE8DF9C5B4EACCDC85FB56B781894E14DBACC29800975026F685E0385A5AF5666D2C7AF5058
0E25300BB244309E3164ADAEC9C5BDF1C24FEF79EE75A818A78F3803CEBEC5443A58037DAB22
AE0B25D553EB1B759B1CF5F45E3AF5BEEC25A539077F00D4479826815A89EE714E0BEBACF23F
7DD3844D263F8C951CA2A0F7999B7DFC4A12DBF71DFFBC109EB2E5CE0DB83BB93842D4A10E51
9FBBC472FCA385DD245C91AD049047FF37019A92CFF47C268A29C9DBEC948AD336A5188F840F
4D13CD07DBFEF9EC6F6AAFB2FFCB30EF05EA1309D230B81550765D6FFFCEAF8DF4C969FFD0AE
7376F6B5F23DA49726A1DD90B351C1D137D9620AA6F8EFACF7EC67A49476BD2BD1E774EBBF9D
9F30992D8C8ABFC782D144B2EEC47021BF06CF27404CC2A15DCC53839589C64279120DA7856C
9D0517751215B576B963C155156F697C2DFC87F5B9D91702C9E25A767851F0F44A9D16025FCA
0B2CD6FDC226AFDB77A5EF1623A109A15F5DB5E252BC84C420A87D6DAF655DA7FB9A80611F6E
79D41B9402777B19C516C4787309863B1F158FB5BD001CC07A849F0F4C15E1FDC8B343216732
22DC172525B4090331D817EE33C986B8FCCDA9BFE985568AF85DBFE692BE722C2CB6062813FE
CB60F2A8433DB6B7B7C5518C32F3ECE86476068665574A13865FD69DAE1CD0AA61B9BDBD1DC9
BBB03E1ECF302FA9359FD43CD0F4B4CEC26093582E0E24DC1DE96AD8F5F4B64A3D429734CEFA
13201DDD60DD75B804886C8CA5AE749A4785C392F16B5BA3D2D6E5FA94402CE78E71FCFD118A
571BC0DFFEBE5EC062BF99A22C06F4067497C2FD6884561717DBA5947D9B9CF931835D056840
09A7083D38D6F36B6B3618A1DDBC9F6CA2A8304942044F0E7FDCAC9B82F946AC35426A87DE2D
D714B5284FFF3021E9B8C75260A98C00F38542DF0B8F8A1ABD0061AEE02C917216D78241B8D7
3D76EA8FCD4B33D1ED8D95F9D9E2774FE538BCE53EBFBCDF02C2214E40B06B2A766650D1F699
A9A22D607FB1A9A5568B5EC3742FE53DD943F1E5E50B607C891F852F539D17666C5FF181825B
D4A052D78DEC8633D943FD5BD49250999AD7E6AFD3166F2FE1E1FAC5F7668083CC121F16AAD2
FDCA3511C282F42EA1B1257A364A818B0273EB6F4115BD120AC4764995AB5E719A2D7B3E81B4
73C0A2AE44FD1076D3ECA2EFF158D1B2AB22DF57E7FAF0582536159C13B0CF31C07A51E9A183
07042C97BF76EF901235ACB7528AD8AED44598F2737CB4EF72ACBF56BAF7F64CCD73368BA5CB
089BAD0B0653B56113EB522185218F4DC2E9D3476A7D302ECD539CFED4080AE5CA056C95BA55
8F09AF9A7EF57261E54B36A389FF4B74D1EF4DC8E24D308AB1449CCF75F23CA1937860F60E55
0BD286354100B78A0B1C2EE425C13FF24286A454892691AE02100A542217BC5AC6063E2337A1
233B7929E96FEA0816857D3D99A905FCB4B7B4018FF5AC18C28534BA856749F7EABF16732197
17E5C6EF70B9341C9E609F234EC15FFB78FD62FA51117B9F04A9E073FFADE3B252065E9E382E
0FA27C9F3457F5FEA0FC2472473D34E56E69157BBEBBE6CF1A3FE1783E13DF5CE5F2ED89CB4E
E3A70CD88D3F80152639401B536510BA75122CFB0990DC4789D0FF397A10A454EDDAC7A15942
CCBA9CEA6C4EBA665FD523465EB4AA5794274A170B59C64779542E06C1FE0277121E63612E2E
A3206C276CF671C9CE2CBFFD59509465620DC477859C9208660DB7681860BD7C8BECF06E2BD4
1F990A1A11A98E03CF7B8BFFF33C50D364F92129E7606DCAD5DCB6D47F18DAA06B6EA7B425F7
C7F5DEA040CB640415E1D0905D2C8CF527D399ED2DC6ABBBFF9866A02E7321DFDF141283EB8C
197723BF21E9CF22CBC64A0D6204B451471920B68834DC34633C8AB93583539BA1296D313F69
BFB1C7CCC9F9EF600E8C0FBBA77A74336D2FAD1FDA9244F60CC045A76B5A8B614FD7E7608CDB
E40121CFD368E3E090BD2E62982C55DA23676E368AD392443B57238B227544DC00DDEFBAE3EB
4C89FA4DF8D03B5E89957C9D1956A7CE0FDEB8D8D362B51E545928D43F3751F0229882B1427F
F32333109BCD153C58D948E23E06FB3D29F5E69DF09790CD63A2D7D40472DBB9A35EC71ACAE7
71E20CC94253FB9B9358E7CF6C1C444E4D05F004C491DC483553A27D713E019CACA7DEBFDB83
90B4F7D67899B23DCC98439B520E09AFF2A2C2E2580C6EB8F4FE8AFC2822279117D738470CE1
B51EB4C17C8AEA67656AD7EB274FD3240B7DE92BB291D778C51BA527540B6E6F8DBE63FAB5BF
CC885F71E4DCD69A6E27A72816381B97C6EA0EA458EBA43158A046C74EE1EA51D9ACC7483E0C
42A73C81FD6890F13379B47D1E4E55010C6A570064EFF814DE60D56FF45B9AB4B588EAB040D2
9A9687838D273AD07616720A899E377D1E9AE21F7C81635838D5CFE5F1FB050C0CB724613C37
01E8767A20B5B73962F3B6E17EDF2E045A1401FC4C3288862D3E0750C3FFE4572DEA65922739
148B350F934A15E80339C53935724A737DDC7E535A18457AA9FB483907E5AF1FFADDE2E69941
20C7A22413C63D0E2BD868D6CBA600AA73EDE0FE8D443B4F8478AB68FD20D087116C25C3882A
A3180EDA9EADBDC07D442AC5545ED241FDDE4BA695BE195C49AF9FA054F6B6ACB7B29FB6AD79
F69642998062C65E8ACF4C62999FD1801762E16A60E5840249EA917FD69FAD0F3F738E3277A0
ADCCAD9F26CD40BDC9B1F497C6A9E1B0EC539BBB3414E6E716A01BD43A6B81B95B743EB37F54
6C1DCBB1B29621152E7294B7CEB9D69FCB9E2C99E5D9AF6C60A432A2CE2C62D3E0784638B2A1
79E7DFE0FABB1E88D71E866D8B574ED380D6AFEF810B5FD33BC2E2D5E58B624953FAB7DDE1E2
D6598B1143AF56D1BDA7A7EC3DBC84D03FF1309126673111BAA2D9E72C12943C0F82BA106588
579CC32FBA5787FAE6F8B1D6761159E68BEAE9BA26F8B4FF807ED11FD5879233F7F2F167CFFA
72A4BA1AA7F062462E0D8D98E39740FA352C7D3CFF84E3C9F5746B859E92265156DD63E73322
3D1B6FF9932DF112A7ABE7FC473EC9EF4BEA9BA91552FC497D3B54AB9DAD8F2BE368215BD373
69C5C5242A9447E76CD2D1C731243DBD88CD013052FCC91BCDD5D01970B62508A73F34EC3547
48E07BFB2BB7AED795641DEBA2CC4C0856BCCAF1C39D04FBE8874163736F4F260ACDAD607041
9BEB4CFB2E5E3DEB78258FF4B24CB78F8DDA696473EE184AD04D5722E015F61E04717E34E32E
D75CA680339BF3608F61ED80EF5D676BA80821483E84EC8656395CC8E292B30F2E191226D0D6
FEF068E6F3E78272A88EF45844AD8D398FF41FC1AC0480DEDC163A0AAECA44779F748BF7C729
81CF3E8A8B8AF3CC88BB8364C20EDD3DD672168ACC988D299EDCADF1F0E346FF8CC8C7012E64
F6A294BA6D0ADA575FE3CA880A0CDAA469A6DD448DE98BA7C27763C673F59E7C5A32CE51183C
5B76F3F627F221A3D6EBB48E5C1E8F9D6E0CA611BA659712B0CF5CB8252BC2F97803AA60ACD3
3E6E5A8EA503D7DD45A37B3C551746CDB0FF22325B11E103EDF981A8372A44FA7DD39FBAD261
CF1F2602000279ACC5A1D11953A843ED47E35269A7EA01AE7AFD084EF09352326996A16C930A
86AAB414721DE533DF84FBEB03336AD538E70681B7222EE2312F5EDC0A40635BE0102C804007
769F17CC3B33E784A16EFE5E93D8617A34B1A05ADAC3E89A10F3408F5829CB3288BA73E75F10
D8D8268DEFACCD6B1BAA6248AE4C68228E118F0C4299113F010B435F723B40B9C3F00137A9EA
8BD7C2BFD47C5BFE17F1E0B86821049A9D6CFAF2B08214B8663CB963E1D15035B058A5D097BC
A50D483B0A8C4E108D4C56C357DE0811315FDC50074730614E82A99D174F1DF3C455680A8916
A5F5E8B89805056B6116548B55FA68688E836F4813A9435EA319B24E81CCCF91924229E8FFCC
C6428E8F6AC4F45C3665FA349A1D799309ABC6FD1FF1B372D939D9ECF95C7ADA280C216F1872
DDED470F9378FB7A6CA5D724D3F02351558776ECBE8CB26FBFE203B2272FB7D97D8AA717FBDC
4A88B61829BEFADD5275E223D6A23E5BF4A58F34AFFE44054265453B3E75EA551A0D99EB6FDB
5837CCA0E10197A246EF7D69FDFE45B48300C3B9C05C61AD4C189F7FA3A8DAFCB379F706AEFE
C70B9D31642D8796298F2909328F8E33B4D155B5781D7474BA1B189065A018B330C01A08B9FB
BAB26E7F9396549B4268F921251DC9CFFA3E8F324E18209A7A2CD4405F84E18698E839F82DB2
80A54E59CF885B23CA7339E971894EF926B52047F1D1E0CADEA62A2B979DDDDE5A656DFB71E6
265EEAB5ABBCDA232FBF17231D916F3488E9273F0B7C8914BE74AFC60722343752BF5429F71F
8B5AB00C4462FCE621839B0C19C31047B9B3A46E967A966C6D1A1B6A6B73C998EA5AA2F2E3D0
11B8F96756CDC982271A628F3B8A4B800207540B2EB6B2A0EE86FF5EA4513DA57F923ECEA8E1
0AAE89B7C3911E46761615CC1D13126E8FD6AA38A6F1D83D2F05577009FEF65F63504E1B10D6
3F06657E3301F48C43D71232E05BDFA9CE6BBE67BD553BC5694C0B4FD20438AA6AC5EA5A61D3
EC621C87618D76406D9CE0B3758CE46268335B270AE72D4FE145626346541682C166FEAC358A
7075B3B49761E52C29A362510F6709CAABBBF84AE751E492A4F07512D9AA7AB7829F43F75687
8C29968B655BCABA2B22EFACF89DC1F7D1496493873B37A5E01BA4CB42A9E08B5FAE370C68D9
BAB3F05C098A16EA5D2420CD4A858476118288E8E724C6824676A2B51C5C417FFEF72C7D0AAE
B3C6BF0D40165DFE0ADC86A4F0623FDDC265DAAA373254F84C76EA2196B6CC77924DB597B0B0
FA88D4AA391EB0CE830A5E20A05F0BFD8EE7C69E15AA55486C95D6218D6A7BF18F58ABF8E2BC
73193C9B90B6C5013B85D248991263647B41F939478213C68F5763F4A07575D37B580C3E8242
F3A9DFD52DF5B054A9749676BCA489893E0573218D048F9525BF54540DFB81C631E84EC173F2
37C20D847D1EB64BD52FE10AAB0DAB307DE2147607F1F7DB6DDE2320DDA78EBD10215B3A6B56
F9A5A8D9EBBC456B3889DF54BE888B7854325F3C4AFC91CB9E312F3CC989816B70C635761348
E8E462E272008395BBD41EBAB582B58674A141C79A44B76060456F4AA963B1EF7D858943016E
75A3D0795D23B4202C33FB555DDF6E3B3FD319234A468D9F0D8BB66D6947ACE3F85723D70BE5
1DE774344941A4F59B88F9DFD92DF8FE740FAA43B5688679C5BC3BB4C684C52C73799D4D7261
5388BEA879CE77248FBD0FE9817EB6664ED84BD887B8277E26447278BBAEE14DF319264CD954
0AABE6664E61487C0DC2DE92B42A363641C4C6FDD10692D4D6DBD24B12ED3221F929E871371A
80E654914F5518280F94EE0CEB3427E5DF7FB133CF2FAEBBD958FA7392138E544898F36548EE
7FAA84312866E11FEBAB0E6A3FD26038484C764FD5B91C12C13EE8A56937499CCCEE4F90841C
CF93B73137759E16994DA32EB9824BB27F14A8E5655F3668D3591D4AF7C42BB2BF2CD163DC2F
80262F34AF555C9AC08F210B441B0EABC49A62AB139E7955E26D14AA617B6C4BC658D2B8BA31
EDBE945ABDA78608F1E879D28D26F21B506330CBB2DED94902BE5F4282CCC2CCFA1752653B1C
61A75C9F39DAB45EE4A575E4D006157F65CDE10092681ED10D11561CE16CDBCB3B7DC23D1098
F1AA97E2E46EE7019123E4FD80E00D2A0C96385E7B28C2054B8F0DFBD8C09840736746973328
7B64BB29C6E842CFAFD91BEE801AEC9758E6179A248929532EB6FEFFE1A7BD6197CE0ABBA17A
8CF6B7A4C4AC40715D5D32B0E34128D02B13DAE430F6D2FE63883214A2B3A22E94924F030A1C
1AD4B58531D9F4F637E5F72FC477C8D0C288B364049709B258B8B0D7B32F023164F8C455A8BC
0238628E0C279157E65C5A99857377648CB2F71E89DE8FC508E94C86AF7C6E0DBE5396A3ECBA
4CB61FAA161D9C62ABA96425CEC39474128CEE297577AE68F78DBB891945410DCB1000F183B4
06D762D1329064FF10B3E68745458899C29AFA6A27A910434CBFD13974894A6C5AE92320B8A2
35A1481A07AF827874DCD59F0B4E09CBF8BCF8F82448668C49C7C17AE6F451BACC54BEBBCA79
BB6DAEA1093BDCAE41EEA87ABEE6F90C638B7CE1412C5556BF5795B431E8A8762F5A3F216DEC
1AE51B56E1FD6FDF8740B47DF53F227DC5B6EE48EC056FFD5A714A5A67EE7AE0504031230C7E
AD0250F0A7E25133C733CE7654C319D05F29DB10403932EBE552472D8FEC76BAE2B5A5809D1B
EF19C8CAFCC59C249EC03830186ABC321C10AEEA4689C4B347224B97E6E6F0239A4694DA0D7B
A8125E09A8A7F46CBDB150240D9B33C1E27C9CD9EC469AC773A8C1084EC7620D4085B7E4EAC3
0B898E521A6B21E39FF4112F651E54618983E07DD6F6D5C3ACDF31192351A45B55AFB480DE20
A9B6F99335D7555A0B16E377A950B0795ABECFE2BF11AEF252A286AF3D8AEDD741883DFAF47C
D9F08734CA2359B960F2F05E66842FAA77387F06D8FC920110CF40B872BD528DEB013768C5DD
F553785924EEBCFC794EAD17D276E72A35FAD3A115DAE29F3ED1FC6997368746E332874CB035
386084A1DA2C83928DC9DCC3A2DD0526BEC50A84FDC8CAB7A139D5AF1DD9D7F3E4100706FA1E
4F9D0D7AE892EF32D554D7C323DFE48C513CA6AA1EB0107640814F628F9303AB307070C0D045
70C23562DEFCAD48D0F9F6DBB292AA8CCD52B0CFED81BFDC0A4B83F04DEA86BF9EED07A6EA8C
952B4C9838B122E63ADFBE6631D9AFCB6ED89C68E5E5B1AA4B02EC99D5767D94D9334C83466B
B229D069FAE812D916B44D1C8B5FAA447E841C9CEFF42E364360F3D1BC6631CD29B791A88089
D506B0406EEE1CFE2063916344BA1A5768C862D73362E7A8A44BC778C0A94ACCB07188D668F1
D218D40251593723CDA48545F43A9ED5A40286F9D9592228297729D23B4EFB0DC20214751585
929056FDBB6C9D583474B38844039196E739F4DDFDFA9A0725062258B78124CE9B65ECAD9733
3A0446BB3B0FE14479CBA2BD00873C8658A13E9EB311B5EED734F026896D60A328D2BF85A0A2
2D15E45500634C37E345531ECAC822383BA0366ABCCC9AE4D5ED9E872FEB718F7BC186F4B925
60276D0EAB799479AA0E493E1C21458C8715053C9B8A84D149845F3EAD94E8A5AFEAE4A7EB40
86599C10888DF76B5B62DAD7B35AF97939B2CB9EEB43D2CD080DA2E2EE599BD7F2F320EF30DD
5730A24851AC398A08D1B8AE615266004F2F1C34E63A0FE3BF5E52B13B4D5A6340C4A04B8C57
12D527852EE7FC75D01A5A18C84221EB4232BD716A9F9AB002AFBF93C88E1A5E50BD1AD64380
46DC7846C305972C517C7BDCEA0131A0CFC355B0320F12150D46371D438A262C957D8EA6541D
2E43CF709638B61ADC1605974FDCDBB60F2B849A833AC9BECCB525327EE251E888346C7A9A79
8953613B3F52E602908BAD3A9C524F3986957626D8E4957BDC33B14148C684DECC1A2C7A469A
836AD253C5E68F3564696D57DED3F4FF970295D280C916C0466257299843DAE25BF7C2DDB509
46C47EE5DC981EB7E15783AD29425BB900FF61110002533D05A226DDEFAF8B3992841DBC84DF
0AD8B022987B612EB3C6DCBDAAA69C86FE4E765749C8F1B63FCB110FB3A729FE386636BEFD39
8F22DFE75F796834F2081D9DB638F82D0490637C8E5D37843A61EEDF88AFCD98686344878505
1F012943DE9BBA32E10A71C39B0D042032741817654AC6201BD7A9872D0938CB867043BBD0C8
6B53ED2111615238E89936B7C13DD7AAD4C7B121428E53D6FC2985EE665A19B8BCD0F772C87D
7AB85BFE754A8835F987019E016E61EE1ED593EEA312B0023E4BB945B4498EE3F605BC572061
3F26E6CBCDA91B6FD0C75FFB8CBF9F69D1B4EBDF8F94796A3A96A9CBDEEAFB158C882417D1B4
BF19205AA0FF29EE2191B7F805068C4782712FF031B887011D82E95F31548B88DD90AE83060D
6D0A09AA72E3FD90D8565E048263E93DE97E3A4092A7F40EA7CFA41537E70CE3C8CBD99EF455
FE99E1B9E45B3F7776C30E3FBF92FF8A06509602663BDC43841F2E86621229E04A3A39065FE3
2CACDCC48D76E92E3B1856C5796D11943AD369BDD9C7AA9356690971754091A2C2593359D5AC
EA4B7A08B908A271952B4C3102BD05CDDFEA69266F44AA43815843779C4213C9315830718C8B
69CAE1A54F65D2218DCB56D7BB3115A3C34A760570A4E91FF0950BB52C1C0B6F7BF10F643F57
CF4AA64BE19134D4EE1DB13848CD17768612DE540DC70CFF8325830A11639B615E548F7420C8
976400DAC08A8F18258657148001247B21BCFF8F56B581E541A039486D7229FFBE0CC38B528A
8FD817C93787739C130D2CC7B8CDBF457E819F8DE32FA3CE27E7558D54A74F325E65F2D5A7FB
662CAAE4F7CEAF8F6A53E7E4E6B9973100DEACEE786BEA2F70B5BFDF7387FF6F886BA3B6D427
88C2D4441489402C55AFE1C68D01DB5A6A21841F8526170CBC33711D7ED7A4F1399E024FAD71
26EB72158CA68D936A3D31F2CD5EE95A80FABC5BD43E1C562A6929DE8F3F25B12914F7D773AD
895D14B006E8073447BBDCDA5BF31C3921267F4506D6B118F95F20D18A34324B817E8697FF1E
9FCCA8565ED9546959AFD15A42B0B5FD77151E700AF66CA86A1FA51ADF6A6FFD44763826A4E9
675BC6CC0FA6BCAA29D1EB9B002E4A970745D731A1D122DAA1590E1A3C4AAFDFE4E03F4188CD
728859A308F71CDBDDD84F315C131E6AABD9F9D5CAD338A090630222D10CC04C217B27B8933A
46A2977A9CD335EED78E15F942492F6D29B487D6F8CB19DE5F75B8AA233A8ADF6B1CF554637C
E407AF237CAFD3C0DA36084B7D95047E639CFB93B5257405C2CD5A23DDA9BCBD39DEE6EAAFF7
FEA00DFF345D2CF0506A4A21ADEBF1167EFB7BFD41F7A06C47ECE7A5AE61FE0063EDF639F583
A9B0144CA8E05904A3A24D5CCC3C0D9E1D3B2966D76D6474959C7D3D524541BB3E1E4C97981A
88BEAF4591670663221CA5EC9ADB8F366EE72CAFDBFBEE2DF4545409B9FF8A74C441F2E6E780
8E916B232D75FEAC9F547E237F4F7E642A1F864730918028856DF459DADBDC2ACD248690868E
E2AAB676A82F5D57DB5A537FBADE8CA1027D6F89A0FF5C0A68DCFD67494671DDB04BEFACAC9F
C5E7E76703EC68BD2394E88CDB6CC5F7E06E1423BA94BB6AA84F080ACC3EFEFC4B204646AF50
B8AC17AAE4BDB23B6320D4FB146D916CCA512C60D64C98DDD4D156A25A759BFF2AB36D605A39
3F17891159648C37C867D50144B03590ABF749C03DCA0C9E198BB1AC2379E8A5D1D63C7C7F4F
E5373036475209B842EEEE3009191FBAD8A5F264A644C269BD008E9127CF4CC482D5882CB27D
9C02D0DDD2B7B948A11547ED2D1E83F9E27F51BC184F5E36BBB76064FF6F61ECB8C0E85EC983
19ED61FE0259431E34169E7A404A2E4DDD1EBF63762056B2B96CC7F2A68C86CE3E678290F2DD
334407DCA600D3256BADD3434C79B7C59414321F910ACAB84E282D62B21D7F7521153815054F
1C33371DE301AC311F8DD8D2F9CB89181DDBEFFABD0FDB57D45ED2526EBCE182A9659E0E9011
30E368FC638CF6B53A024C6BD0BA9B0F20FDD14669B7A9D5D88032BE033880195A73FDC79D50
A72246E075124C151AEEF8C8CACD4BA8FCF1467321B098B5C804EC4A644406DE4D0365A75E66
839AE6AEA91F85F44F9F54FFD973B7B794E5A10F9E540235A53A7B623C33B3E3EE63DD137085
EA417AC6891EC86E159E0D202FB92B02DD6EA7AFFC840888FC63D354A202E9009A03A3E71C91
4B6CC2F1467F327F211698E495925855EEBAAC17D5D49EA869DD91E5CBF0206EF6A1F98C536A
2032932C062CC35B5A565AE631658D5EE707C7C79B7B0F7975D06D835FA0600C2B2D176F2BF9
6BBA8153050095C1E45885F5E3565D0DED43C8AAD68CF7A904488DD79194E15544E1144EE41F
153D30B74EC9AF8AFB98660E01E74873A8DAE05485BDF700EC5F51EB491798B6F8FF3A6784E5
D54BE8CF739578237D4DE910D0B0A19EED5C46E02A4234883E8F2C0A0643B5BCA0CF9DECF395
27679524D26DD365EBF5BF40377E6C4967ADD379EACFA7B728C147F72C49DF1F0D5884886AAB
6FA6CE21755FF278F87558D2ADB2B73F7B86FC99699279017A54FBA4F72F42356915A9F74A67
09839DF035563575499C850813E983563059507AC37E3B9E440CF7CFCB871E2C7BF904A664D6
108C77A382EF5C907671B218D6FE0CF992DFC4BDBF5F715B3728F2A9DB60D4994B6F03A7DCEC
09ACDFE51392D2AD21DF675C133F397E1271AC6AAEECBFE85DCA5D2AF39A32CAC0235C933D56
F45B19CA1C7B0F5818722777CD40767FA9EF92191E8D50D9169E716EBB1EF355D72C6BF56FEC
8C981ECBE00464D13C8EC96E1DFB748FA243C3E22344F32E87CC5E7BBA6DE95D3B18EF389A48
FDD2086CF85BE386D1C7AF9925FE21CF8B45366969581E2DF3AC36753BBD2EF809FBAE6BE384
174FF4EAFA76F673BD624DAF1F2946266D8FBC6028DE483B7CF68568EC8C4340A462E3E2CFA1
7BD75D0A2A156070A8A352131324D31B31FBAC2810AB85A0F7A740D88B4537943E0E795EDC73
0F6C7FDC21A490A6A7040EECCF2F3DD5D1F3B62364C0C25B7B7F49743A1C43FAB3FC3918FF94
0935BFFA034366EB8C95E2D07CFBACE2F251838A351EFDC571AFDD45833D766B8C5360FCB762
1E17AA6E6141B30A6A18685404883528B84C8A13B1C40BBD9F09C1A3F40C2B42D38614616D0E
CB383A2312BE1C1B51E2324952B947B6576DE49B69D98118A3CF1C2F034D8616818D726E394A
3901628D8A76D030834230E27A9A71641F8927F7546D9869D3C3E600563A0BD7A08C61115C23
E02AFC0CB76A2F108129BD57B8818041DD411F2663E28E56015D1BEA0706B0E78EF175A4EA8C
8EB3A95E56933B86B3AD219C95A84AD6CDC5BD6849E56C5271E0F6DAE8E3871BCB73CAA84ABC
F7B19C0E70592DC400DBC12574BFD26EFEA30C2C20029CCBC89F139E9A23E8E3F47723CD309B
AB1B8AF60E48757C87E78A898D4A51C65981872361EA8790EFF7DF999120FD9FAA19FB57EAF1
3EA4B0A839180D107DB0CAFA629E5300DB6F9B806F8FAD280CD3466025155F2063FA4105E43F
9B9A76FF3BB4B29F31039B897375AF02D5DCB5C9273412E1332360F0EB96C002F936DD3894AF
8D3671540162D8896EB7124816F07399FCE4D62E347BC1DB6963B122B5140F137CFEA85B8ABF
1A706B3135D653253EB381D05FF92119DBA3F76866D3D8F6B44EE0948801D5385C37EB1EA3F0
7C2FF5316BCF85D3EB5CAA788E8F4A2180F820EAFA49D3B1C37400FAF9BFD1CE3E20AEC07D1A
C648182F06BCFFF25D44CC6157738BE4A5D09E36728BC05B1867B9889F80B40A249DC8F8D82C
3DC5BA1439C05CF392CB4F8D252176441EA5C1EECA360208F3E673EA7BBAF4437D955722AD27
4C29A95A574B1409342075200C91D59701728949FF48D9F4C3B5C0DD3452E54E2070BBA77583
C48FD6B7218FC90729B68731B51FC660EA589575224807BBC1520169FDD675F733ADA0AFF769
E727E8C622FCCC790DE38CB43C760864B0B913ED77FEF01A93B4B074A57E5900042510056097
A0C751C6390A293497F5D9AE2103AB2E5D27CA0940A6BDE5E8DF37DF74187B2A657DE0614328
63C7284899484B7CE548BAFD5236D098515B6CA2C484C88A932949B2E83556CA6045A53A9779
6482F549DBC031BAEAF2D081241EC7C8A68DCAB49EE8334F741EC3C1CEC7852EF19C5807C8E1
368EAF876A8104CCB56BED5F33F8C3A15D0C5AB8F8F3C52ED4268C198706A02CE94542DE6791
2562F88040B10A7E0542234F625EE4C83320A82733AA0B1273D53408A525D952162621D7A315
70F56324E2C15DA36A081053809FD759E00CE8C57FDE851BACFEF6A04E6DB8D60CCE4EEA95D6
1359CB27CE8C79A236EA0012B0E97BAD0F68D8A553F59882E29CE2AA5F92D2F9E02C4E665E1A
CC567E680E6833DC38F4E2886AEE2B562DC6223E79D2485E8BC3D1FB41DDE47C211063E6CB93
ACB10D9368A31F8A388E01615C1A0231980F2BE31212D597DD67C0EEAEED7AF7E4EB70AC3382
2635D6B41331BB87FD31318E50696C2EFD85D177A47B8DF09514AA6AE85FB1000E71A7244468
C754CB8B0A4F99020A64DBFAA27BC3381477496804A213549A0DAD74963676280E4F934282C0
6D2A2D8DFA221C646F4E38738E0D721BA54A235F3298A478F2BD50D68418791D5E532CFD60A9
B13671314346CEB98BC933DBFC7E5ABED722267CD6CC4E7FE9748B4EC4FA9356EF6990CC082A
79F6120744AC99909DADB5AE49B080FBDE0CB9611642D09323A64E36D3705460BDFD00AC28FE
2C1E2DAD9171F002FDCAFEE00C1B87F6FBB658AD22DE77DE3282DE007192214ED467EE87D53D
677D159B0F5DE46AC7FE2915EDB2A96C77BA42FADAF1161E6A3593C60F57E846C1ACB2A257C8
6A1FD250206F7AF46718874FBEFAAE638735CD224101EA1F2F2697B67EB4717B097CA3E75B23
810AD9FB6A5FAB9108D12B96FE74F6580486CBDB9627760A27AFF9D01279683CD73E6ECE3EE9
FC23B47EB3D7238210FFE5DD38A47D9E75347DBA12AB1B391054E0057A7DBE0C6B0696844FED
7EC59BE4FA0156576EE1576C4A75E96351808277DBB91A314E617CE7C5C1D8E416283A06BB79
0C2E1887FC5E646ACC7F22D5772F6F3E6BEE98C4D722C02337BF37D06F1E4FB2C372D336A16F
BD965A2D28BD082BA8BB54385FA283BABFC77F60C4E1F4F4BD8D2C81FAC49DA449BA23C1F610
5CC1053EC32751DB3D3967730E8A9C1C3F25E750529A3C2FB0983A7C61AE8A1A56DE64B47237
FDEF36F13F3E004D53D9B11DBFD604574B1F394CB185E75D0EAC61C5001ED3317DCD79BF9CEA
9A51A67DBC3EE9E7E3447B65CAD0DAC6031D1516D3BC196CFFB5959CC81E3710B8A6D3E5F5E4
F51D6CE59C5B2FB08949462BEF1D898043FCBF6260BA16D9719C29731BB93E53171323BC7B25
DA503D676D5635646EFD58395C025A45F75903B7107EBA4A1CCB88DE1BAEE6073D116C10162C
F8AC03D0F0342BAE11130972C433447C27266A60F8C6657D65439D3F1C785277EBF401D3BEE7
A722D02EBDAFAC18D7F6C82F5A437511A9B9C8771D7703ED40FDEC8F1AA1BA48483B6365DB1F
C31BD160B0731D5DD6157059410F2B9602F8179FDF9F148DBA3337552DAA5D64A5B6F29969F3
A0D35825525FC224E993DC695E29EE4605A48E2F0A86BCBC5B724B4EEB7DA2F3402864A8D4CF
AB5DE2D4439DE6E912CF5833E73F4BD87B9BD790E9692C9A6E59F264476D77EC40BD957808A0
28578D1D45A23521743EA27767932D4E3F512FFA733500E254F739645331AEEB8956DC4D5629
1B61AA723CE2F1555131C485D64234C33334E94C30FA2658E9F0964ADE6E90B6C9F1A4E2D42F
D4B182A6A59B4EEB55B8DDB100ED89042F8BA3AC0B0775FBDB36CA6D54816E41BEDF8434FB35
D7D1698BDE4D9B2B10F0FCB668D2C594754D0BED1B02AE5FC208255CC1C94625C09F5CD2A209
BF172CEA48F51B9011568D8E9064FEFC3E71A2834D2B7A62787AFBA04293F88E92DB7C9B6C1E
3BF2DB0461A77A7E4A8EE6E6FD087F5DFDBFB3FD1044BAE9F5DC9EC083AA7BE60D97693332BD
DFA6F87D2E0EF75A822DDBAF1AFB143CDE9F10FB9E1634C23A4949C0CC445A4D1EF988C3BD96
D4F7898F65768384F28D56861C28DD9E4487EDF6FE93F10D7B9D461E131D0BEBDF65C198D3DF
E2865918C2F54F84A35218B6E105F8FDF67ECAF31E346D91CD4EA96DD9BC18C97714AA79CC4C
F6F3B074FFD160B89CB23B7CAC318F7A91C7E42C45829C76F6E8AA9B01DA95F5E0601B6A5AF8
33A9BA3C1940D92785B9E533B4C6B2EE6E7DDE96FE6ED9480DE1F23FCC8C6B697DBD7DC313A4
F413A223C9EF8D0402C34BB54BED2FDF4605850FD82FCF4F9091BB9545C5A09E0CB27E56DC3D
8A7C42AD23FD9FC2FB9B92899418A44FAB186BE60A3192CCA0FBE4C61B6D3F725B8567BDD3FA
5F4C4756F3F18D7A753832E5ECE50972FEE930B08DC1103830272B41277CDF5BC6DB0A69FBCD
5594B89ABB4181CAD8EF2C476C7D5F35DC41B1602C35DEE64F521DAD32DC49890601070A1CCB
6117D8A2F4C9F35E030F627E695CE26931A73DF0974C24A1B0BD98FE47B5C393D56C1100C45A
51FFAC4378EEE09CA437711536BE500DD73E9010904AEDAD088239EDCE8ED5EF846DCA7A7534
9E54E7ABA147BD11288D71A4585183A5F35A88C5780417440315D17353292AB5ADE67B2FDD09
9CD5D7D1CCF49AF9C7E96067B31F356054781BBA018F2AD546EA03410E17CD537F34683C4099
EB31E21BE55BAE27E219B6240C044438CEAF8AA6FF7C298334EF61EA55E255A13BF39AAF4E9A
DEDF19E7BD7402D635BC08540EE86EDE45627EAC3BE07639361971AABB7006CDAF8FFDC05C62
1C6C4623DC7BFEB35EE70626371BCBD049D0DC15607B3A6755E9738F1565AAD9D9FD54BE46A8
DD49CFEEAD729B4001A6FA576702599A71557F290D42FB3399D94B72356A815CF75121447234
7C83A980F8886A33549C72F56C49C7A6EB99D452698E6A235A3B4842A14A9D54CECF8DBA1780
C8CC7C476E6F0892774D9C2F4530C40EF7BF5F815E4FC2FB9D01E2C1E457CF5B422F23CBEEC5
F3A144F33B5EA417EBA533A854415654B7818337FDD1442C793BF81A3663EF1B1BC48018CD61
E30042B9566A8E07148505D4B6D76A2DAA5354705CA26B9B2CB8AD0125EDA3FFE1466EDB3039
3CCF961664ED8B0CB7795A7E073034770325692AB8DF837F819BA7CCA05EDE810CA294288693
846AB6057BF5F6D911598D48D3BCE84F965B187FC4D38FBD7D38B8985788457F6F09B57EF6F4
D6EC8B2DCD62850E8E1491AF4A83F41FE3C8C6B0E815B2FC9809FED5242B227753DAE7553A3D
981C1E827A52338D80134CE05EF3DB1BC83F7D9D6E87E0E918A96B6FCCEC477D634A5A58811D
E1ACE8722AD04CA20DFE67D75838EC8374F770E655B39B1763471EE64B40A18CC7A716B5EFB6
28DD3E08BDDF5423900EE85E0CC2EC500DD2CABCCCD0253AE6199B80610B2C67C58C62C577D6
62A7F32762D62192C333DB1B7CC74CD80D0E0E21C70E09EFEC7AB838CF668E966E42F2578B8D
CF41F40E4690190FA270C34E84897B586396BA3CAD7995AC31AABBC03CD7B9DF02189C9D16E4
069F8FB130817D7E63CEEB75E8051E6A19C0B99B9E55513BDE32552C3C3934C5EE0EA704766A
7E4E70B54EE252B8DD88C38C49776B631829A4BD3879A38D2EDB9899B88DE5B9DD02CE95CFCF
B394D3FC650BB54463ACC26CFAC0CE2A0701FF763C623C2F8537096C7429ABDF5EB3B3373A8E
D1D1A9B062872F903A87ED57187BB12029A88445D649D7763D3243A366E2E8BD7C95B8AFF893
B4E8716B88C99823936DE2D81673EE8F49FDE134E9B60BE4D75B457D7E28E4C22679F38F34EF
097F12419537D7F6D242A58F1FC206FFFAE3F8BE186BC5B33F07F4EDD2D91F017B4D53157DD0
F0C32BC98935EC3F1CDF490027FE285F69BC1BA6DE842228A5F37B20029C8AB68FACDD8EDAEE
D0D5A57953D4B2832809EAA6165F8A3CF1FFB0ED0FABE7FB297E1AA775873C095F1847391F6E
C9B600021B72579A39BE9E9CC18E67D5114060510CF3DF0F7503D2A51BD11CC129D1B5FCCFC4
C8894091B51AC6D1900A16571C87F44B49BBFE1A32525AAD869924F59C378A94CC0B7A8AEE95
140DE9112BB9C17877AAB99E424C0F0E311213F082A8ABAE97ECF7476617F411EA53075B4576
BF8FA898C5680566B3844345546B13B6251CA27C559F1578FF7A37BCB813D527D2CD893C9D05
180060D38967D3DAE1EDDF1DD748EA880CE109C1285E4714107478324E809970C3EE8E6DCDB1
5301DCE69DE061F019EAD779CFB2A3FDED700FE3512E60B0BD7EB10E94E5E62524C475C0EC9C
5102BE8E83224FA9D9917F637BF420DBF60D0F00D40D9946A14AC4855BC59A8E4ECD90332A3B
05419A8CB36D3E54825F0C59585D2FFCDA0D2C739C738A2C6C04C4184C08ACE741EAB94707D7
B906DC6EE54C99E91FBAA8859C7223CDAFFDE0ADD30BB0A0CF23C42835FD6A23C557DEF03A4A
5D7412E8AC644A0DD960C130B8BEA3AF1F88A6CD4B68EF073065871A2F91C11D48673A6C0948
9A328D992222534F21FB94D70EBD64DC23836332BBB41F8E4A83E3667220EB599DAEE84A9868
C8BC8E6422EA057EEA22E9FFC59E6587F578A666D80C06350328EED80E382FD4CF8AEFE04126
65CAFC6A95A60A83953634425435C69E0B96EB9B1321C0356B9E3F729B1B366DC6F93F78B1AC
3476B74442F3C06CE94687B53233DEC47D6DA8948138061AFACB5782C3F5B70D07C104AB118B
87E88C8CD5281DB5E31E6ACC24BF1E910E0008AC5CDE3A5C93D1809B93A32534C6070E59A4A6
E14858A67A05AE8AD6E8DB4FF4F372E817A696E5D222827FC53A108DA05AD79C1E5706231A5F
FFF089453EDB134F12125DBB2D5D8A0EF5F76DD2184952F7DF04C7EE56CA0FE614F430291E5B
4D70AD459A63897D01A254FD577871BB64ED0B1A2ED187E3CD07E5E8AFC3E2D4C59DB46B5328
DECE55898F85086A2478907C51516CF84E4F6B8DE92CCBE832E8EE4574BB4BE6158F149320BF
B45681FFADE628C25DF77F99ABEC09D34414825E2D4182EBE350B63F8C786A020A04DA0BEF4A
D4073238366B90BE13D76745EA82A65B40B8F40D4A51AF49E42839B6A681F6A7BC7077039D56
0EFF6F50582ECF8F1629DF6045DA92718770B5AE1884CE7ED6F3B269E12F40E599EC546B8D5C
FDDBB85069E2A26F5259B535399EFC0C24F4388CF68F9FD83230AC24A35430E7FBD649FD493E
9B0EC754AACAC5B2B809525A7395F9312C9758C4BA9FA485E46E3C957CBE9BF6B51782700025
F008BF97024E0B7CA222A42B7B06DB0D6D18F5BA54B4BB01292B733D9DB7E938A1C3B7025225
6E0D79F723F1883A73CC3686B74F57F185D0799E304DF22DED754B609990B779A5AD12154398
04D1E1DB9CD923F344E1E812CB4F3DE0D5053CAB1902A26D2C63DB0CE56A40220AF3997665E6
F14FB9AB49F066EACF69162A5F9C5D07EF8F695712ACA4DE7A6851FF1598751F2B5399C33435
41B2685A40F77371295D78FE53796F8C736C0121398FF21D9CBF3115CD14E5274E907BC0B2F2
6862135297F8A122BED85783A27BD6F957FE5615EA98DC4187FF4EFA702AA0B614C71CE42CF3
CF68E7DFFE70C43936007A48F502A4D323B3673BA8081F7F829C91EFA882D85FB0D3D56341FF
0189C03EB53AF46F18A48C79EA511F62B79910F8FBBDDFA7E906020E9E6E86728E13931D3D95
D10D344B7B609DA473B26D8D2176A610C10176F3CD51AABB5F6E3BC15FDC20DD86C6F7DC6ACF
4EE71BC1349B74EDF173328C943BD78A604CE5E2C0B72C4E0146E00E64D10A887CF62E43CC74
DC1761119747A3537BCD17A34850D10B64BC7FF534E3A0385513B85C08BEA890DB95B8DD2686
4278B673C526F861768548451E2D6FBFA8117FE215BE8BE595594D5AB39B3962EC7D109EC03D
30D7FF8753BB155030F413045722C7F75084C08E60EBABBDFB62C82CD91FAAB1C76E35798585
109867377CC2DABDB2A1FCFD25B9D8959DD124E622E1DDCE4BAD06C6E6686E1293FDB6BCE56B
030ABB803514F8DF4374D8DCFDFF3E029CAE4B82725FA1D4DCB171DC578EB67F6EECA410810A
86DBB694F459803878C8B563DBE5C24E41C29E759DEBCED1F204724AAEE7918990BC53CCF473
B0869EE87840C0FDE60E0625DA1B84296E673DEAB6C53D88488CBEDDBEF30204F13601F6A507
0BFFFC23422980FB1C41F0B2DB98A803422AD8C98D2E60B7E26C986789808070070BD3EAB3AB
CAD0604EB562B6385D9291940E8DB105D63C15193E6CD8E856D8FC39C48C5298F872410AD22D
D550D8433C24DB1A99A81AB3F0C495FF0C31AB2CC76E58A28B456A4AB7AA405F1CE45BE87A24
C0C39A7B6CA5FF0881FF583AC51155474FAAEF69785CD3BCE50EA30264FB03843C414B2E59C5
3937758ED02F447D97B0ED61CDD9EA654B66B2DEA75C0DC749D6CA60039C2F1458A71B77B75B
7A898ECF42164E0E1D6F1B510C2115D4F1167AFB86389FCE59CB2C056A697B08C06A4C098A01
1F282F46639CB80D16678C07385EBA47784E70BF365C8B720115D02F102E731B6EDE39B7DCC6
73EB655A982A31C8BD6C8A61F665596F4F7C6D2DA2E782B60D983636D39B59754FC92F55DF77
B8A9C0172B20ECA86B97240C49489A71B3E45C96617EDDAB8D93589C35481D995EFB0BBAF625
28897C728E3F0AA898C6FECC6804E295DE5448CB97D1D7E888C384D10B7835555A58D156951B
14172BEB09D10CC172F4212494E229EA77529F982D0A5F4C411AAA93F87606742EDFE1246F22
6A95FD2A0E5705AF0F6EA8CE75D911439212BCB16685C712C5A820628CE472737D52E2855DD2
DBB94E5350862559DE45320A90EDEC31EFF5EA1873462611233A95359BC6D502780BFAC3700B
E202E07BD928FDB0B22A6265B352105F7197F2ADF6FD37404546A175DF531B1DE6D5B7BDF855
A42653D285C5E6D8BD92F1BCB907B2B7284E34DC26A13B9C2F4DE7B59CE86860E44D76359F39
E167C95D1AA21387F4B6EF667B7DEFCA880D601345CD7DF55F9599526BC0073C1B7BAD869D48
E95E43BEB572705B4B1A3393256B2109B9FA4A42E3C1525C07903DC712B0F69418C7AE03ABE0
A86D6D9BEB0ADA51C505C60BEADE53C8254473DA4846E153E3D805529DE3823B4F8C9C7B1B29
FC17F95140BF069B7A7F8FF3F9BE69D9F45B0AF15A781FA62E6E49406202E08D9FD4992D43A4
ACAF5991D08C613D6D835215570B009344C4FC8B13B2CA0EDCD08628EB6527DC626C73404728
26A776FC43FA56670C0FB4931A34B5BB82106C7CA74C777AD658E33BF92794AF1261E4EC7B6D
3909590F4030FD2764640AC5A3AFB05CCEEA5F2DC2E83D5460DFCFC044C1365330F26FB26A91
81D35DD02E23A71FF4B4865D95D8C536AE9B78506B8666BFB20890082E3EB6A6141D84A76778
7B12FBC4C082DD4EFB1EE241C5120BBD7AA3E6AF74866F59D746A063608A5A7DF15FBA6AD7BA
D7182E47E40DC416B95A2BD3793335D3CB105488D7FE8E3FAD82508D9A1EBE23A1EC5D5E5FD1
10A720D8D84D2922041C522D032E0D281771E031AC2EB69E8069C02D15F87F5117411C6B30A8
CFC5A44E5EA2D6E705378D638B532E42F1F01F4278F27A0D2E1C460973285FD711BB6FEFFE54
C387CFDC45BC1FD490D951D1C05F5264E000DAF8BA89BDC97069B4618F7700D90ACD6D9516A1
641450990393FDBC34BE7BDE28DAD5ABA5C2AF3C9D85250AF193FA50A8A7E73363C8C2CD782D
51A1F035404F728D91E08D89A4D86A7B4E67917255DA58450884AC432BFE6D63C6E3DD71E4A1
75AA9285F3493E09D09F109EDA78CCF3ACB52ED4D07AE6848CE836F95462CDE6026C8582E18F
26DEC3B00208A85D12EE91FB73319DDDBE50F02D157922EE0FFFB857CB36E9E78CC35712DB7D
A8B3436A95C66899E924EA9C3FFF10481572B32893A9813A62E1AA4FC74D13619D99F63111FE
B74C9DFB1612DFFC38453F2F569461D76AA7660D6ED8881A487A52EA31854730E2A7A4D6D0EF
5F8E38A0DD52D4E5251AACBC3455505D3D9A3C4333A30C41C508F1A3F4172E1794B28E5A1FC2
1B11E321574A4454AE06686CBB69CBA439AFD8E5ACDDC0D5941E5E1BF4E1FB6A7B0E879BF35C
94DC99C713F0D851B97C0BE01334C6E06BDB877AB2428D08E300EB95233C515CFC06C5F2774D
CFF06DBCEC9C7B94654E7352CC8B619E7D78D0948BD956750EBB9671403B762681FE04E67BAF
F3FABE4B8CF09DC02CC5DBF0C37A5CCBE3BB0E74B0419266416281E07B5775A0BD44C732967D
63D3CCBED9F745249FBFD4009C9347E6680E5C1B2878E1F1217F0DFF069085C7484B78316BD4
7405CF9DC2250781840F50A6F34CCF634CB169E7AD49268A9F097CFC943974A542537505D822
2414D2392C6C187D61381A0B6209513F7175979A65EE8DE28052DC640C05EF6BA0473356FBDD
BBE6AFEF3A30F9F10A9DCB87178B01F91903F0C6FD1625685A3E3D653D4DAA8004E141EEA2EF
BF686C12949D2F60825019936A0335429611497805482F72FD87345A6B79CC56CF8E4DF9637B
57F0738BF3E126C422A363B38A33C38E6B0503971EE6F2566A21DD136168C168AA413E16979D
2799D49112EF2D29D1D96B191647F6D1C59775E5119A971589274A953A27DA2B44CC1D03C4E5
AE45FC08D83BA55D09680844261D42FAC7EBBDE1233E762AE61052BE9FA95F33E20D6955CE33
52D1AA858A0942BEC937A889D498CE025C7A3D010BC12EE9B3672449E325442614996ADB3112
A7A74C80E1E947BA7527B422848EBE7A3B10D881E1C128FDBA9172DD207D82AAD1D7930620AE
C32F1D9141D49545637B541A540ABA5A81DD1257799F9516BD650D4E6F72F51FD67FF6F4217A
6ECD3E91C5A40D5F6BF4158702B5F171CAAADC8E68FB71E77476BE3BB58881A2016E4396E377
24CE917AE082EF4C9E8AD398D08893EABAAE71F9056288E9D03526E03528F42E07F3A104D2B2
29AD098262B3F8D4ED08671A740C9ED0FF085365CE52CD87992A81789B8C487A9BBAB726F7AB
F5D956DC4B606E403DF95456E7CD0FEF97566B437B31DEC12B673B654C8406B39B3EEE0C70B9
EE8EA2C41F286A5BC32F37E4EBEE754DBDBED721C146891EAEA9C7595FDD5F6A94DC89A89073
C7B66B40172F810AAD1E6FAA9B063F99985C732C78AFCEEF21BA71C05EBF6BBA3E29332ADE7C
FF5D2D7B49F3FAC5C2E88D1959767FBEF4939A3340F7E937D2E4F635ACDAFF2E4E216055F6F2
9BA9F68C0AA35BD58E13F6F33BBD2332C3192778797DD3B6DE00A5AA87AAF215BC138F4528DB
849D381CE363B0DE46FC875C3183D4E961845D4D20B8891C6A10C656CA38D1BC6CBA296DA74D
70880BF6DBCDF60671957F847C60B09A961D3F00F9DD50ABFB0F7F7353AA293AF8A8C06A1006
4FD3F2B6125CD5658D181B1D55D932138C622E341D7F5C629DA7639330A3C92DF19BE002FA8E
FBA62FB45A47C612A73E4BD757E080ECAA2A00141DDFBB953BC884E5D7E86FBE545D572D6F05
20ECE61CFB235B576A824161CC55402CEBCF42815D5E0BC3D8C575F1D3B45DC657A73CF788BC
472A26E04E62FA1C3E2FCE4C5DC0C80A41A9A5EB50D55B7A4A95EAC74F048D6E62C5E3C6AECE
A271490C4DD08DCC5AAE48837008F39156ECCF80F6528F2529B790E187FECB5DC9C24D4E4A57
B412DD8A227B99DECE5D997CC8937FE53AA5616B32C45E3787B80930D4A4873961F363D0ECC2
CE12294026FC8404CC0C2D30F7862DBA7D8C6AD8D7CB417494C797A2989A4F257F6388658109
C06BB4D4CE68C0CADA1FE93C61D516184C59CA38E183E730869DB456EF5329F8C7917BC119B3
3EA3938D07E87B0EF22E37251DBFB11145FE71815F152C38D06985F9E264453C0D903B44F554
B956254CF09F20B5FFD4FDC077DB28FBB90F2D69676563BC22DED1D85A7AFB4A5D6B34AA8106
B7225055308FC02E3D9B8F904306615EC297C5BFA8FAA5A37459E31495F215AD740E7EAB83E1
F637EBEE85C097EEA1C053F4F71296E1C835AAC758959826DFA5727FF1B6C7CD78DC30E22FF4
F7DA09E6B1D11FA0BDB164CA36DA6299E8143DDC1F0ADC3AECC1ADFC4DD9E8C7926A66E11C2A
71462EBEFD5CEBF83E071CB6B5C2E37A48A20C9374877F62BECEDF292D3A36A7DC29EFC39857
86AC35D73127A097AC2A29C004188DCE0C664D214D88863F726BFB56B60582A2FAF2301D8A87
2EAC2874BCEAE32B6A22CFB6CCC49530AE9EC9205162A824D477F744075A174BEC54246378D6
FC4F3BF50AFB5FFC9AA64130A262B2CA8C26D325D7E5832A842284827C65922041E146A2CAE0
F35B4158B7C8E61519DC68462C1847A1EDC3FB1C382B7B09F4D0296951A170ACD4A0B432BD9D
F4322A35A140741668F83BB891EECF75A6E9326B82ED88A0A3C959F292F877D13075CD474CD7
533567D7B0B8895A8EFEAD036FE52BB8034B6A44F5C3B4BD9AF63A6A623D158B0FFA95C35D7C
5D2EA6FF40B61422C4EEAFB35D42A9672C7D0A2B4B0BB8200F8C9E24EC8A3F8CAFEC899CAF25
A36231DDAFB6A4AD5E91C9CC206EFE1773AA911E5A30D25F0DCBB12ED5E82398C41BD2039C1D
0EAFD28AF045EC81B1261BD389865129C48100832F83520ED70370B1D8DD8BAF4A76BA0604BE
904DA1DA1ED3F05C4F76068456609C6B46B0C8A89F089CC53352D68CE697FC6577AB57B1A538
F462D685D1425FEA919B1EC15FD805E32BBCADD59C5AF17ED52F94665D59D2AA8AF24804A715
A706EB5E6E1AC218A06F1DE9CF8484D76DF1948B7552AAC2D8945EA925276377DADA0DF4E8F5
15AE186EF25FE1D7E9C739617A64ADEBDF9131D258C1264511200C1F96DE39803D446CC8F894
18A8E5A48142113512C702BBA36987FE92EC800E2D0B6134B2115997549620AE43CA46DED645
DE217F6C22F12B425BD00993E17BDA75746F0CBB7793B0F46B37B1D2DE04C1439F67B8BD7A43
9E7F88BADC4102CDE02A03B0916C60BAC8D34861745553FAAC30415C08D87420ECBC9E5058E9
B32EC2CAB513C45753BF30D4B6B3B8ED930F0E1E0F8E1BC6FD979EC77EEEAF5FADFA692A6BCC
3112B631B84C9E4E094FB1BD8436A7907A9773D9AE3F0868AB09541D4A91D2E90E274E393E88
E774809C0BE03BF6134E908246D8F23E8D13EBAA71B01170DAD832D820B6C32CCC14CAE38045
7137C8F7ADCEB6BCD6B4C207AB840D6090D966C15B72047DC5A783D68A169587E0B771BBEFC7
C0C1FD24D5580DEF47504F553333E92A352A35EC692DEF4A70AEEDFADA599FC198EF566280D8
E35E175DF3407BD0697363094784EE4B4B1A3D878B2B72ED69C3F03A1811643A1C246397EF77
5F63BF98BD05FE99F9BA4FD6BC3E9298DA727D4E48C11FB064459733933A68A99D5D0AB442A5
F3C6917E98FC4DF8350227E04305CD8CAEACC12DDA0B52929C2CD22D01435FCAAE72DCD35C5C
D8010469356A63B8E0D5062E8AFCC3430AEDD775574292966E5D0B8975F099900CAAB27A93BF
8C6D080DEDD76F614A4491A947CBBEEFEE8F0F04ADFDE3E3CF58783E2EF003BCC8D95B70100F
C30F3FC695CDD8749422987ED6A6B738B5FCC7527E66312A3F12B92AD8C8A079D03525429169
BF6209A5F226FFF6FBD6FB32B0C02F0D6A66CCD28A6595C6D9799ED3D3A0D3A777B91E13CB32
04752CCA8042D535A3A3680F5A2474EBECEDE52F5CB65DAE26CB0B85CAC2028CEAF03E8B2972
61DE0627C733FB1C2AFD180473097BE41FB6538A209CE0A6310BE10ADD8696AB358CE25C4A3D
0D3B4F0A584799429EFB58DB3DD75230AA32BE6C339751448CE9FBC37C5DBCB992EA82600A51
821EEB38CF550409490BA80FBE1BE2BD5FED889DEE10A83E4CDE9851C43CF6472A9F1C822CBB
81E47573F9F743D7EE9E80511AE1E60E425481D023B230FB1404585D2DEE5CD3F9E584A9CBAC
F87C1C42C1696082EEDA60A0D5F4E1322351236ECA783AA85507CD74BE30B8517E78B5FE1298
CFAAB96A75CC39628C57351FD99031551B4DAC22D1714B1FB6CB9322347871FB70AECE1ACC55
03CBD51108955DCF22E883E6BD7A5908C9B56AE2F0B0C5C891610C83C8690C2688A96738CB24
791B6A2C3ED417693B430B8B55897EA3196A11A7AF82089F5AD621EBB4A6892A1DBD01014026
C7A51999D4F0BB3437E73CA18911A2B975460A7CD59A8CC158F850FB12830DA9B25BD266E84D
27DEAD4446FF043D89AB08612876E4BE5C40F7AD54359FCBFB598EC19A005662F48CB1B8E284
198882365B25757D38994BE4BDE92906F48EB639D844B52ED7761E466C7DD604C6EA5AC2C1D2
5A5810064E73EFC8378F305D299FC9ADC2DCCD4C1AD641186E86EA0F2D99836194C1F08CBB45
8CACAA61C93397383E9E873668ABEDD2FC3B1733773AB74FDC76D9FE78A4DE0B5AAE6C7FA3C7
38E63377ED05E31F8ADF0F7BDEFD0E27301435FCABF84A5198C7F2CF12720B2E4D3BC49D5BBF
230C846938CD3CDD59D8741E3541EB1C54C43F1D691EEC854BCAF2A43FBD7CD55544A5C04DCD
675CC6442378DA0ECC34454ABD10DC92627C8B24E9B87D6C097CE7FA08DF054C2A0B5E72C53C
F872D434F3CAF06203A11E3E5F356F7A5C222C55860554C5D92046DA30A8072503F95DDB7C23
13F9BE8C6979286115FAECDFCCEA96CAD103E344466F2BFFFE2A4779F09CC77902A7352AA745
2A08E9EE0721F30454CE859725996DBC082DD68C90070E18B9D0B94177C4BD9975E3EFF7C33D
AA50C16C48D029E6393E3BCF9DAB023F53903372FEA5E3D421BECC1786B82473F3E77DC2DF5C
F730BF72D34127C4266DF8413E68FE070A1673D9C5E3A25EF9AF549DF78D5A5E8B0E3568071D
90B94C8A3762EC50806B29148F3C852AC6BE4C3DA8FEAFFB29A7D085713203A1BD51EAE4EECB
D8AAA9FA7C3BCE287489D0605EC2CAB61F5B4B968892416239123784DE657D423B917C5B5926
E7CAB49015BBDC4DC0C63212E9B1D04DE9AD2A04E7218550CDC0074F03F9E751E319C88693CE
C8DC7574CCE78B26CA681F6C843738FAD6AB7CEAC162F693A2A04C565F92507F10205BAAC04A
20593846190E79DDA06569FDF4FC88D53486993813A3D456F1AEC0B114CB44BA24BAB2722FD3
B33C013867649D9A5F71B8364A9589961DD2723AEAB12DAAAF479A7335EC78090C536CDB955C
6109DE25F43F32B762E781E750BAA2EDEEBA1C72A0EA5BB4C9EF67E0F02BA1D12A914E09DD37
DDC7DA53B2AD998A82FDD69C68F8EB5A36F2481630AFBAAE5BD59F4A3951BE5A847FC8D67BA6
710E974E2126FA95AAEB05E33E605E3D86235E3A4C2D4DE503F2010C7DBCDA68D2E845AE0F42
EA46D569FDE66FA694622084FAEC704699FE439253ED247650A95CCDE88CCB3CC66712DC1BDB
24A4DC33551AEEEF5FC7E26862CF6689A07B9BA4B33ED2B8C694B3E368D2136146787A456698
006A27924EE0500C26992B2E72D61BB0279BC9F9B21FDB34BBDAAABB9F08B5B271053F815723
788C6C14B5C3B9B86C601769FB7C9E66B49708D4F35F5353255F5B8D4D4F429B1FE65DEF7273
C7D4D092E6A6DEEC6432F1C0EA6A5AE2141FA08DDDB316343C9D7B8F78C58ABFD07A10D65BDC
0AD9F027B099D522B5F65AC2305316C5DC57FAEF38CF295F2E1049DD1A19C49BE4AB9E7BC202
16AC8E4B839E42E71069DF0CAA0ACF64BDA698CD9320B5DEF5580CDA64A9F07448D8BC85B207
456F0D691D7A88C2144F5BDE391AF65BFD5183C56B9F7DEBAB10E43D694CDACF9D3D1494A9E7
742A899EF96AD341ED58E5F0C8DBB03320BC2C522F097319A5F0E87CDE1F93ACA3B7A5A9AED9
391A2A47FC2561F3BC16973FF342D3EC21A4C472D5DC35CC5A077E41E61580F38AD115CBB3A1
9E54D3E268A63BEFCDFE5ABCFF45CF517B4977ED5D2445B91B72A8530CA124922617C7F19716
5D797D85E24AA3754283BA0C8A6BA8EC082D3EF1BA3DE2C486DA47A36AFFB40B1B29C21F7637
4F102B47C98A8740CF08C663611E9AD830CF7488C113E9E7F545EE369CD1695034C167566894
CB973B4284F16A88CDD8AA0F0580C80CBD2CA29128F0954CCDD8CCDFB97A70846C4DA0AA1E58
74D312F59D5F5FD5D961D7FA0F6BA6C1ABD07973F5C1461F31C05FC929946DC916F0F056ECE0
D859CFDCC1B698C14098CB7E5BFB23C89B8EC66A9B8AE94CE44C6C1AE4CFE228F9E07676F0DA
3CD91844F67407BC75C7688CA239E799ED12AAD1E9EB9F52254687DB82E071157D002ADAE212
696BF3AC6E51A140B4B8AF2C18E9E3DD3BD7EDA93BA8DA02482FCD91691207791EC2E28C17F9
042CD612FEB3E16A07838B148C715450558F49FDFF69C8DE27003A238C7BEBD8F9DE2FDA8FD8
E5C5151B02C8B9B7090DF968CA9FB2B76177FE2BF914D104F03BB5A941D95A8DE6BB17FE567B
ED69111A11DF00106CD4B56ED909B6BDD0BE49DB1191FA4FE386AD3ABBE634C97D3423E22D67
C902136F0F21B2197D9A9EE32FE75EE4E55D0DED99757BFBBEA111F947B3C550B370F3BF6A20
E9ECF97C6137DE774E638DF7F73E81D5B5202F384AE295F787FCA2E3EA184218F6CAC18B8970
DD31D34E368EF90533CC516AF95EDEDA86D2C513A09E7269780CAD4FA7EA89D872F663BBA942
9AB64B1768E44484153C4B086A9517A34EE4642D4F3118262261122E2747065571627821A435
988987B95F01DEEF9C9AC3CFFF3A8FAC016EDFBE62AA5960F432BD646F873458DA9B318EB476
125AE2B0E0A0B8A5189B5AAB186F59CF092776BEC847768F89AD5663716B78280AC1D4048F84
BD0C8BA23F37A94D4D51EDFF7A6DF8ED983EF6D06BCCD2B566E3E5F2718A80F250B2C070266B
9DAF92942A134BA66F5BBF6DB88341DB004FA8C19E0261F5B8E9318A1B458C9A2987239BACB0
BBCDE3146B062863BF633AA30FD6299AE9B5C7163C2B5A5DBE7864A1F9ED086460215F33D533
389D1C6B68D8766BDE5682713B190C6EDDAC594D4181455E409009EE377912FF0CA9D03D7A13
666E22F388E40C1F2CF58275D54D6EE415A271F858DC32E1AB1B7C6EB8A73B2AA99A1E54804C
22C4DECFBF779A816219D82DFF0D768C858DBF3549E4529AD5267070C05282CF0D62EFAE02D5
508C2E5EB1790AE8195CCA0C23A961EA7739CC414158DE5E9ACB38027FBF5EC421958CD4496A
41DEAA69B8148436316D3D624C2998AD9860536855CE634CE4F9144D50BE919C6528E0D7A7DC
3E96DF7703085ED1713CCE70743ADFAFE4529D3D3FEAB0B9DBD9CFB11DFBB0D11D4AC4941D9B
1BEFEA801E7FC9A4EE7CE7703D2CDF7EEB6D35B884C64F567AC332F435C89F731C49A3D85304
EEF9E9FBE606EE56E48DF3F815F781F6A8AD213FC39B8A35A7FB2474285AABB4E7F1A5C33C21
8EF587736CACDB9DE89020DC5B5FE9790F35D504ACCCC9D21806F8B2316237000189F1327AFC
8B40AE8AEF8DC21EE84CDE0D3BDC7C92368E7EDAE673B63B1F9EECAAD7FC60C6132956D90252
B01AD195D011A08E8339F4B3D1FF8BDA6BA094A52F79D95900AA3B3B44499C4FC94738E3DCE3
C00F02672662CBFEFF7FACA34D113F95C2BDD3F5DF5836BF98572BDEEC13EA1D9F86C437C5B2
A314CFB869AC3B295E6D82F00DC2DF76C8B0BCF6AA32A44863C1889733F357C47F2D27C12A30
96DC10C883BC844BF4C9EB61B10CB0308335D15C58D80387BAB31C6A3C32EBA5EBDEF1EF4D4B
D50A1442BF748210AB6F8C9339B720E3B297586BB071748C0B3DF999DE3A96840F9EDDE33161
D291B84B83E168BE95D11D6F71FD4673108355BEE54CA3EAD58F85E2E79A91E2439FAACB4C28
ADB529CD735F6B2672E2FF6A1F9223EE3C1EE3F10B68F26CF0DFBA9B454D6CD56D86E2865E3B
2B62B3EEC7EB265962C0AE69723DC82C8F7F74C3293E7A78B7AF92FA788689DE0237CAAA62A7
C8C2C7F5FEA85153332E457A33BD11FE070040B874E792FCD5EADB1C64CCEC0932D5615D4BCE
6806AA7185CE157B32B9132ED7C95ACC60544EF588E3A7ABFB5675A6E15128861E786B52041F
BDB0E8B7B6529B83EC7FEEBAC7483282B07CB48DB8B174995A983D02F7848226FE1AB376C43E
98B8CEA35883217C7DCE0B9C49533ED44529061C19224D2B1A720FB709C310070042EF7C6190
988D95A98509BBF471C90333BF0852DC7F7E457B2A011E9D812C5CCBFC53ABF1A479673A4B8F
8EF7441E756AC8FF5504B1F03657F6C01159CF6C68CE7F0C9E580F571F83ED0B7EC08E1BA077
689C6F0B9AEE638EB89AB937773EC7CB2B38BB87BDE4D4B89A64BA5D1CE46860181610F3BF00
FC83A940967B6D482D49ECA1CC47CB491987B158EBACC297095BC858AB26E630C5742A7FCEF8
EB0892A66BFBAC313BA49B50F9E0A46F8B946517518B35DF69F4327986802A14E3AA85319ABA
F692B574618751AD7007EF02037CBF3EB64DBB9B6AD5B086A2B3C78CE23263D6F88D743E5597
33DDAAF369C4B581A0946EF8796C8955CB6B4185B5ED9216286F6D6067F219015827EAEB19B8
5AF717AD7979F81FAB5A33B715CCEBC296E44A9D3794C3C24DB97D69EE1C586F0DC50153437B
79A6A764C6711FA88C568DF0570EF28968D0E01842F0FD2762A2A411ABB23FB052353AD6B6F6
48413744CDE2680EDF0ACEEBD7B83F3366FCF4350F22FA3C4D2FE4E506966E5687600E31004A
415FC505F9C53FEC9D41723CA495A9823D59B2C0968FE82EE6F5AC752CE5E7D44345205615E5
75316EEA688BD865A812363CB8F58B994494D3BEEC2F91F17A8C909D63AC99A798FD7B39692C
D377860B96D4A29ED2A1D5BDBDB054D2B07A5976BE6FFA1FAB600EBE777C1549BC306F4F0430
8848DE6C655C5D33DCD1423EC405BF53BE183D210377D37A60B25AB072ED574C3C823DFDEEE5
9ACB4C5CE4FB48C226483044F43238494DD6249136C5C465E7F2D9830D02624339B78A23503B
7E82D8060EA8975E1744073E6A0B6383129CBC743430985FE7A8A64E22A2D7EE6FDF3E226487
6E4D0F81682859F1DB01A9CDD7F634219507C5A50DC9C8DBF6A731FA58BA492183829A4AB83F
E3E35E635CAD5AC2F89B983D3EF957257B6C04A787CAEA14840421BC3C03B8B8EF3CE5773EDC
7F906FC06929250EEE053691BAA0D7A10B447C591B7212BADFEE1701A881540952D35AE6C56A
9215EE5F3F4710531715F0C97EBCC95926F12630DD7AE9CDDC8AB67684BBF38C7DC069D75DF0
5A3672FA000ECBD28A3306FE4C557AE307D7D4A0E6D363C10A63D4077D6E6AF8AF440773B6CF
192F507A6AEC6FA79BB171CE5A3C5D13FFE321C45748E82BD9A24FC9BF49B3F34C2D29242F49
211EF4698AF0263869C5E5ADFEC416D85299ABFA67857DD7442C3983ED4821E4A4238C42D7D7
0A97B34DA1D7DCD3EE555A043576211C0B770E9887ADB72C6F90127A7F54512A2ED048B13133
4B8EF73C27CC8CE6F8187E6B4A7856527FF107429493A240F1E21B3156A39F84B2270C9EB7EA
E618AFD8927A4A75A81682B99D4BE9B2DA604A9D58DE6FF8A1A873D6D95045FC1BE1B9A4D27E
40EC6BA5F61CD7F37D510E1E475478E253B0AF6946FAD63C8BA1FDF58E2FB9A7727C7B9C1083
2772E5BE5F6F613B6825BB7E6C5E9B51CC383564936E860728F271DA441E7918323BCEDC553E
311B97A5CAACF15B8295952A7E89EC74FDD7231FCB86DEC8A765E5A40D7B5905DB47D8698891
49B5EB16D753B4697D0FFE95D3BE6A042599B86040972FF4E3DAB6BB6200A57073032AA7C16B
189FF3CD5684EBBAB4E8A499E9E6C9CB8A4B362199A5D3B3D757442D211F255BCCB66BC624DE
F0E51882FFCA76C4BF58169CCDE59C8A3CC2F4F2BD255F264A165706FDE471AE2FC142A083BE
8BFF004F25A4DD00FF4D754F5AEB46681A12D99C6CB6014D3503566F6827D8D04C80442D45B0
C25BBE498509AFFFF2228F0F31E3A420F8261F1CD6C4F8A6A99AC2B66EE1CEA9987E247D691E
FA2ED28B8A9D5D93E1189CA3B91D6FADC5CB2B125B8EDFB262D7B32EDF617D916BF4822BB7A2
0BA96986B62B314E9346C367B164C4285832ED8EDF805D370855315A2A8E8B30101B03391F7F
BFFE2FFF62B9AC1891C31C839D4CF268ED94487760069F00440D71826213A137FF9E9212061F
4ACDCE241E67033A429EB25F09C30983DF317106C41201439C409570AF5C450B2C7269AD869B
0986A048F661664C3534E70855F97DBF85CF1A9A57A947E00FDBC41D4C9CBEAA6B75FD8A0148
9C2CC04F50D35C798D550967DF71AEDBDC439B821EC57F64E3F06B3CA6FB92AD95BC4E9CF70D
FF9E74ACD51E05A62FFCD131AE9867C81D70EC55F0870813CEC14848FE5DC5F53EE0596A629C
E87633345F990C52B2F681C20EFC443F3F26006ED2D1CAFE709279E2BF671C7674126991EBE7
7FA07E68EA3FBDCA7B81A0A2717BAED67A471BA39CF1729A84C6DA19F78EBCBD75C7C760FA09
6C49B9A8D583119066D048F7141FE83E89CF25EDD1FF7BA533C11A450A60078AEB127EFDB18D
2EF48365EAB50CAF57458C13CE2BE365E3B19D02266AD8E7C47B0499D64D3E73A54C39E13766
BA3D13D7D257557684D867096AE75B62C8DF202F47F7A370CE145155AA33D181D1D4BD5A0F89
D4449ADEA2DE120F0362C45D7FCC045FC5ED36AD39ECD781D7B4127C253CF6F9762583875EE1
B75DE6BB4EC030979C7E2B7D515ECC480E48C3A69F90E997EA1A8CCAFFBA7B41B01A19D63D87
89ED7EEBB7E71CDB377544B4B469049D511E37B817363D32521DE200E26E27437801F21A0582
40AF12163963353B46CBC53F04020AABD2103DB91955BD21FC72A30D6291C0A598770ED2FB7F
5294AB9763B1AC43ED5B6400FBB7AF592A3EBC04749941E4C6CC76EDF519070F91E0E3810934
E213B16A65AC39299E350751BBEFB7BF33537315A9648292A099DE51FFF02BC3D984DDA4968E
3685F08A254FBEAE2F429FB67E2A91A1ADB161DE6E36173D9F208799B1B092A89C141C096F89
2CA4E593B1841D872D04FC81E7D002ACCF7E771C0836C084D4A691A291D16DD77D548C4E8169
6367A2BA370818FCB9ADF53AA950125BA4C5225D71B98687451624EAA42C09914CE56404AE4F
1E770B7F114F19F0A44D8A073D2A32EC19B5C3CA4E5C7ACBE9F16107DF0D6A302F5F1FF5D4BC
C6B5D34451E11FA7B7E8B9B17E3CA252FE4014027518F7B308F631FA35177B35BEF957D3E705
3E32F112FA92B517387963E238B208F07D2C8E146B4110EEF18F9B4A577992B2D9BF7963AE96
80D896FFF6AE23E0F9CDF5C4742CD3CAC43E800F893B23D372CBC637D38931F54785D4C95FC8
E2F6E69011FA7C0DF6D96D05C811392ADF638D1BE8F858744CF34F09D89095AC05C8BB8B5F49
D78880ED7F8A65688CE77271AB1E477EC437E2B82FC2E4438CA962995952B7579EF3055EECC6
F7AD557B4FB80DB45537B616D1461176A064FB1D4A94D86D63DBAF597992C32251EC806E853C
8813C6A6DE7CE50CE99590933750F53180A9BB748D1A9D5A89F0F5614AC1C734A7A8901468A5
856B885AD161E989A4A0DC87892808834EF32A03CCC275F561DD00A4C0EF88C8F6E0771C1855
5E19CC8E2C86AEDE45FCDAA96FAC1CD2B2C87F13A2BA787A213AD26F78E11B631D2395EC7749
2ABD1BB0BFBEA4BF1960E076955126AD6DB946C2B3A94E0AE55A5BD6834AB7E5D9959EE5CCC0
5A25FDD5D8F8F8ED9F9C2BB07F214540D930417EC80B622410AF6F740051290D25B4623367C6
7451ACD29A20579CF612FFC95A62457C2B1779C700D5D9859256F1F1DCD64A7E1DBD2C47A641
066086887007B14BCC8F9E2D2E24D109AB6A7ED9F762E661BB59B55D67058EFD083E01854918
9F14FD30DBD794345A7088DC51A1862BB3D6C988F783E694D26E1FC16EE4900CCB42F2F21048
594AF5F47E8D64EA542400094B72687B33552C484B25F9AA0F502514480FF1AE49BF6646716D
BB5A6664009E5EA73351B3B01835F5957749AECFB00F80775284F091BCA59EC4917C137F4224
847CBBC13ADA181E5FFEEFD031123EB45D50D70EBEFDDFA2B9D38CB4D2664FF1B1F3F9E445A5
B86CB221408FC734122CF9213F6AF8E0DBBE9B7BD337778A1A7C0F6D458FD9DB08BF5C591B72
DEA3B06196189CEF9290F18D7DFC8904434E37EDC84E964AE58D5E63F1D33386D80DB081E023
9C9C8A7AD4BEDF688014241D175D47368FBA573A759BC74EEA646FC119C328860267D5930559
E1B65F015A7F3C2C9CDDBC5AB34A1B1B8F6E9A29C7D158D791E47437D5127A757873F03455C7
12351D0CF9CBD215C159B7B6B90A31231C0B7FD62B07624EA8373712193102524D77A442BD19
22DC26C7386D42B371932761F227666F193492AD360B97DEF34CAAAE1113DF789925BFEACD1B
97719B7431BD710B21C57F7D71475C842999F19275C3314E1FED9812117215B5C0ADECF9CB8C
D94491821DC53BCE9F9F1E644C15555D4C27BD796BD15C27A011CB93FA8A494CCDBEDF592508
C1BEEDBA4DB47A7D1B063599D46ED2C5EA17644E36EB46ADEADAE68A8C33DB89A67A4B42AA85
F5266D5FD4ED9DBB88B8211582A2E61AF2125FF099F6BDE00702F474C55C13DF5A882F5C8A7C
5C9518861FD9728258C243430DE13AE14EDBF15CF8E20CB8C6636FC8C624C231F2096145682A
3F07CDAB168D6A4B2CCA867A2F48F5DBDE553A124071519BD75DD7C95FB2D9B8CB1DF5A9B809
7F112787171A2725747E499705223304C010FDD575E86BBC079BDFC3AC67DC6233DAD28758B6
FEFD45AC603D425382C7925E97FB0A62400543EFAF28419BFC9E0B8481B440E2785199A51783
268A783DC1257A5C1598BA0F21666B12FBA6BD3B6505A3A9C29FB21554DB158C546546A490B0
34F64BA5160AE66A2724139FB79CBA50149FEBE488D5602343D2527D83F5BD0D750B79055307
9F581EFB34CE31D78DA4B809ADCCBE3B6A5DB33A5D27318821DE1BE743FAFB951BB7B6774470
0EBD70A16A13DC01A1527C19582FCA0B0BC46A702CBA698182C5BC93F1901E672E616B695A42
A8ECC89D4F1A9C6874D8AADA30DAC3B4B091ABEA99ECDE6AACB51E40793D292175E22BD43B73
057DA302DE1FE72FDC78769AD178D5BCC228F0CCA5967CF1B6A75EA9E1F1978696645C50842D
C120C30F35134B3820EEBB220EEE53787B1F18D9DD4F5258A8BDDE44E80032468A9BD5ACEEB8
D6EBF79219C7EBA528FB39084D0B32207996D96B5B7FD692B1B12B1F81F0754C3387F8C40DDB
F77DCBFC8230DEB06FF5644ADA9C8EA84F4C03DB80BF6FCD881FD7B528A98796789233EB556D
B9167536B834FE270EBAA4E170F8F0B8E259984EEBA54BABF64F4A431EB0F9FB00E6BF838375
8FB718ADE3E11EBFF9BC29601A211A6ACD15F7A1D0E1C50393FF47D82932DE1F58DCB5C6B420
E945CFF6D79389FB8F2465198333B7366E7F9396940848F3862DCD5E019DF7D9475251ADDAAA
EC2D03FA46299FC12ABF4723956558CEC5E14368B1D75320E5FB41408C0E9FD7C77288D0DECE
455359CD2A96A68796C7D00FF677ED59D1BF67E0597356C518284721679918D8663AEF6BC1B4
81915E18D49F3902A0A0E465F8ECC81669AFDB0F9DAFFE0A6AF4EB5ECDE189048E1E654FE549
BD0AE11C1730A9A29B69ED1CC2A991CA0274C362D473B6CC63A59034DCA1CAEC1FB75B994A11
518315DCBC5DCFCEFFF05992117BCA5849721C4EBB0566FA3ABA50C4A9EDDBFA04D49AADB1F8
E853670AC709829113D24A874AF52E90CEDE9E6EC8EB2E90B7E1A92E4185703653DB337839EA
8138B40339021CF2576D199A730DB5B38990A335D56BC48225566C4EBBE588E3125026640494
5156200E0192947C97FF712E3423ECBE1C60BB284A1BFF1852DE908967DE365A5508E13130CD
6F8A2584989FDB81352582D14DB8E2F645B129DF02735C1848E507C02012320D27C97DD57864
5BBD3289CDB312040303A3CC46AC9BDDD4BC054A406332DC640E89C0F250A735FAA0C8DFAEE5
E516A7B91B0C9ABAE20D979D2B277D53230957C22B2B4C8B8F4145723CE405A24C992897B929
1778622E31DEBFBB1242520E4B0136726B36AE808E9D1F3447A9172A44EF1C7B96C78D2C35AF
C8EE5DEBAA6BF5A9331B25FCAD7B50EC1C3EECD67E80842DA3B57B5433FE4D48BF1243987661
6A9234A07F3422E443CAF05EE018D8FA716665C7405FF036ED762627D6240F822C4B22A539DD
AE7D6A08C2E4B9AC7E533B2492AC456D903A920879DC0FE2047D27BD8E4BECD917CEE80DCD48
B8902F53A6276032B4014BF2287D9874A0BAE6895D8D81D5AC77245AB512298506948DB3A7A5
1CEDEC9163A4CEBB780FFE18CBF77628FBEE4D524B7284F1A7448A831CC18DBAB43622820F06
46233CAC4EC491C1C93EBF43B18445FD12E3B1E8ECD60159EE089D10C23BC191541953F48590
EE6EA9DA52C03CA5CE23094380801FD1716AEA3951863A0E3B9785B788F713528C410D9553FA
60C29B48D2D45E3DDC0B2E78F8267D109571A587F5DAC73488F5B393E5C1F99F1EC274720CF6
B750DE181A48D5C048BCD2618B188DDF95B5F7A6BEB4A1367925CDF0B16A657A83937FA8727A
27C77727581C007561FD172FF94A7D38A06B69DA2DF50CD788DEC3DFDBBB3532E5987D2FB6C5
432C7047A98EA5E0414F9871C1CE9E6364C1DCEF5A9C2B1BB599352997BC99A4C97DA6F3AC07
167FF4A77A83CC044F6BF2521966AEC05C4A00A6BADD96A6E8103433C2A1BA38E44141F9831D
662861CAF8C40549C9A1866890A5AF22BE583AD29FC32F74868D8C4195801EB1ED841C5C79F7
6BB93CE5F58D92C43C4706A780F84B04848F14D0A52A0E48EC3A2DEA58CF6AF0967F606A1F06
A72A8B10C5F718DDC21DE447FE968B4E60791EF393C91A8009D2A4679EF9DAFFF8AD3F6B71C0
905D3A6DAE48BE46A60912DBB43795CFB885BEEC1540511D07FF951F10517F05E002AACD4646
923482B81888D0442BDA5A0137165EF4700F58FCC3A0C6DB17BE4A58F64130C8FBC6750EDBB4
5F9FB9FBDA2E319F93ACDDABE98E3B6C24064798D55F2417EB38B5F9B70EC35430CEA362756E
E77347B396A8F075082CE08D297E09A908A5F1FE2933BAC360E0539F473F55EFC711D3F6CABF
5C091F17A2B4E07CB80D8303C37FDD81DAC09BEC9E3D272D246BE4C575902E3DCC5393A2A071
EB3939A067E594A087E774952789E0AF876816D904254D35414B8AFC6C21AACE4B70B60EB7D4
22FB8719618B88C3B78D72681C95903FAC4519D3E50E5B3AC38EBFF73AF60DE465AC3B570342
99B8F0552E91090828E03850FCBF93CC7B8E36AFDBC3D1D2977F82DCC987F8507FEF5DFE5F28
B2DBDDFA0A4AFD3639046673EDAF090E150B90FD74DDAFA1B70A1A898077CC75BC89B5B70DC2
FF79B3F7ADD6212B48D4C108988893353BB5D13A45E3103A4FB7F02855A19BF0C08A0A307641
E59C3A45481F406A51DDA939EED76AF69854D2536D092517DA4F3A908C0928CB269F83CDC137
28E9FAA6C7E0E6E57924BE84947601647D92AD2DCE13823F356E0494D218D33D6E1128944B91
E89F866D9561C95BB2E5EA66EEC4002E7EFAC6AC8D01D1470EE082C2CC4B426566B76D943127
E04F089D2EF622DE9E6E91F796952A42CFCF3A49EC8F2397795D7D6F50F2675A0E010A2AB5B4
E50B9048B8378702E703CEE8F59D69121A806BA3015D9270B1342B0C26F402A8BAFF6DA29C59
4B68902E28D2010A2DA7DB6AD71A71658F1E3A5A13A6DCD44F02FE6F7E55914ABD2BA3560B2E
BDF7BC21C7F8EEB37C93DF57AA5EAC8B6836DD88E64403D9CDC11B481FB77334C8A580AFC491
9622B7248509ED7214951853E1EE0351492DE86B76E5EDCB9721D610B06E6CAB4F8EF85A5DE6
6E35BD925F759BC4A81CE468AE814AE0AC7A52E4ED772117D6E78B1B35B67C6FE25100498DD8
366ECD5DC5E0F8505F49B9C83200F887DCE8C0202F2C866F253AA4AEEAB0CD64CB8523316F86
544075F50C4CEFD6533C706CA546C774E779DE239D676C96E0EE698A86D04A199D91B29370FD
9F5E16C339814B795DF26D37158822353F6534E781CAE95092F0F38FFAEC5472FF21FDCE9C90
27E53558CBB255BD52BD37ABE3AA20D49714B34A539CF43031DBF8D670CA8DA09B16C0B2D459
3004D767DC4E620D8F801AEA1F56D5F0B01D0F91F12C28628F4B4C8E8C299FCCF5BB7C06141F
1B632DFB00C87BDAECF1DEF238BCFA5727457DB1486666EC5646D73D158B170BF9D09FC99267
419F20CBAC884729CA7D476778E472B29FAE59B4EB8EFDCB400469C71B3243F74BD70CB16663
95C00349EB5960EBE7534BBAD7691B17D869DA4E3A8AE247DD42ED233E6E6CFB51B9DE2D28DB
A9EB36693E6BB90F472AA2F8A8E5FFDF6A94F94AB93D2C4F3051F196894D0187E482D02C2C32
2644D96CB73BCC9FF9CD1A4603B7374FEED7CF537E5DCBA78FA3A3A58355EB5AB040BA5090D9
27443FA32623D220B8DC95ECDFC88800278CF5F67099DDC6E459B4E1972A7A1336CBA68B2C50
F9F6900BB054B06DA029A63D17EF7C45F0294C0AD335605E08F2490D1213C406CD8801D22BDF
FEF267596AAEB5B254B3E6B2DA22AD0E652DD15F648291617C8FA462D326F85FFFFC2F6D05F5
979BE0EE6F8AF9456223362CBFCC6D9A377175ACB066D88C17E572E94593E89E3B2E7382D160
86781159316A6601A29215F584E620B24D9B02FF6EF88F8CDBF1FC26E13A23FF4DF4AABC255C
3CF127CC7B068DFF41F65A2956223A7144205950DAFE835E1D479570C58AFB765FCEBDF1ED19
FBF7C5B78020FC233EC378E7EEDBA9D1E962450C6D286489C2B0474B67A2F775FDDAA634F568
6A220F660805B3B05930B91357D69DAC645E611D1B4B9B444E826D7960AFD559A368604FD828
324854809325BC5C359B4B36851A6AD94F3FE31A7EE712B101539A3DFC8CCD4BD20042D89FCC
6EDEF663E3B7C145C5CF64BF3D52BB5F0D15A9C780AC66EA5C3B63185F1441C406AC56926EEE
1B1BB50A490B4EB8E7343E89CA925CFF62DD580B9EE32FD6C2547D80F41808837B6C9223ADD9
657C03193EA5EDD01D1B7BDAA08FF8DB5723752992BFE93F7630011CACAC77FF87D47AEF78C3
60FF966AB2A862496C1FDAA90C7548A63D383D0C0F98E9792A43BA8F15D3DBF36C1854166F27
17AFB93B60AB93FAA42CA46F93BAE28A6DE6FE67B20F3F88FC2B6D0703D7B9A719240308D785
CF9AF95ADF72512F02F3FC77D00E1ADB86A9338351DA489D496D26FC2893E17CFA653214FAE5
445FA7D3ADFC00A424E95BF7C99C685490CA7DEEDE8BF26B91C28912C9762E02294ABE67F3B6
B3D6B53A569A3D095F982E9A0C69F8BCCEBAE128055889809F4C74789808D8589E3BF80AC660
03BEFE7932F751E1CD62D3B6156A40A7E14977D04A25A0A17C7044E3F1D2114E6938721AE8ED
80AC2457E9CD71A278259A069F631E5EF4AE3E9D4A3A1EB030B7D6526D68D7064C9FFF9ED5F8
5A9B0ED3AF4A95F506E741F3095A26C8B4B22A2EEEEDB1B2F3D2F250CB5171C0D661E939C35D
7B5CB7E90E09782390FD39F8E5E9F968F2DAA92BB261A7A8405A4ED4449476201414DDF2807F
B5D5D3D25EE175851AD0B71FD55B669932000C9E3758C7848C77AD35BC051AF847D5B39BB9C4
9FF64B1EE8473E86618EEAF53BAEDD596A2B0DD80A97E87CD183CB4C563757107AC4710F08D4
1F2CC8C5D9A3B1CBAAE6B736B910B3207554BE7A49CC511B8182D2D326FADB433325EBA77AA1
F44201FF77432CE7DB8FB4CD7C5BDD9C51A37E6237CEF55252F5D78F3478C5D4D45E9055FCCA
F9C62CFE731889158ECFA55780891929DA212F0467BD2005D747307CBDAE0111772C24F266F1
579C46035D5A3F2A9443002B2584D32B5F216C38443B4014C09C5369FF569DAB3A701353A5E8
C955C94EE6F8DA03FB0309877C6A1FD82713F09068280F5AB639584B0714C554608A56A0F987
35329BE63E49CD3938C14DF92C94F555B32AC8E8107AF9ECDB170ED6571AA339435B1A89216C
FF2134FA2B9272E5473CBB2B1F4BF62042239735D73FEBEC05346865EFD5760923B6AA79983E
820FE9DBC5E1F78F6349F1BAD4207D88F559726C0902DE241CE07E5675334732F51F08AE2ED8
1BF484E59C9B7CD9AC12908432DD26B37226C162A6FCBBCF6E0DC65B26907157A105DB3CB97D
2D728240F1A855D517132A979ED22AA4C123C2256665A4A8871AF66A51FCBBAEE13AA5E28FE4
45FA9205A8ADCE7AB16D99FDDEF8B00EEA0B3B0C780EF1C31C36FDAC9F2EA84820176FA1FA63
7D63E66F8044ACD20C14FF15872CA36A4024093E250D19DA91FA02E6B440A887BD524F8BC8F9
7DA32C62ACB12D5AD1983A7C88C1F3998061D0ACBE22846BB758B1CE1172E4D4D59F224CCB62
6456C298FC54564E12F098508B38C5375E6AACC10800E8E5EDFCF66CBC5B7EDDD927452E209E
97F623A07C341ED5744BF1A4F209683BFF1B4FF783E3682B4829F99A44BFABCE4D8AC81CAA83
3A71FAC1E81F8F04CF77147294166739ACD1057C4E6A202CDCE01B9CC956496E331563AE36F7
010AC8C1155155266C5DC0DF515F7E69EDD77A67DA5D3828361F4895515BCD50B3ABDAC3C4B4
78F8430FFFBD20348C920F1A08FD29E58674301B5663AEF10660726F5FC0724F1339ADDEB19A
7C2ECF0DC1D474B58C1ECFE65DF0B25AB625C5B1B8D9070BF51D99A9E29252575FDDA1EBB9BD
F4C8ADE59953A74B4F9FDB3E83573E11CEF8F5CF9B488035F33911695E8167E4156AA6D37E0E
B3593A59C1C8BCEC29F27BDEBD26E725829C84677029D74CF26E6B2011296DB8217C0CA7244F
6F04A91ADBE7B915B98D902FB8BC8E471DB092F6B796AF84CEDACA352BB0762527BA5973E0E5
33E5814B6F745C9DE1AAE5A2A13B0D5DC9DA92D9984E5A8311BF39C1F7ED1AD904139FAF5AD4
090EBA3AAF3E5185A585514725309F6D072BCBC369492C3D209FA668DBAA5F9DDB88A0EA380D
01BAD4FAF30E4EE1A7486736012706FB916953FA5759AF322B1D1ABBC4D377E47A93661C23B7
D2D1413234B7BA950C3AE417690CD77C433F4FBA3FF823B7DC664E77A6221E5960FAFF76ED0A
E4D8CCC56F88476F724C91B6E0BBCF439D4BC1CD979C3EFDAF7149E49BB78D78C3C509964094
35B9FFC7087FBDE9BFBE132F6B310C833F75FC03763DF0014FA70C6338314A40A4D8BD8301BE
7A221B04A3208D8DCD68697E1041F6EFE8659AE2AFA043F83A236A481EA3F38C1BC135C76DCE
12605549BD5AE7E6629B6D0AA48BB689501A5BF9167AF660FB8F0B3A6E96E82A28B51B3135C6
8810EF6FAAAAAFF0D414E47E706A2709CA4B7050EC0708165896DBCD43C0495052DA69EDE9B9
B0EE2C4164A1159D0FC7E8F083F0CC510B0F24F86F2C75D3950A44C9BF9210F56A20AFCECC4F
11857F0A305EAE997CB61F3161D7DD0FEE922C9D6A4AAEEAC4A73ADF05BF1F99B4090EBE739D
4DD54DEE2533BB1B563E9A0DAF2719CA00BA3E8C3615C05D71FEAA8546278332CF2751B46749
059A3C93EE939773F2B0E08C0164519D3972115709EFBF790DC7B66ECE9C6C6E8E4081213D73
9BCA28E94209248908704D002B666E159971485B18E17C076BD0B7FFE4F5CE200FE5790FEAD3
45B2A07441CD8982D1DDD3E8FF187CC528F7F517B644445B0EDEF909F11B72DFEA044B57B40B
2F1C8744792A42ABA15A11A2D065A79B6A1E5770461FB2D24BFBF33DA55ED26F329D4E388139
17BCC1E74578024DB25A92C373D9E5CD041A51E147C73E07F10498ECA0986EA0B8FEF1B12C79
02CB599E3D749EA25C372AFAFD2C1B6970B5EF8DC3EB16775CF8A9332942455DE443D5C61C51
42CBB53D538AD41CA5BA55357D879BC21BC354D5910007BFEE43E7BC3E3F49ACE55794BE0507
8ED78DC4C4918DDB95362C62559BF38F0D1252D4DDC0A0BD1363BEA677ECC5422A4A237BF3F9
BA2BC11C638C58D29C200D4AAA4E87C28A41F34F6D3E13A4706CBCD21CF65A76E6DAF5898C09
8A5C223CAD301938AFD5C4FE10C74846BE55333763ECDA7B19ECA4AA4AF0211BE3EEFEB6D192
49907F70D6859876C9916290B105AE61F602561B0E4C3A69C4126978C7674075D8090DCBEA8E
601D3684AB5D776A2C434E2E32654F3C44E49DDFBF8375C622D747D8436D056B0A66FC43B790
6EE345DEAA597CF683E9E574D142A8FEA94D2CDAECB2766032B8D20904717F5D2A591F012489
63A197A443B78C5402DC2D6CCECF2756F397E0123044C69E32434EBEF43FBDE00181F2592E19
D8914C1B700AFC68C7D66B406E043E517A08DAF39D05951A9258F171EAF7B3104E30465A5DD8
2B23D3CE8E23E71A87646996C99F64B5F4B76B0718041395E3BAB7907542B49D8814E6990556
FE1965FF25297EF3FC6A0F10FE8EABD24A676EB26345A68343E5011FB02D83BE0C5D431C5EE1
D35176D3FB56DC246060EE0BB3EB8024356AF53FA13E4E612AEF6BFB9642D1E9C2D671637DB7
681CB4F6C65EE23B824463A6E9E64EAB261BA0DE3D518C4DE8153FE59483F526F4A873B1A9FA
4AB188ECEF09C115422155D8DD03063537BB4655C480A408367EABDD2F4285375C879FADDC16
A97872DF79E75EB37BEB01CE43C066901EA3636720A6401CD38C3E3B9875BF3BD5D1E433B7B0
E77A44DBAE0757B0BA75F3DC06BB4E48CBC54EC3241D097F5C3E424B9169B43DEE65CBEEA8A0
391A31249F9E3B68CB95BBBF3EC5F9E756401CD92373BB8FD1BDAE5E4AA825B591153E642E0B
18515504C838539B0BB3A50B919D18435EE8050C99DBA7CA152E07D454EF8736700C4AE77FC1
AECE43307BAD8F7CC164A10187EC92435BF4E4A236156FBCC91109AA465E4E7C1BBCFEB4E803
32D63314E7767821A2EE4E737C023E254A9D3169AC8CEB71382ABD6BBE5BBFBED2684D19F511
7FC11F2E03BFC74B0B36AC619CA94D52149C3B688A58A6A49BDC9750BD90BB176159BD03E7DD
ECE0E9C231E218879BCA16189B8360B7B4434CDBFF2841B7E645C03B1BC3C043CF873493C215
C5228AF2EAC574EF41A83932E284D6AA9599C148C98A53772518A344D77E62D4878EDB2F49BB
FCBA1BE6008E09F7F6AAF0ED71DFD619C89EE62A118440FD6293D000504D40ACB78D2ADDD655
1A60A3DD76A140629064BCF1EC69740E0BF491B436A049C72A59424184EC2C37C48F895FFBF4
EF0B9251699FE74D9677467569DF085671D32AF16B86DE4E669EEE87E006AC1244C2A0296FD2
CAD4707AA0EEF2FB3926A44364D2C10DBACD8DA443B61129F1F1109C25EA356299E8EF9DE523
0568BB114FCF8D29D529A3AA9F94ABB62B8D503707E54F1503925C5FB882881C7D607D81BF63
ABC3F7A046778CDDC851FCAF287F8261FB52FE465FF9F23EC89560DC19D814A9471CCBE5971F
1638F89DD6FFF1186126DB4111764F393CA18C399E518C15EDBDD3E67ADE6D6EFE79B5E023F2
A638DAB5A79595AF8BB5EC2FA79622B0550F62664E07A4C6DB4DFC3155A6A26471B36556F7F9
B03EAAD68D292C8ACF2DC7C9EEC794E5B93DFCC9F914BAA691A82FEE0CE04A75C1655F0ECD18
8A8D644297EBEA4E17FF6AD51E1CD0DF33DAA3752CA5C9B2AFC79EAE5BC41224178039D8D9F0
25FE52038A76010CFEB372AE14B71FE8A81A8A01F4F9404AB7FF6C2F71C274316F0F1766D70B
6AEEE1CF82C018EE881302A20FE1D21D5D446CF5186A5B19C5CA6A89C9E3A4D6F6C6D03C9E01
AE563542563CB6BF799BD1F0C07852F3800D6ABA92952300827D06E44792472C4B660C0BA0CE
3A6AA10F07BB6AC4A2A54742BF5412FEFB305AE0FE3CE3674674EEAD2A84A215DDB84B0482D0
781F914A287B93122EB0982FAF75EAB800B437F71673A1E944682D1C0BDDA50183BAEED73877
4D5320BB526ED9E069FF03788FE6FB1CF521082F2267E0721822FB1230E8CF6E7EFA1928BBEF
6D24587015B7F025FE96794C61D94C11D62B38DD7AD42531A7777CB0CC9ECD8149460BB811E7
04EDEEB2D3450773452C0608257B343F7970DD7F3632898AA301E82E3C611277EFCC8BAD431E
CD1659E5BC9C3769919D265E30551A46600B30552CA023111C426F4C6B4726C9794268C7FD8D
B82C69AE5A3C3322AD30A25DD5F314C20D7DB1823BC15E9CD9EC4D75AB2936E1D077E196F5A2
F680742560760E7B5A68D3898A847FF4E6FD9AA76FF2983D04D2345B8455F95CE0E8B8DF099C
E0B915433782A3DBC14A3C8CB42182B4B970F6B0A3AE7DDB2883B7E7F747278D6DD93135F6AF
BA2851179EBAAF137CEF7B80BD6E132FB186CAA4E1DFEFD42DC62BA701EFCDB17CE714D574CF
310F68F61A1A6530A8C3AD79D0DAFAA86CA4969FB7AA43D3FF3934D9C4E181D67FC63C083897
5AB76AAF1FAFE18D14ED0DC766E4955ABD320B9806DD65D72D2A4F75FD143A51AB9A7B4C7544
A7E5CF62BBC52C190761AD76F7E103D78CB34F2315E8D3465A637169CC0D41BE83E71F1F7DC4
AA79F33788F031DD74FFBC6AACF783E41E3517C1FFD333D8452704D751D1B49F628C2DC99A05
43FBC385E4DD33195257A0D5F93D7C2FB88221B11D68F57157B4BAA245BB47BB95874384072C
A73DB87852FF5390D1839E0D685203593C3C0882994132D2D6EAF4A1702BF62749FF3F26E175
9AB3CCE2A795E23630577447BA23580C9BA05661F72A9063169DBF4E5CD6A6059D9D677FD8D5
34B14D8ED995776F6BFEEFFDFEEFFC745FD673C0062CCD101E457BCFC8C5AB7A7773DFEA5413
3F112D846105478F4D4026391E262030C7C0D484953BCC5F28275DE6B82DFA24CC913EC6B01C
6D3D99656B10E67F28812998136341D7EF8FF21DF10D8FA24C90AD61774E7DF3B9D272D71AA0
AE8AB36369090DC9AA90714B71BE20D9FEEEC76B55432FBE80C253A898393231B348186D75E8
EB64CD11C2CDCA13339356061C438598F5F7D2865612470F79D0870B9D083094AF8E092B8BBC
B97C9FC9241B77DFB6179C7AD8294818E609B2779C74822887DEB4000840DEE7177C8CB58267
3E50F3521A89CF52F000F7A4A01F6752BBBAEB214913CCACA19EECB822C4DC4B7DDD83E0EFE8
2E8D62D118964D2C2A9EDD6487563A6E8444BD3199310F21B57CE21F0797D19C593674782F09
E3E0A4E0CE0585D54034F058FEC97986E8E4F5B201AC4890D48FBA53F0CD9E94B344C9DA3986
534DF9A3BBB76E4D9502CC33FD85EAF9131409E083821E8FCEDD2121E02DEED89F339295191F
A0A3F6E4750B38E24453662763E4933BCF46D0D07BF795C92C5D5C93FD6E82E601B0BD7A6CC3
AB422D6378F894198FF47F59EE491467EC49D093A3974878EC252E58A4512C732278B50E31D4
3F023BAC9BBF648F538A5E007822A89F3F46674F70F8096690BC253AF43113B42BFC661289BA
07964E4B49CBCD9FE2A26DE9701B131EE4C6C88DF1CAA24893AC86D7F423B4FDA9D5E372AFB7
CD1EE944589F1271676837E8468F520B94BEF7FF4F1C178E016361E434B22DDA62F320FE2C86
CD7398B101A927AB0C5E3FABEDA4867F0D6295EBE70CDEDAA4E09F0567D7FA65E00F395EEC2D
16F1F88B4897DC37F3DA4DDA1B2CF5FC0FAA8D5837D8FA77225B80A198DE22AC977B5ED9BF66
521DEA91FA3E9EC5F72FD1ED905FBC4E85A97C0375791275AD82B7B75F8947F5B2656E54F599
C6AB9D3A474870AA9BA2ECB59F1BD0081A0B0A5451CCCE316CE77909CEA75FAA6FD44674F69B
37616BFE7AB40FDCAE701D6F2FD44217977CEB0C75997729FBC7DD30FFE1C710505C636095C4
B332E9771CAEA07A635441586E853D605E2950D2A8A55C5AAE871B037B276C7A0C534AB44993
EC329B9A0BFD782385C8E21C129E992A225CA28F10A57314814D7F9586989C009935C3388199
15A738FDCE0BCF368FD41531EEB4585C615CD3B4F1A9CED1DC366BB5EEE2FD16C2099DC87346
AD74799E3DAE99FE121F9CA956E29D406DC35A43F2E8F7F986051FBA9B8137A3BAA010B7A28E
A1A055238BD9AB1F631D45864CB6DFD4E1BA52FEF565D10A98E338185B044C6D245D96CD3ACB
404D4C36F80C97D9C1833618B061B67B70FE84C9BC5395F4B612B90695A5CF3C25362904471D
9DD5BBFC381272DC78732AA24030D058F58BF798E8456D4620C435F2108DF57FE3B751DC0132
72BBAD91E076DF0BA588CE3E28891DBC181B8FA09479FB6A5B2F931028E8195AE078CB797475
F9C6EAB8C7A911FF7892CDF4A7A1B22603B9E58D262275E009987E566E22339EAFA188387DF4
A213A05A5BF835575B5D308AC80616B708CE367D0767560A65B1DD7DBE120654031B27F7A137
943F725577A948DEEAC73EA2D83DEE084A1AB9CC48978C5D49041C32B9A7EBE9D4BF01A36FA9
C5E639C07575A0BAC70EA9767311B6FFD9CFA33EE3BDEBA83F1D35CE5D5449F8B05295E6809E
EA736C489517325CD5A6D453D614FF97D84C140D3C12ECC691D098424D031F33BB1E2EE102B5
DA7E9891AFE04171A908A3DC5EFEFF11FCA5E1574347F393E37F37B0B4BF775C2FB52522D4BE
3179A1AD614D47146A842B32552AAF0E2391512D9C0AC1B6BA134E92CA0097A015B9ABDDC8B4
7CA8B055890852296D0697D48979728791608436B74E3858713C0A9CCB2B96A987375D3A7555
D9A6ACA615D3812B1769581014BAB9E6963780735E69BCDD7F666DC05BC96C6E9EBE68B294D3
8CDBF14E004A9378CB2D9B469B9D067D6656C6226C842913781657B57788D02EC68C68A1528B
42F4BC612258A6FFF7BF0377874D95F66B4199478C151699353916D77FC45F0447EE8D2CE28B
9D9F6B784EE205DCC991C870C3BACCA388F9B37E3A5939DDF9FDF28C453D3B85B2F1BC4BBC4F
67928BF5F819FCDBDC96EB4957D87EEEABCCA746C0B43F101C57420E4B64A57E8856791491F5
725D0A5D9683A6E3F32C36C7272FAFDD8DC3CEBE37E5362956AD03C27D6681F8BB7D6DA6F516
226BABAC2A4F1CAC2E3BC8B415705231866AD740A951B5BC594370D4B4102694EAA782C65909
A86AA7781C1C68E285F08BC3B5785210BAD37D44FC96F35C618C46BBD1A0B8E8A766166AEAA2
CB29A8FB41BFA10FF78794D7B2F2A431B47B7C6D49FB53D55A611A3A8774059B55801FC26326
5012577A3182ADA6A8E583ABC8A426BB347F2B0AE6E97A4BCBE2328D07387CFAEB0BC5F2BB90
8A60E9FC6C1B53159DBAB1CF94E67A41F7A479D85203BC81CD11DDBB9C5B4B213E08DAC50FC0
49077A3D8AF0F022F96C8312A73C079C6BDDD7037BD8336D4DF44A2898F21213EDD7488F47A6
AA701C307A7A52B1A5A4F9FD428E8E6F4AB5AA2757CDDBECBECC64F06B4F0EB4E5D818DA4B56
759DFE6CA5A23F30D022C655A7D6D4680837BFEF96645C7B4FADB59A6B86FF52E2BEF7489D3F
2DAC502209458A9915A10786C784962589D6E8E7F2E2A593DBC98BE8222FD64B9F9E45090E68
16B3A0FBE048AC48F4B586D8422376A5327AF9A0B91646044B594DC1076687C7DBE1A6969C8B
EF44CC83187C5DAD107FEC5E96378DAF0AF0CEA577C072725794D91EF408C19EF23F715BCB19
D34D15C61B1BDDF085543BAD87911EDFFE24B91B2307FAD534DF98C9749B070102F080CC4B37
824606C1BBEC49DB50563928FCA5E3346758435299C0BDB58353DA9AAA4A0B7DF75209DAD280
33BFE8F2F2BDE4A39F2D1A5F7288448A8C2A27D7C0C1B04E770A05CD4526F8F0624DD1885FD0
C4829FBAF3DB7D7F898DA4EC45D437153D87130584FB46FED66CECD59C1185A8E1294E90EC01
88BD377FB5E6CFDBE53A114A66EABEF47618FD9C45179561EF8FC9A5E25EF501D1B9AC5131E1
3CFB497A350348E0EDDAA1A5E05B2DA90A17FD47E7E13FCF227EEC0AEFB254FC5BF140EB9F36
E6A1E57087F8E3F6DB020BE9BEDB6F018E8AC057C54719C40246C860371D46521B4FC7608771
34AE52C67210C79D3B68920D1ADF6B07AB7F13502ED4BD16615EC89CFC951EDF902C1A8064E4
6CEED318B3717E24CFC3E7A62FFEB57A32AC5AA0A73CE255BD0BB71ED08A4B27AE402151899B
B25D2C4E1FE0EDA3946B6C11A4B8225C093F384F4959D4AE6A10DDE81F23E721A9F07D170FB5
25393322E9624E5C64699CF215A9055C0A159C7AB951DC3B41DC8ADBB1DBF9B3D4F9BA3AD2B3
82899EE051BA2DFB551C692CFF2D80A2E8C8ED45625613B178C918E159F9BB4639ED82FCEBF0
4534C0699ABD61EFC3CB25868D63C0976D87B8D3E5313A97EB080AA75FBF86AEDD356D7D7859
FD4289A3E30326BA3C45BB4D57B60E4828E2AD14369906A66BBB853E77CC8DCA6199364690BA
5AA22DDC7FBF5EE45A79F0C0BA4A4A25D30F27690B20F66D35C8115F5BDB1E72E747E8CA1B58
B424017C2A63EB6C8F6D7F703A4E93DE8715423059769629E7690B6E127265B87EA052EFABBF
2AEDB3D6996D977CDC9F1CA73B219AED7139727B36BEE428EFF1C6D872B807A4FEC258999620
58E62CA031E28952EDC20EFB4545B569FA25FB22495C18BBCE00B2FED8E53B76E4F0FA8E6428
7D11019BABC47F6CA986D4D5102D614F9EEDCD3A4C774CB3078E38CB62A30ED14DB7C103CBDE
512E9C426F11B23091D3BC279111421891AC2E49E33BD80F14714A801AF5139EFDF5318AB3B5
DF691EE1C65F281195218A72451002601092FEC05FF16878674B3C908A5A4AB4A75B4D8BAC84
9F21B18C9C084463FF4BCE3506E2C6C7AD55248A91AEF8E18F4F5892AEB1804F0D743DB39CF9
D45CBFB4DA9A570F43219CFC0085C17273DF80D1DCFC578109DB173AA46F7BEEBE907A36C5D5
E2B478B6EA4E30AED2322D179C45E92E7749F84834C4871E8874C811D6A98CEBA3397A50EDFF
109F2E4EA80D17054B515D1C2CAECF6E6CE10C1574D451B86042FCAF35511BF3639C3429D72A
A799B913FF3A72FFBD2A264397BE74A6BC38BEDDC8A38424A0EBA7D9576B7FD04E7BCAB2BEFB
532DE359698168711D80C46A4EFB83CE59CA697724AEF46BC7B0FB0953355F08D4DA64F2F81E
27EE19E23D445A739D2D85639EC242812909A939CA6EF061EF483E3AF34D844342219582713F
B208A5BE636578B2364040942E763B54D9678821381F810DB0041B8B19F58BC7452327BC1AC5
8C6B32249D87B0C3F1B7E51B401D0D327D1857A607BD5A84E4ECB9F0003D5A4BA77FE598AC33
AD6AE51B980C919B1CA2FE2DA7B7588D2A1785A8E6D68749FC7F6E3CD6EF8FE7C8232D827116
B26530C2417CB17B6BF9E69BAB15BAACCD1AA82856601EA72F1D005E893911F8A9A9E981B3E3
BBC2FF4F1DEC2C8B9CD8F24B8BE71F206A2357416060426D0B1132538001D5DE213F6161CEAF
89EA5BC85B9FA5E58D894278B5831EBEB1927D53AD17654BF17A0C79F49C8156EBC5E3110905
EC4E7280CED7B174148DFD55F7C666BC03599BC0714CD7CF06CF0B6B7D4C08B3A52DC1888D70
4AB549C5BC937EA126E07EDB1D6C2EC9DFB9BC04BFC2F39AD1E416AA6A853726298466161AF9
502F13F8F8274CB5F2FC100C50DE7B444431B7342EC22CFBF1118797F85645CEEE9F704463F8
7F4CDFAF8C9C4016DC2DDD87B45D9EC9EFD3973AFDFEF87E58695466A1FE4601B1FA0FC98491
EEDEEDCEF3AFE5DA93E033769C0FE3246B8187D1BED93A6AFC97B941EC106DB2CC98C5E6C3FC
284ADA3C8DD970BD7BFCD4A4C8D74AF13A366BCCF6964863A57FF3B0506AEBF34A64B70272DA
CE7FF4DD7BF7E9A238A7C800B2ECDC604B83909A53ACA34AA973A11E3B5DEE4046CDB52914CA
622794354B7C91F23E59DFDDC58A4AFB72707D433CADA98FAE3686FD24FE527E457C7E26DAEF
DD69ED83C1CC2006F43CB94C38778310CED1B7AABF5196865E87BA293F3FED7900C595EDBA8F
9069A5877FBA1AC7DC996EE22DBE0E0880E32A30A5935F259BA53BCBBB60065FE459003BF4A8
252C4098B94904112D1EA6D5153578B76D7E1BECAAC6C0B44DC0DD02733B624EE07662CA44D7
A88617E06407D9387D6BA67C5D72EFA683F186173DC9D96F7F08A87381BCEC6E61DF2E7B8B31
86329F9669D77726FC697A030645A2FAB3557A42AEFC637CC5226250B2119AB4BD54427DE9DA
4072AA0500AD4AF001B51DE292DF8A942BA695912E620A0735882D5AE0FB0186CC46CBB9A294
C356CA3F1B75C69CD07B1ADB8364C3970F213FE21515828671FF1CDDFFC953189C2A44BD6456
4D964B7FAA81CC6DDB088E435EC5010ABC399B94F580FE14D6604A53A259394D2927D7AA760F
B4BB9FCBFEFD099B8D29E1798290A17B70029F3B470310CBF2DB2FCD45375D152BBA96804397
0F059F1AE17D163FB60F88ADCA9E68807B1D3C6094D91346FF7DCF7A12C679ECCF196A81D49B
5DCC43D740CA9D6EC789F6388EB041F7EAA779006C6216EC17AB6495758FF9813F535432B68B
26F513FF39BF9B560B150EB93AB36BEACE79B62476E71ECA97C25B377FD27063C9493D5580FE
354EE840E88A051936CEDD5E1AC924F29168B60559D9F1F048F0A09E32ACD5BEE833DF73C57D
42112C841FAB018A62C84616EACD2E5D162C9B99FF960983302A9E23B1EF01E95C6687DE5DE8
E3BE767C6CB3FEE6B9B876F126C219FBD509B30AF9A76D9FF3B1238EB3623036BDD9DD1D8446
1FA23F3BAC9B1824F0581D78208F6CEEBED436362DD6AF248E9B39DE79FF39FCE1447BDFD39E
24F85612D0152E7E5BACE08DA80001C551B734CB07E5DA850D009AF96A9FAAC239F362C8E113
4E43A1DF7F0965C8A5D8C2C6934BBA847E69BC43BC07BAD08951474B76A1D440586D38998C22
D44CF648D327DC3BFD18B10C1A98F85BDD5122DF82F5D458D198659597B7EE87BD0063CBCC2E
D2B9E4B32C4B6551140E472E8A389F2D70835BE5AE392DAA69A54E620FE990504577E9A94B8C
E49EDA28654672B4ABB04BA9DCC86E4C8754E6F6A6893481900B2E7E9100D0B8E9E594A000D9
F004C9652F32608AE4A62240B4875A1B12DC8CBC86277393236F1405A0E38964598718E9FA13
78F6FAD7C209BC343EA74E4D960FD4CBFF1AE9EB696B61CC056CA91722DF768CE43D2A90626A
2F70E17604E48F6D2D9A0C29627DC75A088781E3810A556D8E854209E7696FC9E5131F11D751
6C47DDE856382B7E73E337DFA806CD5A7F1D312CDF33D7ADB7E60D8187EC70EBDB7056EFF3D9
3A4C0B2BE330638EBBBF424BD2433491A1D74E8DB2A69EF8A21A35D848508D631F485B6F962A
53C381F6ADE825C94D0B9E241443F0E7B2A701063C60D6709EB97AA8398D71FC9549DB0CBAE0
714C1C026B783592CC1F3D442BE6385CBC1133FF3FABC7DFE82E27112FEC0BF636CCB43195BE
CDEEEB982D2371402B0FFAB56764E54832E19FA793BD1B84997A2AD11033352ED0C3F7FCC29D
5CFFFE5A1C9C4E1CFDA85F20D11B8344BB6DAEA9BC46CF49B72F74FB35741167FF9A13706994
ABFFA25A989FA7F7A3BA1BCAD0546C2B246C644CF6983B9B3061A58CC18B314EA05386377FE8
95B9DCB78A66F5B9FF565B1DB4007437DC41422EB165E46C005290C9BF3666F6979DA9EA95F9
B9EE35E1D835590BF5D9A5D21A4B3DC64404C5D64BD574439BBE4B053BC3DD71B1CDF617F041
BFAF4A6EF5632B782CC63285DC551F02026E0B1CC8CE1F5E289CE12580DFC8B21145A04D185C
D815BCED8B96729370C08327683C364A2F474A90EB000F00217BAF4378BE24F521286EE9E4BF
CD46AF0AE5DEBB2AC1FB99FB00EA60B1CFCC02512313E13797F43851C66327A30A504CBB73E4
070BC02A5B70E9B80CE9D3BBDFBBA7F9D4D8891736854F2EB8726EB9CB6A36D54B4D0DBD8BA4
FB1A36A7243BF5AB938B9E89AAD1D2E16E342FC549713F1BD80556B3EA8021ECDA518DC2D8D7
9E960F58346286FBB54587C897446080FFA7A6019E16E393446951CFF14B6C9E5E3B79ED4346
F6461516F0FD373EF665BE55D76E0C30979AD6670BDB440CB7518A009435D73E292B90F74638
8E67F028EA1911B0AE314FBCAC13B380BAFA24C9F14F5A378A118D6462BF3C1F3A0820AE1832
6A48DCE20413A2E2ECD96587F287292EC550717FFF30CF067D2B8252BB5BC94613F99CC4551A
61D1AE712A49E79348F4508EC52ED8DA0D7B3A9259A99712052BBDADB35E490FC4E7E8E69DED
CCD96C0E9AEDC4010468F1B8DEB17872B113591C637542769F45721A84C3207D831C76799218
ECDB60512E8373AE2B8313A81469655973636408F92F30A95B2F82F195E3D3B9BF76C40D1BB0
921A9BB8695D558B6C09EDFCCDE60EEF4E2608C547149DF6DF774DBC5580FAFAD085AC7D055E
19D3D99565ED683C03BE028929587CDC1B8BBAA9AFF293D35D7B4EAE21DA2038441A6C13072D
7A6AE862604220D8B88615110AB022D46218CCC0995C0B7EC1B7C8435CACF13FA3F06D0861AF
44D83BF741CC49AFC1CF3124790FAFF0BE5079296FDEBDAAB5779B72F24E5D2972A56A1551B5
FEBE91482C898DB94D9881F7831229602BE5432FA4E536129F812AAA0A6F6BD3D82E875FE9B2
23B17780470D41C24C99BB313C875182DBFB6121596C550671981827B6230F0B25B94D8DFF40
497B65F29171C3E7C422A1BB35DBC937F14A8862F5999673823AA23EF36AE172EF3C41B6CD6E
826586741D2A45FC57D7832E25F157C3DC9CA4A9871A5B7010A6797490768BD8B71AFE79BBD7
65D6E585543AE7A48A610FA5B6547B2626F035B44F24D9CEBA14BC0E49A62033BF5252C46FC5
2F101437CF85DC7F13BBB5C73B47A64BD285DC2AC18AD0F8A7C78160B7C9D5B07CB8CB222468
3196EB8C4E27C5678B039B8D5E5377B4EBE437DA8BC31ED20B30D2326F27FA09A5AD14275AA0
1E4EF80B25DB451E620C9BF425E62EDC6F0B0D684BF410B2BD7044F9AF7E2317A87B7C3D3127
27707F826359A3E677762C7FDE3F8FE824E76A6DEC3C1BA4CE0EA8AAF9D2E6A7E1498745EBD4
7D31C25B6D5418739DD6B43E95AF047024DCB1C96257BFA8C024DC04F644A28A5C51D6C301E6
467D6A15122114FC01391B13E998D1CF4D2DD01222B228C018BEFBBA9467419F1C74CDA0D16E
37DBFCBFDCE6CB839963F2D4DC7CC7FEA0CC3A8F4F0FF67C312D265E553A62085198BD5932EB
592E51C0A3B30DC32B336418AC31B899C1FAA9EED0E2D770C05AD7FD85D9958ED06930C037FA
82CE4FB3E4F5D9355739BF82D07D3A05BD3D27A854B2E4E8E7806ACBCF253AB5BF48584E5379
6DFE610F838EC25F17B2C2EA3FDE8131C5E99A4A80B1F70BD034D237B8CA70521ED3871B2236
211314E232063A25AD8A8A5F3C6A809BFDF9A6E3CDF01E27A0BFBB911EB269F849EE920F2F6C
BCEAC776F24F515F0393C20AA4A73ABCD71D010F152809599B5E0206C3E613EB06157DC5B23A
DC114ECAFE70A360C93FED6F00BE44E9E50D6615EF2CF419E4C91BBCEDBD30FE54C0DAB5083E
F3A508FCF7B20C6A59123B1119DA32861B0A57FF06CC4230836DC104777AB803A62FA5D51C1E
03DF5E04D667EAC052CC5BB87EABDBA797D125E8A370DAA3163CCB571186C4DD6EDD09F04AE5
8FA16AC4B9629D78B35B75CA70E7CA5B2043E7F991A1D5D578E83D1CAA7A9DD825C6535B41CD
3F3F5D371A78E95AC1BAF2828DE675FBC8050740B53C3A747D904E08BAEDADC4BF223147F91A
F05EA5BAFF45E91381B53BA1422AE3A6AB5CEDD353C4A22D760AB6D971DB01B069E8166076EE
0B54DD5FAA61833A4BDC68BE10B094D32A5443AFA9E40F34780C0BC4AA4A5A18C5166A8EFC75
1F75BE009EFED44E6B5CEF2580A26DE4E00B10564EF4A2BEAADE4C4355B8E1F3E7CB12F4B251
3DECA9947F9F01E37631437C9C3C8BD7636A701B069385AF7EAD74816808F514FA540CFEBE9E
3E2DB6D202BCC85F321F12D5FD7245664FA276CF1C7AE2AC8B6D3F84AAC3FB7BEB6237BFE171
B95917A0F7B447847C25349D98A6A9F11888594F6C3FA2F757B9499C5B7FB348A73D0B8FAFD3
F64BB536D1D9F78923D93592DEE6156DA670D746C323BC04E3261DC6955068C588565BDDA80B
B47A20CC8C7D8EC6EE53ADE9BD61AD05BF7C6CB33F93E8143B7DDAA21C9A1FDD48F266416745
B331E3F894408D4FE71989A3586278D2CA12976165D11EDA0525D666E5B302AC7211A3052931
BDFD52520F5A13A1A034D71F52E640C096CBF73CFB4354DCE47CB6A47376A1EA2D4CDD66878C
2BCC80B5616B206DB0BF490E41D3A1B5590BDC88154DCE34CE908536C68718BD38B6B0E07D24
59F44ED2A7A100BFC7CE577E504DEBCBD1097F657EB169BAF7FEA1C9A167C38DEDF220226A40
3561F1FED27EC0EDAB12326C2663F7AE3EF3DF84630C5690D450686952E6F169016D1B6EE1C3
39194872329DA7CD5441ECC5CC37DF35FA538F200A9786825992F1AFB90DC0024DA7B1055884
844C0C961212528A6444428579329CFA960A92E8B6EFC5C57F9B692A6008D2B5A626065D845F
054B6AEECD04DF8BB66363A7E0D7597DE45AF2392C9AC6E3CAD6F153D3AEDCE48CD642CE7132
8A1805EFB423313F92E42F7507C53838A2F1C292DE906B6A5D38152AFFA9CC79F981D2D44EF2
1D3EEE26EE4FFDBDE28AAB1C2789FC5ABACE49D2AB2A6E48F95652D17CADE292041BF27C05AB
81D18248642538B31EE26924928E6B78F256274D4D0283EE82C4F4E810B753D530C949D025B5
B0761448098953F07D9F87044B82BADC7E117FA6C6578C8A5C175BBA3225BF126CD1F538AB12
CCAC810F3D0291ADB20B76131DD307555401038EE94234DE50B69993187A73917436412150A5
29FF0A53AFF1E5F1E05E083E0194A5D7DDD476C8D364CC1A13BE0E62D64602DACBDE619CE2A4
29DC407C678DCCCD101DD80802376D89E2FAB6B229E9F07F9414B402DCF8CD740784830AEAF4
97B225A74892E3A65E62CA3A0BBBA1F6D564CAC71AA888748F52FB88C45ACBC2F06B71FB2E51
04A250BAAA3AE4F035715AE6269C9BD5A613775948CF00C9446AD6FC25F9E698AF51FFAF5E24
995040D15C627581159A6DFA6FDE441ABBCFF457A1B5A1F9A227C5F4B04011FAF773D5A4935A
A4F2CB576E59651C05477FD81D8653DE1E3FBAF1C8C46D8B58D72DDC79D0B8E6B80EBDDA2B8F
393662558EE8BD21A62E2671D165F9745381992FB5700F4ED81BFA687290AFC400A9878F2C90
34E81CBF8FFDD535C3AC3D5FDD93FD5B322EE6489AAC4C570858355BD9C1C411792E9322C6F0
01254F59995D8AA424B83C6C6AD0FD3CC333C84D805CC667C2BC9CB31354D2364AEC53F2F0F7
304855AA418CFEE0EE69B082B7EFA8827274DCF90D286A5BECB8CECBC3A1EFDC81CCE6F9D66A
0386D92C992DF74D7AF796B339FABB82042E9ACE2F103F652525E226A5AC1C1AE26D331D700E
453FC02A3DABC524391A6525227CC2C55587453DC3C0B5005C2078AC0860C5BA31BF8463CC2C
148C0E7A27F3846FEBD06FF4873357538E26274587B1280805EB95EEA0D838CB0E145B8DEBC6
CE9C968868DED8ABB2730D7D507FBD8A7C61D9ABBCAD1D71C74C6167FF856255CC7404A82810
C6C9B971B70403A562291D2C306F337EE6C43E8467CF6FFB322E80A7C2E3715933009F367AE4
ACAD36D209EACEE8ED70B87769F6D1F9E4BB95C4BF1BB8B19C7EF61823F06BE905D91809B6FC
14DE9AEBA872A1B9A5A97A4B53481995F54161378ECB72C8AB45BEBA3DC0738B19DA0F52BE78
476E8E32BB5AAF98E2A2492312544D96FE1AEC15155CD7314464DE794003A6F2CDB64A8A854C
F3FD1459F04C34C018DA6A9BD92FD9A34EDB2A78A7BB0C9AAD076BCE63AC5E6BE70DDB72F18F
DBB02E4EF4601071905EDE6B8FEA0DE0B1AB77DD5F4A39711A90AE725AFE49C3F734F989B2D4
8FB95A01BCBD9D8C077C54FC7057828820EF3469220CC01259A57FF315A9AF5F53E9270986FE
E7AF27E38D6A74DECC9EDECA1AD32E33194816E0A532456B294CF96C6F30ACE3AC757541C7BB
B12A1D681BDEEAACE52D690C2450EC778D191577913714327CB49999BF53D8443A08972CF241
212DC6E97803D8E8A8ABA8A2FC76EE6D6561E2D5EB9CFC99FC6B58E3F50B159983432203E34B
8EC19E81DA6E53E64B91E0FFB918ABC74CBB66D67EE0DB5B252DAA2262903ADA873A70E78A53
071D33A37581C6729E6C24399AB73BAC03AA284FAFFF47E871C545C1603002E35F0F91A20E9F
09AFF50AD56F2400DA39FA0EC8664CAD932DB05CF7394CBE335C18E594191F6C07AD1783DBA8
C7628628D2DBE5520D9D153E8362966A96F127CF5A9C5113AD93792EAE6BF28A88F9935C6568
229760C8C2A756A0DAA07F9E653F6E26A5C13CB48BC853DC126E564F9BE1732017685F599F4B
C61D33F0B3F7346EEC8C4A1B89BAB36E9EEE8B34DB52867BC089F2886500A56ED95E0AAB44C2
C750F35345DF56BA0EE6416300307B9E0BB0CCAA2AF902089848573DDF7E547C91DAFF421F20
5321905C0E5A84118DDE0791AF4BF72854E2401157FD4286C2A77E62E2B8D338646A4491DBBC
DD15A60252B6217F7080FA9AC5195BEFDBF1FAA1F352F6A09A211CF8C9354DD2E8BD8B28644D
0FC467FDAD0E31188BEB1FC9B34EB089436455711A73EDDB25734020B116E27962D23DBA5E51
7C55F2F94A19AF62BAE8A96759AACA8CC04363D1D692ACD7EF1A4EC7B7968D32D73600441AB0
053BDD1BA617A4348BB88ACE7E2EC6A43B16B4748FE1E33C6CF1719C982A66C38D12F6B1C3CA
8A8102D30EE13D27A36B64DA5AAF8B29E6F015C5843540E53C6E9E29A03CE52D1EF4E26DFE44
1E4852B1F49B91A8E1099478073620F295BD6C832A681E835DCDCAF33F0ED2CCF28D912595FD
C70E816030FD4A6F53FF13E0122366A83C488836E03E792DDCA05E68D02F499FFD83B946CC9F
4806178306A7BC07EBB7E4661EF4E629204CE31F2F424FFE37F8E50D49D2E4EAE8624C14D6C3
4F48745C302EB5B2B0E8E86D36841232837E5A46BF592934270C0956AEAB68BB2162D5E9F9A6
D668EB764EFBE78948765DABE1FB906DFD4B09AA041CFB656AE892F1BE52D44345F2F9F63A92
B93E810EFCDBC6FB6C4F4FDC566D1108596788B24826DAF308149E71C5C135554EDCEF5948FB
32033E4EB542012B14ECDA8D3C451C20C84E91203E9A8996773569512264FE3A4FD555FA6804
980F46B776434958F6D8BC49139D6C5CC8E16BCFD7049EEB985A1AFAC32893ED7FEC47DC74D7
C074885F1301AC239A8BAC617FF7AAAB41CE7A95F53013C738DD7B1623812CA3EB344E2976B8
3D58A4C1BD29397C84B4385FFAEA9686BFEABA0BB401D36CD16F247539CA2D1D4C436280B61B
D23195E8940C5380F55117D2E0F656DBF4FE9F231233BB4B3702C269A307E2753CCA59F349EB
CA07D19CC4818E529A2115E9ABFFD3C8C7708F26BEA35B73A8B317F4B791115F2D3E29B8A383
3E9694CC1FF415EA7346442DFDDD375A398329C2A58894A568B75CA85063519F3A8880B77AB0
5DEA0AC0506735FAF0BA1B8224FE39EA6CB965F0393BD7846B27F10FA2DA446D01FB578EE683
61CF1C37B7E5E6D3253C0557026E7F8930E8F5CEC12D9C4A3C74222B84629E8BED9087AFF705
86CDC8970558BB2C6137F20C05F9E5495BE3FB0F7B2529D051372EF65DA35FF2247C5E38B9C3
4E506D4C299FF0344CEC0DA57C89384E64240E65C801FDD5CC6D8F21278217FD951ADA8F871E
A821447252B08F64D8111AFC7945412210720A2C11A0718220270844D3307A1FBED327046B7C
055BF49EF9E8F897AA744C4A8BD779C3680A36D276E8F63F6925DF2862ACB4E089A7164613F5
8E342143513C7B2CB8BC4FD830D8BED7309113B181E520539A6894A58F51670BAF1017FCC062
8BAD9FDA30C6F1492EDDDBD06CD11471D09A480A4529FA3504E75415A37C65357305223C6334
58B430BF84478266EDA7FD098B703182347F18FD73A62FAEEF6036C7FF8402074311F13E0C7F
418B76FB0D6C29FE18C472F57D51C5F6070EF07D79452858B885C64E04BD736C310D6E6BDBB7
DA5B41BE1E64065246EAE7A26EF1B934459362F0F0AD09C755D758235EF97F0F7F4D162D3C25
A9BD9C8F04E31E2F01A9F61B95F56CD3379F75AE0CD256193707255BC757347A7D6D21BA84C4
E1B7D6B1F8D7925D907FF3B31B80B2347379B2D804820DCBBF2CED2D54A39A6431CF615204C6
564AEBCE531A3286BDA3758F9C41DED5A1CA89C8DB1845BDFBFD3B17CCC1276A41D6D90ED486
57EE9174996A91F9B01DFC33D94604E1CC70D9BFAB95127D6DAE6019541A22C4CEC3AA18340F
91C9EF43B0316203D45D9F34E7CBEFDA7D44AC2C218729F0B792A55B2B9865068388A9D961A8
A848A497E0C37E3E1D5AE4F5661A41CB7185B1F28F4D2290A4EC79FC1139C4B2A517CE398396
E170C5AF4988936C3D24B31563BAB8974A493D07F0FA354FD2690AEDD79479686D751AAD3B67
E811B11D1FEDDD91B012C4F1E3C565E279BE4416BE0A384C26776962A5AF1F620CA6815B0489
25BA809ABDF04E180B399BC9837FFABE2D56DBCFE56E9A8C00D35FD8F80B7675257DF5EA2D13
4096B91A0EBB4D0D2C00BC688234A90F9A98AB93A05CADD872275575E46F8A9DD3D70F752FC4
C3CAC750C10D7A3709D5EFA8928F799DC3CC0FA6BCAA0754CA12F3DFF7850CA6892DAEF02D6E
F44962C0687F749B9CF53F8EFB2873892C69159C947504A72A53FCE68A3B221BDFFE5143F5C6
1A53AFE24C13FD725B9FEB3D902166CDA9BB36DB393CB727F3E158F6B574A489028B41471FE8
3225B1D23D765423F64AE09987D42AD485DA4741C218522810A0CDECB247E94BFE8E61DA2258
289F6050E778A0BF67E2A369DB7A31E9256BD81E0E946AE85EB1E666799D87930E6D612237E2
5BB1777DBDC5D0B2B3130BE6268A59BE417A2CDB877C1EEEE1BB02EFEB677C0972F812D90330
5FE08045A0EA5195646A2F4AC9A2007570929134E41EED601EFB05D4245C0E7B295AF0109B44
23EF247FC47820EBF7B03CEDE5604F851B348F28D3192393AD7E2F956E08235A77AEC1A5AB36
CC4E78EC1541580C37FE2D32F3C1FA0691F3F14ED94E4C38F13EF860A4799EF18558517C2601
17ED346C9AA4A5B1E3DFA891614919AD793DC3599E43DDE5CF6CB26C20F54338C3BBEC4ECD82
40C32742A4996939472E1B126101B8C8D0DA38BE516FD5EF83ADC043DCE27E790E46ED79BFE8
A9156DFF38A29D5BDC134B8F4D62A25ADE8BDBEE1D55239AEF52116D955B5787B6A3A41B980B
F28A754198FB9C30D94F0F571ED502668F4507B081466E4C3347C377D27847ED7DF2C0E6AB70
AFBD42B9ED5734714435D10F34BFB94B675457B6FFD360F1764B63C9919FE5315CF3D858EF8D
4AC2EBFDA3B026F5C9200E223DBBC05430545F3CB1C1F97F83580DBE22F4FAA06A5A28100620
AE4054C43258215AB3D616A5BF638A00AB26837A20F0A89148D1C22AFDFD181113CE24EF0701
0C0B8A0E9D9F766482D6EC5B53E36C27A7EC93156E1D741867A69E0899C285B634E05736B3AB
62BC14B021B334D6F6C72484A4F9E1A274BF2377BCE12D25EB267D35CA595928C7F3B469D4F2
08F933875C676CF2F1BE01393C7C05D3822CB6AF13AE1BA3F074951D228115E7B23A94008DEB
2538F17FBEC7F32E16F57EA13883A7239BE970F8C603C6C2B255D756740FDA019CF4F7048B87
AFA4BB2A61C4E44530E4569A6EA2040012D6174F363E04DB6D289D70E74C798B5F2BE02528BF
C50E343B6A35EEE8CEA0B378B9BF378E265FD9221063AF18A7B5F0F37ECE1DEC209AB43CD35D
8D2665ADAC3C477E849560A3240F23F87AAE5AD37E96C6EA64920F63AC633346C1D604F2F9EF
3DE516F2440F37577DEB0FE754CC34D10B291B2FFEE2B52598973E60C9D224939F463A70D047
C0F764E9893803120C0225C13E55EF77E771015B3DC06D2FA75D20C125B87812E513262E9000
46D9AE833BFA84E88E0C3CF4E51B9BDADEF3B9F988265318C873142B3C5AEA15E7A7A2D02EF5
4F1CD7C346E59BB83098DFA4991B0363332AC501C8AD8CC45255FD3052A897D0114BE13E92A1
CCB1517567BC42C11759983212A275A2B06955E215783869EE607E4E8FA8A66C87660A2B43BB
51FF757F736746A09BB6886CB0EC28080B841D23981543CCDB9358829EEC30B3D0273DAB0B71
6BBF6504451586F0506ADDC7BBB2D8B2514E11778FC10C44D469E78EC88A4115219A318C069F
7F7E7218C365732D807C44CE4EAD1D9341393AF3C0688DF6BC44F1D526226E9706BCA35F7D70
2DFF83C5937B4D8893CEECDDCC3EE0901701D9F125BAD5FABDC0584297701BB1A692D2DDCA14
59EA435D255F711F4398F5DE32E32BF17A66AEF6F35E1B523D41858D7ACA67316D8B4CA7D23E
1BCA915EA81B365F9A45A5AECB4B4763B26DE29AF2E40447EA5D6531C8A8E4823351FA9583F6
6CEC0511854AE203E01A341ED372BF2E2F94F618E6D0C0F393ADED43BB4353BB7C6576BBCF6E
29BD74B55CBE22081E1B7EB52A5D18C9F1FB0A583E7C4C8442D68652D7EE0CC8E1E225719C59
6DA157F0E9845C5D4E0364DCE48110D773AFC7994846C20C94FD3EEBB623D579AE4C7EC420E1
F8E9CDD7835B4DF4101A3DA253B9FAA3B92018CE5D23B4C6C5763C444964137966B57AB17434
418051E6AC77D45D972D7BCCAAFE3981B9EF5D71FF830D4D55F5679C8EA8206D46D6F3B5D0A3
66B9DC771808F1CF1B73DCDAD12E8449981B17C3F0616198713CEABEF27D8BF29D995F660F9D
B611BC31B936D0F88827BF10D0CE3D339514C94F017B8A5C11B1DD561409C8365563269E4F3D
CF6BC8AA4AB84867673C60A01E243F2AF27028B1153A5845EA8D5F9E5BA6ACAA837791BBAD13
B976D4AB1915A8A4B511952D7605955DF999700A117EB7E494FD09F1AFE4FB7AB07ECA52958A
6C17291E7CA8B79A788A8E9943F877132F40E06A1DEAA5C301A20A3419015B93CACBDA103452
BC8A96E0211F7F1092E38F40E1166A9F6EF160F017D6848D620F6034199FD31A9451E7A6E29E
92BD144F0E2E483ED99C8898E52EDDDCED22DFA25E4CF9A48A4ACF8516DDD74FE152A8A16D60
E095A6B30A7FF38D2EE0075AA04F021ED0F491CB838ECDD4B4A56E87F390003F8C4956438552
1018318CC09FEE52DD3CFD8273AF9F4EF005917F7861CDAC4BED6C3879AD3729A90DA53D710C
454E83DF91AFFDE6F5B130022B1DB44990FB66991EAB34D824C211AC1531E4776A510CA7AF9C
A06CB38EFE64BEAC6FAA580732509E03C083EDA243398D6820A556155FDAD3AE63523BC383A5
BDBFA13D457B0DAC89F93A89950972A548CE990DA0FB3D02D85E797059C69CFEED2DBD9E0D1D
60EDF0775F878EF7D3964C5203A5501B767CD2A8261A97280176AE33E419A097F123CAC2EA73
A7C7F712B84541842BF51D7E14BB80547ABCDD9212123ACB6335C195B764A6F7E01D481EACE9
6E2C98F572B56FB4F77DFF2C601BA7A00AB9CE2648B8CE0C99E9ECD506AB98ADBB629E996AAB
60D0A848547A94C09183DE15DE41C450FA25E06A8910F65E4107528B4AB6DFEE51DB1EC9DFC8
92E5C80FA2A01CCBD0AC785AC4A5F8FFD7D0C008D86ED9F9D03E07CEED585718E146BFF5ED5F
A7539DC8EE1682118FEF65D04BD417404CD633F977BDBC8DBEC8B8E120918D5A970DBBDD9215
EB06E7FEE4D7C256EACC5586F1347B52EAE44BD1A121F942F28BACDFC07D89D4AC08B7737331
4FAEA5BB31B339A3B5FFF0FFBB4941E473E3AC74726478B5550C43D84034782A407B12E6D413
BA2A62287C19DF902B022FBE5C9B65B68F01D92D09E40519367E4F0FD2B5DACC96DFC0693F98
DE2E7AD93B34A1922D946B37C161B3F92FB11BA709BC1F0AA20859B893B069E4EEAD95FF1BE6
85B910EA027644218D649873228D4DDEBD8A6A2249E6393C2853F74CA82BF8308C70AE1B9E03
78A8C969E7D7ED36BB197E7F4C6FAFAE5B73AFD11ABD0C69B7AF32933022971C28D83D44A73A
DD3DE116313202C45264D1C9B09D3B4DDF128B18F773896339FDB8232E9E3AD3F5833547ACB9
D2BCE6A5F231449753D9FC15756B6B0E06B6D65604676A85DC77447222D3D66AAFB422D7C628
790DFE487ADCEB7DD7DAA369E0C6E9B71AC0B494A5493D4D19FA957795A25F8D681B50FCBCA7
A6E031A43EFF25B7A4E0AB226B553C086459D1BAC550242AFDD8579FE8FA1A06A94FD8873A6E
C63CCB57AE40FF81797100D68C4C18B69A01CA4AECE990D78F34833E1AC7208DB384F09614F0
CEB6D4B7677E786021D0E0CB143CB25661B763BEA0634330F3346582C4E1D4ED9BE599A35034
1B60821FDC868F74252B688478A098ED91B95F86A48058ADEE5D6812FCCAEFC67A5ECB59AF30
C570F986580082CB4066F666B4BE3B5D54B5982A1F77F6FD1AE405DEC4ECFD4179DE3F9681C4
662E9E7F49DE0DA3DDC2384B73BA56A013154E2EF18EAE6AD1DAC5374A0A49CF25E1D403CC65
DCABC362DB4BE7DEBD83700CFD0B956F565383261D878999A4E4A306FC4FB76B7AB1030607A5
0152B351704116A5C7CB8655671F212A817A6F6974638FAD83330F9D8C113D1D6B8657F3D330
50FC4DDA9801984724E5B5F7BDD73E5A077E8E1E5135843D50AC1B9AC7C57FCA7CD14BFF6A98
D6AFCE59AF133D106F3CDBA5B161CD74E336F7815E82F2257E51DF4F8664CBC81DF600EF044B
8B65352CCC98333D09E72796075B840BC2A343DF79E0066AC72609171498F8187827893FA6B9
08E69D7486F7F473BCE96DBD9CDBD04E20F71C4A17B012ABA2CC83C2DAD15F6940B23BF57CB8
F4A05E4EE53D900B16D22C7E5AEB2FA6C2A77C510EB6AA1A086FAACBF40BEBC57CC7FFD5A2DB
DBC547EDAC7106A4E0F12DA7572ED87E132483A4AD7E9CE2A1C5E81910DEE654FE08BB6DC1F1
50D88152C831A7D08600B4FD42E9FA8020FE030E8E34F28D68DD228D7C0352327BACA5A030A0
C56B9914D5357D620A80B07087B1E6C1EF75507FEAC241B8C8A2DF85F1F4C9B4417A6284F0F3
1503461FBD99DD66984AEDF5C8C1D2D8A0C20B28E5016A1301539D9DD8BDF25853592F683797
634017B96B87C45A0B82B65F74AB0F556C7961825993C9B94A2217EF032E6126FEFF6DA29A20
9F8550965E1B0D3840009E130FF4E5DA095DD12B36369DB35314FBA817A31ADFE33EB5CF824E
D96332C0855FAA83BA3443EFC82352B8251D701E0ED55D09F9036E55DED382383CCFFFCB2017
A37BAC62A935FFCD1665C4680A9661C3B2311861456B8172256749DB82BB31E518A8CEF8DC6A
7B16E9F1407647DC7B1B00111F6594A39247446E917B6AE9AF6D0245A53B57091785A8644EAF
F0DB386A69004FB5A5D8DDFEFE61AAAD8FAB0021349DA65928EFE43838EC0F1598B641035498
B5DA53DDB392206CC30651A370F81E0707EAB7B4A7BCE1EA6D4CE78B4F2E2A80AA53ED711195
5C023D1F1B9DF1CDE49C14E379CBE99F491ECAAA2B35834427B03B31FEDD57AD26F7BC6448BC
47144F5C04F2E9BA19F55329836ECCC633F6408D17F30200BD3573E7A1F00F29FEF81686E08C
782705D5C82029C5733D081B60B0B975CA607E9089A943345F9EDC4EDA918AF5FCD8E793919A
F32D207BBAF68093ADA5C3E8123204837827E5CA7E04889776849141C0B747FFB21A5F2A11E9
04FB48B56A0722269960C94387C25B1B4BAB9E0963B30CBC05559B7558053D174255048BAE50
B9D6DDA7992E1155845B3CF8A066B859EE0F06355F79BA6B98A9FD91145571085BEDE2020149
D96AAA5785061BD1B7002F20052046570AC5355992A7183271212089567DEA17FE4D2A74067F
E3DEC74538407155CCC6CEF86C7DA05B47F677F6E2981616399CF12F5C1314BF102063B3739E
0D81713F8EE661E76C84D802A438108D8E6597C83CA87E52BD6343274F8BE22F4CB124141666
276E325FD70C429D8428E71D7F5BB43611BE727B6A46EE0688CFBC8DDF7019D44CF1FB6DEAD7
2FF43F218672137AA01AD49F96830412C88512720AC50A6573DC764C83AB5945E8F214B248E8
77E48B0A80FE3C4D9E0865DEAB886CE33F47335C3B13E4E0717E7AB4AA1DE1B78A5C0A8BE876
CCF999128C808489E171BDF90D561BF372772A9760AA4C7716E4AF3B13579766388AA8742B26
7F91F373A9678EC09772DCD6108B1CF4CC77505D3D46B62A8ECE03143DBBACD86DB2EBC2295E
74F0CC953EC666EF8AB503E55EB60575244451BAAF34138D85B0B84B5C07DBCB6B1F8E9E7FEE
55322ADECAE25600BEDB545B11B4727677680FB8F6A2628BD2D9232D3C8409C82900430992F7
013148076953C59961E577575FD886E47C8C209427AADBDBB1010E2E4D5EB13D8E6444422E35
97265B5AE7738C9C1946BB7A5FA86796823ED82AD9E2AEA4B81DFDE2ABAC60F17D2B5D8B79BC
917B116AF951D80AC5A564B7439FAE9F2F751A491047904A028B9F85E597BFAC66F8329C9DC4
708E1FA70159DBC155B05AFA839E8B4843793DD0D6415424F7CB17BAC4339B5BB14950A64C3E
EF258E23AD6500C2422FE880AF1F10DFA0B7ED37DBE9AFDE213E67A274FDE2D5AC98D18D5B52
5FBAF1EDB3C71D78E329ADECD3054455F47939F0AFE042666B47691CF1366D72924A6C0BA7A8
DEFC5DA265D54C23392BFC01C8AD642195B940CE1D946B87EC293B6200B24E98938083C8E8B6
527101FEBEEF2083738439AED209EDB8B0F64CE847124963AA55D4AB503D70DBF5A14C25D476
6142C28BEBFC6B578AC4124C576728A7F531EE0B46EB794FDDBD6FFDC0FEB757A3173D83C016
2C90972F5D6A4985EFC4F462CD8796AB6D7C20F8FA56E80F4223F36BA6D40142ECB9EB2ADBFB
D55487A7CFB8FE6BD08DDCBE4BE08E35F56C1F5BF37F31FD86F46559D1F862670B2678B259BF
03142D16EB0606B507E8E50ED3AF307CC17BA5D4BBB81D5ED76EC4B0C89AFB67F0488EA96898
66BEB679948D8A4CE5734E4708414DEA0D4272FDB8A21C61B40246A225136871F115ABA15375
AFB79D07EB7F833D47730054B8A584F18C6FFE8DC981AF337046E16048119A4A89A31FEF2B9A
70D92902149CCABA32C7F9FF4C1B9B0BF87A9CC23B0F9E245C45289AEE10857C99EA49E432FE
957E8BA2A828F34B5761C0442726D190294CDD41347D05B2A6C3DB8CAD3277F1E1CE46E5D8DE
6B1DCFBA29323FE793AB0539CC951EF74B70503E880BF3064DDC63D21ED83DA77E31A5DCC487
6354CC53A62A184AEE136978C55CB3DC6C38ECBDCDC391AB499B9D49488429EEC22AE657E5F8
AFB46295D4FF8C3E825D4025E47220C26627018C0B168382F62EE33AC73E55DFE1A6E5851032
6A8066E4BEE0E57C11184E41510DE0802C63F4D5919726B291D61F7634EA2E9515AB86DAFF15
A024F023C15643A8FD535549324F4B6E030E697C26746347186BA583E0783B6CBA73A94E7469
5D701244FC01CE579F853897497A4922D59EAFD042C55FA7D4EBF5B726634CF1056138AD157A
C4D6CE564985DF1CD619E70C8A2608E5C7627FA22E1A14A16C261C433B926AD47BB7C2AE7D7D
6163522AE13DD7DAF7251EF15316587E4C28EFD636DC554B20F5792B367CEF7951081F66222D
92E89A2292F5E7C5F029C95AF08E73802778730E161D8B358E60CAB0C9ACECA5D0750076F834
CA311D7EDAE3F7A027154136099EA217A446EF4F24773F1EC7F803D2E4070EF083F5DF61D5C6
01C032DBAE04987B553FFFF21AC973BB6AC12A9462810EE736E90004732C939A8FA7CD98D86E
C81529525EA22590678167E7EFC502ECE8AF882B8970F5D0525D4115D3D52FCFD4E7B1B3E521
16CD6254F49B221B4507FC28DD7AD8872062FD7F1587881D33A8DA45B55ACC625A8BC55882E1
C459863E9AE72EE00D213B7C865E7318F5B821BD3B5A38DA9008557C68B14D3535BCA64F8798
59D0F8A12C32D3716EE8179B7488E68CA7FBD6FA39D83B31D51B181AB6F328236DE4D8ACA1A8
FDA73A1118508D43C8F0C2B4076F376C2465F18117C7926D000901EA1D40E87387A3881F00AF
F40D400C3CD515CACE8EFC9C21EFFFF7BCA2166BB47077ED77C4AA972C9730695C9D68603627
A6634AC404440B9325D0723102CEFCD5A0618178AFD95EB0BE362C087392EE58726F8B6D6A56
1D75614148E15E77DC998160E6CBC3C132EAEDC6476968EE74FD659A1E0EC1A5657FA0E19D91
1CD86D752299094657A9B504139CFC0468A26248BE7803BFC0BEF1A8C1C466C7CBD490C4B0F4
2024E287E397199C37F5A2EB6279012F23191D96CE6D53C5FA415943067B68717121BAD41FC8
C955D0FF562E78832CC47F90D546CCBC3AFA182E395A56EB6ED0319FEB87B4DCFF5AE76404C0
1CFFA564B6C87971D25E7BB36096DEDDCA79BEA77D5AEBE7E28907D04AC6299D359443E5A162
27F320B57418A8CEEAD455368847A8EF4FF84E3CCD80F822C98487E283B914B93D9EF4CB3111
B379018DF63C7B8B1D0FC4E8B58F5DA01DEF39CD487B5AC1DF614A880831F31371BA276FF234
B81D6C973BA9096FA229ABE52EAC19D32972367B9099555B793ACB80269345E4F2458060414C
A4104569FA7A2A849039FFF781971A51B673F601522D9818CDDD08C10ABD25F191C91D61A2E3
1DF97451AB3BB1EE6751CAE8B25915A26F6A3C485EA37B4AFE596142C7238EF95248E1FBF881
FE4D0ED9B15C98CC8EA8EC54595965CFDACF4027053A4D1D4FB24C828F849E0E60ED4B2FE46C
27CFCC0C91A2080EB4CFC0158216253BE2472E7F3E6CA2F6D282A4EA4A60846998BC0D6A0157
33737051F973141C0A691BC342F1C0047D8343565E41DB723B827DD1095F2D36B395684FE27C
89BE196D6B80A658287AD802DB61F8D3B67B06C25442AB01636E5AC5248FF9A05C818CA73EF8
3CF0A7F97DC7AA0CA86DAF1B58CDDA87098BE8CD3FA82C735C23ED4B4EAA6445EEB31581E72A
386469137AF19C5804B78C60AD843051A4248A9ED689C6B235935DA8BB92217A71C9B38985FF
484D8027066F8A19B182FC46AFC240D0D8FD089C38975047098EFC87DBF4F218616DF45D51BA
BC1EAF0098CC80F9354AD2CFDBB06C99EF3D836A66D92CC31E324C685FEBBE5155E2073FDBE5
A98BB22A24B57005DBB6FB0CE895214B5DCEAEE0F3553B8686ED20151155F3BF99EB0691C696
D0C2FFD3EF7D10272EC175F819A7EA3BCD3095A3E1B889D357647F5C2ADA9796DC2F52F4384A
EBC3DE7D5B87EA05A22B50F1F0C7BF9A011156662F77C249E6A4046F3B9ADBA6D54C3EE579CB
25CFEEA4170A1625887231900F843E29A2847AAAE361BAE093D50421F9EEECDA5382D57957B7
BCDDF0E070D963055A4682514B3C13A2CB21575376E75658298C0DE9A8137E17EC5EAE88EC2A
08EF039CE06F5D6CD297CB17AFC66A993A560DB5A5CAD1DE7B558AFDA34D2DB1787DB48D3179
3595B68F2AA9D322C9378265C4E47299A1702C094E6F7CEE74F57EDC2ABC811C1786032E05A5
A1AC078599746ED117560415E0B57BA61399968C76F51971428FCF06A515F1147CE28C55B2EB
A2EDD6E4D58CCEC4FCAE650DE376F790CC3BBBE1FB53A7E0D5E26BA0C475EAF1D9C13AE8EAA8
701D28482C3EE9CEBBFB96454F58E5E813A344510EA6D5555D83C7D5BE895EAF8D975E84616F
9D32792B20FEC8F281BA93487441AD0F4324C3CC4BD8A0DCE531CA6736F9C68719A8DEADF3AF
B7935E6AE4E4CBFDB375461CC8364544F80EE091766DB66D40854DC100103F9E6F7BCD32F443
ECD29CC1CA760B4549D7EAFC792DE0371B0DDE3E4B37FE5B6F2B7782DBE22B83F78484D9FAC3
E07B0C2A3DA4B64065509125CB379FC0A980E64FC298C1F8671F28E927D1C96B61E18E405E37
7F3413CAF327B407FA989B44D510707D7F0AC20DDDDCA0C6FF842CC8EA77E8B4183460E2F67A
2BD66BA391C1FEA654B0644980080E5CECBD4410DFB501670694DFF72FCFC4AFC21BDAC58409
8DCF7799331C8E75EEDB9E550138513A42A50BE18783F28EC399B61EA196F4290D7110AED125
51D033697918343B01839DFB5C57F1870A542BDEA78C41418ADCFDF946DF05CE7C3F3BBB3943
C395D1A7C491D9BA5D94F2CEE780AEBB5ED4F45E074A0381813EA84A938666A3E5AF00E2580F
79E4537BC80DC2259BC7A4AF05141F06F3AD9409B4F991BC8AA6F4B51AB2BB6C0B0DFB95E503
979FB4AAA71E0C8B10C0BB09E6DA31913D0F12B94FF8C4838518690679CA3BFE197D159C45DC
30A8E05B60C9F7DDC476EF99EE6FADBEEBD99162F2B474867CA842463F065A12C40D071A6AF7
01BB25CCE93D466F02923FCEBCB35A39D3D99FCD1D567DAB8AE6B5EAD18D3203A6372E618BF4
80E23E94BA3DDAC926A0E98349A3FCADC820E981F191CF67F56BD4967F5A8AA6365DA2E14D7E
CC6B5842752CB5FCB54B3E92E33CFCF3BFA3A670C23E25EA2579CAC1A5B6A411504E1EBC179F
CC4ACA9CE81347479417C1781EADC72A64F5907ADBFE50D90419C16A66306261BCAC8A09FBAB
50D9F02C46218B9EAF4BADC8DCB9D222A84D25348A5B4DE4A088DBA56C5528C6A7B3E06192D5
01D3C3F7CDD9C4D623D6D3CE2402818D7EA53E467B1441692D35992793A52877F03C2A57BF61
46F7F5883F4CDF0348788CEA94A72D317A1B083B6AD951FCA7656DD29182DEB9F8816EBFCC9D
7D16AB5FB45C9AD3D001E495B6C0DE97087CE11EB020C65C191E6C8867339EEE832D4103F228
27B6BA2593C2A921F39F8F821E3272D929F290FD97BF6B7037EF0483617F509F63F8DB8C2E22
C54C89EE718CCA80CB1AC022A05ED0378088E11C4D73D01B188F8DB1BA6DE6D0513AD1BFFD45
4FF761E6D2A4F7684348E49AA71839F4F05D78310266FEB786FEE74B5B636D4B711651EBC82D
99370E445EB62EBF534D2831F15E28C269ECCA5F62FB68B261CC780420FFD3FB56AAF0361142
73069389EB44DF8C1C863FCBCD0BB627F6BD4AB06B0533F2A0A7F47C96449B73855E6B45B128
3D9772255D0926C313F17928A7209BC0040BD2B869BC573E111ECD83489EE039923F2EE02296
C750D31BE360E1BF2571D5D058B3368F5AD1BAB4F843EE862C14F08CFB738B090DAEE141418C
9ED5266FD5668482AD1D075EC62FA5ACCB9005BDF01F8A1318895BA985704142DEB2E09ACE9E
B13A4A08A35571AEE9E791736240063384872A7E47EE84AF91D2B5AF953F64117386463340E1
6749614F995C2C6E2217B1CFD861FE561404012EE097D132F8F5A0BB38D44D2FDBEEF31D90CB
D004B239647EEB12BFDE0E1A9904D7ECCF49571859FDD8B434CCF7CA4FDD7D7427ED17CB7474
462A152317544A6F37C96251551680B4DD20D2EE14D1AAD24FCF55978996F0377F41FE522AF3
C15202A74CAFE950FE85CA1050DE6AA6F9EB186F342D4D73E4964E0664E840B227D302748427
C37732C23E53810E012E584D7927F6A09A93ECD5E0DEC385C00BD15BF0166F73736AFAFE71A6
181776FBDD6D0C60E628BC525F27743A2EDBB2CA6533FA52C2F8310FBAFCE15711E1B3A490D4
DFB9D30B4C99BC639F3B850B1FD356F742834A89077FD23103C5D7C951AA8F6299DA362C6EB0
7060D5BA726616596205EDDE6347368B17D86CA6D97B2E6B392F3A9134B32BB9BD5C2FF2D54A
433D3D4B57254478807C44457CDED791CE41A6026CAB85AFA99F5D4F97B725E45013ECE0A670
2F226245E9C52291C5D00FA9E24CECAE0312C917F0D2FDD5F66A39F78A6358A61BBADCA08160
5C1351FB5990B1041B5319040A5D8CBE0869C8B79A5B4A262F38A2DE52AC1D064F2C02601E81
F9B57A3A1F6C48B6FF1532DEC198AE1D4D5B93C5C4A315B879568AF38577B8146A2F3BB28B1A
7D1598B773369638B5C37A4753AEA3461FE48527A5C4D549A13D3B9EDB236B1D713169476C02
0A0F965C7AEB377DCF44843C9E9DA7C86CC7B85E794398112625732FBAB0C857FD6E2030930E
1B44AAC958EDCC4E3F0E7F64FC4A0641C0507F043F576336272BABF1D77F00C49778B9D6732B
08C3DE0F04E75DF77D0C15D3CC82E4690A6D5920571FC88E2D8DD9A473D7466E2C5CC2FC8073
E125152427CC3720E3DAF404ADC025C17BA0D629B3BB882CF5254339EBBBD11C0F5A80118908
5633CE005E4028DD385DF3C883CCED8A2E8CFD1950E0992747354A914E6C4A88EA031BD96968
950436042F0415EAC810E36595F449B422DABDEC9998E4A358BEFC8338D65BEEABF170AD79AA
907BE10D2B2F41B1BA3DC43CD2EEE5E22E98B9F312367690E9F541A3E0E1F55A1551B76653E5
5ECCF5F09AD05D5FA97AF956034604DC279730E65069644621DDA07C86B2ADB1E955769193A5
964951B3DA736799AEDAEB8F637B13B30BE4A08B4AE475A8454B87C20F081F77A148F87F1106
6A1728B8D4842681DD34C73C8A3AA15907FA2BDFFBC9704ACE567EAE69028599106FA595A1BC
221115A23A72ED49B0870649462980B3F5F35FCD70FDA5421D575CC659D854B50991312FA5B7
EC5D83DCCBE9B4F0C170067D451323EEBE79AA527837EC4E730EE142EC6324D2F60B1599B452
A8234CBB37752F49C49E3A68E9EA665A56A0DE1FDD3647C7B7F0000D80FD476E99E26CA62BA3
21A7BF5D1635A47EF613B25C2D9E937FFA694708A7E9CB806F32F3E91DFA7C1B6371C91A3FB9
30B650257BB30780E44BAAD5FB7A3F4DF678E06E2979C080B12A6AAC8F35974B4833742CF8D2
D3D4F0D6467AD7E444956443768D54FBE784AE786D63BD54A1FF64D38AE917002F6761BCD2F7
2409FDF5E7395D0B68CD822138C9B40400513A77D90906A35AF02414D6C46595C2F27BDAF5D6
9E35B2FB72F412620758B00C3756517133C5DB24CF7F5F695644038631F1E0C20E06C63853FC
FD318F37FC1ABA446FC26C46DAE61AF0C721D7BBDD0F2E85A498CBF078BBFD6610F65FF95A3D
B603CC9A7B85DB67F636A7658412E06367857F3493229193E60BDCD40A34F699D6CBD6C74426
8AF42F44A50ED172EF5B21C84AA327A415FD1E69B894CF3DA21F62DE02F498B0E42464085DE5
9AF17BC51B1BD327A20923F867504BC4A11DDFF26FC7C6D39026DFF6740DC494B675E13DC10D
381924A1D7944A7FE3BC2BC7B22E5420305C024C0DA448ED6F6EF339F731CB915E918CDB3A22
6F868A749CE750E78A2BB9D8EE0ED0C2A92610F29DA94494DAA250B96402A9DD6B9A63139CDE
D1D93DEBC62D9270FC3A2230554C334F64A57752B0A4A2A517B9C6AB3ED96E7977EDDC2A204F
A14498B149031D9611BE327A79D89FB81B3F8F570B75424D0B3CB71ADE53235AF581A50D7D64
70FF5DE99628542FC712A58D4EA22B8C785C9D2307DB0ABFB76C9CBD3509134BC546D4F33179
915DC5E5A5AFA2E351ADBD546F4D476D731BD39013C3151DE7105F92600843BDBA461B40952B
A7C556D69CEBE0943A883B56C7300AD731D7ED724924178F67183A3C7A3B932F10658A6DA886
661F9D37A850BB9ADA5CB90E4EF4142CE03CBBAA217BECC4181F233A9662D416803542004DB4
33F55DDF9E01A2E323916BB8CCCCAC0B680696770DBE37312EB3C078BD9F8F782F68287345CE
C745894D104D4F3245FC6FC416C7E2096E58D0D941F7EFE6D1C8997F8F5351957CDE323BD294
2C6C8010F7D4677FD1EDF6AA41F0C878EE8906B6861AC896CD9C2D66275119BF9A93615F611E
5CB5D720001E8C4C10AB3708D38C5D9BE7A17DD42AD28E395F7F1246FC15C5BC7F88CF3D49DE
B24D9A321129B5E4A4870700F9B956DACD67DA1D22860A501394323A9A42326CFB7F76B17D2B
80551C2781B10FA71944BF3037C45F8FC66933D943AEB6202BFB39C8F8F318AC17485BECCBE3
42B9A0535054ED29BD7752911BF9F2C466DADEA47132949221DB506ADCB52257047520C610D7
55FC45DB9F6967D39BE8F4632EF97566F12982E23ED7070DB4855489521F10896CBDC3DA6286
673E92819092DB236AD5666767447AAA9FA91F978B5B65307D76F08F13BF7E5B009417E58F49
1BD8357B925459574F0EA70FAA6F8B0244F58F2504C4B2D809A4D8367F90A0614CC871839BE0
6BA9766135D78CEA60A4AE2AE9CEC340E9A409E9B0C7013C8115C6A576C4E205CB99D1FC8985
639BBE8C455BBE10D095B715F89550037E12C2F3BB5CBEF35F67221133D60B4B12F9EE813C4C
72A6E5162B3493C1D701A42BB478F055D1CCE0D5635D877C9338AE3B8793DD42E1597188FDA6
8FC9AE10FA920D9E2887059B6E6B94ADD86DE0E82C536A88D73615906762A029BC5975BAF0CB
AE48B6D8DE6818A712ED2860160F9860182489703DB75A76E9EADD4A7A8565A6FC9DA482AC10
B29A90B677319B19E62BD86909D6CC6CB52118F3D74D2AA3BF3759243C756BE4EE7A76A32DE3
5EBAD1304012E02C1E98BA372935BAF367185292475FABFBCFFF041BF0C53E8EE5808E0ECEE7
ED678274A4E1750BC9590E2D1EB33043A6DBFFFB6FB7078687A82F67629E015C8CDAED56A2B0
EB3C34FDC2ACFBE60796738B72AB79EA2FFBC6BB6FD6EB1D59861FF89BFA99BAABC635EA2E8C
ED640AA5471EC363DF882D4B44C8736D53B12FB91D3D47BD72A15D9D52A87C174833C5EA18A9
AE5A843A56F11CBF8DEE7432B8EEC71926FB66896D34719718E465A24CB1FF9E3FFAFAEEDB61
1823318D6A9B9F84753CD5E2E36C8232C28A4E728084C4CC684194993C6560DE1AC9D30D295A
3E29D1A4F5891AEB515A0FD80569FA0467C78F73C717AA33AD0CB9E1DFD10C4786D8C99CD8E0
274F9E9B85CEBF48FC32740D3080E9C237F12C8805218018B582C005BF0E6F392CC5B20471CD
2CDE5F30576F20AF4DE74CBC9DE600AAEA9976D2F5118AB120245858A0CFE72F12D439729F35
2B7CDBD23DD4B7BC73B692BF17F9F28A4F3A61A66263CA748DF2C98146669895463492FB3F4B
0608B08332F6E36E16A8EC708CDF43EDE5A9B42B954DBE074952DC4DD1468B8910B254E41B3B
36788432AAB27E4E7A2DFCA48DB341969623E127865839BEA39E2B43577CB59A0B6F67D11366
B70109EEAF31179866621F8B21502F15639D9DAE827E58C1CE35F6711C0D640B30B41291249C
3F39C9FD9B77F911A9B89F02E74C6F72EDE199CE75B1904E1B6562E0297A0FCE918BA9E09158
4017150760AC92E2BE14559F96713DF2358442E5846AEA979BC3FC63905C7FD71FF8E264069D
8EA1A85D54EB8D175579B91A729A8DF4536FFA71F0C9E8ED30342C8044B7BF872636BD05E3A6
E716A179F4ABEA507C616BF320F63B16AB560FFBE92D8BAD1F6CAFBD9210ABB98066E4FD640E
8B9B169E2C3D64ACBA3B37AE72F8DC881BE92E23769BB43AF292DB3B48D9AC6FC7BC0ED03271
895C7B46B38898722B2E493C2383FE188D4198B68285D08C60DEE417FD3D4FAE531E6CA938C3
595FE082D3258E926827492C03AC1A89DB6FC92278E10B1CA7CAA022C09EF0C28C503C3BF3A6
B839D098EDC63769535A33E65FA2A3CBBFF1F1A3BC9DE3F11579D0F5BD65030A872FF68A780E
DBE5684CA415603D1867DD19D8877DFBEF4783242D54A74D30ED6280E6EF010D880AFE0B9261
A34A0F4E8E9F7945EE98CD483D64ECB5FA985336058342A17AD5D37138F8A6FFDA05A71B04F4
D3E9C4CBC98FC8FDDCF31A5DF9DEE9615D8B0C53D219D692BF5B1A8044F4D81662489B863BE0
72F64369F217EF695B030D3828BD8CE83DC900D0463A52442C6A13DBAB1011489F5A6C6EABA0
19FD7D898F520CAAE7EC920EA9B12054C6848C25EA9CE8E651DF4AEC75534FC7C6AE203226FE
6E61619E04DA3E269EB9195A6E6D31AF5505159CFB8D92D48AD2BF3D30CF4642D9D3FCA58D58
55C10460A6040FBB5697D83A60F3C151695F928B3335AFF9B741757A18BC0E6CC8228AC3384B
F7BBA3161D68F1F61BA0AF43BB0A9DA55BFBDC89DD12962F36EBD967D9F93F40CA538DF10707
238BF8BBCD30071F2C8952D45B1088BA3434223D47343E0C216FB698F985E9BDC1BA6D686EA7
C263FEA70EA21A7BA7A57AB16F0C865A215931EAC30A3006F0C8AB2D30071E946748F5D7FF01
936E1DEFC61AE6DA5F2F2D1F65A1D704C8ACD570E77BAAA8A7BDCD1A98657D699AF75925A51F
420E62AC0C3091543032127BAE8D915764E95FB814313A4C811D8BC8FF44E289442B75F910D7
A8648811FF63798A31E3B5C8B124A130F3BC5E38736745BBC00970EEA862113A4F7C681F8DD2
534EF78590964ED27E88FD02C3FB97412C21FC4283D9D6FD4D848407127B019210BB4D00D8F2
4E107B9464EEBB9F7B798B13D3603274373EEA5696385F96C10F13A904AEAF72802FDD3FC3AF
A7E7137BD3E5DE62FDC75CBF125F3483BE05ED0D0F122D3BEA63A575B0B8F4D9A36D9415BBF3
E4770A60C08056A80B9AE03943145748A7F933656A160D225F3591C6A7607319F9195D2422FC
3B47ADF082CB4EAE454B991F275B5A3E4FA3FE2B5FC259177D07221408A3FFE2188CA4C4302E
E7CD8299FED24E3E15E6EF1CF32BAE2D45990CEE6D56119642C8B77134E03C82AAFC3EB8920F
BFA6CB8FB15677E89FA4622A4029EA5AEC90850832A4132A117650BC2504CAC044CF627ADD2A
12AB93C239D305E4D5157C9413A3132D44FD8AB10BB738BBAB816A5C3FE3A8EEFDA5FFF66B6B
6A4F6894CC675DFA8282467FBF09A07687FFBE9925A5A052FE9BDAD9644734285575394C34C7
88C4AD76FD9C2715379CB3BB5EA3D586C45F6944BB3BF504C848EA424F12885A5E1D0657B8DB
AFADF75D836A22C4AD93FBBBA4770E48A571D2AC573CCB2D2EAAB6959CC24237A1452B2367D7
7230FAC678B06432DCC7AF254B7FB360AD7C46989DE7C21B76D4F457760CD61BC8FE611A14E3
71E0C0452637729F8B59C1041CD95F5F629EA0D9E9330016CDC0D5B9284A0EA05DECD59A557D
AD53D64108125179189BC6E23DCEFFF47EDA25A2B1A5D5FC3893422A8EB560A953D9966A136C
3A3DBB7301E0717F61A597122567F6C12FAB53A081545838C8FD099BDA8BF9CBDA9C79C6E54A
CA44751CC9A8751214CE91EC678A1094C2CDAFB5103E5DCDD53A539E03A49078E12D5A62CDFF
F251BA4918019572D37C27C4A92F1D0CC9137A61393D1E0E4DC0B8C7942E588B982C89A22644
A2C24C12CCCE51A65AB7100FD1F1BCEDB49A14DA06A73F21D9C4637B142FAB17D3635B529A5A
CD0041E014BF44D083646609BF7C76B176825FC55D58E85D2914C61C5B37855D60C151E32B61
4D7525D79206F6D154E2AC69C79F42EE7212BAAA79CBD83BEEC43822C4ED0097C848AD0D7B0E
528161BA7BE2168AA4FD0CD75AF4B802051289AB27A8945C72C2CE53F1685FFE26AD62472C96
28BFF65E1D39D326D611886E95BC8AE0AA0656180959C47ABB27201F971C5FCA9681A8A692CD
FB3B29963B80196B32B488361124F7CB61B19EF4337CC7BBE62CF493B0E6D27C6CFD56606CFC
C5B005534EBD98B8C3C2D3E739C9812B869C1874C36D7F486DEA060DF40A4C4D2D1BC18DDA4C
0B3B97E88F66F2BB15B041719EEDA44073A84C11E1103FF64AE365341AAF3F6D13064456F169
2FC438D87646DD21EDB7C63B95CF44A7F2ACD8DA69815549FD985C4427EE05502F2FBB355270
8B517B1461B2A2695302E6B99727D49F15D0D77CC473F3E3BA564EF8E0610476D1C267689BB6
B06816540A3E0D3991A0ED189D2347652E0D7EFC926C1FEC62DCADB7F58B3CE40DCDAAAF189C
154749F68F5ED1FF0AB21794D4DA135C5759F44913C0F8E92403738B0AFBA0769008CC963D47
1ACD032CF364421583B8214FC057A7A179FE2329FAC1CBB94639EA32F7B61C9E624AD76A1681
66A336F3869288F453E8A98DD358198176A00BB19064D64DDC52CB0B40EFE96F4F95197D22F3
BFC7F73ABE754CC7A2E8D2E55F6258A291BF4C08337DA0F754B982E781030E0022F74A33BCD7
41A81DECDAE1603ACB67714256F6E54206F2E9349425BD777D3CC1932BF1788A2F8232762B2D
48E06E582FDF53D7E4FEADC968CCA646CA63FA694D95896617EAC7E82A59740CF37C0A9E7E79
99B0DF25A086860B58F484763516EDA7B5503D8AA132A824F8FC07DCC1FB7AA7C0183EB0C306
00330B4ED3981B284AA9B54EAFBE9C5F8F9959FF6F8889F08CB7DB462C58AA2C6F9D88DE9395
35D6BA7E8D3DBCAB6EFE6D1172EFCC9029DACA130E16DA18594CA9932EE00EFC2AD0DD5561E2
147AA2CA558AD53B94AF1822E75AB38B143B4A0149C26D819BB7C68DCD1672CA7498E3B0386B
7953CA4AF9F47B73E044760ECB258FE929DD94A53232E3C88477721AD17B5D08763C3F6A93B9
208D37597D5AC6502EFCDEF639EEEEF41C96EE57E6D71A0000C5435A80EBB701D492259A7263
27892373A58F5FF6CDF58C8212062E57B5011EB09E7718CE8615C229B71B4BDBC023C1DEF8EB
E358999CA6B660E950D4FBBF4421BBB5217A3488B130B325E54413DE65D92018CE8070223C4C
09906436F4FAC9E6899981EFE9B078F057087FC0F8D362B25B3FC053A8C52C685B257B1C34D0
CB44007D5AB43AD712E9B4D623842EB35D40C286FECD94B7CD705992E0949260B6C9947F4F4F
24ED6BF9050BC7C9E5845E7F86F569EA1882FD0882F6F4E96C6D5B10391C04D7777B1CE723DA
6F2F33C05BDA214DA19F184BDC282D3C66D5B7A0BFB61394C408BF0D3547542AF0F9F7E4C337
C70E8E3A8F2F6B219C4554CED3A9E3B75788FC8E06C880EBB5A3EEA6EBAF8A7D95C0395B0874
DE49B36D7804B4A150808C9FE1CBD089B7A1E89E6DA00721094E3691C0FFE3BB65AA63516895
A8ADED8880E8E7BCD1755CF5E05AE16A110E9EB41762B43E3CC319CDB0E7A2A91D916F0E62C3
2D9E3AE13D2E7903343D9AD541CE342FB6120A29D8D3FA4F714DEA591CED15673B339156578E
461ED1CF2B272E9E18C773F9EF3D73399654BE1C4E912D3866431055E6BD76C13A3FD0EFE968
183D6AB5DC4B164A6D0D484B5FB71A5F6F27B1CE8FAD5A0C274A796F76E3518C1318EA226B7F
7C3392BA69C2479D6341DB41E6F5558A8056BB15579FD69F1DAF0E02120612F5B11BA0C907FF
57007198CD1C37A72CEB335CE7708F6EA984051A8F4EC56ACF971EB3A4860833AE6A0607F0F5
EE490D81E51D98491A4227716A5816A5F1B9756A5CAC82234FDB5283FC2752647DAE0D7E0B78
2D253A131E97A709CCA23CF810ED2C6D68B52E1B213AA41233BC76DE18D31150CF2E6D0DD355
67BE625FF2625A62C911C28A425697421A61F3AC2D95F8E5A2B8D3AA76E8006800D84A544367
2CC47AFB931E4A0E953DC473F15B52ACAB251FB11D4B0F55227DDC033FAF42DD3C00665F7587
83E7DE117122CC066BEED19084C3D2B7D020D3D9ABD7FAE5373D14B15C01A4E7530EF6767170
C1CBF91C9574525A1D250BD0066D95847D132CE5C5128A8CA9A307B5DB897BFED26965C9FF57
DA2F5E645B9B4F8673A76B0B09080C76A4E390D9B3953F11A5F70E80B25B662BB71F259B5E94
12158C2BA4976D13A9ECBA3BE5A62FEFAAABB828E387744483E790FA193BB3B5BCC15AF9BD7E
C57B8D7BDFE8B4CD0A599EFD5368887FBBA0378255A15877A6C15C4B5FA21D5EE42E39EE44B7
87134814983DC09BBD2146B11D4F9C55180B997803E2EF12D3D06C3A50B58FDCD5D1A4660EFF
B81AFCE58C0B1655A14E494B80B784B8145E992A0FF14E067902F2C01A7AD3167B2AD7EDE99D
10B47B539C70815A3033098EFDFF7FF3DF0C911CBF4A94B130308C8AEA00F8AA32AAA92B48C8
1856F0893E3773E8E88B104C7DD3B10C7065658BDC0654CD8532841BBF6C2CF78D46B8DE937F
AC885670A4329E253407F4DAABC991713B41DE8FE23DA4C3A2CD0E4C619348B6F177712EC43E
675F524BC5811EBF1B3FFEAC1110CF13E4BF03D5CED5FFF2ECF6012C26D474DCD2D0B937B1C8
B5F5760A32249945886D68D93B466E2949CD9ECDB64E1026473E89F5E54DABF19F06F0C01DBD
4BC1D12ED8E8A8E5E4AB705C886256A023004A5073174A0CA605B3ABE9D0C0F3075D46438B74
1492305FAE6A6AFC548111348377AE5A80F8C1B8391239A91E84257E97BACB931120BDAD6ADC
8AD0AED7944B6C905B55251373C2AC3456B8675BE6B8020775CABB2C70C978A8A0A05B1FD4A2
3D1E4583AC475D299666165A04FE45617570FEC255674E46220F4A52B95D0348F278A7ECA043
22A6C46FEB17ACEA33ED65D85FEAAF2A4384CBFE8282C5E436D2F50F349D38F80AB8D8D24FB0
45B26076FD4E45943AC49C08752210329018412C374FC3B94FCBF1EA16C265C36C8327A69CD8
51C4F5394F4CDD85505D506BB5FF4A33EE536F23DB629EAF7B09E8CD6B8E0DDAF6D6AF35592C
9917D8E6115CD2CD8F9BE4AE7D6CEA52B9BC38BC7A7522ACB6454A9C15E45FB3B6D15F6DB59A
BB76C46C5B6FF8DE4DFF7B7A56C14089DD0B3ACA39EDC5A5BE103B53E6703D2B599999C216DA
FD61BA62A1ED3BC5EBAA9B06E82FAF7C9C1A53EB407EE87DF286B76F8C289CB1E4A126F784F5
5C337F3420D1CD2B575E8CBBE9B89A29C8D154C9D645B70EE3DD1766F6C20E522170E30753C4
BF4BC3DE9EBA4C233325574082D2F361E5A28F39518D521E537DB63301676E2B5B2BC8437180
574B0EC04531C797E1741464269B378A1356D7A09F07F75A3ACA78F233AD59072ACCF50E9731
E79FA31F76DDA6D7ABE8792128A210D6BC1289CFE87F79270ED1DE5C372892E41FB0FDF81499
7AECF16F94E9A1085F49016D72E7B078DEFFF27AD02FD66E78D4A88E2D8F0DFFE51EFE2E15CD
82DC4E500B65D65392695DD39612EC2FD8E2A6075FF51C3C2594C52A6A0B713151A095C9E1DA
4FAB63368BCEBAFBE12624E9A40F7B08598CD02B87D4C6DE43146F7425E821DD86905C5295D2
B94871A4B63B7A59CC94A75E26BED950D91A85282F93F59F62A27315776D63FFE06E6F4EF89C
E2CF42FB0EDBEE041D63ABD5456E39E74B5E98A400CB8F132322D6F67894D7D11C88E55FC489
B1545FD63A38AD0A5E4BD2554B23E0ECFD1D992DE367C9EA92529B460F591DF2CC5AF0C948E2
1286D522D685224F38F7289C1CEDE4CCA03BE2268E5946351ECF714E9C8FF0801F35BB56D2C2
B112D670A8CC8D2E79F96C1143E0566EFDD6CE76638E404100179755E110BDB666059855F77D
8A5070D60DB458614D3CFF0DA2166781885A8BAC63A039E2F1FD86F42D1C2DB7648800C33912
24D3E59835834DD8AE9B56A4141963EC7ACF0DDE116813FE6CD3C26603E8F2F85BCF47D524E4
1D20BC64ED10738D26CB58CD3691AD6E2121A49046D4286B9323B6A214BF189D3E3083921FA8
C33CFEEEF1DCAF405EC558B6E21DB5346C48C99AA65F73B5657ADABDEC54E8C75A549FC16B0F
F75DBF742640A14EE283C007C5BDAE351ACE9AC22902BD81949804496A3CB5E5B87A9BEE8240
1465EC4B527746558F92D8A7CC36F316B9C5E2EB8DE145460F0FC0B8A97B7F92A78A82AB6242
E8BBD499FE54CC1D19ACAF0221254FB1CDE50B1B6DD2C046DA1A6B0B9DB7D9A62B9B164DE7AB
133AAE1E6824BD31FEF25226FF29C7667414BDC91749A593387F0D41A69DBAE12FD3376698EE
6C534857E602D1C66C26F4DE43D84DBEF55D18D86C496C7B2956FF605515DB89D1FF0C04DFA3
77FC7E2B759CCF4FCA38A5CCFEB0F7CB03F18728F60CE2CDBF69FEFFB6111366393B4CE7E773
DF37113AA136C4C3692C475ED59CB9F1F5569FAD04D912B0EF419D30FCEE0933E44AC2FF4E4A
5EE77BAAFF79124ED55260B836B59C8475BB25BFAF81A29CAC12445A53D36164889D78F29A56
B23B9A0C4EA280DF3E938DC2D0635A171BDB0BD8B1B1737757A0B2B886B459263E56782B4FE9
5A4AB21820D7558ED647C5B268D952673ADB8E5F6074140587CCA33F9E871A0C94856BCBC8D8
646149B5B6F231C1600BA0004F63486AC3A662E23B9B4F63F413BB5EA3DF584250BD5A84AAD6
2FDC343833F779BC11B903F75C79ACF33401C3D5ABDA1B74261D0B633DCED0F7ACBAC77D708F
7536BDBB5C02775AA0F30733C6DACAD4A123CB7A3ABAA984C575387D1B1800CCD7D2C2B3480C
93A74AFBC188307ADCA67882D6ED182650983A96D1A6662E403604F758680435844C0083BB13
182E2684B1A500D31E2F14F3E56EC88023ACB464FF945B9DE3F4F32EDA7D412FF2E4E7EF9D72
74C83D82AC5A1A76F37FB23C953087F11F8D816270E0E850CCFF75E2CFE78C0F28F50362CCAC
E3AC501709F4E5C99F1ABF7394E3E7C3ED0C6191CF7D38DE6C066CB1FFAC435EDCB02DA4070E
EA33E8B92F7B6A1C2CD51479E61FA612B0145695706BE8E8D057CCD405445C98023E0A0AB056
586CB8BC19956BDEF0992E726679062D3BB255861CC0FB19A4D4183854A99977ABF84532FDF7
6873B9441E56A934860ED64A1EB13C8F739E3FC37EEDD7120FAE46B97611DA0D7046B4F7A0EF
0C1965873A13FD5B3A903F207E61282738145E63479884AE6303FD1CF98C2EE6C077B6D5EDEA
D540598B7F3D956A3FFE1B4C70B4BB7AD97B00851FFE8EE0DEECA8C360671C2DC40E5715B9C0
2352D91DB81590D7A8826780BCC0CC6EF6A3DD2DF9B89F0F0BE1BF18DCFB384D59D2EE6B256E
C065A68329BF7461A9809848C56A95FAD7B83CC3A7105175EDD0928E31DE7A75B3C313DF84FE
5C54BE31351BC427730D2B16171811CD3A90803EE76A5EC44EE6D4A4644FFA7312A5320E6BEE
916FCA9AF2F03242E95EA9DA23AA0748B1547004DD5230C93C1DB577E21C641286D159885560
BCC6BEA8017EB3C09313B51DF3F785460F367AEFB943A300A21FEEE17D8D98F321F48E383253
7B32C5A7190934C61549A34C96E59FA6DC425922F9118AF41EC84800333BD364AA5DA2F5568C
3A19DA3576AF00ACDE3DCFD9AD9789F6F055207E7D991B13F8BD654EE00DF8A0D67E9DD2FD9A
08694526AC4299238FBB9DDBE4B2B59D4DA8843ED518C92D3BF18DBA9F0A6FF2E81613F819A4
43DD540D9989E7C72CBDA5C599B5B2B5621BCA3F7AD14778338FF7A8890B99C023677781CF83
21BCF323E7A7A959126C4707A2193683E843F1F5F5DB9463A94C3D7F267636410446E4EF859E
54F2461ECCBA16E41768983C6F9B8C7F793D10D853EC6E12EAECC9424B2793C0CBE25088DA42
ABB079D05D32F6702954E371F91CB57C6975626D5FB818384F05DB7D582D531E2283392051CF
BD284EB9794CE05CA2F52228E9B402BD0ADAE9974131626F6988B117C167FC791D67F500C8A2
4BC8A0C29B404DFAF0BDE66B18D83191069073C7A780D3C60BC6A191218B32E8FA16281C8A48
C19684BB73C9E676CCBB1AA1678454EB66BE874117AED8354ED7487DB99738A5FE1669343668
733C1BCAA35C01CE43250974D4D002B02A2787DD699471596E1F544C30057F0C3506C3EF1AC8
FBC9F268A28EDB914819B8B05A13D2D4A3C75AD66756589E9C596598A4C358D709E28011AAAA
FE3531DD719891BC21396770F2E3EC99A9B01BE5B8F9C925F960C38C1F80F97115455EC8041A
DD243D8911AADD090A637FA3C2FC0D9E282C57C5206E34B9E0D3AC603E66D5AA08244261C82D
8A544EB1B78C0827688F393600045D070DBC076A2E7546FCD06A4CF3163D4CB2EEACF771B4A1
C538356D1AEA39EE28873990927E02F1885837E0AC18BEFE7B1D75E93D02E42910E837086AB5
66537DD369D14BE42793D713886269C102614AB4E20727BE62B00E3E4F7E259E9FF9F9B073BE
ECFC5AC6A42BF0C9285ECEFE68C5EDF117637BE248BDC629FC5C65FEA7FA6EF91CAC9ECA363D
E6B2C931BBF0FCD9CBCE1943E0221005271E8C720EAAB1D53BE4EA36C6F6D3584E43BEA55266
C4F956B59C1A1B4CE0FEC832DC7949E57906EA81FF7392644688DB35BCBC56A091866241CCAD
AA3A204FDD3E72AF5BFA87E9BA43FFDFB65979FCF878683499E7E587D82193F8AE6C67E22C1A
FBA8E7891B8C1303AC3AC9B418B33ABED5C045B842FD1A3D47BCA23A15772A5C8A1BB6652079
94A5C85C2EAA55F4F0DCA665796209D2BF55EE092AC226DD248E00E51B7E7709CA2C9173888E
B0216F90CDAE47058BBC5C39B2A7B151EE86A9139F8549E57CF9D79B27D25C4108B77BFD7EA8
508F3F5F180849EF7DE8AD38CA1ED1797BA6D877B8FFC15B150BC72B2116CB75D05A7D1FE5C1
34A04EEB0EB13487831811DDCD3D5F796803343A8BE1E352A92C9EFDEDED72FD5797C05A8543
E7AAACBE50BC2303FAECE77A177A628E968E7A78781B56502D5ACBDE6084090843668BA265AF
9A9CEE54509FC070A49346F6CE4A8954D4E8D98E66578C37C21038237B8230B986F2364B396B
CC22956C427F490D3D5AD91CFC2609C6CC7DCC9335E8644420024F32BA3DAABEDA9B2D13F7B0
9A8AFD631427B16B62021AF5CF6F2FDFDD3E466F56E66491BC5A623CF5AE6E73CBFFE4375C5D
309D79BC2EA37715A24B1EC0ECDBC534562EE82C0684A2E4228237CDC4FFDEAFA6723BC830DA
03850166EC19F297B59C1E8E6CD27448759BD795A56A73AB489A5373085F50EAE2899783BD6A
BC5C72019596874456A33EE6AE548927AA3451C7A86400D8224739CD1F10B5EAA8C06E01852D
AD7295825FD2F1A07852C9E04E6BEE8D2335BA9DD30B2CD884C9D14857D39A76CC1243AF4B21
413B4ECB18B3CCCE5BB9F16EA3D2765394285A777EC0246CFE42E5FDD802229D4D3397E5F265
36B7FB3F2FDD3FE37DAB3C02C2730BF7CB42990664095B42D142F6CB0E138939A69539EC1F7C
402234C9FDBD5A73B87CB3D09CC0CE3D09659F0030DE01831BE45C3F35296A94DB0D27480F8C
5A722132D93C941CC9D90906244E342136BBCAFA43346FA5DC8D766E32090F81B5D49819CF68
913922939CA1FBB895CD115A59D814007158F0D696DF1F0020FE05FC2A3145E3EE6B35E47FA2
6A9816A154442A273AE29316B9EFD0A092073E3DDCA231B951C8218697DFA829C8A2BF5A640D
3A3586570155C78EB649135BE3028EA3733C805D410E1970CF3B331D8B4F67A0FAAA64F1B11B
1C11EACE171365755A3B52233AC4B1C5677F3A4DE333B05B7A0334C0F5BCC5A71538A61078A5
96798658441B042AB14555625EEBBE07AFC5D32B5EAF475143BEA7DDADB19B0471E6C8B16C9F
7BD076BC549DBBE64091BCF0395DEEB54A0A44C5AF5EF5E2D7FB407D6AA1606A627D6A605029
94EAA1FE66D92565146AB45E8903658E2DFF0795FDBA8A1BCD1CFB4F0B2C95FCC26305EAC594
AA645F6797A4E0A23176C0DA4CF8F3670E25E550A2D9E934A8C54E8ACEC2B35C44C25CF4E264
C56B9210492DB8D6764A471A21090A2D0450CF2EFAA4B71C3D9C11B1ADAEBC5CBE5C0B200228
964D956B5E1851A4E91A943FC1C8BD38F508D18C9505C63174CB3162F82EB8EE7C10318C63A5
A22C4AAC3FB8C4B1644147238A3CF7B93298BB35C880F164C5788FC44E7F8DDB866D42011741
CEAD09BEA0133C19C14DA72727B4023815C69908D514B3945529F010FE1AC976034551EC1F2B
FD13B1944CBCA5E778309F235827B4F5F4B6B0D759063FEC65F1B5BF53A2CD115A7EA09825FE
7E26AC8BE9217BCE81AD202A91EC3A38DA229C71C65BA2F06A6D9382145767A975F3D576576B
DF233C6E8492C9614ED87C9A582C17FE3FD64168009352ADD47383710CB72371D85EAA09F1D0
1050E4B4277CC01287FC51587669665B804FF63D045FC1861F734B2BD494A8C6A86C6C0E8A26
1CDCBB81B95D5413823802B89F778BD0948595BFDB6745C50D95648A26950512ED6A492BC73A
B9F0299A16B256A356F864BDFD8B3B30CD9988F047B3668AC6BFFF418273B75B58DDD21D9ED4
30B6C84F7ECCD6CB4D9827EB7D0F04A3D313BCAB621D1E7EDEDAD6FF73489D9408A375D660D7
DE8B78CD245A21756CD0AD31B357F2C183347F56E10587B3D42379CBC15007AF280345A201DF
BBB76B97BE97F7ED799E0CA1098777D4421C6A4555F122D8DAC6720D8144AA41CD528E6D1A52
0C5EC06E1D83C6402C7C2CC1DA85266E2E6AAF9BB7C4D4F8A17B0F0F28F9F933B559FFAA5C18
632EE1A9A26DA33F923C19C390385B864E314F5CF8FA2AB7FE7A4C37612E7FE5BD6E829C63E4
08D596D8A8640C102C95337F581D057EB7BE5B4F33E3FD893B4B6311CF7018675D19A892C267
EBFFCE21BA02992B4B798EDC5547D2FADA5697973CABF08F60E3F3A55E077F37E9A4F4030428
2F90FB048BA18DB089A2B584602B9FADA7C5D5B758F05ED73C449CC482544F5C9C940CC24423
2AF7BE551F8E3149D3AEC5756772A0213A5D49070D686A6487CCB0F818553129096DFE8EAE87
75ACD48CE3862286FC5A2B79CBCB59AA8ABE7E5A093A759A672084C28000BF5C91DDBD9D09E7
881E42EA8194E8F544704302539F95065F7AC3E98B0B9C8C081F31395753C2CCF036B11CC9F8
5D2F8E10FA8D5512DFCC704D7123F0C4EE22136B2843D2A36EEBEA7F56FAC43CAC706680CFC0
90F51618C2DBD7B5689A5E8C57DF0D8376A4FCCFE5F9307BA30A19AE498B648D6DCF57E92335
7956398A0C9071E84616D1AB99FF1CA723D691DBC2FF84AB90B33E78FAAC08676298EB48904A
26F8BF55C88950ACD3DD647E1DD1892A9F84CDDA15FD7E00B3C13DE01CF74A290737DA6AE2B6
B2BC87A65D64F231BACA9D41A77C6799DC47811AE5A6D9FB013FC352BC8C19B01F620AEEB3FD
28A965E45E8D0DB0B34BE8427F278B62E2D03A980B9460CB4572BB35E4ABC27267EADD756C1A
334EF7D271EA2230B1A060BDAFEBFFE5CD960A4F290CA31046BA1AB9249E5AD725CCE89AC729
2206F9EF2D1405E11D948940E39C8145686ADEE80C3F4DBA74DC1260649D3EFD12034B0A9489
7C416B5EC98A3EEAABBA1B4114353C128E72362F6DDEF486BC85E933DEF29CF5436257E78D59
416D3F95C202C743896D6F69DE527F3F069DF4DB25A2F977A376A42B5E432618189D957FC25D
D58EB14329CE4BF94A46F61FC55D9557605045A10B949E844678D3A17D7AD6C6B2DB6D6CD065
93397B4C3ADE2FE947EF16B852D623CBA4079F211A217517E258920E5740C5B36842D5F53F3C
1F31983FEE8F400C8FF6DD6A22C40B74F9BA84AE79AC7888C24CC4ECDF77E06EF9800F4DAD6B
3AFB31B11BEFE7379BC23DEF891D98F8C1956EA273315346B38C5C85FF73447B31AB5849BE60
6669CB75F054DF0A5894C31226E964FAD0C4377E7ACA16A297FBC47D09E979DA4C57B0256C58
B5F0BC141D32A4D8087C772A8B2F1E8229F0D50D9753F7088DDAECF9A13DE8407A7FB4B7EE23
12794C31A265DDB2DD57CEB618F05D37964C736F765A8BB6D8A1375BFC65A5218BA5F0DE569A
5E19C22109BEA20F7EEB932812FADE9BB3FED40948F9BC927389675230AF2CE7C65EAE6B728E
B3ABF2C277FDC5057E10ABB1964BF36FA004A2E208925964ECCB39F79FAAADBD46BE5A8FB991
74D280B77C3204A80675CCF2B4458A111590F909FB9DE72901230A0490555A3ACAEBB9ECE41E
6F44F85E6F2D5367E0F6A724BEE5845994061C00C74E50060180EE2887C66ACAE262DB6E91D5
F4F78BA8A3FD2B2D0FD4A7846F8311DEA2CB6F5AE9D557DD640BDF64DB729304A5A66DDD1F83
4BE7A05374256D52A4CEDE72F2B35CF27BEDBCE85F313B79F4E5E15DA48F400B46F9E10FBD00
36369FD44856A50BF37DB97321C880C3AF3C044B9900212D735D1ADD025073776F5A15D04654
D8352AA0E5F9CA42245B4F18270C34F7608DCE6E4079BEC9B8A758BB7E92DCE1475783DAA22F
0F2BCC9E19B3245E6C8940125CF8E5677CF7BDAC1A95EE0838FC02BDD4C20DD72513A33C0796
D3F2E804EE70C7FBBCB37C4B422E6D6B690589AB0B8679FD15A2095D9E2A359BD9A5E3DB0DA3
2A1201BE64FE94C8CF7F5CC369FBEA5F2DD0D8AB0C0B0069DA111E8E5FA4A6E6EFF6306755CE
EC05DB533C1A140083A0F832B1801F60157B076EC17C9A9EC753633BCEC5A2914C0F6C6DDE27
E1A2E209B9413137A28CF6558D75B34C9692FEB3E02A6CED63F49895980B0F9611948714AE0C
37473275785BD0E09A6F4F8302BD8BDA5325F9311C4DC3190C0B238235349A06785D5E4F4468
E41E198E537ED9F53A15F59C69B15DA5FF7942984D5834BD0A2C19886B5520B3E11C9B7CD954
4CF017AFF30789C06A63210809525E5AB9C87D09D272BF6A564E89FB5D9E3E8B16EF3E46B909
83DEAA2F32C7228A1A5997252258A017C74EF3F97F6127F8D8EBB4868268777C4D387349CA70
CB1BFA04AE5432E183BEEB5797F150E4500FB221E5F53EBAAEE039DA5CEF1C2C47AB7C8F7409
5188A2F3409919D86079DFF4FB854AB52B0A8C057507ABDDD3B29F6B472D41D78425CFA75E87
B5A5A9A011BD582E363318FB437A94A462090578B6D57B1C6FE3058D4F0842D3A2C8D9486CE4
38B83F45ECE9A16B73E426FA1D4D660B2B53FBE7BAAC6C88E496FA537EA0FB7A5DCA0E073AAA
7F43C54B6D2EDA61230654C8AE237492DC15CBC6272EB3E0101CDA3FB81CDD49736DD7636A73
CFE441E5CE094A5386D4B24CBA3EBD9BBCDF03C3B54FE961F6C7D2304F0590AFED81F21F9CAE
B17DFF1ACAC119E7479809F0766DF85D35520BBB4DED8C01BA5C7D4A1D338007AC6D73DEEFD8
197C5F544C4963D8CB26D11DFC080DC0565D9538B7044637B28A67D7BE53134BDE3540786116
C5D98325C597D1AB96EA67CF70AA523CED211A787307F81FC5BA2234542ADEC655380738A5EE
60559FBDC7B71D9D4ACD296F1120F8C5D49ADCB3F8C35B69D2DF78C5BA173EE43D6AC462698A
392D875BF9ECE9874AF6FDAFA93A1B1CF0553831F1EC6DA49F8406355BD6DB61EF3BCD919C2B
8AFBC71CEAE3463CC01232066A4AF8171607EBD9CB7438E231D149ECFB1FDCB2E7630EC356DA
6F7C2757CC8E438E0E5FF9948C37C2B995D8FB89BB789AB001988651AFFE767D6DD59F4DEF7E
C9B8014502CBD16091DD100E0622D72DF3E85F7CC7EE13C45B065C55644219BDF1757FD78B42
8422BED30E66222EBD1E3C950D46F1AC6A78F7F47D76F7627B0449A1869E43DBB5E105EDF91B
52CD63678358EB07666B78F200A53C9CFBC47377F8DD616F01A5D3EF82DB0FB79C0991803851
01255C72F10EF1230DC920582152813F9CBC5E7A6DD58F76F01F2B4291B00B2B312C2AB9CDE6
B46A9D31965343629DA8CE720AF956C1FB4FBD9700FFAFF48EAAC3F9289C2D98C31037C563FA
5054897264AC3E1F77C2A7519EB8F986D40DA5C673494E55847CF073EEA2F226948252622B59
C1F21706A8F6473EAAF9E79267D059207FA78B5A6717566D1B533640C76F3C1E10C91CE63FC9
37875FE4D64B15061BF178EF7F0014154354356DF9B902EBF154A6D6F4353BFC88382F3EF8A6
214F2AB83CA11B88C864F22FE772EBEB6A117EC8EB818072F26088AA63F3D2204B1C311E9CCB
14F92AA1FD53B04D91C1CC23C6580B1C66869D22D2E2D158AD52C6AC23AE4A319BCA941F70D9
9B2CDF9EE6ABE2195155EF622143910EF157799B28067DFDEA6C636EFADB6EB695A89D1EA355
8D1AE699F4665E3A96F5E51B9F32F1474C5411A2F193AEE03F61AAE43A7944713A064C1B42F5
0AF217623B82CC4931DBA404E00979CED4E76E7B308EA4B6AFE1D0F22365AEC1C34C7582FA43
3DCE534BDFFF8A6949B93A6F3EC1BC60071C682B41284203153EEC4EA2B278E6365570CD1738
0449ECABBCDD0077A0F10BCAE3E4F046DF648CCA284E5EB6A6978FC59D84BD181DA227EA440C
B1046CA9795B70803F1AB7931A714872D745A4B23807F3DEBE90BFF34703749614D92093B3F9
B414D3DA62AF0976E4A3D3CC1BB1144C1F936B823347A8BFEEF2B654C7F04DD1270C52D67ED2
666EBA0F392E6A01E57BC5F1D64BB39EB73A189506FBB4BE427059FC70470BCC7DB17A99A5A6
467FCC49872B7600C82872CA340E88768C4ACA1851556735F81204F22F6E3C91A7D20FA18152
96024B6A4D5AA8E8EA47C4937A5D5EF5356FDA5955A8ABFC9F0ABDEF97044D42671CD309CEE3
363652D667CE3EF427F20BD9BB259C0C7C6E0AC8A7FDD5B96B4271467038A9DE88E68715417C
9B370E3D6A5612784F66DFA3A13F8098AF8472C0E55C157CF1B6DC3EEFA207F60C42319A78A2
C0E2F06A61FADB69E35358EA158755B589D2FA6DEE284FCEB8D2FA9C22E46910726C608CC2DD
EA5AC2319405A0E86F8D318E5B1F545476F462FD6EE2A9134B65DD4EA8ADA0482E817BA9366B
F96248D14CF93BF54AF562FE0E638A395091C440DC7F17D8715C0556A921BC8B6B2D78C812E9
1E774420130F1CD5983179D2D5F21C67CA10D292642FAE8AC151720B715CB270A689514CE939
1AE53B8A1D146C1327322680B618F280C302919B7B504F24C85A0AD565458AE8045C5BF65028
A1433615652FDE0FF496F5FCA5A0C6FCF8128C38AC9CB9E024D1B1752EFA8869208209026194
9AF3AA782DB72D0757545F3F9E3AF4AC3497DCCBEF653C367B3193E7C5943B30019E2C0C847A
6D67D2884FA9C101894AAAF32542EC6CFA6E9366BF6D1B62E31BCE36E861A66C2B894CB934D8
27B8F6D579C295C65FB0C3A40B5FBDE72645ED4FB2FC9E6061403DCD690B7A4B92A2E824E67B
E20DAC7D70A8C61E8A8A8EF656F53996B19DA4D00C53C12822108A789AC1B7324CC15751D2AA
B04E1D44D5768E0632CDA74D6E97BF62496E7B58D426A1708E2AC28789153E298C8970D50934
ED95C3177E242AF2AAB52DAD7FFF326EE2850687F00ABA775B9F4B50B4CB641C92B507EB3043
C51BDAE448A3DE29F0910B08BC326E0ED6F9943786DB3F037D048F9651F494D2416D29F69B3B
74A72F388290136E98BB3D7D379725EE0ABB9B10E411BE61B332BAC7582D01C98A90D0BE17D9
375A88E95137ACBD09BDE61929AD14F090FB2C40EAB3B6D62A3C5A0B0E16EA9027ADBC38E3FF
41EF7AFD654835DF481703E1AECCAD038D3D3D993F5F2C9A87D7BCA67ED52E8B72270F2730A5
A227BE6EA49FB2246363B3A614A44C793169B95A8044004125264DA64A595212746EFA18355F
F5644293D9E770FE03DE2E1A98F55F31F09FA6087E73FC309B9EE237A5EEB8700E9BD2AEDC78
1D168A02F9D928BD52806BC1AF379F385C8A26232C854ED78A646B0D7BC5905291F39FD7FD47
56450302F70A353B4282D82651AFBE7C185A55CB01C06E9EEF64F625AA0530B7DD636ABA3BA0
306D9729AD22DB9AFC6D679F36295C5D3DA10E6B3D885D26FA986E5E647F79FDEC23997E2103
8D55276F6F6C2024E1F6343ECAD94CB4825335D895B81196825744744A817133C606D8761DDD
6A926CF51C67961A6C929AC47BEEA37C56E87AA569FCBAFAA140C28A1AF52ED5D624237D786B
61B4E4F3BBBAB58CDD07182BB6B01CDF7BB767B3D2F88559856D18FAD30EF4AE74A7E3955702
17FD832CE70AF560DD986FA751E9BCDC741F54A30B7024E12A67CEF84DCA3ED76135FD1A56ED
25B5E4CC8EE5831FFCD5DA27646B872E0DCF0B565CAE5CBAE8ADFDBDE1F455992FB217C30FB9
B0630B1354B2BF05EF05B8F3F319A8DEF1E44B895127ABDD89FA6B6F0D7AAC5348B07F477742
4672F8BBDE0D41CF474C4C22414AEBDEAE24D952A92733695BB5F97C8AC70D33B020A316218B
DAF6067268A58A66DAAB1CB1770979E3C66A8469643A19B037EBE947FEA3E4EDD1958A84C8B2
3D111710C266E038736309E8A584FF341122D16C5AA5BED1218895D20F262C7851AE54D5A4B1
8DE60369B2C0F7DA0E5A4C977525720A842C555647299E905DC833D2938C619530C013B13B32
C5DF617EECA8CFA50BF157599D5A7D422D8B2A28F577B44EBF35BC758B267464C9A52E7E5EDB
AFAF2AA1E96FA9204808475BC6F4ACA02E780E23087913B376FE70FBA21ED9BB3BB93EC8523F
50316B780779B4B59E125DE8103DB1689434B910C4EF72BC28975B0F4E32BC4D5F922C6BCA83
082A4779B20B79C66C89F43DB1A9E611A2BB72DFCDBB58E565540A48D79BFFC1EFF91F88BBC5
12FE0BF10018F9FEED8A58DA3A3B324FE15AE7AD5B15E807827DDF9C52A216C7305E3C99B980
42886D6259A4C403C8B299B70B53E479B02BE0878E5ED39D5C38C67EEB63AB798AD80720CF8C
CB9F9BFA2F69647555FEDF1CA44AB5F1275971C913688AF1EF727A5443F0D89D2716208A52C9
99CCEB4766291C617B57C0A3DE967797DD89351FE798FBD3613AFFC498D7F1E1EE81D3C43EA5
BD91BDC3FFE681E0A04C229A57F361AA7BAC197C5494C067CB30B85622050DA845C3A55B150F
D64F5A9C52F01BDC36DBFC86A64E0ED80E42A82DBA9BE16BEF3467EE5172BCA603524DF29C04
31F21EB831B3EFA14F3AC5E701F4E0D178A2A98F5DE4B549BD2DFD6865C906BF055581D8D55B
8856497A3DC42AE669A8B891C7DDC48EEA7DBB450A3A6FBF716F7E07B2E7D9285F30181A7FFE
5178359C8342F187D79FE8361EDB4C015847F1D30983F5F521E8454031B9464C3BDCEFF14743
731EE300A3ECF93FEB2809C72F179F81E3204B89309EB7DA8A902E0640CE975756F649D29627
D4C1E0425160178046B67563CE28525E27D35FA711D7A6B759776ED4E9FD19C9ACCD3FBFBA5D
3775DF516FB6D32F572F171BCA8D72F9B0418E093A8F4608335B30E20656C9B51C5E15E8F3BB
DADCE2C62A9E131F96BA3C82B8C3CD71DE77D7A79D39083948AA7A9811E14F6C97D666C67311
9605F353173F8A9BD21F15BD9596578D13E8157FDB1363748AFE5F930DCB2C46C29367B8DB03
89D8A3EAD15CD440B5D5081F7A1EEEDA9EE14B2EC7963C5A6B06DC93D5D70F09ACDB5F4021D1
5749CD2EC4370EABD2546228A08F941489B4ECEB46201E9351011B62712718ADB5B3D78861CB
089164224BE12BC1D26118A5C8AB5975CC7FD2A78F67F16DC7DE11E49A421F417206AC02FBA3
16C2E74E08F23CF79713237841F3E4D63C7CD2BF37422E9B2EB8790403B3CBC29D6FC308839D
D12C1A04903BB05F8F4E8FC9F8E7276825CD63677F85F770A47C471FAB97F2024B3AB2EDAA9E
9BEB720A873945673B65437C83CEC4F82AFB5780843CB2651A193D154B6D915CB51914AC5A87
2340FB33DD800EFBCE3865B64E013242DB914E68DF80FF64C08FE8577FB51D584DA704E822F0
0301E99773715CF6F339A20331AA28FC6F7BCC161E3CDD112E8FCCE85F3736C4CAF57A2AA55E
8785320E30EE5C83894B391BFE7A4A3959BD0A05675BC767B301F630BA9BF7446A0EDD3D0B4A
A940F3C65478B4789BC270708469D3C5E4003CF0D32A22B6DC0C244137C7A69C84199112F82C
A41363F7653EC4E00B61A91398DD0220387B33A4BB5940658341C6842120A6E867913C4C2BC8
0572055E3E658A0E54B180B5FEBD7E2C807EB3405BA0354A736B66322BD912F9F2E035C6C80D
FB283EBAF4A60D54B0F734E511851B573DF1EEEA66DF5C56EC4F8DEBD068F8A25CF1DD8172FB
84A74B7EDDC928365AAB50164FBA6AD9E2DB937E6F11C6789822C57C13D549F573DCB4A91F27
284D5FFDB26D3E85F125A9FE88CE1086F85E74C933287EC2018F2DC2A1015DAED806AFC15751
D1BF88EF548F8F6363C3B5C2C50F8FBEE91FCF530657B5BC0F73EC8098B3C974107F761AD24B
3B11F70FC507B322A31937BF1D79E89C541ABE8D1046F6DE53B414A2C8AC6E67B411838F6B8B
BE2BBE4B30F823F664AF3CDB2DD774472ACB6BCF049C75A4CDC5829B95455267BFA6ACC1B79D
8ABB84BEAA758CD6441C215BD3E038404C690D28B990E7FD60C319CFC8A4488332AF851C0DBA
6D5F3ABD12259D30216C490C01FD449455B8E0CF9B09CE2F01941797072A583FA46A22493E45
65C33FB45576665A822505528BB8B56DB8754F91FD96A243C4D54064554A348EE5479B8E1FA2
5E09D72682F7546E0D7485A685364E516329C7DA8A1312FE1468F24030230D3C7047F7F99FF0
1A278BC9242CF691D6DC38D58CF2597B34053028A2E908630733B1A78A8D4433BE0FFB4E0D04
07E0502AE502F39D6C952DD7CB39BEBBF32BB021C224188613F91F702BE48134D7C72838DA52
E73FFDF68373A21461148DFBE39299DA2EABF8F53B58F481580F31B462BC5595966CBB521968
7B7000E022D3FDFA9B85F8008F900F5E7D2F9BA2BE24CD23F6ACAF05458341693850295875E4
FC20395CED3AE3745264FB2B2AD3B39196265B050775441B3D0CD13879D22B8AD14EC4BF3068
8987AD5961B79527158194BFAE0CF9C2601AF328DE29E37EF394E3C01F149895ED74DD8CB81C
A009816D00A4F9EA03650905587A1BD3EA246085EE00A05F420AADFBA99772D733BE2AB51A0D
00791B79139CC6B86A1FAE75FA46981310503E4AC70390730A61841D042FAF6AF7FC3B5CA74E
D9E520221D3EE4C9CDC175B19FE73369F65D1B03D25170F6F1BCE072B57EA2251238C88C5A75
9638284DA9998D1E7B364D52D5F0A32B3595E2C2CBFE6B892A681E75727E0092E399F2A74E10
7617A80AE2B59D8CCE2BC1AB7AC0AF8146BAC94A056552419E38F70A5E764C4F155FF7A20096
EF72909045A399229D64A06B52E7BC04086A20C14E8B8AAA0EA133C2A040FFF3C24F0D4356E5
4232D297E346A5F291CA8B8D982C45D28D4EB7042D2ED793234CB922C121BF2ADB245BC960E8
0AD44642E849629BC11EC2B3542F4FA3285D98B41B5CD3E36F0A7B2B55B9D549B10FAEF4E53D
CA7AC0F94D44C23BA4A4F6E3970D87D1B23017FD808A397508D69FEE37AC52C2EAE0E1998B0F
728CFFF0B75991DF7831D83E0312806E989830463265DC66D678F6011F9AE565EC657541CEFA
4CBFB7CF3A5E203D4868BE25BF20DA67A763CE26C3E32CAC8B6BE38ED271C4C0D63FBEEFD205
E58879095886B4A44F59C03A14DF1591EEB8344FCE43C7474627AF392FEFDC77D2707B72D89D
53B9360227304F5D5034A496406BDE268E8DE57A1C73B56A0BE042B9E30A564760805DA81084
5D248B35DB5FF987FDCEC92A8CF63171E5174967777DB97C4078AEDF3E46BD8593AF73E0F0B8
C613AAEC0ED234FB44C8C347CD3B5449545F3DB7478A9FB4E9CB9AF8DF24D8BACD938D0C9C64
13DE78CF2056481569DD952DE1803A3001F79BB56F0C3BAF20A543148540DA68CFC0428C8810
8BAFA097B4B13A3C08DA4DF3D9AF71530F08CC7A1EB8A1EB1E797EE8F4CC7C20FBC6326263EE
61BA9F9DF852343BBD250240061B86251F2009ED077A464EA7B9589D7A3141FCCFC276F82FB8
D5134A2E966C3A6C6B7452962093CCCA8FA416CC1532D23EB979A45DDBCD9644272D1C80DD62
49579A6A08681A63B5420ECE051440F8455E09C76ABC644EB44D48BD664CBE676342D5FB6AF8
7192353BB269B298ADA525DE06EDF9A315401268A424979A9B225C249F45EE98FA8AA569A423
895C41DBCF04ED40AB90A9902066D17115F6A133CB2F38D70B4D0E134FA2C640B97F1A911AA8
EC0F62F4D6B47E5E47402B0D8B51CC99A85A90D89D57D4BE2A4B5BFBD263ACC264B7C1086617
A3D39ACD31B52F942B4DC908CDB286FA8AA94DCADAE7BE78688E005D8370311E04E0CCACD5B5
57A5507BFFD448C496EAB97B512EB6D469344C64F6905F83E54704FE79BA112351EB63D52D74
5BC4B60EEFCB477462A90E999193DBBF25B3DB4C2819654EA1917A797F07CE82993FE32B6945
ADBBBDE08767C1FC20FF39A6B418E1B13BF316CFBDC5A1EE208056E75A470A9BD0E1726ED40E
A6A545475FFE80165BE90BFCA16DD7063524FDF5E3F577407AE6066017DD3836CC81B1630833
D8E6DEBCE4FEA3F535FDDE9D9BB0854C5A8E79EFF4E7792ECC5C3857FCF7E3618101EC595D8A
4D8E0EDCA192E7ADA2793209FAE8B2842ABD85E1105DA6C3BDBC029663CB5F0217E21D61B952
AACB64F203E5247166F717FD6312D8551FABA24347D3E05BECF141E94737A843B4E4CC133CD4
AA32840B9E5A3C73A376ED8721A760F901859318D1A88A490349718D5EA93AD8BAC4E46B6A86
1892D77A50616B8E50BF6FFDE63A4CFF2EE8CAAF39FF375039785659942774769EB49C977C92
A29EB0CAA68FAD0423FF95C1062FBFE7BDFD971BBA298625548BD4CE475494F3AB1982696EF5
EB9C02E63EFE933471F5A5D247B694790BB41B5645D04D74B2E232C295171655976885818718
122E12AF0D41CE9EAFD69577AA5CE5E149EB5F743D43F1864A8F49E650D8B2E1AB03E2AD531D
2F62644C07E17FB922137F9BF72EC00C6A5377CEA110CDB40FCC63B5190C05284DB37B335E18
A36C4B7908B08EA0994246447850BAF63CAB451DBA50ECDB4CE97999AF0FC8EA388BE0DCAB54
E9C8C3116B5DE896D0BF5FBF152D27C29CD5CA67779AB6287264194582F8A049BE5C66C19759
C450C1FEB99E8FB0B9AA56284E14DE918E9F8B3C4E00807D2F48401214D4D8D4F6650CF17A81
BE3B24ECBE974AC0F447C95DF1BA1E8143F97340E30F1B2EFA2A034CF4EB71165C5EFE196957
7945A7F0B83BB948F97DFDD61A36F29BE740B10AD685144328FBB4F5A1567EB4388DFB7A7C04
C0ED9094FF285C31E0564F0182DBFFAA82BF74FA5E8EAC62CE6F0C5FB09F99E1FB38921A0AD0
8CF7580346B9A339466D4E5FDD6A748D0E02DC08DE7F3983ACCA36D09B46B9AD63BA9CC18785
C0BB06F31A47F614B98748B6924BFE7BD27646D1767039D0DE8123BD80703F79E2FE0E5EDB69
540BA8B651121D974E134C8D3231DA8F884C639C2CFE3145BA0D77D4DB89983648BD8F491962
D32B15CFDC5C6241F5DE3460FB8439E88F1043B5C0A3D695C30FE0E839EA58A16B4E82B0276F
96B31A3F3AA0DB19B6BFFE725B536FDAB4B35D92003C5CAD519F662648A86BD46F9EA17C9098
DDBAA7AD69AFBED933F2C9423C7B205AE7D69586A5F252740B7FE0C507374EA51D0DC8A205DB
F29B1A73B76F1E5A2F75F4195C83E20528D672AC8FACD33B9D318A7E998E57393002D933A7F7
A105D128A3DE517A3CED717424066AA6052D6F42282B12B11690F1C78973A926A484785E836A
7EE8FE08A49ED08C3C71EFA287AC76156BE1207564ABE2E602C9AF06ED9A4AAFB36B08E33F9C
C53D3EA9721300519F013BE8ECA801BBFE76A44010076EF7C855EA0FA43930BFAC075B405A68
5555E8732EE270D81BCA1AFD7F57C6EC3DA54D09DB7CF1A1D6F6CCCB3BA5AD119E59BDECE36E
D37049F37E649FB51E656A3E33A3F9214ED1BFC132B0059D96B45BCF0F64372DCD723C3E0AFA
CBE328CE01EBF1CAD61DC1237470C74E62CC8AEA2D6F0DE591E408BD1B0F0B2F0573C9F20F12
93612F2EE08FD65889C361D3329E7533E1E98621E02664BC01F60967884EAF5D7B82724CE884
C5E096944E4526EA83F940B802919B6FFDB6270FD1D54DE0F122F5D71B0158A58CECE4A30251
05A362B424D7761EDC1C8B5E9B1DBFFCD3F40738D95DCF1B830B48982E97120F04DB052EC5DF
90AE2DF866F4145A401BB2478436836FD8FA0197BD3C8EA81232D4F0FC4FCB1BF71C9EA07FB9
E963412976F4AC4C7CF4EEDD1F4995F1213BDD71843BFB1060225ACFDC40000EAB5879E8A089
D20FD6FC117F21773FAD24E6173FB865468742856F3A831C1E7348ABAC545E3E0F1A04475A8F
3DDB5D41B45FCF64B9A9E1D08C058CFCAE8EB98798ECD2A47718A5141E521A0331368CFEA76E
C31104CAE1702932B0F5AB412E82D4A468AEAAFAB2284ACF3DBEC56527960B6BB8F6D62FEE98
70CD9CDA98E759CC94CBCC3721752C4A26D512FB2A3F25C7B12FC81047BFB39D2B726ACE5243
C99BFD34C6928B5193C83F13D682D4BF38ABEFA387EF3F06D9F991FBF95F0E344BB35770FA72
4788AA11906C76BF4675BD7447627100033C81BB1565E7E1508A24560D7A536207761A40261E
178A68BA7BA0FA011305A9FD598A8C7255EA30DD8627314321BEB5D42F82AED95EC427D448FD
DEDBA1037F340A307B233F928157C45A65A0D5E4CE19FB7DEB5D4D80DD9B85F4F21F15D9380C
89E28803C2E21A7197F24BE29A4937969294D16EDCF23DC1B4C079EA5F0155AB8D127BFC5FC1
4C17AE6E8865EF352F9AA071EFE319E5FD9BE8C6ECF097C32C80997589321CB1993A0033BA4A
37DC004079E84A857A6BB5CE15C92AF9AB78931E55F5BBD79BF5B366641EB8808FF42F37B04C
E7F61EBEF3E95F441A2B3B36A88C2C190383B9B27A8CCC0D0A2073A0EFFDE810001DC841ECFD
42AE5FC99ED5CEB48A7D21A22267AE993C2F12B612800B425A02A5AB5C107C33F487DB03F041
6117A60EB3E9D191DC03D72A58DF45E5E583424AB2B5DD3831C0AD9B1566F781E301FFF50472
8CC278557F2F824E660009B551C1388671B5CDBC4689AB51A8005921056458BC9C762DD1DD64
5FF5A671B910694A00E901D2CC90382DEBD95A2B78503A5AA613D94683A128122B6D78C99961
CE91A8F2FFD0172554A5CD8A549FC9C528F784BE166D221559AACE3305012EAC94D39E91941A
F799474075DA9EE174A4C4C0D38342C2ED9E4D2FFE4BA06A7F05D7BF4B42E5C9FF7FA0A2F7B0
26D0D03022A30CA38206709A6319D23AB3498A59879ACE9057C9D8C7C265A474C1E4AA0A578D
A92FFDF5AFC7D56CCDE4739A97FB727AC432198A68C5AB1F93328CA228B31F816B2BC997FBDA
AC9C9D06251D721717CBFF88FCC309FEDF170A83907C8D3983BF45EFC471BB13DB6E648A2BE8
D2D022E912F2EAFD2938A56F661E7F977A8E7F953CBE2124E34634C794CACC2C7C4AB4E18106
AFFC3B7E9E4B1C46E3850BEC25620AE6054FF5EB282203221E2D951076F02DBD2CD57EA2B6DB
7415736DC0BDF303CE9086558F4A9B6029A52962442D7376210B7A0C6F83526CF99AC32B680C
A8EA69DA9E1A44B3BC74896595B6103AB9B0C2B9A9FEED64CDEFDDFD2E6960A87E0AC6C2D38C
F68EECD42C1D43529B0B8390B6A3939ABF2456AA6C48A2CAEA68A27FD50BCDFD6BF40AA74F73
2084583A32A1958EC30D7972F27E99357C7ADD00C9CC9EA8893E19CCF80D7FAF3F43B9711849
8F27B590EB84A2B5C66742351D41CBC4AD5D5ABC4BA2906B5E1E9E0E2B32582A527DF9959B5B
E9ADADA909D8EC87D72521B4CA8F83FC70644649EFD2F9DE1A39263BF1040115C124A78EB5BB
13294DCB45DAA6BE8D0ADDFEAC9540A131427A227B13959171899179063E7BDA4473242C5C53
FCC9B22786DAC9F7419BB75FB6AF6B861F1929CAE44A2D821D85A64B7A77C1C32090CD170DAD
FCFDEBED530522ECC98C73DE70E6F12D9E500A5481B5E67B019E9217D286B085CE209E69546C
3C64172BDDFB700E37FA3130AFE862C832046592F355DC27D17FED353716E652FC4CF5A21DD8
14DC9577B6C9EFF8FDC0FF740C5B06FA615FA52031EC81C6C46866DC0F969EE6094555790336
D7AAE17DF424D11633514AEEE26E2B24100229D42F4EC5D83B45725C6F10C27ED1BC1409A0BE
727C3F1536CB63A8A9FE42903B186CFD220705489147DCB23AC437EDA09BE094F1674A1E60E6
2E11100F2151063A0C2E28F8D02A88CD7C51B15616AD853C97F7DE1CC663EB1A2AFDBF3AABF6
9D20B9BDB341CE2BD82F79B4EE179D8B858803B8B2986430452E6C8E57861E1CD326D37DE237
A03686AEDA7B0E6661E2F83D161CE130355FC1572D99A434637FE1170D11073C0892AB40E3C5
577A02892D54BFE11BA7905910568B3DDDBE5E724B6E72F963C9920CC960EEE408CC63467007
EA32AB97D735486B61585BD8C425D85F2E6AEB764EC9499384B94902605FA78661E81ABDAF56
D737E803D63C7D486736A4D0062C53C54BDB0E2FEC00A88EF46D98A54A71F1B5F2720CD0EACD
3838BF75A9A4B170164F37BD4A6A25CC06E9D0DCF820F182298133BE9D6383B814DEAB6BD753
226271C5492E618E5E1BBF1702D02C1C3DABBD01D2F117883A5263722A510720B15CEC235E98
2CFA48CCE1190C8E9A99757E4879779AB61233DC978495BE204B3F78674E25C76E2150F3977A
576201658BC375F296BCFB4D8641CED1C2A6D1870B84B38416775865FC842C738BD66EA33C11
D7D7EC4A1D0325BCA2FF3F597CCBB29DE6C0D59AF0899D15697A5198FE23BC5969B5C6866FA7
8249AF5F38F8AA62357F82A7CF6F7A9B23921749AFEB506DD296A17987D7AB68D67F34F75559
7FC00F335BEF7CE5FC4156CE2342617DE781A77F7994E9F194ADD4B0845CEB3222181505BF74
E38F04B6843D1C361A9607C164BFF55E5B0691715C40B40F3583FDC7766510647459C6DC2314
0353999B4C742BD3CE6A7767766EFA2197A312F13722612BC0AF2208CDD7E89AEDE43A74E52D
A39008B9D9D635A9C27DFC83B4F70DBD78643847F2A4947936A4A2790AAC1B2E575BEDF62EB6
E6F0BAC82C25D45AA176611BD67EAAD706221C87C4ADEB232AF930A7D4B0FB4CADFCA2CC92F0
E2384D22F35C454F1522106E19B278963A84B63471D575689806F4E615C2AE877EA92B1AF259
5F63962BDE1FE063279E2E2288FF1115509D131E342C4B123AAF5AB46D77382C975495AF6FBF
ED0EB7E0FF9D2228943893E64404827165FDC3CD0F7150690790C4B1EF3359187CB4B0B854FC
3908891F09717084A54AC47D5D5D010E1D7BF5E0187EE799EA53BD599CBAB0101E75A9C8D344
F02D01E7956AF1F561D0CD541CAD3294820290A93F9A791FEFC5A63F15E2EA1959FC44B97EFD
FC363E264B791589B11183DD4F804704785A6D1F24DC7F364B690E923652257C0BBAB9F0711D
85E6EFBFDEFC0551151302E470FC0259FCA9F250A630CAB40D79208D25B3B1E4C72BA2EE404E
B4597614A0FE926E08909A4BD7FF1FA57DBD15C65A0DF1D68E5CE40643F66F721EFBF8519433
508E2B2DB53332B36D6168C66DB8EB6496D50B2BD81FFA2C2E8465A290A6B71763D2809623F6
35B60147C4B2583FD7A22E2862E29B382071A059F587D985D887880E3F48C08BF449F95611A8
C71994B5E8544CD10736168E1A140D9F1574F04CE9744F61936919E09584FC20D843547DF466
20A12D652E6ABD7211A1C5AB678DEABD86A4D276F52998098F9899DAA4EF6A34AED9816D0BE8
E27C8AB84DE08D1675C32F54B09F2EEF59994CDACBCC0C3C6F7D130C1DC0ADD63F4C5C8029A1
2F015C1EE3F0E66867E16669C5DE28F3882A188BD6EBADD07E14DAB240F857059728BF037649
315B0FE46D204F083AC25103E48E1943879BED4A82151CBAA0A8D928F7CC07375D88606ABA23
D4222A86DF99DB2F24A6DF360A0E6E1BDB6410B9C31A78C511C9F1D72D38C8AC1B873DE192B3
60FAEADCD2DB82ADB8385A07DACE371FA7E864E5DA906E2453ADC24EFFDCFAC9EF58D0A3DAAE
247F5B6C44BB262E9C9A0D91D8B0DBCC8368D0F0C71ADC1D1A3E8FAAE5F9F10E56F1AED5FE3F
E02E7C2A1626B1AB6782AE2BC705A50795F7D52659D6E13060E11D8D5796DE666FC67906F681
E196510A5A20BCC4308A792CD12CEAE4363F4DE5CCD1B6965C1FA70EE285BBA141D9E29928DD
B5A143F8B3336C00E1BEABE34C233032B5E2E62879D2C5B98001C5D985E2E2F5C7E7FCA7F686
2CD5B4E968F889878FCFE12E47A703272D3D621DC5032D384A4120CB3767E66E13DC4AEA2A2B
B7B6A0E3D643E8BF82CE856573DD11D9A71230D5C30CC7FCC6BCD24F251ABB99C7A1E05C1C3C
BCD15C9E042F3887E3365ECDABD9A9EF0A2C40AA05BBB4B8B395740EB6A2B06649B4FBD2F611
6C342F858462A08E176776491208D13BADCDB2AED955AD550E0CB5D5FABC9FFCF8C3DF4CEB50
C875F40477B230704FA5BDBAC41B3A3E9783A355BFEF86E7D4E74E08D8BA9B6EBD21384958DE
D4ABEFEC8AC1DA8EED48901B02CE547DF099274A4BE358BDB4A7306A95837D82FC6A7CB79498
16767BE95AC54FFBE8F4E4D3D15D176FD5A2190D42673C55B9823D843B7CFF474A6E5DF4C09A
22348D49A18499735669BE0E4E2BFA7E508FF570E2AF79631BBD42FFCF55396A6D318E8DB182
8E4D5D7F88E4BD02E8800E17B3A87E09C57E51C81E7DFA5AAF03F384F630E6BD5F8560549E07
1CFD23E2227BDCF2311EDD0A2AEBEDF65CB9DC991558D11B23FA93E125B441950EB5B1B092B2
6FF4EAFE21B3B6BCBB01E68F6EC65CE5A7B75617F1DCC5CD515EDD464C20ACF9EE0D059B30BB
2B9652F4AAE122341BDA849F9CFEC7F8B0BAB82010E6D732EE51F0D5354119EA2DEE8D15E86A
AF21E86267B1C207B1FD850E1F50CCFA27C5EEE092539CAF061334FD0F70CD0590F031992BD8
101731BA5AE40B84E7D8E4CB8037A3F52789A1D87819C86B6B4489CC96E01A8FC6E355942C95
57877104BBCD9B00C5E6A0F6BDEFF6A8956A57CEC4761B3991B1F92A8830F04A1CE2516EFFFB
00B0A30F94D06D9FB65B18DAE38750E463E2CFF6A2A6AEE1895F990293FE4F8DFB1DB624B253
10B5183F7F3FF263B7879E3C2F8CD05BDF6681D99F64E10BC6B753249FD8C1DCE8E85F86FD83
1E596C261BF228E73888FBB3E5FF6C5132F948F0A73F7C84FD023D11D87E83864B70DFB029B3
424A63311E83C7DE2D44470627A88A4A7325F437C76DD3E93F6C452BB8463711F8006C5C3FE9
DADBB0DA98DDF65258281EB6FE1AF2844AF2C2CB3F40E248E2F37965D8360BAC307FCD6B70C8
71FE752B7B0EE717CEB244B65BE6B23C2B5873E538820617A31EE59CB8ACA884A2D3D9228FBA
2804A21F256BB192728D8122E9AFC2C59964F333198984EEC9AE9F202572E84615FDB10809A8
54908ED9F0C0049EADE89C077BE508D139F76ACC86F73C67139659286291A5060E88B953FF70
89B37E00DFFFE3ED8E50913C8499C1957C6DC662883AB67AB8155EFBA057A0EA87EEF76FC771
9600D50764D8506CE9555BD96F1A9AB4AD5C54B4E1D8F713903528603B3493A7397F01A56575
DF3F8EC39D012E725D045A4BFEAA19E8B5C632900405C3902FA73DEB32F341BA270B79E91276
FA3197D2309A2C0D1AA09EBADB9DFE1E097F99F11A66F78D1843B80DD36CD666C57FE3841CAB
94F1048554D3D53C993BBAFDC257C9E71A5D1240D7549CD427406285842DA542FE790378D57D
0FFAA51B679D3CFFF885D29D0AF46045083BC9C203D86AB4C0160B3B336491924EC3A6601923
6CDB4DC7BFE56522EB34C7176477EC81A5E1C6599BF13F9113F0CAC30045939EEB480F2AC6F3
655D6BCDBE01C878F9A2F94AF195C2703FFDCC529BCC41C449C319BA4CCA2136EB7091F9F859
056EE092F0C2C57ECA17015A9E4AE8AAFFDE8356AFEC914D04BA4DE78A7970C9E47A11F26A3B
69E80BB2155138B31971471744CF75CFBF43FE6FF4B568704230461683180E635528B6941AAE
42955ACB4E01265230CBF806EECCB36E001D62AE281340A6E6D38D7AF3FDDEC37CD2A167AE88
E7A9B22698F0A990C5159132D48784B3F43E1525CA1B24AC2CA21847663FB2755E963980FDE2
69C99071D918FB577970AD39FF9656AA2B31718D58B10E4C1D6E2D8DA5B867BA4F94451BF76D
41885CCA82D994476B71B02242AFC0450784F2589DFCCECA7D2A53FAAE628F3668FC4A3460CC
71CEB82019AC3053E7E5F4D1EFC50A09FAF13D41322D2BF94B11A537A20AAAB0796E38AEAB10
5B7FDB20AAE9EC0B8B1887D254F77193DF385D6712CE9A026741C3A415DBC2B87A856C7E27A3
86F90363D77F3D3832F34BFCC7930DE3250FD968CAD2C715A49800283923A34FBDA3447FAD2F
9DCAFFD57879A853C952E5084E2157FBF7E899F31522143EF1CDEC3123658375E72BC833F166
F5D5F4F27BF803867428C0C0A8B69F27520769EC750CCAFB126B4FBC933693C555E1EB440542
1C0495EE8A2395BE7C4D6D128D0581438E8A40C030842441D9C75A491D7A7EE0A35E2BBF61D1
52BDE216E57820B6C6960B45F8AB4EF0179F05591D14D2AADEBDD88E49A4DFE8646E53E9DB03
9B13D4AB2A5E2C37C52D5D36FD742024F19008A18F34817B06C2EF72E8314FBF403CB13C1A9A
872667A0004AD258C5992112109EA472BD20DD6C14EBCB3CD39DA92B4D711119A3AF24FC0CDB
DBB09ED6E02C051E10D6EAAD567312324A62FDB42BB3AA385A018AC85F36F849210A86B36C84
9899AB0EBEFB8C397B4E9C93719C945EE6726ECBB17FAB18F4EFEF19F768ED3F2068CDF4377F
B8FE234315E91CB9B8338A5D15641EC6818C6204AFBBDDFB5D530CCD8195970CA5D86DE27D2B
AF642E0888E4359FC55E377F755AF2C73005152701163426F2895F33940EDDAD44DFF4FB1F0B
6A1B66A25755562138C04A363F4B9769882B42A7F7EDDC272603B62CA0015EF950D792D5EAC6
44EA7AE0492B3913D2F70101BA410D90117D2F12B2F4C0E20A5A96A06074C05F9A78DC51F355
D1EBA8D15C642156592408870A6E019FD4810636396F4F7CACBE707B475D580AE0EBCFDF95FE
85FDF02B1D6D249DA2ADA6F1706D83662B0B62034C1C0238CED09C7176DCA05EF05E0B2C9E23
8C50F5CD47DE4EA9D8911F96FC8E16A05A8F501126A15BBB42E5DA78FC585AA403B064F49E19
8C8C97420697F7D36C272DB3CE71663DA75ACCA1C41947C3467EF5E361E9665E7E9FF1FE456A
56127B7FED1F021C53ACE71F6B54AC2021B1B6BF8E6AF6F5F8FB79F31B31776BA736758DAA7C
CDA96C05692F7B141B13FB0AD85336C148288458F8C89BFBC202D1915397AFCE6E048C74E779
DEC7D602C4C839A0F8CB670A75E4BED7E5D0F5CF53C2C9512A6E4D27C499F550C52568D04870
C9FA7FEBC34946B9B5EA3787003A9AAC2D9BF4DE01A8A227D8B419B50F3E2111B0D57607D121
4BC3E60C067107A3EFA1EB749E4F857D73B9A35A04273E2DF7549249F3786B4FDAFFD0EC213E
A6A7E467BD686752612801CA3E8AB81BD0F8EE947742D66123137188CD15A4241F6542C1B457
A673A43B6A2746D72A5F6E9E640AA6755C694A3EECEC073F468F2E507CF89625885E824AF974
C8F8A0A79BBA954322A22C40B6DBD4F390E1A21EF65B3012FC9E499FE4BCF7BC588F742FCD16
C9E56C7B990830023D4A605E89CF2FEDDDE7A4641A203117A9CBCF65065D91500314044BA60E
43934941FFEA26FA207AE6B5DA2D12D7281CB8AD08203F18866AC955EFF6DE83A25164F7679C
AA4B6156A2800E3C0EC36880DA3C06D3FA9B1CC34A2537FE16EBBFE289CB2F8EEEA7828C0769
D22F1DC0AE4D44E93AC54B555EC2CEAFF0FF1B3F89AE2E4DA8087AAC8594017D83A47F0441E7
06A0CDFB7C812056A28AE20060DECAE48BB9A09A4C3BD6C3B371F85B72BC5DEA121F22CF7272
91C8D18D9486D0D451D6151F4EC9BC7A6E1EA74E949BE8F46C81707874F171C0B728F897F85D
59EB17C23F98C5DD8D834CF4D8CFFE89AAB715B375563A9BEE27807C05C41CA0398A9667C76B
3E9207036E6F973598D483885701DBF21552766A9E385E31614127F886527B203F9E16221590
F1C644B1623448C88C073D0D0B8D2E1C737D99B40932AF421D3458DF6D33EB77ACE54EE0ECC5
1EDC5921CBAD1FA8807F12D7E2ACB30D2BAA5F4174EF35D23F75C9148BFF1918A362B5C477BB
C07A75F9D9204ABDFB28A310BC250942F29EEFA940FFB302B47DE580A6AC75EC120C8431872D
2FFFBC6A4365D63E0954D143A199E26A1CF6EA6435CFA40C5CDAFAE13A6A948AB62BB5AF640B
EEB4D62DD5EB6670163B799314CFC1A46D2E92139A67FCB187F8B158DEF5D9F2B3E486F91D47
BCD0B5E9D4090537DE1C29D587A94DFE6DF94DC8013A3B3CBD103BB5A4484E6AF989B69C0AD8
309BE4DCC495203D6DFFDF00498B6F045B9486FE7D54F0E996E1A22C4F2AFB5EE9C61FA7FE12
E53C52DBAB9ADB18DE4F2FE28F2E1439AF27F4AF6F6906609876739C306B0278AF4BE301C95C
8CAB6206D178BC4ADFE7C25090EA4D4DAB2D0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark


%%EndProcSet
%%BeginProcSet: fvmb8a.pfb 0 0
%!PS-AdobeFont-1.0: BeraSansMono-Bold 002.000
%%CreationDate: Thu Jan 29 18:27:48 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (002.000) readonly def
/FullName (Bera Sans Mono Bold) readonly def
/FamilyName (Bera Sans Mono) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -108 def
/UnderlineThickness 120 def
/Weight (Bold) readonly def
end readonly def
/FontName /BeraSansMono-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put } for
dup 5 /breve put
dup 6 /dotaccent put
dup 8 /ring put
dup 10 /hungarumlaut put
dup 11 /ogonek put
dup 12 /caron put
dup 13 /dotlessi put
dup 25 /fraction put
dup 26 /fi put
dup 27 /fl put
dup 28 /Lslash put
dup 29 /lslash put
dup 30 /Zcaron put
dup 31 /zcaron put
dup 32 /space put
dup 33 /exclam put
dup 34 /quotedbl put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quotesingle put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 94 /asciicircum put
dup 95 /underscore put
dup 96 /grave put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
dup 128 /Euro put
dup 130 /quotesinglbase put
dup 131 /florin put
dup 132 /quotedblbase put
dup 133 /ellipsis put
dup 134 /dagger put
dup 135 /daggerdbl put
dup 136 /circumflex put
dup 137 /perthousand put
dup 138 /Scaron put
dup 139 /guilsinglleft put
dup 140 /OE put
dup 145 /quoteleft put
dup 146 /quoteright put
dup 147 /quotedblleft put
dup 148 /quotedblright put
dup 149 /bullet put
dup 150 /endash put
dup 151 /emdash put
dup 152 /tilde put
dup 153 /trademark put
dup 154 /scaron put
dup 155 /guilsinglright put
dup 156 /oe put
dup 159 /Ydieresis put
dup 161 /exclamdown put
dup 162 /cent put
dup 163 /sterling put
dup 164 /currency put
dup 165 /yen put
dup 166 /brokenbar put
dup 167 /section put
dup 168 /dieresis put
dup 169 /copyright put
dup 170 /ordfeminine put
dup 171 /guillemotleft put
dup 172 /logicalnot put
dup 173 /minus put
dup 174 /registered put
dup 175 /macron put
dup 176 /degree put
dup 177 /plusminus put
dup 178 /twosuperior put
dup 179 /threesuperior put
dup 180 /acute put
dup 181 /mu put
dup 182 /paragraph put
dup 183 /periodcentered put
dup 184 /cedilla put
dup 185 /onesuperior put
dup 186 /ordmasculine put
dup 187 /guillemotright put
dup 188 /onequarter put
dup 189 /onehalf put
dup 190 /threequarters put
dup 191 /questiondown put
dup 192 /Agrave put
dup 193 /Aacute put
dup 194 /Acircumflex put
dup 195 /Atilde put
dup 196 /Adieresis put
dup 197 /Aring put
dup 198 /AE put
dup 199 /Ccedilla put
dup 200 /Egrave put
dup 201 /Eacute put
dup 202 /Ecircumflex put
dup 203 /Edieresis put
dup 204 /Igrave put
dup 205 /Iacute put
dup 206 /Icircumflex put
dup 207 /Idieresis put
dup 208 /Eth put
dup 209 /Ntilde put
dup 210 /Ograve put
dup 211 /Oacute put
dup 212 /Ocircumflex put
dup 213 /Otilde put
dup 214 /Odieresis put
dup 215 /multiply put
dup 216 /Oslash put
dup 217 /Ugrave put
dup 218 /Uacute put
dup 219 /Ucircumflex put
dup 220 /Udieresis put
dup 221 /Yacute put
dup 222 /Thorn put
dup 223 /germandbls put
dup 224 /agrave put
dup 225 /aacute put
dup 226 /acircumflex put
dup 227 /atilde put
dup 228 /adieresis put
dup 229 /aring put
dup 230 /ae put
dup 231 /ccedilla put
dup 232 /egrave put
dup 233 /eacute put
dup 234 /ecircumflex put
dup 235 /edieresis put
dup 236 /igrave put
dup 237 /iacute put
dup 238 /icircumflex put
dup 239 /idieresis put
dup 240 /eth put
dup 241 /ntilde put
dup 242 /ograve put
dup 243 /oacute put
dup 244 /ocircumflex put
dup 245 /otilde put
dup 246 /odieresis put
dup 247 /divide put
dup 248 /oslash put
dup 249 /ugrave put
dup 250 /uacute put
dup 251 /ucircumflex put
dup 252 /udieresis put
dup 253 /yacute put
dup 254 /thorn put
dup 255 /ydieresis put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/FontBBox {-19 -236 606 928} readonly def
currentdict end
currentfile eexec

E8DC61728071ABD4D5BCD230C4E186DCE095A0CA84FFC476ADFAA82124268E60D2CC570C5F52
C10ED4A85A71CE8E5BCF26AA13B27D7FCE1CC0C72C3B848DD5FFB2D56D06A1920FADE4FFA3B3
5336627E9ED1622C1F9652956D4A424488B4C4FFDA9936442BBE0CA749700AE98A2BF964FAD0
88F0CC64B7C1D76742F25E90E759ACA624A321402B1D20863FAF5E04B86C1AE66F450B158604
1815E52F13D2AE539F1725D11489898A83A05FE04D6D14BCE66B823C20E86B4E9EC5FFDF6A4A
2215A850966D31D9DEE52E3E7A614F79588F823C1C8B6CA57D7903FB0555BDBDE155BE127C1C
CBF318A0562121B9AF53EE5266AB5F21EEB0F4805885506F245E1AA67E3073DBFA8595821BEB
84B22B11A74A77A90442EC625B9761DE7FBC9FE3876FF3765F0953BA2A8811A82F4071F21AEF
48E46431D2F1F94186E126C2A72589FE6B89F730B0D5ED6C910FAC97926C5DB301926DC9024B
70ECFB642A68B258A19BFA07C6E24791FF6318A9C9D58C97F74599458B70F0F197D5474B2A52
15FF43243CBD2471A4CE8AAD0DAC4938AE839337C481EECA5B2956084CD3B4FA9E5466A56A29
718EAD6BEC3FCE5920875022E0437C6CF1097BCE0904CAA523827DDC859AC6FAFD502DC2F7A9
2757DA6AAE2CC7F6C9145632AF65CA981ADB9800395CEDDC71BE27E655C33BF29DBBEED4EF93
2068DB3FE1FA0ADE79DA4047F9928D522D30A1FE98C2F0F0E56A3CB5080F95058A9F30E44375
D312855D7977D486D14E1338F94BCDAE549BC24FE98CE997A645D405E96CB504576E6C7E80C2
45E121CEAA8145199E6F789605C830885ED2A66FFD818C1A9B0DE12327CA0167C0C43C064107
0EAAB8303C408E4011E12DDE869DCC4AC5709D4080449B6F4D9A9893F77BA774403D18B492A5
D45AD72F058994F6FD08DCEAEB17D488F04DB3C9D8EC48A8C1959129D0AC3BDAA33DD21CDD59
BF126AC4A16B9821BDB04E29255E467515BF129CED4F94E752F108445360C80821B5B3AB0F43
85DC27939F6F29D611571FC51E21F975BFF2766C5802D365160956460F1D9D5B04E33635829F
A935BE53CFC1159DC7C714B5F39E3B9D928B7378CF17EF8FC69A121339CFEAED6935C9154FD9
B90439F65D3C89DCB80B1A3E59C207CF1412C04AA1E91AA08075DC32F3416580CC9588E763C6
D5CB16A682CE91546B184E0646E2CB44620A836DCBA3DC6EFC67C1A5391A1179B64B5B6F2069
E2B3D2BD784E80FFABA4F8979CB5497DB6BF7E38ADAAA6FA47AACE9DEFD9FE035FC465407582
0EED3B29AC0B3DD45D25517FC16F712441F532788978348A88CC07FC4EDE2968825FE7A40AE0
958CF1F55918DFB99C96E02D00EBA869BAB6E07C7228FBB0AE495375459C371976C5CB3E58DC
D8BB9840A6A19F9584D30CA0628F067F3D6D887742EE6098F2700691ACB8ACC67BE03273C6C4
62A11C4304D55B74ED7F4B0BE2203D097797758EA0BD723944693B5A206FB82625C60B276707
F963D108BCFDDFB57142BFA360E77A2BE2B301D52152843E4AE1DB2DD7154D2B1A3CE1E2FE65
014E6EA7AB681E6134BFFDE751B4AE46A8D1F2056365A20B183CDA4C002CF367E17D5B536DA9
E8B759A20AF07F0D3120DBECB2A029257AAF7931ECC188255AAB7B213F4D724C5B12DAC328AE
63B904A393B1CA062DC98FF5273EF48DB2F106DB8B14A72F5D4A9AA219322B5EA47291215C9E
1D5211DAFD481BFCFF84446152915C7EF464A0F5B37D20D16C258E8C46FA61E8CE1CE7900F9F
7FD8021D35431CB8A5EDDD68BB986158E854835A3A47DE7FC3BFE57268BE418305EE1A4EFFD5
A29EB05CD1C9FBEBE9A2546F8F49748765899D18F0024741D8D91C350DCEDA0CF312B1D71BC4
DCA65919557D3C05E230E8BFDFDC78AC908D7F1B0D0C5F1CAA507B17D584272ED06DE36006C3
35BC723E023DAD97E4900BA49FB5DD5A63B8AA0C989B563B5E012934F9FCFBD84ED3793C1421
E716864901B17C7904E7E356B180657BA3ECA59FB160808C903891207E913D1078E98483A402
6664BEB511DF57F98423B29EFB9111E18BC1FC6353BAD69AFC7EEB04E8E8AF07C123C36B7322
2214E44CD755E2C7BAEF60471325518D0736E7061408DFDAAD0F5D9C745E6DEB66EB2DBF1951
F4F09D6C87414F7C1EAE1A7D452691479FE9307A8DFAE406983BA6E660BC628BFFF0A7D63D77
551E575A9EFFEC91DCB2403BD7D8B6DEBC9C61ADD2B3433C6C21EEA469BE3CC092D62B077530
F06A00BBED0C1A6FE73BDCF89DB47547FE66DD4DAA8C3B8AEDAAD24A927277F89598809C0F70
CA55BCF93959BBB12A2332760FD5B1523D9D68757665F2F5CE92B49A40F3BC82027852DFF99C
7B92E0F28A520D150A86C94C45DD5FD751CBB5ABF99FE857CDD82803BAD77C535A862403CAEA
676AEBCAF4BD7718AE6872C4F2E71B3BC793AE51FE4CE8BD6D56559DFFC339BB53DCA8EB292A
5792F09F1D9E92D05C5FF9D874D9746EEBE321C2D7818C0FFEE1E995BBC626466FA08B2681EB
2C9CF28B6F0D9A49CA0D78612D6C5605217ABF6A128C0EDA83E36B8DA49554919F2B58BF3D09
0BCD956AEC7EF71ADA17F4971488D1D720D2997D51B256C4546DA831F8D98BAB10779EA85195
E4FF768D8B698620FAE84EA4850664E748E9766998A95EF6F08C146FE1BEAA210BA5CA71DEAE
81843FEEDCB354093DDB176F899BB4BF9536B47EAFA6CF7BBD6CDDB2CFB90A6DE09EA38A5A07
0A2460BED9D71228F7AFED5748175F9114F2240AAEF1910BF9C1B4B347D7C3483ECAAB7968AE
D7055B9F6C7A139EC8E602F51DE1B748B6D58AA13B6F2FA346C6C35AF9E832ADA1BE279BC48C
CB9F312A0B481DC51F73288A4395DCC0D549E53F97CF6E34F81A1B4EA7715B88E5EBDA89A488
7D3F18CBA089E52FCAE546B3FD6EE5DA59B12B400E652A91C9F6FDF4F5C2D5A2D669F2E9DA4A
01B342E448EFB61B283CB137FECB0112E3ABE4480750FBD3E0A78B6DB71D6073B405B241CC41
9852C4E85B08131DA5CC518503636AB34BE8532AF57207AD426849FFFC571404B87B0C2C6ECC
A38EBD7632D173E7CE1A4FE3059D952311966F0792C1C3E87118EA3FA76709ED70280139D967
8735596AAEEC070C46526B3136CCCE6EEC237F963B15D68FF227394912869721B1664DC97580
FBE53B43D410159B84760C493D05AEE539043E86C3C6CC7D12CC827C958879FFD5B5C09DAD80
8F8146F864135780B5640D9AD721E03EC45D0D2DF3559056D2B69DC4AF7F263962EFD7203EF8
54DE5F6566B47D060E45960491AE668FDE6E7DBB9DA90101CCC308852572BCA053240A2CC632
B6CCB79C90B484B4F351398370B8C5FCF1E36C5A5301A6289C7F79B0AD96012837FBC40824B4
279055F7BC23E69E3F4700AD7B14803B1CC790390F8095F7447D9F92E765F88C8D32A100F5F9
9E46EBD0F2C598EAAF1118DEC32725E10C6B651119BD13E7A33DE1B6B6E59E88DB370C7F21BC
358C8F1610BA0DBA333AF1DD2CCA91C444BE5DF5C9F901DA59DC2432DA2FEF40B6A9DF42AB7B
41D4762F6A003FE82F0382154B4CFBD83878BE5D34E71742F2F1C4E8B8B4BCBF43036C9FEF86
1B44DDEA5BFDEA9E05B595A6F6D1D76242225A5AE976F489DF0F2A7366BE36BEB9D544A8709B
6C87C85AB25E8DC5C539358C213DFA39DCAC4E714C9B904FB02FD71F570487D0CDC0DA85CF8C
B6937810ADCCF1F56A451E9812A570FC7BAE89F924F1181EEA21197E031AC29B3953866318F4
E4BDED2920C6649EDD4F9541996C2FD9D54E3B5D7EA33702683934AC9D4153D6B5D33C16F2E0
AC4E6BEFD8A81DF5F50DE1B1657CEA78CEB59A18F4D5767B3E19F5FBD4C1758F11245F001CD3
18E4CC14341A44E19E435D9BB20636186BFFD09192F00D09B4A40FB521B3543515AFCA7A5363
8E8DBDDA3A6DB8D95176F5423D25E0FAA8D87854996F7F62E4EA62F7640CF143A278B2F7A70E
617E6D783A0418B3F499F75E689E628E7BFDAB3FAD1F5D854E36611524FC087E82AC31530B14
7E8F6AEE4DE4142B121F9C8747EAAE221AAB76D7B3904B99083A4B6C67CE35861814DB077E1D
ED97AE1621463D190A31592FEFAEC05775EAEBE968AA9F39A5DC3FEA3FBABF2F141DDEBAFC8C
6BE0873292B698734FF2E1A41F979AAFAC03F18FA1F84DB07EFCFF007FE39CAA378C7F635687
34BF64E335FCC82BD5E86241AB444657EB91800B5298533426ECFD50650213789F6629D70C13
7BFE32A8BD6610DF1C91C096481F3E4DBC426D02E6E652E2A0A60830B4FDE5EA542C974ACDEC
4BFFE899CDC30A519884710B0DE91F6745796EEAA08B75510FDB065B1B0D5743EDA4293B4D21
7AE448AEEC509B6B215AEA6028ACFCBEB1ABC9949DABC3BD5E5333E090F1842D7A4838C712FB
D20072E7134DD81B7FC4DCE6173ADD5B5498AE4022F68A561093F06EA28AA966186667478948
7C18284D5BF15AB4DF3D434BAC25A92E8033735878376FD3FCF230DA22523988FF4EEBB32FD9
D4A5F9C33628F22CA9C297313996F11CC13F1C57D5FB15CCE1EDC81D18881532278723B71026
80E6DBEBA585F28551272CE8231F98FA0E9FAB823A643EF1F2803D2955EB7D0C02DECE1D660E
3DC0123DCBD58864ABB2D345EF7794098CE7FC6ADF736B23ABE98E3B54372407381AA93680C0
8EDC92290C3DF2EDA442B19EF0482D1BF9923EBDA17F44055CFA1B862E6108B68B36CE85EB3F
DD36B06BB136A660DABD5982AF240AB344C4E56911E1700F55EE0ADCCDCB3B1DD1B24E22F890
469552D014B85CAFC7909FF7C7C03F2CBF391F5A969EFB1AC361E20FC4AE310E6889BC3C6C01
C33E0278585868A03A2A4F30F076BFD5174486BCD45CA71D0A08BE79F9FE7D18B84AC9AAF116
FF45B876E837A9E270531CD67D606BD9755161DBB776EAC7A388A2FF2413F75226F86D1CFBDC
E5A47CE7436926F484791625C8E3E97673C16A626FA2198572A0EF56B41F65E20E86DF9EA57E
3D537634220B8C0247A24BC39BA1A7E05CDB8A554346A28D4F3F9A4C52C7CDFF95AD0D1C1EED
ED7D8BC5374B659499E7E024C733ED35DA50D531356B029592A8C31BAA66303FCB4E699CA025
BC6C2F9035313999883798DB60B30926EB8E64D3DB571237F670F3CE0481E361170EEAF34FC8
FAC1A6589C329F5763C0520BCDFE85FE229C966772AA188F61A9BBDEEED9BC2C3EEAB387EDCD
84CC8A93E4B9C45F717FC66208A051F9C349D6098BB5E7367D0B852CDB54AD71E8A8C9D92D82
E737B5E53231A72710CC258B3B82407D0930C91D374A2093E1B47BFECE5FF41C5E88B03C198D
9C221F73BCA811F17625C47803D2267F956C1083FA84BC4E07B8BB554AB8C6736A564CEBA6EF
2372FC810DB7247B37C13E0A1E3238C8F8301D3E0D3AB2C4A03C0C169B1ABD2499734F0B030D
07DD7276A9CF46B290957C21B35C160AEB38207AABE5199AD6F1484BDFF83CF4AB6F95E01E4D
7956B12C60A47DE3A771256253B53F97353BB0EA7F6FBC49B81493FE4D24819DF7924B22BF12
74787C12857226DB627627E48674D1BA7DF33B82287E6487D0932A383086CFB8EE3EA82277DC
6FA3242D1361EBE08112633F33B053608F0C98D90694A04BBA1793E6A30C4578FA27865F6001
FDA244816C872B47048F6F0702C3F9B1FC2A0A7C2FED255B9F2F5B1C86DA33CC24EB1FEB36D8
2C9DF0892F15C762E83A444B6B16A5CE43E2231B54D5479DCD263EE49D30A66DA2893EB47D41
64E252AF4A01C36AE4D0E28B83A0C524F660133DF4CCA5289ED065A449064ABE0C0FE8F827C9
F4D672D7FC153DBCDE3BE87FAEEA613B0D50F8FF4584B69E39DE8584E1AE824A03F01F0FD59A
F2B03DE674A5E8B22C314485ABC0BF3A9855A2A5C3B4F06873BD06A327096C261FDD9776F734
EA6B333A294300C86195108CCFB878201563AF38CE419C52F468206906B1C245C06959116A0D
35BF197FA38ADB0CB322A150880E4CD916B0DDBEC735B6A3E0288E9A738416D1908D95BBB40A
9BABD4A0BE33035EA12B8DF7B2F502B4D8C4C73918304F6BDFCBD4B24EDEFC4177D228F44DD7
9589567A73F14B60353BF362019340EB5B61220B5D06CE6B14B5636FFD9F6C0F755058098C89
63BB1B18676A0044D21652B0A386757CA11202DFFE40855BA86CDB3D5382EB6210AF3CE4EF6C
7E18A986185CC6775530B48BC328F0B3BEE9EBCCE785ED3353DA2D316951965B3574693FA521
B5A51F24AA63F32CAB25A062B535561F8F4A2F346383694F22C40D59E15B7AFDCBF127D4E0CF
6D3CBD56351EA7DDDC2512EE04587DBF3D27696274CCB2450BCD08FF73F66C0BB93EDF3C94DE
459EE8E7CA8D09072A08D9B6AF42970C3A1D3B9E5994853DBE0844D6FC7353ECB3D49130741F
09D40FF3C35E21B2CB7D9FEA01AC240CCAA60FB5DD1D774EEE6E7E02590E7878CE5CD6DBE0F6
DE36A98FE6DE228ABA2337292AA7B507195C0C5AE6A8F22A095B044E1B37D373E9900D3712CE
0BA6398D943AA48F689DF2EBC5DA1D13BB79617C0779776ACF12A9F24B8F56209F63914FDA88
BB2BBF26C6ED1AB2E726D2D4B4966C43FE206DED886495DA5176A9FEF1798B098654A6A052F4
4E44B2CD7848CB59440E8C73FE9F672FA9C5952C34B78663C3AEE740FF64ED1840143F80FC6D
130B65AF75C5BE44E2D61AEF4DEB0B00C4E0ACD2315E7FDE8C84B34EA79F32CAFF807F1459EE
9E4BDB2585F654E2553C85133042A04321716A3C32AFE177BDC26492EBE010BDD865451CD614
7D07BB32E30559408CDEC1858CF8DC7AB239EE18CAE6314527A816FC252740FA4761A5284636
746B37FAD2227168904F733420698D235EC8607A3FB8E2AD58BA5995670D67A134F521142DF1
DFF9B41AC1426305549F20A362BD679EA643A25F554ADE382C24D76644908F40B1372B3FF140
ED3E3D21FED991F2BC67FAE49FA5BB728A7EB3BFBFCC96C6C8C0C92A66393C0157CB7B77E835
7C1BBFF4F4F8D45375974921A4D526148B814B24E7B647C8939BCCD30AC5EB73C9040E2CC989
8BDD2CCFC788C72654FC067A5B37C28E1CB5B42FD5F9A26DC5B0EE60C894687BE133E675A1E5
7EBED56E46202883C32AD9376FB2AB68F249DDCEF6336D2C94CA6F2F9AF03DAB5C22F2012DBE
2017DE217A5362F6843D0E995D1CC04ABC96B2348A8762499103D8E0F9761580C8DF32F75239
5F83E6BF6499C48AC12EC1C50C4CF12B2F754A94A72E7630CC4BC15F6105164713AA2A949647
28F336880CBC579BE951DFA3E3DD14D5CE765C91D559E4C55E91D065C686BC01B7791424E7C2
EFD7EBEF66E045C101D4A6952F0C5C68C69A6FBFE275427F432BB05404822E267E6DF64CF736
91ABFE5F057151B53DD50BE9B2C73EB01ADDFEEF794A5E1184D37B0CFA0B1548F15EA9C84407
0771F86CD8C64614F7EE8ED947FD71CABF6B89B80B9737F0FB566DBA160DF1298E604AA2B0BB
987B3AB8F5DF02C2B48E6E4DD7F5E0CA4DF4A912E159967B885A542667AD06E757A3D0F9CFD6
AAB131E82A3D488E2E1C29CAB22DE363089BBE2552722CBEC18F41B2775DF425C32F9EA698C1
964DFB1E5CBFBD653145D85D25718817FC5D1D083DE0B9E3C11D8E30F0B1C67A59885E0E3613
373B41F79773A7E38EC5A8AD585FF1E0FF863B40A1F2B78421FD30330297D52E77878ACE0DA0
BE1D007CC63190D3F3F65D92222DEEAEB1AEBBA5C2AAC97D09E1125EC30153AF6D34E2B38453
FEF11C4C057AD2AB4A4641AECB1F54E11AA57F74893F078C87177A8C189A43752F2D2E998B4B
B0748BC78DC8C137F7E323FA19C30970807D5FB46747758B3FFB985CD13B9799E943547225B4
EB398292BE8EDDDDAA868791DBFAAAC14A2F4726223B1254EF67F40DEF7C6551E05531FA56E8
291BFDC6B8A6936B6656AD1809ACC60D7D2EE6B70BF792C318505543AE65AD78E611D21EACDA
DDF42F8F1C380F0783A02074CBC402C9386AC0D93982704F43B5AA211952FA2FA236C897FC3E
D31D2FCBBEA294E422ED58DFD65DC28FED816A951C16C9D7F1F187CFEE51D0C014885ADD8CAA
0DC30F97F250B1352C646545663FD7CFE8753078E05FB6041B993103F32F7CE3A9FF9C53E843
3CFB8B486ACD1471D374463676DB72569DFB31C20ACF4273D8E104AC44C5DD284D9B209AC9EF
B75ADB3B542442857587F6BFB3F63C1721B5000EC2C92FEFC831E465BB208B877D9100BB9102
66FDAA260F032E48F47704DE20D76311419A6A2A9F306827D1479C8F5419BEBFB4F83470CC86
488E699A276293EBFBDEB38D3828FF610FDF1CDB694CA0A7EA534E6B093BC09E74D83BAD89EE
E009561A62FAE7D6472C2020748DE25AD7ED445B6387817F442C3891325F0F8BAB84F794D091
29D3E26D3FF1D536BC7C694D535B09F5BBFE6658C2FE9F7B578865919DDCE4E08BDDCCE7DE8D
022F80A8720B1127BF7A1489EED972B07C8753963C24EF7598E618B9F3F484424FF80537226C
65656AB50B77B39C4BD65775A291694CE8235D34DB835A26D267D135531333430A2B2CABA048
EE115EC08C12D6E7B842DF8703BD4D2E2E8D6DED6624F787813FA03EF3819197DF6B135998AF
8540AFF5A237CD981D3904C9BAB1B3909F5E324DB97F38FD7CFCCF61D8702F1365800A390B92
646EA33F6B0391C237A267BFD36E483206ECCAC61F799BBFC6D133B9A574C9ACF7E725CB1CDE
4BF098ABBCCDAF5E5DE98C5AC08977C50764C0279253E101FD24B2DF0EB67D05FD5DB3816E85
7B15633274063DA96AAF46F4736A82D97FF597D5D0ECD76114BE8DB2B7214B9A94AA7B4D9F97
9EA91B6C0991CFC3CC03E9CF1770807E253EE9F9CAA1FB693E84E1C52BFB1B730A84BD2EF5B2
A85B758E177676F580839A2CDE2F8CB57FE432FC216E08FDFAC808C2FFAD839C3940C20B6B21
3B114428583DD67ECCA9D0A5D5ADEBE72EF77FE76B1B93329348D8AF924A1C1A301784F3EBBC
5DCF39E948B159FB0B3D2C700CD1017B62DA8A519EF3580DCA1F41B1302157FE47FFC585CCE9
0C02B86AE34D7BAD36A2E9442F8D24C737D297D61BB241CA28B4CCFC9EDF4FC931C0E23F0017
0A114B486E6AF5456A4AE5FA84C83AB1F460B862B9F111D785E633DD0097E2264DFE8D6083D9
547CF530119380615D62D75938337E696135CE16C0CA4E533867C22CBACF57EE578399272BAB
D63B7BC69766DCFEDD988054034A9EFD71AEB7D7EEE33EA132A830CE3C27D205842DE2358A97
ED585D1DC7168AEE7CB3B17DC0B3BBF4443A2FDF8874843CFF2F55702128690509AE61C66CC9
9B4166685A95CF7DC637EA0F65AA0A4836C5E4C7BCF2BB3FCF0CCF4F72150A67705C902BDD6A
7AA4C027B91ADFC3006339EB7928D56FF960A6D5860B8094A513DABD4ABA90C3978C2406BA68
3C107D5C0D03DB4F63FFB9C4643246BFD9522969C22A177E82E2E25AE5CA50EDEA4DD98828A5
20E1365DCE4206625E5890B620D4B04C54531A7EB9CB900C53926017A5E3F7FE28E5AFCCCE4A
111429B3B4E057DCD822FA6E7B9239635B2A7FDC3EC8839250FFD8D79BE043E542C3E726B86C
2D33617FE8AEF4E880615BC09AB2F7C04AF9FECEC700A027C60BAD752BB49988941855F3C304
3684E48D6625BA22BE8E06AA41B0AB5E0FD14B4C87B17109CA473BAA62E27410A507131817FF
5DCC0ED0139E3FDC0D97F28CB2675B4E1DEC877E32A3214820EB08FAB1C4D71EF23B5B06593A
70A0769C7D63C73882DDA4C3212F8F9E9A9D1CDA81137870E70CFADE1E350C2A729C24AD28BB
6C1B0621AF4FA53F72846A5ED33C5828CF828B602CA7CC1902E8E13743164206B36D225C71F3
A71A2A547F3E8394C9545E3CFFFD0AEC33B8282A83B3C7630A15D16313F97D03FAF0F9AF17D0
93E7416FA4BF17D4B4D191F14C1DC32C4EF09DAA5815A1D6FB80D67F168260C58928B9F03318
6412ED0491B54656CBE780A6EB38D04B18E865DF42AE587D86D38EC4DB14416BE668148F0956
C991F44C1827EDB8E345B5738CA501368991E405C045F2E66DEF5E664BABF8B350895A116437
30AC6111D9C3124B428279599248DDF47CC096AC1F373BF2C171FAB8BD2BC67DCC766774099B
EF628A7575980DDBB0621C2C10A9697BD284ED1405A5C398F01456B37C6ECCD18FA4B80EA3D2
41A9002424C98EBF93D24169547C812C516A5B1E4830BEF95ADB09A79AA06D3DD4CE7C047E58
1A894A0CB785823BE8B7D8D042FA5F53A765E6ED0A8E521C4F9B95B90E6FEEFB96C9D85F50CF
FCE4EE6BEE34601D99ABDEC2D4C963F55102281D2251C38D57EA3813C80ECA299C23C9E436A1
3177E0A5A36F3DC21ACA27A7B81BCE958777F7DF870187BEC9A3B3688BB94B79D4D0FAA32A4F
7705F1C174FEE76A17AD3DE2C5957B2128ADC71BE33F955A7FD1E115B0A18A88A38E462B66CA
42C03798044877AF2531EE52D9E521329B5500AA41174F54620A8152B07145347709327BEBB3
C26C09231A77B57559F5373BED107A27967879223093362800EB201E55DDC26ADD758CD1AA31
7F8301210E7B825B30DE2C8F640411EFDACFAB123CAF0E353A4AD74AE5EA0897B4C93C5B0C6B
1AD9DB03E6FAB6AC5FAEF0B1B58FD22315DDB863CC58488E0B39EC86193DEC87C1A09FDD0386
194CB6B718491D3157AEE9A12E2435D7AB3A8947A4402E2721151482FAC57D4A3507E0B16CF9
2C62F31EE5C08315A16455AA8AB2DC9402AC9CC2D8DB4AFC39C2E6DEFF3F2A6FCA326CC0B167
218ED554713310AFA91B3188F7ABE59A90545EC27339FF1BC54EEEB47221A62E462167312B2B
3DF0BEF2996B95C0C2235D203CD1E64117EE0BD8F9B5FEB4F4D2EB9E8E7D5FE323A7986AFAFD
ADE7252CEAD8AF6179A98C4C6B3EB37486340178F667F47761127544539613999B5C063797A9
5FB39DEAB7740E0965DE327B5CE897A3966B96EEAC3C302DE2A184D54FCA3908D31FAA9B8F16
CC06FAA03DDC4C328C10558D75C25F76F44A59E32295B12C682F75DAE5837FC77393D0E1D53E
E3A1E17C2C166551F80487DABBCC0094AE73FC8E83C22F3646A52808F4FDA25337C7F2006C26
1BF4617E164F33B926CD76BBE6F4037807C66ADE7078E781201008D467AE5018E5EE45019B97
6E86B9890B58B42287E7B1A7DA2F1DE5CB6E64B5BC5BD859840A71782DFBD5DE708B95261D0A
FA8E6F2095F970DDF1E07E9BC547DB11CFC3ECE5A0AFF5716373DD1A61AB9CC1FCD792CF754B
7FF3152F3E1F9BE48F0539924702AA658950226001DF42AA958D6DBF1A41FA40835E47044294
B26BB65D7902D239EE760A8CB1D1158D241BF1CA71B06B1E643CF6DA616828427B6A6250B0B7
114676D42F48FDF0066FFC7D69AE1A0707FFDED60ACDF1007FDD718384876C32E1B677E34297
59A18EA7A5EDD4B374D46344247306301938BD6B72F40AD883E793FEA9A83B87269E6EFCCB26
3B1CF28E2D86E882F234F570D517ECA67F73E8CED9E66CFC8176F222CC000296A01A281301E7
FF4D41AEE596719B5110A43B0B422A4D9583261048F4E727B0652BE73A7F8E144DE46E8DC234
D68F7EFB4682AC5DA70D1A43531402E787978319C7C0B8ABBF139F7D392022A4764060CAC499
25CFB2DEBAE88B9C107DA51A134E41C65E924B41B2DF2A2844844DDDA1D8DE565FAA235C6C4F
CC7264481932AF4C9AAB5DF0714DC318F8A3F1648CD35B2F3730313AAE3B561B7C6FE4365EF0
582C4097B8B0A60B471B7497A2EB821169536521B0101106D9F4456E36A2BCB9D6C5AA66F589
1745EE67B66084ADF90333C71DCF2CA47AC0516A534D1C4A51FCB493A011C5BE352DE9CD0985
2C147065DAF6496BF6E7D9D924A0EBB8971F374342F5465E2E553BB3D4E8B84A47443DE5BFD2
931A0A7DB489CF4B3E269F89909511582856CDF658241C41F2B4CCFB6642EAA255B1EE5622A5
C7D1204A5593970CE037D3B93BF22DA29E834787B96237A3A60CE7CED022ACDF0C9175A3D178
2C13935B5E8519CB8BC37F391B498BD7CE4B349D932CB5558F5B0EAEAD94F3027223B5EF87C0
21927BE212A017E7E53392710A5D23E6689AB21A461508E1C0063A87187B45365B5567BB5450
6BF5E415686E1DACCD7D15182649C7EDA924247006A813A782FE215B0D62CB22D84668C6D3F6
C1DEA1F0F52EFE8D802B1227CE8C9AE3BE7AFA03467F18FA7543F17AD12755E4ECFCDA5D76D4
53C37184006598A4C61281556B4905B337171BD382FB571B71AFE79EA72D1455FC29FE08D0F2
22F97A318C624CDDC205379FD483F2614C2E016B5FDB0EB449EDD7FD6EDC9DF7E1333FA9E713
26B3420D5FB7E943DB0FAF2C2A461B5A016647F8694D6A0F3AE318CFCCB1FD66198884F4A74E
8BBB6B5E3408DC333D3537C380FE46AD71296FE92FE1E4D5918972F6C2EE7D9D7AC8EB6FB6C5
D4CD38389D1047861B80881A652745F61838FB6FD04764A1F53F729A8617A07C385DD9765F4D
2650DCEC2C73BF0155A63EAB6060C20637BDF0CC40EC9353BC9AF2CB6D46D6E497E02AA33A86
F66DCDF854A3CDB4C78013E7A7FB832189BB3AC8DC6792D9E86BB817084AC2E678EF3A973B6D
9737CFA4C6D83F4929F3FC7FAF5639D0BD4E56028C2EB20F37B90877F26E77A80A978D9561D7
53574B9B6C66C7406244DF3741393528BD678CAA7F80F075BC0A0A907626E725C9DCD21D80C9
075B27037A7D752863E9398F643A9324A3BB4DB16BF7CAB66FDC3CD6B1FBEC34C0544432F66F
A8C6D8AD84629A2F4949ED49252F54ED6CA6FBD9833EB5AC775DE0D4D831D091F1F22A798886
CF9179CBF0B70995F690F939D25D1214CE2C7940948DDED97902AB6D34E51E2D9866D67F4D01
7DAEF205A5A275F324044DB4E5E91CBD5418A1E8CD2B5FE56956F7B8B68A933F2D328F5FF477
89AF4337967AA60A67C7C5D5779CCED55491AFBA65B739B34014A99030F3C55665E1672815E1
03234CC124CDDC4842715A2F155E8DF96BAE295B62A0434382343F5B1596060A15489F7F5B0B
663762A8F93C2EFA3B6E73D7E82D2877CB3079C40CB70BA9A3D2002F21774C57171252E98BBE
538792B3D3EC061FBBECED4F9D312260F3FF690AA91E93E3AB255D3C92ECEC4D6CE088FF0D6A
0881C96F8DD4836E8512C9D3A9F21526E7C2855DC7476D21655928DD245EBACF6501142D279B
68304778B3614E476DD4F50F50DD9870781A55E460D1449D37D3C2EB93B043B4B6D561BF0CF9
5CD0F3C9CB9573096BCF4B2264B92E45F8EFED878178D008593269AFDE9CF4083B338A6C966E
A1C9AEAA4CD0FB1DE0F1C1C1A847EA2E42EEC83224FBD9BA33BF1EA078B1913C7797D566BD9D
B6B777D224689D0B6590CA0ED0179E00F6AB1EAE7F182959014F76E0E2ADF5A8A4C1D237B79B
46A7225A7CCB7005C0EEA3875EE718561D9CFF87BCD373A43F3AD92F9E91802E96FE31BC0497
40DD21D18A503FDDD292CF398BDFD37CB25C56419EC545ABE550AA4816A61D640FA4F51C33B0
D2F02CEF06D4A2C2FE69C50D36C01A36EB68EEA53BF9215DA20D81AF9E75273D49E66A187250
AEFC9F7653136469BD29A972E7AD09005962590E6FCB644C19E90FB01BE4CEED6FDDB737786A
B550FA4E9382E4BA666C8BD911C675A5EC016B7833AB3512A9C290BCA95FF316A4AA93F9D9CA
C7709CFBD4A30E73F9FC01B9375FE64BA898DDE19FAEAC66E114F8D9E6900E1BCBCD3A657054
EB38F619817A31B5BD7A7843F82ADC6796A0851906ECDB0E256AF3DE42747C756F488FE8BD12
6846E28ECE7455DCE6070279AE63DC62F50DE7524628EAF16041C1687678E1B61E8ACBF3ACB4
1EAEFBC9D4DB5C05F105B68A24666F1F54EF03AD30191B89A87D029D781CC83006A5F36382BC
740D39ED1665B840774086D59F858B01E4A69526AE6845AEC45C88DA48F3B7B7BB0A1CBB4C16
B2597F34BF765EB22A7CE08F14F537374D37DD891540D2482E7102F5E51E51F991DC885730E5
41704902118AA5FD5F91CFC1BCF9E0707D1CDE6A4471191F5C5A2B2E92F12C0FB3BF7DEF701D
36CAC8E985397D73ECB3E9D51BD702BF31ECA8B163D25BFE01AA51FD3C428AEC18D676B944EF
D470DFC4096CE409794F91767E18F38954751D1991ACA1011B95BD9C390C7F8261FDE83DE3EC
C30057CD27C98776F8C66AC3550D44E8BE9AA510A96B767AD4215467688331DE5BE2902F745E
870A482DB5247391BC70C06F2F40398D75CDFB6FF5B7624494FC03B47AC47B399F1092A78DFF
A8806096EED24D8CD27C8142F01F0877F26E77804A0B436BAE8DE5BBA8C8489601FFDE6F20F4
C0B3269BA73784AB139A44C64357B942A32A8126FC7C72653C4A9D8B94871B03010C75FBB176
73F6D7E30675FFC4404A074A84509638F976A94FCDC71BC37DC68FF06E40A993041F5ED35902
B2485397E3F3AAC2C74E6B0C845B08760EC3F67A200D1C02A6D54A68F4FBE554BD1657AFA7F3
4719CE2848034FC6A42B2BB2D1E2B606DA3C418664308D3D755A2B2C6D85A3D476479647F894
73F14B518CAC25552A26959A06EA3CB0EC9677CF4BA9A18DAAAA2B437CF252A1789FBBEBB2E1
ADD5E25A055760180D976F8F194586B9D6FB797C4C55182FBC9D5238C827A15A3A47AEF6F546
069C21C4F414EC558F7477C29FBCDE52F30D746D605CB6E9752749A0A0900B09EBC2BC93277E
8343AC78B755BF66AC11365D54D5D92DDE4B3CB90B23BF1A7667050B7129DD4120E0F7AB84EB
47334156FD1E68673257E6ACE124C8A930350100A9B891470DEF1B6F1FF4C44EF87031D957D6
A569B9E4D8E385D14B66EB3139C1E5F00CEDF4F6CBAC03FBE8A4E83C45EF24E981D489104281
5A142E7DDCDEF63B0CA32D292A5A13EC0EC33844CA0B2EFA27D25F1D41BAF161E17111B7C731
5C11CF6868F73E42601D281A464881C3A06A73FE5E374163E14F0108C020F011DF019AEE5D11
C95122223EC0CD2A6DC833A3D1AA5F5640884B2DCF0C1417B4A2E0BF047EF3C20B6D88C79C4B
C48EFA35C2630CC3CC6E791F36A9A3171308AB52EAE590EBBBEA78A28E9B7EDE2303925C6E49
F4B9A477B6504F44CAD6AC89AB6807899212B624EAF0513DA5E4BCE761ADAF82BBCDADA50717
90118C63332BD31B5495A1F4AD5FD01437AF0221F79A6C72292C15F669E6CD4250DCB9B5E4BB
FC247E742E99721819546D20753C04B5A43861A16654F13CE9EB6507DF6FBC717BE00E9A895F
289BD7FEA288B33188FC19F5D3C3AA476F4BC23E583DE700F4370FBA6D04CCC3B9D188543BE2
EADD98C23CED38926C372412CD8CDF6FFC0D70E0CC7463D8167AB3D59D3D161683C3C5C01D69
6AF8DBBD06CC0663BEE59EC07B2A6BF9EE417803D2DD6FE92371CE7DF99A010771B457B3F6D1
DBAF7B2DAC91E81DA08265AD20725B9950E7C11DA46A31777D8E33B6DEC2F289B01BB9AA4972
8BD41093E585ADE6897EB6CE3804CCF8AA2D631338738E7021C71006754E8F8AD3A0B6EFFD8F
4A41DD7A47FEC43E295D9B468D7B2038AC96E206AC9C30B4CC436A829FF49BBF9F87B75EE681
1B8F996E3316A0A10C86A0F81A40B6C4133172AF58771DAD82A7066D5957F7B8D3A2CCE081B4
53195A0D6193073DFC5F3827F0F85FC303E5FED85F8D838B1F937BFE842E3CE26491E6CF9C97
79DDF488D4C32895BDCD90116CAF8953C32AD0407E7A4BBA09962ED4EBEA4D68D3C9AC6FDF64
46EF313AE910FE83FA9A7AF692C10EC31310A9E046A7A9F610E50B96B7BC5D277D9094ABDD19
A74D3C20EDAAD90B94187D6E6A343586076ED683FF633887946CD320B5520EFA934407B988C9
6535A81DF4FE140633F18A7986AA82383B60ADCA6CC141BB8A5AC5A290AE261DE08362AF18F3
24D9E390D6951D3DC7DC1C11CC60EA98C69B6BAAF9A3BF00AD0A684D704294478B7D1AA0DF76
9954F049C68D003EBF0D1E0095626E61F6B69637BE5CF8B84F109BBF41B03F326A19B10C7FC8
82A90C41B8D7481878147062C53CC1F83BF11765E87D83A4DFA4DCAD31EA7477AEBB750B8AF2
66A7E4573C8091BBAC8E1F3C24D8EB3B776EAE35AB893B2C3BE170CCF23085C6899935C31E71
21FD834DB8E2D4D77FE40F1DE48AC6377088F08C576BB5818682813FC4342A40FC4804EFEF51
5E4665359EBA7358D32F37742153C0561D94FF067D11732DCD6B39DFFF45F487C0023A3025BE
488232310618DCAE3E1D6A477EFDC25173BB3425BD2E97C8C123727313BBD8DB4AFC39C1831F
A29884A7685EE37502F1D8B4093D8D621FAC2A606F0BC8B90CDBFE0E92DD0C1C41B111AA28CE
D8FA77C37C3EA5FB15ACC7AE589DFA25959542DAA54585AEFDB3ACC6D3D7C96A500FC0484069
0B019DE6962B3CC59899230E9BD5350E300EAA255A7095220EB77D952B966EDC0B417DCB8D72
B7533B5B7C75DB3077077294BE50614B7E9BCC216D1F81844D31E36D3D558AB314C04CD8CD56
56396A59DDB525D9DBF137AEE9C3FEFF8D5969F13D1E6E01934D9D2752868B2EA9D9CB0FE978
B04FD680D8C97B7943172C550E6822151198F9E88CF79038E8DFC6FC59AA9E68EBEE318C7AB7
3506D5CAB35CF5EE4EA38FFF6F2D37DC8B7105A8C4DBF792809896FF6151B7BE0A84564B8B3A
99E447C1B64A7D7E6824221D2E6AFEB57A728DD1F3F7694E7BBF479DD7DF76447365AB2B67D5
2D5FFBB4206517D369401C963DD82E3225E3E72588659D13EBD30CED0496403E048827EA7A26
0BC6528BF919731516FEE3C48C147253C33142EDBCF2C1E91FFD1A1D6CE47873C6E893C81B98
3111E4D9A10AE4EA57CC6F4B162E38318F7ED8E9418135F4254D6B3647271CDB6DF768723DAF
F93E277B2091286F3B8788D3C05EC40BC63696E65F9333F52EF52C661B46DCFC09C9EB359A42
5B1EAFA3C9EBE9FB7BF5CCB1855D31FFE3AD096D2EF783088D8CF37E8EA93EA92B6136EF6F8D
F9A1A512AC7488459260B56E432ADA8B4836C32355DA37A81F0145B9D0B4B983A6D25E0C64F0
5C436FEDB3612B3F92167DE3552A33573E53DE523C9B3ADC15C6A802D21AC545624B1090CCFD
D3BD889FC5D92D85A01E414EDEC809FD7D9538E5A3022990A08279268505709AC88E88B4DAE1
690774C734F14F3B5519234080F9A00338E32BA65921CB17560E9677898BB9762F63BD270357
A9C479BDD38F3C2A698E7E56AA7D735DE0E7248D833B6D0216A9DDD11864074BC1DA8ECD55CE
B295444F935281C81A88C2D90597249F1BA6E77E731546093D3F2A839A561D6FED175F6833F7
5CD4C7913B7ABAE51988BFC55BFC9285479F3E69BD38BCEDD0A443FDC6CDCEFB37C480461FA6
178E171F68DF5D46DBE8584FFC29BB432A88C0A91171EEE3053FDA529EB8FCC00E6345311D48
98435E632E3D5C6B7F196D3047AE126752CAD9817A25E269717D14F423A939A8503DED6C9E8A
E2E0FFD609E194CA1C5AD6D83838035B65E25DB702745DB7040E2B425A31C363F982F470C658
EAC310D49376D3D9234DE4704E971781D7C001928C4EE798CD748938F48C67B24AC3F1A0D7FB
0FC5CD0669E001CC849529D7AC79CC408367DB33106796DF433C7BE58E7B1A6A1A460C3290F8
93238DAB3CFEDBEE70A5D7C21C6B28C3F33BA8A816AF4B59B903BAA188E3C3A9E6A656791DEC
D958EF9753C41B5D8EB127AC6FEF585065313EEA307E7196F83C9CF27A0A9AE9C5137094C5E0
6EA610C1196A1976B83B53DEF3BF4AE3F5B4E250F63BA931C8549A35C0D42FEB93519DCF06E5
17D6F0A7820A3BAA4ADCFFFE8BF924BDC0775FDEAAA65F0458CB9BE35AC1C2A8BA2BEF9FCB72
6B1C26F9187AB79F07476129201FF9225D541A5BB116E3EC398A243B2947CBCC54C4BEE7A799
29390BDB25958D287AFB90567901AD71D768BD79365A5EB24D7D0CDE6C34332AD20E452D5BDD
8971E42C2038E8D4526FA8225F9CEEB20E2DCBE0E6C4E2723F1DA2585E057A3A6DE8C22930B5
2B3C6FF8506EEAA6AB90130960B02409E1E813DDF1E3C8FFA44AFB7760E6611DF5B8D1888027
D22F922BC31C82F5A0D58F1A2164D98D17F679CE090AF592E379CD96B4C8BFE4281815136F33
6C26ABEE2ECAD7D5CF21A6C05892812EF47ED03DD809151908233D4DB974AFC8961DBC5545FB
E5B35B84B9938254BFAC3E2F452B49B296242AB14195C9FB5F2414CF3C10300BB145641CF279
205CD3A3FB5A370CD819D0704428AB8E8B7ED3DED214F15D531E052E7E2E7544A4D555727FF0
AFDA27E91F5FED5EECBC34EF52803020E42055DBE6B2A6C290960E1A961D054A6DFDB6BA1009
17466DEAD5C0598466928E36D88B1EF12E94893405DC49FB13CEE62CC91023185692679B2E20
8A63FCBF3BB60D75D05F9B073E57A2170D8C54EEBDA872F7BA3316C7C5F2A4837DFE73F027BF
848C597402E5372842F4C5801356A4AC43A16125368E10142715BFF5B08A1ECBFC10B4332119
4CCC04C920F741AFA207C6DBC65B191ABCC850119A3705D901787A6ABECC9007BF24A6DAE160
622D8625627B041613E1C6E1F59903203A100CE53145F56A37CCDD1306C8A6E723C4F0F05A45
87268CEAB9BBD542102DD9E2439D6EF8E6F00A59A1C59706E259E6C339494AA870E4FB52CA86
5A137D9A92D6959E1EC667A84AAA5EB52421F1963C8B1CA39CCFC30CB7F6A3759AB922137EC1
8A0954E38E45B038934E6BC2FCB7E7283BA610552E7F2AD539B69F1306CC4C09CEAC9BE51721
B2A5718E9AF6F5BFBF0763AB03CE61E28EA69DB303C02328DE86F665CF1E6731A181D0AE5EE8
0A8CB6B650BEC8EA91FA81B6B29A1458B6991B81F76B14AE7B6D0EDA1880A661D8752DF56C92
7060880CBBAAC56499188213665DCF0C9A13F93C0819EA9300C3F621BE2C1FFB19981D306118
6812AD25CB640E24A03F2E36EAE0C8A98E0707148539354DAC4FE79FC895D2270AC96A4B8449
73123A06CBC319E27144FE04F53BC0A1E47B1D9EF9FF0E615D7BFCE9FADCD20A8AE684E01464
CD8376722171F991116069341D3B8B9984B697ECF7FCBE96BDC4C1AB09C6115F853A22AE2367
E387D573FB3552E279489F6C2FE1D0DDC2D4148EF81534FA274576DEDD8C8952F52FB8AF8FD0
A7644E9D1A666EFD9125F49CD5AAD83FB840AE2A2B86794DC70F78DB3028C99F1BCD66DE3C99
07693B52B245FF922A7B52DC53850AA09B728BF34DC23510359C0083197C7C7E48FC67A5DC34
9399ABDA3159532E9BCABED0A4AD6F89ED0195AE6689C002DBF884B2780115180A6E61D56E4A
B00BEC883C6B964598B361709303113DC9E821D7B782C8A05C492BF06481989B6A5E3DC1BE92
5E21C6DD9C7CE21729FCA35A6B366FE7181642A55D7F08C346E554FE6307D9ACAB7837F3A2D2
8F0126E27F29C0EB3A7C0CEC7B1DEC146903D4A714DDA69CFFDCB4595D472F60CD16FC272356
D39943B3447EAD3EFB1F94E5AE6EBA8589EADBEED631F5BE76993ED98EF115207756B62BCDCB
54B6F4AEFB4068EC62650C9AF01B04D385B1819C5FC0B2EBDFC8C6A4F7170B96E5165D1D7453
D97711A36FDCC6AE11948397A6CBE79B6CFC0B2D26A3B0CC928957D1934B156673103B98338C
B63F7BDD2DB13DD3CA32DA46A0A8BA0E61469AA3BD66437C880BBBD70A428DDECF796B6E7B34
948721EE8072953B2452A05ABC7979A88E26A8E92AA1668A771D6A2D6CA5B00B0E0CF39D3D4D
1F8084DA1416A7DC987D63ADAF2E644D995798F23685288854F24BBDE183702F762EA1915DFC
CB8DD3D8C41462A75715C55A04E1125F6BB7014886DF601859615F601C875EA415EF6C28B5C8
6907B7E67E1097D4C1403EA97DE00B98ACBA2E25604BE9DC63E8FACEFC5591CADB2419D38E07
1EBC686941AE0BAF4BA24D050AC7FE7641D8851D0139917D66569EEEE3FFF8D735339A35150A
C2355B60A52306B5DF911D9AC4884E7606480DF7CEA4CDF34E2203BA1D86D570CDCBA230D39E
B054E6AC3DBD4F6B3F1BCB0BED335DF61AA69B28A5B94C09B3029330B5D4864CB7C0E3C2E400
68E389A91A08F714657F47C14FFDD3A23DCC54BFC2AA162BEEBC16A822E7CD10F3E232E10F44
5032A779F7D463A269DB25307AB304F922B4A82C5F19C93C6D783FCC6EE8939E9D1330810AB7
C76506CE8256FAF9D99D09FC4D329155D880A5092463BDDFE6589F6E0EBEB4F3DF8590DE99D9
DA814F99A6D03B3E81F8950441EEBCB6D90394C4F9BC411355E5E74395ECE8E22CF95E17A889
5FAEDE80BF5906E44EE8D30367244731D731CC11D9D733BF185B1EA3C780806F948CFA060895
6636A69E193DF5E258AC6CD548C3275F7AC32EB6591920F62188CB6DBE90A1FE74EACABD8321
218ECECACC8DBFB4F1EC6B08E16E95AD736420FD9666FE44E50DBE5D923B33BD62B2049004E5
38FE2CF3274B5FF8FAFFEBF1F74F7A80ABDB5A310B0D49E3C171E611F28D93AE0F816CACF5F7
AF05B69350C058B2ACA7FC0823F3148822C320B17D765A61C9489B420CF87CC90228852E6ACC
63FB7B192D44E1BF6089B1123A12249D7822DC3BDA5FBB05A9B579CF934A3C756150AE2871F8
9807BB3B7A9BCB0655CBB5BB3026D56F27F37ED4B04AFB930C47ED40F5D0A6D21FA49620DE4F
C79CA53FEE9F61A19964F243CB8CE353B85EF953703A0A39033485D43DFEC4D5B73A039F0997
2800EED1F5C7D1232D9151E3AEA1F921BAF0DC5473C48571A05419102AD34A3E060E9EADB498
0E9E7BD438D84F263392927B81058D69B3F5FCF9193C58B82F7E0F9D4D039E9BC6E2394DCE6E
FA5EE6E2FD32240C8339A438077CA45137F545483FF3E00BE10A9FEFA87EA47D65EFD074465F
EF14B349B3D7147FC03C01BA5D2C9ADF21E84C40CD350803ECAB0160A346AB57478B58995719
8715C3DDBA04296026A522D43346A89A1394C0409527A7A2BB9DCC04610B940E16E0F93F7264
61349A1CBE42EE5914D629B108BACCE698C601F9CFE33BD9D79858D1374845DD7DB9162E990C
DA524AB828DF4C0FA70F93AF161F444E88888C9D484B6DF6295DEA6259DDF7F8A67E5182D633
88C9AF8CC9584DD47437349C5186E7FA4283B814A451B0BF33927C2999DD743858B22CAEFA91
FEA5934468D8AC643D2E930043F4295D48EAA01BE484357B1D880B62ADB101B6333AC81B7ACF
018751F9FB96E57D29ECE68F50D31F4CE795DD7F18748E7CCD94C40A192FA1CF9773EE434964
68BDC3BB8F19D4B174A3D8774C211E10C1A0EF455BE10FC395A8B087707300C9E6EF83CF3511
8A4F5D2598A5CA586ED0CF33C87AE0770BA847DA912920726ED06F0BB0E3271000A553C12949
2F6BFB458A8E416CCAB6382E075E8D7B3DB0B1D10180CF48C03DEDE161E1CDB4CDD71FA1756E
67A7D855F4D7EB6450F16AF073ED3C134D3C9F16EA4BCA31DDB6308561D41436221AE7395016
918AEBA8BD51DCCE8F9CFC05C5BCD745B16FCBA49332E03EE61C4629A1634AD8031E91649A2D
2A05D3FA4612BAFE5EC0227A77C48D166C720D5DC90481D4C8447F5A526DB5BCCB72D6D30C64
4565697A40CFFDC255AB2F3DBF7C67CBDDA56AA4B9EACE0DCC6A9AE2C0C0ECF97F5FACB9DBF1
C9D4F9BA20A03267F96964A5150C96AE02CE0A9E95848F6175885BBE30083EB8A508814DF865
F97A8325B025BCB50F9163ACCD46740E44559AB5EB4D3B7378165F576A3B7216A81D478F3C9C
BCBC850E81F87411F19BE40F851BC1ADC3EA4A2FB03D98AC9707FF540DDAD4DC10C808EF1955
ACE6F11C810700790BF118C13FF14CFDBFC90484A70C1AB357F2CEB01C8F4E7D5166106379E3
C7F9128A26CD504747C44DE8E4519419A860EDA2B6D248B332D81A33870989DA87E1163D4970
C9302A77E96443F513A839F8232D84FB688A011E15F35D9A4BF65DE17E7088F7DA8F4EC42FBD
844C4BA23527E78545CD51E556A8FFA193E75B379B3F1F2FBB752418549EF7F7E95F848D49CE
030D1C5C457315AA13986AFFBD97C8651FF825F4AE56F8D61430AB574D82204B76F1A5310DC9
FD4961F88BF8F119B6AA12AA9C25A91428C43D645650F7E9FBDC4F18D885A178B49CFFE888B8
C0DAF5E772A2CB3F3964BB468C51F9F9BB41F41D49411C68E880A23B87F66DA6F2A5F41EF907
AFAA92AD50FFBBC18D143E289CE8E5350D7050034326735F75847962F2AB48FA29E73B8A1FFD
981BE0EB96DA263CC5993256D15062E2767241CC088EB6062BA7E26B98A890585C577F36FF45
0276EB9FA53F2A3F3D1DBF503DB35C79C0AEA9ED80E879ADA05B5EEC049979DE6398FB2469B0
B266BA4484534A2C23E1CAF875257FE6F812FE88C460E5C5EC0306B4919EB7DEF5AAF54FBC35
28B6978402FD495DBAB9342C4286BBE52D8DE87DC185381E49E27D6ED306D404822717E9792B
A04181939761546D6D2BB405C4B2434849402AD31E9717CFBDE31CEE7B8D9C815952A5722837
ABEB852D6C12B109ACCC12035007CEFD03EF00E043E5611CED7DF852626FA33F4D13C661AEAF
8F567A6B96D03D7780AF247938562B13E2FEE1E4E92087CF7CF6A8CA4EBF18DA302DAE3B8E0E
2EB573081A15B145C661147AA6C5987340CCE1BB8F6E21AB02D9933D9BA50630F7493BF1B2C1
5AE78D499DE0D416CF962D6525FE3FA91D30A3C0A241003462CD335FB69AB34B98F429C07123
EFC3291D1283FC1A4EDD6470F2C3B4FD9046AC4DB4E9E4D2890C17E11D4D83827AFBBC0DC58E
F3326BE311EEB62C8325EA758FD2AC07DFB0E636B405C916B226BB80545203DF85AE035E45D8
81001B8F1AE136CFFF00B9592E15A61BC96E8D265623097800FE533889971C2F7EB67D1E3870
148B68E8747DC86765222B28F30C688CB2F6C4A616C275B36B231BF0F6C06F5B1D73D31745AB
86085ABB81CDC657CF4501E200EAD4C723057C504D97FB12D6143E5B8CBEA9F8319C75063B7D
9046DE453D1C20440BC03EA51F6D00591614A882DD0B55E78905D5BF2984981CA9F7E9ADAC4D
CE15D07DEF99400E3FEE2DE89E32BE8A53D072731A0580985BD855EF9D304B4FC56EB27533C3
306267DAC0189455D5D7C5E4553F70A23F2176FB20B8AABD22B5681D9AE021B0B67A769A6621
901B428F907832EA55C628A393703F3C1DBA7F8C454F320557CF0B901BC1855938CB62EF0311
191160E6D4779EB830A54B114821E414BAFDD4698DC51B1342589C105B7F67146A3DAB3ABF39
0C706A0E6EDB486BD20772195EFA2E85828128BFC31602AA531328307DC246CB6B4B2F2BFC8C
E8C5D705F71541E82701265CCACBCAFCC7FC5C37D02F20E1AAF7A1650FAF9A19C88D85006CBB
AD58A5663217490490D4B9AF0E3794A3473CAB2650E2635A63C958A0102C4ACD96885101B9B5
3FAA5493F6EADB71E68E3A92B5843086B02F920655CD94B19BB0846A71969B5819DFDD5AFA35
F5E83F8FDFDFB7753599EC640CF35E722FF4453492BF92306883A6EA056833223984637C1615
49261A4DC2B5D0496336463CA0DFEE1304A92B850DBED5F4F3272850525D72D18AD3F389DD5D
6AB3E77EF972B6556FB16E753F6A120633DDE4B7C6A065A52847AA7509F522467F8BDFD7E678
A7E4201B02831323679F10744C445B822ADE13234DC3564CCE39BBBFF6A2C5BB227B3F8D2B25
E25BD61B3CF1997639FE218A051166D8B3624F7F9122884810FC2C3BB9F5AA812F67C9E868E3
ED2E05787D70ADC3F2EC78231E1603614DA091A5F5412AAE5D6B35BB5334E8EC353C0BE495EC
FB6B90313900AB574893C945FC4B1683DE91555609A471881F0F26A3D8B4889F34485CE0C5A0
0282D68ACE952B209206DD658AFAFA452094F979F9D9CE4954AD90585749BDA9690872A39A85
A5927CBC06DFA2E4E1239AE98870E67DFB87713A4CD9E41A63966919071258F6188260EC3A7E
90CF0B4169D3E2B9342C9720C0B444155B7D18E515EB91F660F43E1C44978415EEE3CD4B1E37
9C434B5C63C19C5D700886C5431AE444BE7F33B208F8F976BA8507C9EF3593079C013BA3CF73
2F75435C9CBC1D20A8165F2ADB0EA4CC668943FF15DF532F9D0D7DE1863315C4E02568E5DF65
3FCE9519F57A34C463266755819B07935BC96287C85E50812EBA12856AA8212A967E784C7C8A
5E1CA7EF948C7744C704AAC9DF667E9D39BB0479AD65C1D59183BD027DE60D13A7936C45ABB0
16821905E28B180CB1E254318EEBD1913883BE3E1124FC4FF9CE0F8A25F7B6CBB520520F029B
B8E1E261E2C341C89A7E6F585DEC65B1DF3DC03E2BEE67D965FF08FDE7F4A57934C54A0DC34C
CC8FE92F1F69A55E9CED8B6724C5811B9729E5915B5683E4C43C916D75B1065691667790B59A
DB85BD78993FA97AA8EEAFA06C69E5BA7D83355EFF3A1BBFF54772D8305AFCC3DC0D2A71023F
C1588737574F9CDDC474BEE073A9086014376B61F92DCF92DC99F305067E649C880E89B4C67D
776EDA2BC2216DB5EFDB1168218C57C926DBE456CD4C4FB84260780A174A147B388E6153CFAC
8223DD2D4910E0A52D4D9AFAC38D81A346F91BCB543831FDA880A719E0E180AC3B04F0489EB6
11B4E165A0B0781B92DB3E3784AC0B9A42C7A9951E889E7EAB1B48BBC59E17430C02F847DBF4
76D7E04DC4EBA67CFA37E6F82354422DF6EFB3E2526140A02A3D31FDF345F81F474296DDA2DF
2D87EE99A45BE7B68AEA62E79CC8DD05DC0150D185FDFF6EF544B1BEC29D3F37FFF1171D7C4A
7BED054621FF7CE50CF71942C8552D269E1BBDDD3082A538360743229DAC0E3EC1A5483BBA45
D6D7D9B52F0CEE8589EB58737F6D94048030195A15EED77E87108A30318EC13EE6EA00F82BB3
5129D6B0DCCDB224979148E9E002541234931CD8CF5379F7916353918982D2A1C2DC4C762BA6
C268FBB77C72E391FD7EFB16FD6D6AE33C9E8CB60195F560BCD56D84506F7B10E852B9E432E5
C76F820C551C0086ACF936C506BD73379486853748045BECB1D37CF8D239FB143D4B82362D57
B05FFD9DB72154E10EE81AC1F7E2E92E97CAAD6D0FD3FC08B0FC157AACA146CEE2A1D44889B1
DB1FE5E2AA6C4BF7078F71420BB5C3E10AE5144B087D5AD92446B7C98C9BB1215F0A57D366A0
8B1CD48E154B05167807042AFFDEB0EF40E5AD0A9155FED22CFD81456D8BEA84FF7596FBF591
B05E7D6519FA251261953B470DFE63A37863CB16542FC5F5E2B9218C721329AC0CA4D741CB29
74B33FABB566CF0CF246E99CDDEABC469646157737DD9D2B566DB2A22962F8AC534E7B14DA16
69DB345B7FD051BB26BC1A0759357EFEEDD0BDF84773F127CBDF807BB691AE0700A66FB44882
31FF453E4BDDCF61F8EE6A6B7796BE69C8896F3AB553CB84B1108DFC031374B35DFEA54384B3
5BD5759F37CADC634D94624937A0EAF11BEA86876D6278EFF0620635620F63F85D71990C265E
C2608398FD8AD9304314A2A220A1CFFD992F438E31D8A7229E392197FB199707DCF56B42E3B6
FC0F01C5D60E2FD244937A333264CF1F7B52270BFA13E9361A86402DB4092054CCD44F72C250
580059AA8CCD565246BE829A60A0D487B6D77F088435E0241FBF2462523FF2363B0F9E2619D4
074A6E11119AB1B6B8894154D21BE5C587E9D79279FEAE40CFE8E89350E752549F4275EA4C10
DD76A99150CFE0270D0D782398F0C223721D36727DC3FB943F4A7C8F536DFF7614E0D0AF315C
2C9DE77B989408BD5391694BC2C5F548A8EF573BF658C7A5939306C773E78990242E71B25D3F
76E56ABAC2110B3E056BCF4F31EF4702FE6DAF982D2533A8084D3434A2C165D68398861CBE42
D41882CE4AA4AB127846CD66E2E4921F012F99F8877F756F5677F7B97E040815A1C81A13E4D0
B28A95CBA2DD97AC31D3D8527FBD659BBDFA8F1B8974106D4F01204888B81827FF0139F14B75
79D0188957EDE2627D82C4E1F59B8F444E67E0F18855AF7A3EAEBBFFBE309FDF1A3142839946
3EEA8846EA7F3448CC275E9365C03558C7D610C3EEE80F5D40E992AD0C31BB46C98C50549D02
4D1119FC3A390318A1D9B48F4BE1DB57DBE2E94F8DC85A8DE09D697F3778F1FEE93CC98E961D
3B66BD7F7D22DEC279F49F602B5B95F5EDE40FBFF9BD3B956C32484A3C3FD3804EE3AF0E4216
D8232341150EF8CC24A9FBB4C8E120766408E297BF4E17EB40F02C92F555AC8FAB5FC52AA4DB
20B9C3F9156F5371719C222B24D781EADEDD11913D418DE1072F593CA997BE69BDBFC99448EE
4104DFA549CDBFDCF31668C3A01F045F7E1307575BE69D57C776C6F80532B081B60B62A7DD85
568DD9FF65709C4202F4FB03208EAAF55EBC43C523C48DF13846EABB7A16752CBADDFCE53BF7
389C3FA23CE564015A236237E6C9ECAAF89EDCCDF95A6D583E3F013349D0A8720EAB851FFC78
AD491CE34E97A26BAD2343CE233CE8A6998E9CBC62678926C1AB6FBA03CBA9D5F9F4305B897E
8ADA3C6D7EA98B732627E5CEFF5021F92D0DE29F7D65B0443299990AC6313E8DC718E15B22A6
88970C578C23A142A228148995864AA4E65F136B5249DA8624892DC7E08828A2B515F2272EE8
D8B3850D6F7926E3FD57277760C660690E2FA1443353E3483D19D74254C9B4BAFF454B7399B6
BD81F7500A354CC0736405BD5BCE60BC7BEE26AF8F0AA41A44A58DE7C893BF218C238D1F1B30
C1C59AE69A348BCC67A965A36110667F8730E6AA0370DBC7077E2933253D949B49463AE33E23
AD5B28EFBA97EDD167ED7C909C72D5A639405F71E159FF2091416AF1FB706398AE404530DB15
EC1877699F706AF64F50BAECBFB8823C2DE356A80D07182CB98485211BF77B5C57BCC14DFB52
747EF676F3A19F009D34A2146D234F1ABD0703A30851881AC248522C0C0C0B7D78EE5B2E34C4
8F8BC55E96147F30441EDA09D26CB61B25F475A22E0E15CF2DB4D6C47EF7FD51EE6979658F16
BABEF6DFC0D0572E8F09AE9166AE6C004964C0661BC6C6769137F201ACF787B26B61DF1FF150
E5C9983632588F00D69F3C7678F695072DA8CA434C05D9CB511EE38527B8AF52096D1908FCF4
6A705658CCF02EA193AECBFF0D64EB71CDAB1F03850216F3ED620DED4E75D6100791E3C8835C
76A69F9B1C817064E51E6EBB3946FC5EC3F58F19ACD7FE8B75EAFF3321AD5444D10F0C724623
81113D5243642EE40AC86E74F3F5843F87FAF3257C82B5F9168EC411231C7B785B119EC6B141
9BB8D94B447793FEB8F71F661FAFC8B428E0F80FB9F8013BADC6C040E11E73CD6DA107B13FA4
73DC5C5FF40B765E1A2E3727941854F461BFA62D74E77DE32EB3BB7AE997D225333ADE5AC052
663DDB2F35A23567F2AF170045982A64AEFAF7A0451C799BA521EF091D221972D544BA9C4887
B537424770EF7E75C815FD0F7847006999A065F85DBD2F8521B4E97943571BEF1C28BD76D0D1
5EAFEE12909EBAD29C6787865A2B0F4823BD97B01CB981E39EEBF53EEECE6D0A8C24DA8D568C
899CFB98D6E0148ACCBD8620F758D4C2E31D977EF26FEB13E542AFD99BCD9BA3F95513B55B37
DE4D7BA3102024F200BC82738D82D2209FA9F8D919A9BA5F04DA2B51A9B522D4E129A5D8F2DF
7FB6B588F11902706A280ABA268257414660CF50B808900158B54CEAEBC045492AC2F7EB6A55
8E6236CC0A11D610B5D24CEA183D5706358E1F78916502AF2CB791364F54A86822B65100AD00
C17FCB67D551900B62F927DEBB4A062CEC32015D30CEE7081DA2A7E4774F668FE303945D75D0
B927D5248B878018211BB44156DACB7646D57798615113A6D9E59BE8B4C3CA47705C8BE56DB8
A311F7E86F0E0CA6C6B580E6DBE8612876D079FBCC7A755B2748441BDDB1F9E5782F36A42FF3
89F02DCEC0A492844A1C8B3DEC93856A642565962A7C74510504E7A1BF14DAB91CD41F97476A
86024A0B8000CBDFD1551EE35F574B9F67612AC1D7DB15CB193037F6D1B64FC490FC75F9AB9E
2DC908808D633049DF81C27A390FA658A83392A160311BF11EBCB2B5D27AEDEC0FFDC7E85A77
883DA8E6EB240D5D32C04C81E9917AA2E78D00B6A7535A2A501030B82B2E83CA21AD38A97201
7ACDAFB2C9E7767DB5DE9C1C883EDD881BEBBFE1014832F532DE368E0A3A768139CC3A45FB90
43A0686FF4134D12AA839C60F8AA6A12DAC80463DB625A5224C4D6CBEA90DC072953D5EEBF72
79036B43D681469163C4E4509A5773378FF5E81397A338F2CC5CAA8A4779070DD1C99FC2B089
5677B1452A4E95042CD9B9387ED45F025A705CC4E60192917C7A9DCF12BE54E166A1542C6F6F
14CFC0605949155602807FAA8EC58F1972B2D7B1C972E1EA41CCEBF8978A61E3F721389CA7AA
6AB001A22B59335255D690BB93C1DC0D1A9F87BC06BA878721745DCFBEE9CAB409BECC2278D0
E015948F41B175021267441EAD589123C16DC6EA7496E19C1B3A64694B384192CF047F86F5BC
9060511856FEDAF53550FC67A20BEBA9C9BE86748DC941D8AF4C9E174A8F653BC7228B408F99
A29A12F27EA0218E964E170F06FBF58942AA1CACEA2D59669E416FA7B34EE37E0164C5A1C1EF
62DCE91FBDA5D6E1BCDD0E5FE4ED472889C572C13414EF3575446382F9AECFF158D8657CECDE
DF17D2CF705940BD050C88199B3F19BFA35429E07C8FC980E020B412A7F2D9ECD00666AAA358
6B19CBEE23944A0E9C1118AA743F4C6A25FC2C9830162CD4B96574A4D8DBE0A1F9A12981A99E
4BA54B0FD79464C615A50BE5B78E46944F2CFCB3EE5BD30167E3D0B84E1EDBDDB484F6140ACD
B4EC4034FA1E2D68777F6CC62919C1CE750117CEF0F77BB988D7EE13826D2B717E862666AF90
B76904FFC507F469056766D38D26C72C8261F61B3E8C8A2C15692EB47EAAB2EA467058F5F02C
C4AF5846358D253CC25C3E6650D67F60255FB03F06CD0EAFB06BC974B7975EB4D0A5B6BE1472
16C1666CC738BFD67DBF4B538DE23D5151DB5504C3A59D3A071226815D56B4D73BC4121FE992
E7B07018912A9C2760FC3C04102D1211F35177913C9887C22549CB0090544D855D8CE73EA036
AD911781C49A3EFF5FB3441F9C07CE1FC7A566C8EE399C518DFE61DDA1D2FE2BC6E7DFCB7B5F
9EC4F130AB3C94B8C22B7D44F9DCD2A868943F3B6DFD1E81C000E4ACDE384DCDD056008F768B
9AC3A2F167635591260DBD0681B33AAD1A5962C540E7683718441DFB1E1DBA8604FF757704A1
D7B9246C96A3750D298CE8AF6FF4E59877907703687CBA1A446983449796670A2EDAEA7C1D61
27A13A55DFC925F4BBED3879924A7A9FB5B0204D4B4B1B1FEE77E1B1A5B789B12B4557D16A00
6CB39BEBA7EE9603DC01999E763E29609ED0E7F9F66B11D635552E021F863FCB1C67B771F323
E7E96347A2CDF00D9BB2B045CF5A69E6E913FBB8CBE12A101132FA9EFAAF1C891A08CDE773C2
B82CD3104BDC12C5DFE1555C9657D375434FFBABBDDFBA582313EF558E4A53E169D17C3B4385
9DF39BD708B421F9FC381000E544609B40B5672BF28C97F30D6A7F4C70500A204D63801B06B1
03B9F0ECC1871C980B9401E4EDFBA7B9AEFFD40B8BFEF088DDE82306FC814F222FB7019AF81E
7AB33DC2C418A8513990FF8A0109B01298B395B6B5CB8833C620B8146AD29AA6BE177A8BB7E8
362E7CCBAFDAFC5B8141D66BC687C7CB19DEE36869D9DEE844288BCEAAECA2C2CD887AC2C507
734366A350653D4EFAAA3A2F1AF61DD0DA1551E7F08EEF13248C277010FD83480F9BF589CDC7
A908849371A41CC2007078CF1891EF672377472A667305C9E6B8019033DE6EB2C52B903A158B
34686EAC72524CF900153A5545593D2D4AEC084864712F51953BD7D0B719C3E49E15DCCD4072
82B69368405BB460E2BBA4455DF532DA3234045E41B7641933ECA2795149A2A60BDEAB687208
3D28B86D5B7D01308EA55F73FBA7EABBA4D6B9F9AC125C08691FDCD3B474D5399EE265FBB740
9C1ADAE0CC68F0EA5F5362B7A2D8D59062A92FF918588F0E90A78D927EC9EF719E36EC0F33D9
DFA27AB640781701ED6AE52BD0ECCA7D5B884A3480816E23D38288C299C5F8087AC09F2E0453
559D2456B46D30D8EF37B2275BB6CDDAA3BD67FCD10C5D7EE7F17F63C93DB89800CDE6CD6CF5
278FB8E0EBF0F43D6CB9E9E1ED3A98E7B427CD2A48DECEFCA182A889D43339A6457CE623F2C8
FDC6718C47C292C7D8EFC317B1777DCC904F636CEA93A3DF4CC6500A509C7DDC99BB12E99786
5031D52D652A2FF98BCDF64CAADB75CFB60D0ACB373151F19E7FF1CAD433F75D35340527523B
D985DB314DD444FB952465731254F446AFD0925003BB5280EFF799FA6625B176CF96860B2B46
5E4C87319BB0C80E39D7328F786E2A9A502CD1129761D4F4A55B8D7EB73D22145801FA19887B
521E11C85C87E6CB6643727F8D0D7F63B8269B3CD540E55DABFD82F7B95C6FB75A390E71FEB2
FDEEF458F4DE0B03E1A98F5842A2D848F1022EF9E4EB3CAFBFBDBB8E2E15194DB1B5C6AF9ACD
F5C696BC868610D06E03E7B0BD307CE2FF7F12E782FAFF9226CF0B8DFFBB0AEA38F30E62CAE6
503F525FA0DCED699E39A2EE5BFD836A8340177E4FB3A98F908715311431B5630B706050CE1C
429A183F5FA8898A10A4C87C146D9A2E2E7D10CB30B00F258A0BC28773F31D5C0FBF2C52628B
58F180F86BFEF52009D960B133DDEE8589B1A6F6F34963C185A04125449EDD7B1E66D9D7125D
BE8186CE6B33CBB4E21A1017DBA07AAF45FFE07AFE0D382043F821F2AB8882D05056A735D955
0EE2436E96A6876AD5069B43CC7392E4EA6A2DF6CA21FE79BC121E194E794A8E4F7E49FD2872
5886B3887A0404B1190D230CFEB4D4A782D73FD186C7EE1BA3D8D4BD1A27C5DE605D662C0C85
67BD0F18C84C18FCF45423A903C408740E5574852E0F6DBE472FB22B5B627DD3C1A9AA3118E0
2C4F1282D33A258DC9867DFE82C2DE190FC786F94DD709400FA47517829A07E5B445C52B830D
561C3DA3CE7234F7114B797DF580EB211C3A93712440D2EAB41FA2C1920D50D43D61960681E4
3AC5F78EEAF9FCD65F4E4DA76C4D801C1127B91EB753A18EA094DB4986029FEF8D46B8923108
DAC26D3282E4C9D01EA7C49ED322AC39E4A336BC0C6F3CF1113011FD4D2CEA5873D7F39FD809
4ADD1D977504B2B03CB99067D0904A480D22E628455AAB7BC7A61AA048725DD779B44E210D41
0BBF66F83CE48DE5FA6775496DAA3FA9022D2982245E630B8FECF7A45D61A4C33A467C7347CB
D94BE2E807780691D3F4CEAAE0FFCDD7F025E475CEF489C03F4B3B87A1D5BDA96F25A69C0721
D0C099CE97E5E43707533E77D74ABAFD63F42606F39C810C0B345C16ED3585E79475F4E292E7
85BD31A0D76576BE1D6549B955EC3C827ABC5BEB5C116ABA56068F787E614EF35C75F08E446E
D90A458AB2268BF1D402EDF1F5373AA40296937ACDDB1C79FA55A14E33BB530B5297A4C15DCA
9E08FE2C79074855A258E406BD4402372C094989F6A9B21D1D9F54866FD81753272771684469
873B95886824BA090B3A18BEAFB05ADA2B86826C92229FFD510C7AC24E83E8D3FBFEB6B2095F
48C23D1ACE407EC2F05D9ED0768F36667796432067E8BFE29E46CAAB5A296B51AB4B5C109F21
162955BD87BC636F4C2E679D11BB0E1FD41C486FA8D75053DA6360CED2324CA47CBA6D83EF2F
5C960D34AA485A8B7B4A0BA7ECEF0B627F3B9B8F904EC6A823A1CA2FEB717D972750B8094C79
1C5DA4883F1C22B236F1BA8314B7A978DE9D1CD4DF6C31C8620FCB7149517425445B04FFDCFF
5427BFCF98DB9613AD33517A04AE940BEE353893A84A0BD2F2C86924FBBDE9DD28D7211F4797
B6091F197966F7559F64C93C7456D06898AD9AAB0FBC1D74D1054EC7C6B0148EB8E1FF57F8DF
7056ACE18EF774FD8263A3B321417BEAF9D970A10676718B4EF14D693FFB5828D8EB02512D2E
192EDB906C4308AC369D4503813B4B794598F7E01AB7B46BE6423F8AE5A5694C62EE39510666
A3070AFD20D22448B8361C9435C77039CC5121B5F3AEEA40A8C7B280EDEA8BEA5F589F5CD174
3AA9F1763EF10A1123B603810AE79B2F11D2FCF1791F2BED7D3A3447BBEAD8BF077C655CFE86
E4FC177F874319CF94D013A9E80BE5358EBBA4CD797081C0FFE6D1CECF8852F21C55FB6878A1
4BA07C6087408555E1F83279B191E91D4B022DBE8C307DE76128412EAF28744FCBE1DEC15B8F
49223A1BCFFC78041E597DC207E39F017E7B84821B9411C5273054894464907A57B5A672917D
DA71B171C11810E7C3952FB0E9C87F385CE411A2270BD772FEB8A4A947E70EC4F673E1591411
16789A5E060DA145BBBDAD95C1BFC09F66F8FA6A6DEC0FC193B6E73F3448451919EC87CE666D
9D228B15F5B632C44B5A4594B690D376FB7A3D959BD5748F4D578F68846E0F40DE5065906EA1
7BD07FA9D077EFF8784C9B82DD391D47985CCDAC06C594C9B5201A6128B5BB1E5CCB1EFACFA3
679A7BDD03CD03BFF6D18654F9357C643F49FC6F64EAB5C0F24E7CBA01D84F73E9E6DCB79CF2
99237CE5CC7D1250B449896496171FB728AB302D5ED7EA98C85AFD9491615ABC737BD3D8297B
8F469612D25CDDC63BA8A4CFE70E55EB5C3FD801EF9D33D8FA827EF4E24A6F6FCE627C31AE40
0E94A11EF448DBB814985BE910D3A743D152040FD758ACB6AFDBEA7C44B8E98F93BA87569E33
B318F1B471EAC084D5628E94A5283C12E2529302F38B8B2DC0C80ED38439F50820E733FBF360
5C22D1AB381954B10BE2CD14E26C0238304F96711C887F89B06B550C5C73E98D9EDDB4DF6122
6B700F750F03C0507AB177C2E933FF4002C5F5BAB3F40BE2062837AC6EECA709F83D5449C1D3
D0E8208823BCA8D6A899722083A0AA94590ABBEB92281A51974F83385C7781296F8E8E507658
2EA4564EAEF58D0BD00403C43F9472D26F8816C4F830E51BDA02748ABC875545FE3FAD4A2473
04CE2547E1B40346AA5451D41AD9E594EC9557DD642980850890907EE209CA301294A58EEE58
4F6F78EBFCB52496AF623A83224F616039E46094D2085BD03DF02DBD2FE4B667BF51B3F9ADFE
C9FB45E6E476E4465F093DCCFE5AE2E206ACED652153EFD976EDD79E39652D8BC6BAED06754E
A6879C0C91E6DF245EA961D9C8D2D4688BEA06C92A654660B36CD0512E85FAE4963AADEBDBB8
179A397FEA0EDD6F8E054A66809D87A650977A73E52E8423A04E7AC99F65069A3F45EB050C6B
E76604DBA60C7E1481800939DCA3F5F2730F163EB544820331B25899B37CBE079DB5F2B5EB39
858CAA16CB6BE969C85EEF4FE1EA3A7E66380E541DE07A65409122A899F38554319C719423F7
9874BF9071F7DAF75790572EB5BD353463A081B69B9BA097CD6B2181FC9505DEFBE057C5464C
C7619985B2926B76C73396D39C74383B7C8936CC6533FA2209F06B67BFA7D71200AC2226ACDC
6752D086EF7FA2EA1665D1637F752867A61338BE848C3CD278C1824816DB9C1872E8DE49E1D4
C1361552B31AF0CA689D02639BA81F4423414713016169935C2C0FFEFEFACFD1F22A0B618333
C76BF726E95670C5C92E364409A16EED5B8519A58CF9D5429C9B2DD2416FCD5D587280C4B015
78778546613926DF3804B1D7E9DB75D8364B61FA1143257B0289C974FE9E69B2413F364EFCC4
4219F2ED6AB8937D7B0704CF323BC3F5C9C2D5DF0EAA784CF3E978C1E449B42020BBD694EC71
D9B3711331AC9AEE4B314976A9BF886CF204A32C67E288B5DD375A6036661686752900754D81
EA97D5EB72A67C6C65A1357BF8E13FCDB5D616571639AB1B6DD405BEA1A9F5368A79278A007D
760CE24DDBCD672665181A199A9E15C6B3D69A6DEB1215F74E3E433A6FF557BFD63759E48112
6137B5B8A1FB30AEAD8666978EC0241CAA0D8FFCFD8CD7C69616A4F32E0B9A67BC74787F6239
FC1292EB1DC52315A7D869BF572B15F8A962BC46AC4FE8245288D126B99619113E63B716ACDC
530C2C4C1A52F131C2280DA73FC09B241C667912C7928FEB1E583B3494539F4BB23EDB118BC4
381FD18F688A546FD05AE86028D37891DFDFF06446B8EBAD5D3A4BD32CEA47A551E7F701F7F8
910245FA06AA0B2CE537347FFA76056CC7018694E5545ADEF11CFF2BEC2A6CFC32A98F803032
31127CC4FD00F17027D15D4EADBCB3D6AB83710E64E1D1D64B989AF3D35656C2235631AB22AE
D48CA2C2693D8708C1E69EF412E113C8230A57370FEC7FD78648C29212345F9F1203B689BBB9
6A71DC8E41E2078D542DD6F25FE54B5965087C980D5680A115DE89BE59C18C4F928C54A02067
E8B0D66063FA717AC20000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark


%%EndProcSet
%%BeginProcSet: fvmr8a.pfb 0 0
%!PS-AdobeFont-1.0: BeraSansMono-Roman 002.000
%%CreationDate: Thu Jan 29 18:27:33 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (002.000) readonly def
/Notice (Copyright (c) 2003 by Bitstream, Inc. All Rights Reserved.) readonly def
/FullName (Bera Sans Mono) readonly def
/FamilyName (Bera Sans Mono) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -104 def
/UnderlineThickness 69 def
/Weight (Normal) readonly def
end readonly def
/FontName /BeraSansMono-Roman def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put } for
dup 5 /breve put
dup 6 /dotaccent put
dup 8 /ring put
dup 10 /hungarumlaut put
dup 11 /ogonek put
dup 12 /caron put
dup 13 /dotlessi put
dup 25 /fraction put
dup 26 /fi put
dup 27 /fl put
dup 28 /Lslash put
dup 29 /lslash put
dup 30 /Zcaron put
dup 31 /zcaron put
dup 32 /space put
dup 33 /exclam put
dup 34 /quotedbl put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quotesingle put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 94 /asciicircum put
dup 95 /underscore put
dup 96 /grave put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
dup 128 /Euro put
dup 130 /quotesinglbase put
dup 131 /florin put
dup 132 /quotedblbase put
dup 133 /ellipsis put
dup 134 /dagger put
dup 135 /daggerdbl put
dup 136 /circumflex put
dup 137 /perthousand put
dup 138 /Scaron put
dup 139 /guilsinglleft put
dup 140 /OE put
dup 145 /quoteleft put
dup 146 /quoteright put
dup 147 /quotedblleft put
dup 148 /quotedblright put
dup 149 /bullet put
dup 150 /endash put
dup 151 /emdash put
dup 152 /tilde put
dup 153 /trademark put
dup 154 /scaron put
dup 155 /guilsinglright put
dup 156 /oe put
dup 159 /Ydieresis put
dup 161 /exclamdown put
dup 162 /cent put
dup 163 /sterling put
dup 164 /currency put
dup 165 /yen put
dup 166 /brokenbar put
dup 167 /section put
dup 168 /dieresis put
dup 169 /copyright put
dup 170 /ordfeminine put
dup 171 /guillemotleft put
dup 172 /logicalnot put
dup 173 /minus put
dup 174 /registered put
dup 175 /macron put
dup 176 /degree put
dup 177 /plusminus put
dup 178 /twosuperior put
dup 179 /threesuperior put
dup 180 /acute put
dup 181 /mu put
dup 182 /paragraph put
dup 183 /periodcentered put
dup 184 /cedilla put
dup 185 /onesuperior put
dup 186 /ordmasculine put
dup 187 /guillemotright put
dup 188 /onequarter put
dup 189 /onehalf put
dup 190 /threequarters put
dup 191 /questiondown put
dup 192 /Agrave put
dup 193 /Aacute put
dup 194 /Acircumflex put
dup 195 /Atilde put
dup 196 /Adieresis put
dup 197 /Aring put
dup 198 /AE put
dup 199 /Ccedilla put
dup 200 /Egrave put
dup 201 /Eacute put
dup 202 /Ecircumflex put
dup 203 /Edieresis put
dup 204 /Igrave put
dup 205 /Iacute put
dup 206 /Icircumflex put
dup 207 /Idieresis put
dup 208 /Eth put
dup 209 /Ntilde put
dup 210 /Ograve put
dup 211 /Oacute put
dup 212 /Ocircumflex put
dup 213 /Otilde put
dup 214 /Odieresis put
dup 215 /multiply put
dup 216 /Oslash put
dup 217 /Ugrave put
dup 218 /Uacute put
dup 219 /Ucircumflex put
dup 220 /Udieresis put
dup 221 /Yacute put
dup 222 /Thorn put
dup 223 /germandbls put
dup 224 /agrave put
dup 225 /aacute put
dup 226 /acircumflex put
dup 227 /atilde put
dup 228 /adieresis put
dup 229 /aring put
dup 230 /ae put
dup 231 /ccedilla put
dup 232 /egrave put
dup 233 /eacute put
dup 234 /ecircumflex put
dup 235 /edieresis put
dup 236 /igrave put
dup 237 /iacute put
dup 238 /icircumflex put
dup 239 /idieresis put
dup 240 /eth put
dup 241 /ntilde put
dup 242 /ograve put
dup 243 /oacute put
dup 244 /ocircumflex put
dup 245 /otilde put
dup 246 /odieresis put
dup 247 /divide put
dup 248 /oslash put
dup 249 /ugrave put
dup 250 /uacute put
dup 251 /ucircumflex put
dup 252 /udieresis put
dup 253 /yacute put
dup 254 /thorn put
dup 255 /ydieresis put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/FontBBox {-5 -236 606 928} readonly def
currentdict end
currentfile eexec

E8DC61728071ABD4D5BCD230C4E186DCE095A0CA84FFC476ADFAA82124268E60D2CC570C5F52
C10ED4A85A71CE8E5BCF26AA13B27D7FCE1CC0C72C3B848DD5FFB2D56D06A1920FADE4FFA3B3
5336627E9ED1622C1F9652956D4A424488B4C4FFDA9936442BBE0CA749700AE98A2BF964FAD0
88F0CC64B7C1D76742F25E90E759ACA624A321402B1D20863FAF5E04B86C1AE66F450B158604
1815E52F13D2AE539F1725D11489898A83A05FE04D6D14BCE66B823C20E86B4E9EC5FFDF6A4A
2215A850966D31D9DEE52E3E7A614F79588F823C1C8B6CA57D7903FB0555BDBDE155BE127C1C
CBF318A0562121B9AF53EE5266AB5F21EEB0F4805885506F245E1AA67E3073DBFA8595820974
4D019BF250D58EADFB9C7E84655E445ACB0D0B27ABCA121B46E200B811AE0C6273864F117E58
A9BBBADC9BDF3C2F7F1153F7E2BD00C6D4B0DBFD604242F9CA882F485241424106C61036BDD6
3912F251ADB16EC9F3AD9849B45045C8D4116097419B44416464053C7C0E4226483CC3CF40D5
FAE142D3C72388011E6F85496703089FE82992911BC42EC107FECC42B3343B8D931A2F193A36
C27FB917AC389EB4AD9F5B02F414E1503FD98B7286D817CE4602728022731220248CAAF7BDF9
A00D9A6DC4442C4E6C8DE922C246876BA86EF42FF1EA0326D187C63524542DF758B282B168A8
B48402BD7B5079F3A3D2251D4145DA9749D1671D1BA2A5587BF8B90A3ACC342409F6410181A3
682187894CA328B207C29BAD8A8B4043E010DBB0C54CC172837B433D0AE12CD33DB1F56BA5A5
BDCD89D87E2EBD8854D92F56FC60D4037499C0D66628D335C15EF32794C23C24EA9F32BCF5F2
D1FE4474F8FBC7F5A617AF23E7153DCB43D6257F66A7557193DA013A0ABAAE9FE65899F8F63E
E150881873CFA224CF72938567E7DC7D8CA2CB5A961C65EF24E2197789AC2EBED5D2E5F7B2EA
81271764CBEDAA9471B7F741C6309DE06E7F548D23D69A724D425F558823A4D52491097CEB78
F9A0A66618CD89A237383375F93E1FACD2C839C5BE5F3D0BC0EA141A544975ECE6F4949A9024
8B1116F2372968852D66256CEB1779974A7C01283B3EC7437902EEF91384332A3EFF9EA24372
3CC88579C3D9B3A16A92F66E1D875136253AEF0BBADB323387831F6F9680687D890F0C4950B3
90322AFE1EA43613ADE5DAEF9737EBE6C2B348851ABCFFDE2EA270067CAB44A01E9CBAB8E5AA
850F8D95B8FA899A1C326C9AA24248C43DEA9E941FBCBCBF2CCD025CCA7518C13F9B05B31C55
EAB4D8ED57AEAE517E137B176365B14BFAC1F44D769181D37B9D5682D50BF08FA0DA6D9D087D
49CB8EE90226E345DE6D7EAB8510384B5AC4BADA29E57D16EB93AE1237612BDC637479E215E4
BC5B5CA83732BEDA3AA43BFE11DDE62281F9031CE6408526662A8451324004973778A3256852
E7B6A6349539089B1C91623C3E68B808B86C728E82D6E671D847F55668B93A4321FB0008CBCC
10494D85F2195C285A7C4DA17C520C94986BA55C0161BC864E3EFE00103047E5BDE2E5156AF1
0C2211244EA6C62D5F93E79871AC320B692AC36CCDE2301CA4E61D09BB47AFB170E64857B259
EF4F74ED1E5B553AE2D37A5566941305E24A2DDA01D7781D841629A07C666097F235C911A7E2
597D83029331CBE46B8AB458F491293C67FC3CAD4E060A8BCC0198410332A489CE0FD0B7C631
8C8703E38FA2E963FF29B86B9254136EDFA510C9B366FA5A8D85D08FCB5DC6A56567168E612D
6B3F19304EB9F24181C189DCE80DE3EA24CF91646D8F3E16A34E5FA7D307E8D11465EE4C2C9A
51A26708DF8E85CC7683C5C02D69FA2A0D0F82EAC16FB74F05E819C12518809D37C5231450E1
971E996138B12AD549F91F94E223313BACF379EAF84BFE673D480942E2AB7390DA48842A74EF
9C911663635AE68F6FD25A18A01FAD868E010D25880873A1EF7ED54397DE1F1C9E96B0410329
A431D9EBB85187C01173A6ACDDB5B622477AF5CFB9372CDED44A84E630F0CB8ABA26803FE377
6AC7EAFED710A778AC6C31D0F8DD79396574FB54F4CF5661EC441998EA8C70D2C8F987039139
D7C0B798B16900A45331CA420210B3D04115BAB2BDBEA085F3A2393B2BE41C94C81C06F6D83D
059558F9C09445BB1DA24379D4AFDF52B3B29539F01789E70EF785DEF9B61B1542D634B0719C
4B32C7B3027D485FB0195A8E1FD18EE100BA38647B87A6E2DFA85CFE8AEE961548C1B5DD0B4E
C79C4765DF6E2971DA0A6212FA2F25EF472ECB8F68BBB94797D6F5BC9E9C2B9C162FB4C4EB52
D6DE0FB49D43205573B23AE1226377AF58EB0F2589185C14C5D22B03BD3343F9EB0C7AFD7485
EDF8C7CA70425625484B995266ED15B4CB76BCA109F98B980EBFD7331E7F0924D92CB4125FAD
654EBED2C940D6B1BE39326B2A382E4EBC4059344E56F7141465657F1A96E0203D2A14208C34
F84FBDC73A02FC80371AB3CEEC0949954456F855E37657C1259A47EBD9BF298229B0D37C66D3
6ABAB6634A749F8CEE2574D706A461196AF1FE604B1C155DD4DC3DE9EAB5B9F5FB9943B5A8AE
D1FC3911AEB653BB28DBF2E238B96CCC0F197274C42586C80076F544A56E4DE9E91ADE27688B
64CC7AF43399BCD5DDEB570C424BAD2A47A6F89E921B66C7955B4BF7A35325529776016EEE27
62B0B9DC6B482F0F4B422957322F3F6F268E19994208788AC2DCCD328A7154C5521174B18777
1183B7E06A739E7E719448D48EFFD5BBD3A8125ADED1CC6199BFE54275A1ADA63A9C5A89BE87
5B535CC9FF47520CFA6605C745761A5E7C782FA7B27BB6B57C4C73607496198385BBAFAE8CF9
3D0FA155D33BC4544CF70D926084D4469CB1AE7DFBB70EAD2952075528103A704ADC46595E7D
18970983BC4550DFBBBBB995D3370FC8CAF9F7123E776A0E9FC2B67C2877FA9F34C5DEE2EB49
DF3F678B633A85FCC721DAEF4292CFA8E7C9A765B53DDBEB7FBD81ABB6F41070DCC75561A617
C53AF323F8DEE05F815B291B5E87967F027DC9D6F5941576B22CBD06DFE7BF28C1898ABC39E9
68024C9D1C577B355E5975C4245FB88544456B8BF06E688EE20D7A329A43E734FA4AA6797B7D
4318658F4D54499609B8992A28BB3C9D61126A3C54A44984292C1336466EE55B7D3F115E1291
AAF791DABDC5660909CB2A10C76774631D23A7915031E8B229285A06DAD9888F2625EE980F16
2080B9DF864A1B3D554B0CDCD57F784BE49825CBE84F1768FDC0434A8886E412C529931D06AD
99DFA33265DE335CF66C70407ECFC4A113817196C5025F42261FD12BA362DCF969B43B3E29D9
88151E03FE12DA512820A9E33913A53CBCE3154D9527E51CF2C4A6B37C5025C85B5CBA035617
59DEBDD723AF49EC714A666314A745378E2FCEDFF81A8C7A2C0F9D0C4313C7A3F6FDF6E87244
65ED16204E21894AD7585EA6BC97988CE7B453870E47A1721D5F07BA8F50F5A6805837E4596F
0ADEEB0B3A9434A8DAD3EBD548CA06E9A26278AFCFC06BACDC4FBF3CBDFCD6D57E82AC3DC729
1944AB476F8B628FFA7ACF87CC824F55F9BD9B0548E6532637E592E39EA81B42D1C5122B8578
EAD2BE05B44A49CE942A3351F65977D7099E8A0F271C9322C2119078AD3D866DD45CE5FD6BCB
E57C62B64BF716E8EA9C5CFD88831150990050C00575E60B7F6D8E750E240073F031507162F3
33A460800443DC6D0E3EE7AFC1B89F64689EC8FB579E6CBC449C4908AABA83F84AB91CE5AADC
CD91640F552E2C5ECA95E802B24F16B42299E3B09A9DD85B730CB251A4CBC9E280E0D81DD8C1
E90E68E650A068EE44983682888AF6D082401F9CBADE37F51D8AB7029F65A563E2C1B09D8A75
227D8708FE3E8CB3285CA6435BE5FE90069CF61D70FE04AE3B9E416188606EC110E18E8565BB
60658923ACCCFEE5F8D9FBE99BAF5984DED0E6A90AF9BD1B63FEB59B4160E75E13AF618F14D8
672F1B13E5DCFA9783A6924F4699B891D866031BD66AAFF1E7750BC9F70AA402EA95A643F1FF
7A50EE6B731D0075E50C4DA1A2D2349745176A5318B912EA276F08928A7D88EE3BF0527CC45B
9B7A933C153256A4E0C808E77AF8F6D3FBE91947362DB891974ACEE2B250BBFD1551F5BAE695
D3141651120609612B1C9E128DC4232627C2C363E3E59DEF9F3650B105FC52DEC5BD7FA72B16
20291DAB0994EEF77510BAF43853DFD45B5752A70BB5E00B7316C5F04743CD5E00FDA667A93D
C88C981E88E59A79B7FC7F56AFAA52D8504AFABA4AAC8ADEBE57B0880318F8B87B33EFE3F0A7
BC5451C750D18C8ECFA152D1A2296550C74FB3A5CF0746117F4B5558FC6969D6EC2FB4891DDD
C8BBFA0DD498C7C547BD67516A13EAA309D37025C8EF2EA41D1498088AE39F76987CDDEBEB31
36AA0DC489C616D490D8865B17FCC0CBBAFFA4FA5762BAD005CA18B333EFE8393D192164A6C7
7A7F094091AB6F364F3EAC632DC49FF189A9C580FF185EAD9F1EF03B6CC165B7FD178B182B89
CA957312A27F15D43D5EEC3527E7049AFB9438972AD33DBDE6864F78E6021D4C66A63A413B33
59ACAD54FC1DF7DA2ECE20978B733A58E86C262623D697DE91B2D400B5E353D716E35FC151DE
873B08AB038F3993873CEC33E0B522E5A94518A1ED0F74AE6B806010588E73681DF7005461FE
AB097CD3FB91DC61DC2764BACADF16D0C8ABFD8D6EE932EB83E54853DE233FF5113C367EE577
F5553F0EC0AF694994D6217050C9B02FF581EA5211E92CB025D5CAD92DB7DF50DB0B5461ED68
66CA3D61426AA458A181D8F2F720F2C21ED47E726862B1BDD431ED7460523F9F2DD6219EE146
F806B42ED7EB83127DC5B91E5ECBED402B0E6A4C8E6AE190BF2AC75B65BF5DD1438BC2FEBD89
2296988FEAC8399A61A641581709D081FA4981ACDBEE26B4E07D7347B80849F1DC460DB32451
93FB564A815E103169E086A1B09AE65EA85592B3321A0A75EF84088A70F401AA76B8F12DF633
0C6B596150891C9495B394A769E56A80550346F661FD53E58742FE873379C8EA4C855E8C3C7F
EC144E4AE754FEB66DD753C336AD7D9B9B76E46654E67A1A126C15FC63788942E54B340412E2
6D464C8D436D90CD04E14747D73D37A7C7C5667FAFE44E5875889B237FB5F08D54C30B31E89C
5355F2AF31D0BA3C33EC4A650B2BB14566C8D2A9777C540C860B4A409EAB376CE28F17E4BD5D
87FF0400223F3704D34A2F0038F6C73869B62252664B78E382EBA83AF6973D5CB64C9AD479AD
7EB98F1AA37CF9423DF63F693DEE69DD86B96F9091BB7664F8F638BC9FBDB5D68268DC7EE7F8
F2772DF5A23BB0B9B20E4A17A428D28890BE1679E8563FC51433B2D43438EF90F3EC613DF3CB
643024D74C483AF56BA5738E71F07F61966026A2B7948C57A7B150D09794F30B88565D5B9FB9
643800380921424A65DF489BD41936394ADEE778271EF8494279B7FC6D85F7A415785399B541
22CEC621F284136AFDDAF62F436E9D82D76F8CDEF9F692876CA9A2044FF9FE0313CEBE6F0638
DD8B697F5BE50BCCF49237D793862565D3ACEEBC75DC962D5A074765BAA7E5F7728A49393835
353A9C3668A72F89622170F28623D5EF3CA596BA680B4A1260276564AE195773DD6CC61DCA23
3D9AFD64EEEE4B7A90B4A2E928F30E426E10FF316E755CE102592CC20F6847370B6AC8CA1EE2
9DB78D0E9D17774B0568A46217BE3E8D31123C367FD3B3E9DCD3A346640563147667D85BDB78
8157B9AE15541AD3C1754E26ADD0F1A82BFA0D86424167F6E3203BC326E5AF10AB3DC2C3B938
0241F7A935062C27540385625886B6793D8A007804DE283865B7E55E44A0AE8FDB57540ED24E
09D6887F0D2F6770B881146018143C1DC377A9B17746577CF36F61B211F81B9519DB8788689A
B7CD97E6F3F8B65B12A739ACBF606DC3C85E99983A48028B012231C5E41C3AA7E230B71B492B
1755AE09871258C0CC5FD0852FD9AD30CB58FA4FAE91661F4B01D867A9567CEED1838FCBE9FD
9471F47CA4FB2B09B13808B14D919EC0C1DBFAF8FCC3A377D228739E118B35B9669A8244B369
F26E118F6B42F652919EED1ABAF225AA512EA31721496289CDC840212DE66324F0D55CA9972D
BADB8617EA415A0DA9FC06355A2C41F15F6630A8E4E87CD228D8C4B38B8930B571D1EFDB7DB9
3671043E0E59CC9251460F0080072208EA50CAB27107023E3E3414C33CF4F36ED277F60CEFB7
E0552FD6BC094FA2D3AB36225A992AAE956683762359250F0FF492965F767AA389A5AE4A1819
7A910FC6393A08608ECC0144EB6C9D2B1F5769E71B14B53B39C22AA72C577A82235B3C92C81F
D37AFC30BD8A105D9BD7F45F7D793A98D18E4AC98681D1CAF228D58CBD932770F9CBEF5E0366
D330810A9AECBEBDC61AA401715E773A7F57F69BAA2288F3CC38BF7A694C0DB4E05DDAF1048A
D017B8E3251C029B69C62468895BA37F0D2D99517A04C716FDBD435534644EDC409628C2385D
4144E46B4E1B3A2A142D7901D99CF8D471DBF6D618D9DEBED2A9023495654FFD9B404BE46D00
462F3229AF02188C2DA99276198DD7F23B5A7A6C425C5F012A4AE83ACEDED6B3E85DED05373E
E7E98B2EFD3E009D7FE7C946662F228560C2F778CBA67D47DD07854BAECB4B153C66541ED9C9
E49BB880EFF7EAE24EB0F6E090BB1965DF8AD27F3F53A7A7E0F4D57866556FB7B6D717515D6C
738F96880F3693EED99BB81ABD97A39E0DD81B8C059DEDB833C55E60CDCB4F3C908EC2A46BE5
628AC773D361D8ED2B47570469127133F71357DBA497741C87FAE54BE97AE07FC27032D74B46
88501122D0F02A419A0C999AE979CF9C12A84091AFA04F7BF1763C7FCE83DA2BF848D8C0F8BB
41680A6413930C4350CF7C457F9BF0B4A9E50E70BFACD94719F63591F64989203F0393BAD39F
33791B6C8A07FFBA5F63985A74954F3CDE4B62A09394F1552949CB0E4AEA6F07C2328F2831DC
E8965C33E530062AFCBF19296E7BB7968BBD84885F104924BA249AE78313BE5681161517961E
A3D52C98F3A63ADC0EA62B3B593E26946B1D2FDCB81BF58A5D92868D56D44B021BE9E247A467
C211AA686FA8E91442ACE81DA43F0AE58F49175F246EF85488A6537B68E268F12D6A16CAC768
55525155229866E2E786121A9BF530526BD6FE347EFC2C6820C695F86967073C552387FF6B26
8CE974DE5EC65FF3ED1AA2DC43D5DA9462D4E88853DB5306A42D683BD2D5DCBFD98A17EC2592
14EAA12B4DECC62BAA5795E9B54557CC330D7F6990C7C5F352352155015DB977A2375F0FF95A
06045656728EDF0C9B90CF6F38AF67D55D075B429E32E4CD9A5ED0E80C2690ADB2DB78349435
B42AC7112CF9F800B84ED9AF0FBFB15F04CD340A2F56507D7C1B07CFB013F0FF1988C952774B
5A597BA2F708A48948A850A707861CF456896836C74BFE67D63741DEFEEAD47E3004BE1EC639
C769A3D9A71A4ACE0BB1A5FE993583F2814962BB2F5C81CEF6A201C34EE30B417069A46211B3
6BCA41C3BDE548A8C91C5A02B0501F26EE3C9FD9C053C1FBB7F14EDADD207D30A97066726046
014E5824FEB4FCADF548BA678A6E9DE0BB1F5B76C2A85BA1DAABB37FB904265CA4A7B62DABBC
DCBA91B8121EA51981169D35520F542436D9158D53FFB19D7950DDF3FB7056592A00464D4500
358FAAD51473FD53EBDA9AF863213530D9C0ABF2D6EA1AECE459D4489A0F16BDA432DE24A618
CE68EDA32EB8C0192713819EAB7798E5678C50F27E2DD3B99AC4C63AB7CE3AA139D3464D5394
059FCBD7144176AFCD91E8969F32D8F6B8D9DC67256FDA5E6D6A8A490F2FB964ED25C0AD701C
9F9A63D6917C4F9BA137C4BD06F28BB3E91F0653E8079DCA64B8FE69CA21F06B003310781FB2
81CF3E4AC36C0AFD6F55BAD8095536F28A60FAF49A91616E6C8005521AD03735EE5A9267B2FC
1340089D9AB41613C591B0103FE890ED0D1F77A03E6DB109B714ECFDAF55A2F08D727F93BFA5
2223967712A17EC642DCC26F61DD0D549CE2D76750618E8C3EBB5C5AB9BBCC8D968B4FB92BB5
8077664BE65FC1E511FA7C35B4D880BEB9D02CB631446CC8BEA6BA16528F8606290090E6B2FC
36399A35EA68984E9162F0D90F70EE1E37701674C3178039F4756235F29E025F3ACB03E937E6
744C25B01B51213B09BA89C9BF767CC3283531ADD255CF3ECC7C9C144D79DDB948338E36CE9B
101CC90C3F6811F071FDE37405C4697AF6EB467C28AE60691D56C7CDED034CCF62E01DA116B0
A781ADCE42DB33077D703F57D34D27E19A19D11219A39FF27E8EAE309581892414A73161B5FA
5D4FDD76C3B2BC2ADF64D70798BE4DF1CEACDBCEFCD34D7CF07D64E68CD0C4F66948BDB8648A
F476808D9BC0D5085EDAE370FFD88BE6597B675B4751F0FE08D691674EBAB562A93B27E05978
C7CDB80E8F84AA23260BF5686038CCC8EA496A39A423FCD1796B28542B494484506F7B10EC07
E81AC63430B783D3DC410D2731716A47080D2CD6594918F28E32F1C10D4CD5887EEBB089C541
4C1F9B2D251423918B5E013A2E2060BDB75E0AC8D4206EA191964FF0B968FDC9000CAA21B516
22513B3357664468DEA159B6EDDC64395B684AEF8793BC4181E389624AEFA6EA156C25A7E2B0
ED8F83E80EF13AB23E894A02BD9C14E79C0890BB041AAF2F9A00C52779BC84F6E007F06BBB3C
E8F9B62FD24BA41397839F550410334C60C2AC1763B7FF570EDA3A958DC2BE92F1D739413533
E9285DED58E69C99201946B8E2CE7577B72011F58C904DFF5915EBC6A22BF17A6EE935FC4D48
1C56471C08E7286850119A661FA8FDC6626F707E8CB238BE7ECFA20E64EA8A612F04FAD6147D
DB1BFD071E5861D905E0775B41DECFC9702487AB8F46CC099A40A591A146F8D4438DA169B8AA
0FEB164683EB0BFC13D81C13F450B05C60F20832B2965C158EE10572E39F9343705D78124D0E
87DF344903DCD4B099EACA90CB5F2C470671A9703E5357767A17A09F5A0B0FAEBC9A84115196
A17478CB78B3639584ED57AE112F016CEA82ABA103A34DC62F4C6797CA6BC5065E6A40566B86
87591BCB70189BD88CB20242AD7D36254C56874CF4E7111F0BCB97C6AC39067467C96078CF76
CEEEC62BECFB53B44421F2F63612F670912395BF6CC28317B685303B369DBD923383F94D6194
8E07E7F46F9397B2BA00641E43B25EBB7CFEF7D3E8965C33E530062AFCBCF5ED64EB515BCE05
EBD7B3712A10EC3300AF745B25E1E12DD9ABA37C263669006B7D79CBCC7D3255FAB8715FC548
EDA463E50D5EB8346ACA8C58B5FB8D1AC79DEFD3B4F4A8615ED9F503EDCB1528353AA68D6510
54A33B7F6A15C26024C2E8EF27FA5DBED7879A0542891A69916FE7D0417A4FA3B6B37B0BDE17
948A49226243892DEA7FC4C8814B0EB669323EAD6D18860525D41D6B5946AFB81A3F5B8A0D33
FFF31730A373C48F54AB5847452437DE1DFD1A8790C0F94B75A59238A0F15D9D03DE56DB1E49
07FE4FBAEB604963AA6BFA3B074B7A879E7B0BB4626A4CC28430A0434B893F8CCFF9019ECCB0
DE05A7209C85DE46DD80960D69153C00DDA6E85FC08C3F0ED53F740CF28C9C8557F6588EFF10
D7E149FA26AF9ED0727E6A413E552201AD1869274560E09B422F9B219A5B0921C9D667881493
8910A64F44A6187385FDD29CA91B2E24AB1D7ED1D61AA53CCFB95464F69111D07CA4F53D5E72
F42127579919A7F5A5641369EF0EEFDEA5D9433B3873C8AF27711CA063BE34D15CBE705B85A4
C729AE4AAAEEF98296B974C29FAD4D3E28CD393E348D993A3388E545EA9AF8C4C3F64E1226CE
E936EB69B66A51A630ADAC3BFB84549B64F2F3187169FBFA7E4EA8F3438001BDCAB3321BE5BE
6DFA56C0C12D8D6365C53A2A913FEF83A4993324A14013C571A0B46B2C2E8C1A92560AC3AC3E
B21AADB6EE64A776BC17C859B823FF905BCBD28C3AF6CEEC50B10458E5A06EE5CB9AAC4D11F1
5D8A2362D97FBB9E6CF2DCBBA6F886895A9E2855B565A78A6F7B37D0E36F3EB6E744F11AC1E2
A13C7B09E417CDD3C7BC8D81E0EAF448C0EBB5570FEA4AC53B1FAFA007F164A86BBC851A7F45
6DA3E19BE8A06A097F23753B2F0F1259F1454A2FBECA47FC9709246483F02549936059886D41
55D0AE806FFA3F06A5461425A7CCA9A6E3AA90D5935C9C4758BE85D462A4ABBAF04437D4EB75
02BE1A20B400ACF9C0FC8770DD6D60EE932DEC070EFC3405198B8DC49873F2D94E173FF64EE9
297DDC6E41F13213B9A4C129BED9789840538DCD784566532513F398B03EF029AA14D01AE70F
F05477E82D6A0CEC587207CD1C77B172FEFA7D93889B29388DFE294CD76C91C295F3EA62CC1B
2F5B089213B489FD8B2A85685E8A2D248786849C80459A85A0376B5384CF249DA489DA7ACDAE
965077F0D89E430564DD599D7117D4C0F940BCDEDA72FE1F83CB902FD39E37631F4F77904276
FFFEA58488897BA5B55481829CC55425DD7F7F90A9C5BA6C6C6ECA74E88AD25ECA80149D9C14
00A67891FC7E267174681F0C38664CC04502B7FC43AE1E7A047FBA7618FA418329E0FB6840B9
6DD0953F29AF9112E95009D63885864DE1AD9A6F1A669B4C3F1115431629E4F8A6028F052E64
59EA1A0F33051FD7238FBAD9C5EE443E6A4863787FD392C75A48066203A65E3843428BE6ECB2
868AF2B4DFBD8300EDE2726E55BA2343300046B54C2052CC7C52288964F340C61A850DB108A3
B60C85488110B068DC868FFAC220F6B82EFD06ABEEBB0211FA72CCAFB6D0A24EA680E6C49267
A2B0740EC45541F3C08DF30A1152D33BB66CE60615F303B59DBDA9861B0B05C5DD2ABF35C6D8
AB652A2127834E0C5903FD1BA0D0A7550D4799574634DFD43DEDB359E748D3B386B94ABF7629
D1A2EC57A4EF9F2123109A6CCD69DBB11EA516100ABF4600433AF64150C1973C58B1BE98A98C
4F2B7F7718040F111571D2F96FBDF5765090E79B074FEE618D45413C61047433B951DB3B2DFA
AB280C60724812C83E1B64FD456B215DE55F92B885410CB8000074E748E00AD10FB15EB7138A
F5DC81743A6392702B6DC6A9D43835909D37DDAAE4A625B6BF6EBBAEF1B0452E62064776EFA0
2AF7CB14C5F202EB8B5C5E5CB2483211FD2F0BD811AF4E1A7E5295EEADEA8C700EE18A8FE9F6
3FBAB97DF41039A307C2062D273364CFB5C56A61CBA327800C8BBF6D105780B519AAE2C1F9E5
CD32D94EB3EEBC1F95846498C5348F26A5A0E25DA58EA677D9F6A14CD36AA6B29FD84530C896
AC31F6E9E03F8795021F8334A03024333EC2EC7259F504FE731EEB245FCD1CF6C62F92949E01
3F11205217BC6E72368A19B46285570820F1BAC4E6F63A2484DCE13921AE1B9E30E63F5A5CA9
35088A0714C8EA9D80B97676D07F02754D38C9923938551A194C1A65510EF7132FFAF4DBBED2
F2A67B049E0782696684990DB281D1B8C8EF8F56B28B3744C18A7F15E25019EC522B5F3D4FD5
7224E4EAACA04A26E54B74C062619C9AF5B815520C7D32A1310AE2406884F1622A15BA953CD5
22236A9CAAE2271F6B62D2FB1D1FC0A49E78799FB955AB1CAF3F71F660CE20484A83989CCFDF
A3DCF6FC635FE19E84A344B18A71D0645C2234A4AD177173095630E5F7F8707A1959132408B8
246C1CC697510A8688D5E88418B4896807E8D14706D2440B44CD301CB3393707E7D4E58F72C1
2A2F8A1721E51365A23B2CCFC9C79BE38BE488DEE2D6CDA84B87C54E2516580BAF3983CCEA1A
C04FAD0141660CFA997ACDC2D59126BDABB3A75D9F44F50394EEBC65A32A6CDD607EC430E28E
17E292B89766488F69AFB619A345D8800615A96C4C1B764919C1DF393A6E145EEFBBBFBCEF1E
76605B641CE028430F92C370AF15E7DB5E6B2941F2E7E3F0A8937C867AFB720DDCB5B24A4A0A
6D5A01D4A60D492B9AFC1C8706ABBBA57139C454D768860AEE912BF6ED66DDB7C95941BD82D4
96B7BA9EA38584F404331CB9905DC1489AB97F2246E4EBBD167EE113ADE3A0ED1F20ECD34A57
789BD4A65FD6F3AD124C806B0173CA66C0F0642A82BC465555F40FEF1A97AB8B7256D0CAF820
B2BFCB5B7CBC162A800D8B00BDC8FD003642456A9B268851782EF12CC949F29A5408345ECFB0
103420EFB4D2ECA5B02C8EA66AF95CBCA6B9FC8029C77F0AA6B4F51962579BEACEF3AE1F9EF9
D700D232D2B1D698E0BECA5D5AEA7558468C3CD24D61061A7FB2CABB087DBE2981F2B34275E4
460DF6356528EE7CAF6CF6E5DDCB60FE69F816CF6B548509F38C6E5F58B29B1B64BB67B159A4
9E7CE783E2888251C5059F007C70E20300A9BD012B5DFA9034C7B9D0F53E2B2A229CF01F5575
E9476D7429756BA186BF68A6A7ED758A60CE312264F3D07FE9899C03F2BC0403331DD33E390B
03410B4C4F3FAFD6F2CA08917350D2E89C28DB0FEFF91426FF19EAD1758DD64234E4EABE287B
4FCC8DE911A37115B291C9F2B747F182C8228227F97219A4F814D1A08E13C78D32889F3E4CC3
A8BAFB842FCC48B6A757562A5858DEED1A7C88FDA97E424A0DBE03FED41614297EC3151F61FF
10FD7A3050A63FF62B7ADE3C4FE23829497E9D9B18D86E983B08CFC1E86293B06C2742A6BCBF
70EA7F2A8F98F21C0756B8DF5FB82E3B499850C89DE8F4CD18CF70372AAC5B6A39620C83E9FA
949ED53DAEF370614B9B45A818E511E3A1C63240B3204F62FD7F8B08EA59F17BD041541B0DF9
07EBF4876F04852F33922C97E025E6DAA43334C246314B34DBA7B6C462856B26566CCEB8C8DE
0F039C45356100D1E87FDA827B0ABA5B63C869D60E4F872FEE54F54A87600B79B6A825AC2F4C
B627CF7A584ECD72BC9CF09CE2AF3B1AEF6E234A5BCA9277A90434891DE7F49697480CE79E42
659DB61C96B5FEF52AB30982666533F164CB98FA5261B10F3D3294E85254A69CC29064CBF134
DAF0FE1897826217EE374B885B1EF1B85517D5CF72A35D4A226578F341E23961D97665DE4F7F
B461C2EA4ADA2B835FFCA56C2909B79A5A99CCF11D4028A3932EF188926B92250931E74C15A9
928C0DBAD9733D574928F613DFD603E3A84B03FE930A5AA971BCB937578F065F7C6663385F66
A2D31AC4897B62A1618F436121C0BA9B012BEF38AD8BCA5F2C981571A1BA4EEAD9E3CFA8BC07
9D088CE732ACC0F489800C341E138FFD8C767CCB90B3F19990C648E0908BF208CD1F86D1E8CC
2567BE80C6AE4D9BB7AAFB059814C11286EFA6FA6E88BD8A34AC7B3B6D74DF8ACF94138DA28B
96D03C56E8E916A3C97BFA9EECEFE6B5CC5552AFDF1E86A97215F72CBCDE76873A6874415C51
9E7C12F4E7C2403346390400C31BDC43DD57F358498A0F30BC800EA2891B1FAD606CB8F780B3
305551B603DB00903C3BF5DF8E7F0C008F4FCB0AD461B1ED7206F8AD8865E51EA8A13E2DFFBF
C648B836A1A964FAA4F10246BAA54B9AC59338691B5E36B12A6CF897CC8E14B5190F864367CF
A5085A75C06EE7A455656F13A3EDC5861305A497EC9F30B1F82658606E6BE31CB604B7ADBC45
C5B2D3E7C7967C27CBBD6FD2C27408AB6043CE4474AE22B75C8D7AB6041F42A36B6581EB33BD
1AACD771351F63F09CCD2EF563107A609BB93D204B487F03A5C028230AEC390C6CFADC4749DC
A07D4953B57158AA26CC3BD22D75C672250F5A663B5F5BEA30295C6874E99DC42247C7AAFEAA
0B460F1A8D19DE47D19416DBB8BD8C57887E7053F6073446387C18EAF0582C1DE9BEE9DBBC3A
76BDCDA42F969A469604D4D2C349BA6F35A0E97A1966AC3FC4E73252DB40229AF470314DEA49
ECB42F6958186A839DF2F5AB9ACCE9B0C1B2068A2C191D48B050624514A82F64A2AD3ECB521C
E2DB3B998E529FFE6665DE7EBFA6DB9306DF43C5893017A0B5FCB1A7C0C01CBA90B873CF2685
4DDEC6B259D508C8F70EB82CCE749EE15D7B746F73022243D1E1110EF4B8CEAF91A5D456E72D
7C45A5239ABB02A508F60CF8994CDA59CD7721296375947F9F22D433A5C4C4321830417347C1
AFD34250A704E418C4409B973980669ADDC43F0B3CD415A4EB5E613B9E6C912F2B7D11EACCA8
A651FD2FC01745F836D0D7ECD190ECAF20B2F3101DE1FF6696133605DCA22536C8D0635FF0AE
D5270011AD397B2945F6C9F04F652B4628D3C2190866134AD63F016B257CE717E2BFA5D36B78
01E8077714DBF159986E0B1A5DE8107AB02D9470F278EEB627588D4878132705D326196064F0
51CB3ECAE62E141811C767A2768AC593D263157E9CD67EF353D42EC037C318408780AE2E2577
17CFE1A1045945C820ECCF87043F1F6DCDBC9E0E7220962D679B72B1A13A79592221E0B6ABCE
69B1AA425D9348F4DF6D1EC7945E5E1FDDC4A9D83FF01265E8FB1054B4545157CF0F4D8405F8
42CED8F7327D6A407FCA66B9E672CF0D2A9C4674BE3B8361FC8C8D96851DAE5E33D92B7351A5
233536B1CD3E06955CBE6B105CF67DCFB20606294DA16786F6158BCAA93C74D22D4B8CD0E4EA
F5F4763890F6CE17646B0EE860408CE74A2AFCC5C1C6EBB27B3C89187A9CD7C07D52DD781D75
2704F679D765D48D259896AC668948F898A27DCAC8A70F44AD4CDB15B15125B248476941CC49
948C559C181389CC8B231CB89A13A87FBF98FFAAEFB34152914F043FDB16F0FF01A5AF7D96D0
28CC821965D367AB4B4BD56686F56B04B3CED3FD737EF0AB7CD6E2BC66C85E9B77D05B7FC8EF
778A23202E527D29863EABB4D1E937535268568CBCFBB63E9F35CA2588BA63315FA71FB22DD9
246865CEBEA6E423C2F32CEC0D32E0B5369A2F9406DAAF3D7DB1F49FE1C4D5D32823200CC64E
750F77533BF720482614CDACB3D3EBFDF2FAF375C005F5DC7B627CF1F69AAB69FF49AF4A8271
FE443DF27142BCB17CAD4FD66053189A0220F6B50F747B07F3A57DEF0B99B05AA0A2484F04C2
C53D3920BA2933B6D7F62BD465A6416D43E10362ADB2CBDD04657FC7A4709E7BCB657934800D
F99695E977DD8A11CC4D9788C0D2F9ECC4C10C1F132B3FDEE145F535E8C7EEECA32CEED930A1
1CE820FD8A4809A6D0F9191E78521855CE1D6AC738D040FAAC52F1AB0DF06CC166ABDE81BD95
3CDD9FAEE5DDD85C59901673CFA24BBBC603983D3E9DCA6E6B23BBB06E1036E5CB933DA1CEB7
E68D9AE6974FC68385EFCA18263F8FEE4F6AF0DEDDF622AE47D090F9D4740AFD13BEC4B85DD6
C444D34B77E1E1337BBE30447AF0328D4A4C8155F33CCF59A0A0F33BF0FDBD1B2670D664BC03
D663EA845C46F492C74B967847BA45B2C3BE8D69D273C10B2A2D7B3F33A7C036FE113AEFF10A
5E4788AD216B2B6345D9CB05F39A0661B93B620B1CF6855F725AFAE4E931E8938F25C399B6D7
5CDA14DFB02040CA3EAC1B58017AA80AB96655928512C24CB02C0DF9854760F90C9EFADA374A
1C10B0C16AB4EAA6C790C056049A9C70E10873AF5004459D9F4F3B0F12AE7D8AC65B69B64C10
E40F61B4976975FD99A21930680C0EF718737715AC92D85E4CA239C1CC623907A471A2506F86
B414A204B3E33BF546B6BA274E339589EB03E9F03A6B5756608CBBE789B9A447296CF93667A2
21D8F9CA30348362CA0EB38FEACFB6481223D8B00D0EC93457C4EE4413A90C32C5D724011DCF
68F8AAF9B37785FF40DA3C4E0FF4587A3C4129103302CDBCD54500088DFAF50DF888F494F5C6
4D87B9EFFF29547FF47F8D267A3FDF1CC66EFE9E54A359FB6D768560F0E110E0ED69292DFC5E
8D84D94DCD980A6FA5E70F6187BD503C1AECBBE9D5BE13919A03E5725D7F9161DB40698D7CB5
44E02C92DDFA824E30009446C176869F5C5DF7B6DB8BCDF528790058FF7D308CB07AF6AD2951
9C98825F859D770CFE20E62CBD61D2C7C30E36FE58300F7C8AC4165234FAEFA5CCA1C368B29D
6E391B2FD272D26A45B5DDBE3FC31D9AAC3D70E35F222CAB649DF019B5874A0095267953F1F7
D0D79A70B56324B99E4DCEC9BC22D1E2E9D0130041CC4E252737F97FB53FFE9E1FFFC7A55B46
55209530DB66C94F26D96846DD307705246B11328DA9BE91C2DD533137CCAF2069C5CB1A177C
D6EA73F472AB0DF82303EF8BE36C6C3C912A052D33FC272F245EC581E0E86333E1320A5BD669
4AF102C57D543BB394C9B801EA187D5DEB9B30655DE487AF64126CB363CDE6A70490165B5070
5F1F41184404F939503987F3EA0772561885B6C497FEA1EB54624EC840F7C536731925EBA662
D3C8F19D682A3142483EB2B2E2B43FD775401C94CE9BE4319F935DD1742A892DA584ABFFC66B
9F85DDCFDBF9973EA20D4A1DBDA4E867DA751D2BCCFE404224DB28101FADCDB513CCD96FB973
7F678CF1FC1B128825F9DB8D2041F213E55987AA38EF98AC24D5E1452889AF2C55A99D085E11
D9F220FF5F43E558A140E07D95AF46DF319CC4661B10AB393E33778B0CE81D0059450352039D
3A42DDE33D935958028D37D6B79EE0FC67B534353EDCC327B9607319B606D48CE98EB5DF4839
FDAA176AAABC89C3C6F06788DC68B5E342CEA2C4CA322ED6022678A2E3C9E91FFE6281DE40C7
31A76F91DC04815389A7F80FCAFB73F55D0A080D3FA1EEA87006B6F3450F48F7BDCFC9D87643
1F12D33BCE58A404D778C2FF6278DA2A53EE63D8DD7E1097FF2CAA93EA282925D1F9583B493A
1219C7ECD21F9F5F5BED977E42C257283C9368EB1258BDDB5138BA455DF60523D069523EFFD5
71E14832CE15FBBD78B9287869CF717C86D99DCC792101252FD4F6901F45ED2D14A5B9FB9027
E5A09436BA29B1C2FE665162885EDF400FB065BFE05DD349743C73E1824F512F447DED68DEE5
C80BDFE0B142C8CFE027F642E573A064199E33703ACCC0FA026FC349821A5B549E29C07B7059
49FFD1D837416D0F12351283B7CD2195E4DAB34D75EFEF2AA4D91F1D2B7260003F58E5B8FCCE
630F59A342055BF779F26168FFDA8FB5B26277C6D8EEB4C49FE3288BB1C344960C9860C84997
0C5C622D374FBEF1497459281CC22FD0A94B0B5645972DC562CC35467530209B2462EBF07831
24F9E20C24DADB43D5F4A355CA3CB72FD024BFFD3ECA7CDBB59C685815A277F774C64785E3E1
FD9D9C8EB9CE3116EBE92883A7E4B3124E710F44FBC8D291D7427B79D473F546693F04D49501
FEBAF227E45FFA205483EC9A3B0D276597F23486C0EF04002BC36784FF313A08C9C5437140EF
84449DA4B2F5CB3F5F83035C7A7E0F2DBE4D391BB54F62223AC16EC7A53DAA1F0003686FA8E9
14530488405D4F2AB70A292C4CA1E2206E6566DEE793EA8023B78414182C3AC1D4DFD745E9F0
670F0E56702B95FE366C88F8DD78A670A793F8D852EB91FCCEBBB8F3E0F19FC0C326B6ED9B38
D837924C7EBE3FEB258B14A211A154F4BAB283E0B0506841CA8F8463621ED6D75C84E029AE2E
80088E6DC4E427CDAD1659CF0C1E578A2A690684A9137D8828ECD37C61A974510C373F2F3BFD
F59006936E781F1C2A832BCD18AC6E87601E873EE5E2B727FAFA778FDFE1823D73CC14944FED
9945E2176D21EEECBAEC25D6021E319554148FE04B7993E54D4EE810AC201DC0EDF8A10B14E1
8B0D38B6DE3882AB5BDEA41C6B615A8D3B2940FDCB68A3B689311B81E0C57ABE936574B195D6
8A4F44B1614DF2543F768905112305ADACF5E7656D220EAE801ADA85EE51F40265185D0A17BE
E1609B8A7E706FBE7CEFBE8877E644234132BDAD8EE10376A5D46F23C90B1575F4413BD4C702
8238F01284B954E716159D13DEC3FED2AE2ECDC340ABFBEE0DD20270C1668F1B599EB5C21CEC
9D1D6FFA6528AF74B18C9D90B8F6CD47D139169E7908E9BDF8D19579FEEA0801F15FC44C597A
A399D2275454FFD20DF1DB67EDE2C73D8F78D1216509B0857CD255B3944D203E3DC3B62D72A1
11D13BCE6DD99F934287479ADACAAD26B6EEC70E2BA8E45AF759F556A35D5D4EDCA7844962C3
98F6C5A7078A24EAF137E476CFB9ABBC830899F4E47CBA6E3C01CF78B34EDD2465BEDE9BE370
FEE4733622F17225A3CF63C84FF0A2371662D71845DBA9C10E3A7D5AA6EDAB4AD90254301144
AAD841F8B3C26BC9FE94F4AB56606E96702C8FB8F203ECB63094D21820727707B4E7A211223B
D23B13EE740D5A23470DD919E8BCD945D8901E39109B092DACCD2262479E0544E4AEB94FFA85
CD171898CB6F1EB2E852600AC2210C121E6994598936D245D7E6371EA4EDE7A9446C626D398F
1CA5FFC64A2E500D665E8E743B0397AA88B9D513A79F135DF37A349E4081717F99B2C01EA3C1
0B42A4008E4DE142C355C79FADDB07B3A2480D91F425D599C897805A4B0C1DA39AD1D617D973
06F16B175804CAD0988AFA1947DF8A66431931324A43AC56090CFBCE71015035FD44EF06EA46
1555F941ACEC65A0FC70DD16B5CBAC7531597653105156956EE1CB1E42291A58387E19D6CA63
518511F215C7EBBC28C3086CB2093B8E854EBCDB9E34B56FF0C285F9D0C2A4A21B395E8FF2D8
35AC76C5832980DD0A541DE0F232282F697043D2BA0A23CE593924C5EE3727EFB4EAAB9D86DD
3139151D018D70575933D54B1D98519A559E20BF509391E8AD5542C31D4E6349940CDCBFCD19
232BE83E297E9D2886DBCA3621AC3745F0432368BB360F620A3B964A829626A068C5BDF134A2
498CEA32B386FC313D602BB9B86038E8F5C139FDBFA5BFBBD7983F2FE0829BD23656C3027A67
2C05F4F0E94F92B0A9658F7063EFBB0A81CD3B2F10E45B6383150A64E9101FEDF8605994F88D
85E778C82CAC249A5798393CF7C41ABF78E626FCE03ABF3473E27F0FE9F9138BA87A8C08FE47
B176A4F5F15D0148DB5A2BBBC3B7AF50CE6D714B2E925A5402F69E86B40E8F325AC84D8F0BAD
03EE4563BD4A895D3F069B78B293602F3EED1796AF1C55F901FA2D1D36ADDF63B36DD71B87A3
94487C7C85686FDD92387485EAF81AE0D7DD61AA846313CEF6804433763AAD647BFB1253BE03
7B61D2D90FFD7914D85F18176D12C177156CF48F724012DC64290634D4E2D03569D573E693E0
B97C82F78D0481219988639CA39FC2F1B1A90D4DB9B82D90C592F1C26BF6F051827D34A05FF7
E3DCAFC3EBFA9DC2BD0C9BC56C0256362938813ACB6259E711C76FC664530AE8E554155DF03E
19B7A53CD46363FF854F0805636E5E86FACA0003C5208B4552FE7B18B7875E8777F687723B9B
B7E7E36E2F16798E2841D97B4AC30720C63C7B1650F836FB7912F62A80638B7033F0082FA035
7A6FBC3CCE6CED9B02BCDA4194B51851F4B3A21EC93E80CDB7EF36C1B3E1A6245C0E237B4F19
19E4B6DEDE347772A24B8C2148A4704DE9AE32EA368A4889A997B7E1D7FB80F755F23D3CFBE2
E7B7A1FAEDC5DF0E0DFCB80AF34502DECC37BB490921D0EAD9DBF1B109D162835071F3DEC063
C553F6B4AC9D2A39B54026501775DEF7F2533507B24751F1E23A42E8D65C3E9714CA3A702ACC
D4FED0838D3073FC7E0042314F11E2F49293817EBBA27A0C4490E993ACE6C8BF40E245382669
BA230C2934674017D8FA71D06E0F5175B879ADCC1F1F8DCEC97B210068F4832B2FF418104316
9F31B32EE8F89AC4D938B0F4DE458216CA15B48674619428D60CD6A40124EB9CAC9282EDEBB8
53365603F47CF0C91DC1F4A2D240BE94EABF8F09CCFA93B8133AEE371110B6C0E4D73DAC78BC
C0BE0887AA188AF4F6616E653A7893F961D4B663B1DA1A708FF001F44943A10AC719D97E7DEA
AC2B49EAB573451DC931E8B3FCCBD73EC99680B1B62019F3CB869DF6B7E5684B9CBB3049DFD6
CF2B64760AF8843C0085A8B43FC68A73245A47AFA91A27431FDEE5FFB317B7F84B82C6CF10BF
C05B02AC9204C32900CEE8A3988A55829B8818EEA4691C4AFF705347C7293CB683510DF3056E
D467CB0D0009A6F88DA83D6F15B31CB3BD8B4DE9407790F4D01EF861B1E9F0FC813184D026E9
CC0143F75E5B77EF5E28108CE0DA54A18057151E06573DBB131B76333974870BE4F9C7D22B7E
317E4AF411B124CC437B53B3FA939B8A39EBEDE1EC59D6C65E08B5343DB31FE8084A9EC1DA43
5B5F37A96F7ECFF0E61E6F4D90551978BBE3CC929563E94A6A73649139E376E4A0AB11A126B1
974BC46AFB61E5666DB000146DB7B23C7F935370EB5C9E37DBAED02B198E74091D2054B02BC8
DE749DC4F57CF531B23DBF9E35FA7B3FC6BAD6DD2508FB2392A6C0E22CA544D502E028D01F90
D67E9DEF2E684A048C54FD1609469F99D936818B01483214EC8BA3410C8B5610420635763F38
F0F66861241E3C60825EECEE2C78DE6837A891AA942179629FD071CF8C7B9C4F23EEB6457119
6B773AB9F4BDAA8235C41EC2B4DE9C531A9B099D507F2810074811E4D90DCEF7FE82E9078CDB
6937FDDECDBDC828D96A02BA781D82A4AB6FEAF0274DA0C446B9CCEBC26F7395F82C7892B50D
9FFD64712AFCA4609EEC029FE825F04DFDB5B522C782AFD939433AB072ABAB1936E6FB75B3F1
9A4572A59F32BA51EECCD0FC95F5DF635A2928E4FE51AECBF7CD13DB789626CFAC79ECCF9AA6
A942FE0F4FFBB8122ACDE9DC881DA376A7F3FA954F061BCDA93EEFCC3348A89011775EDC26BD
A5B169834E70C617A4F376ECA4359ADAC0123E9829C8041A5793D05CB02A16F7C24E34347E85
D5B71DA8C39A6EBE0E4FA9A940600BFA0B8D6765591E3666FFB2E6DD304C711C759A64E4B9A2
9F387D59AD75AF8255EE9668E90C94BBF9B0C1CCC0F38B23E4A518767D5186EE53359EEBCEF2
A9C4A1BF916F6237BB29D1E3CD73AC3F9C9B39E834EE80196CA1360A0FCB7F39B9C0A3C5FA96
104A6B40C8FA06D026A0F97CDB5A2677EA31A83A78C5A2FB0B00207AFA3537DBDF64B4C2692A
47E9A6044632D181531A7938C589561EA443C481D8221F6FA65D8BAAC3BE0BCFF0FFDAE63B8E
5D2C4CA3F569960A28674534750F68E6047A7CB8FD8ECD7558F79D5E1A8DEE9E5136AD682E87
A98630D475A279D38603A4685AC7FBFC6A4BF056CD1088AA51CBCD80F50AC20628101D6DE66F
79D4EEEE94998F820F020A594C00828A22E9E55813AA531A2CE8C91CE330AA0058C863A548B7
1E615B6E1E8397E08D6E27A5D35A8FFEA68C3C548C8BAB25E8A586B3A81E61778B19141CCB3D
B6563D9ACD496A41E62A1FE5FB992C59047F0FE67FF8028939EB854BE56107F436E3F47EBE04
AE8A00808D8BC9F002E3362BC5AA9E5DF931A09CF41141629767550AF891C75CC5E5E6CB557E
FB55F410DE13FED12A9AEBA2C0E403C4685C8168547DDC514369C3F015B1B20C4D84378FAFCF
E5EB319F0C43D254FE55AFC8AD890B1851B360C175543AE0EBBA73DFE177293586ACA35EDE9D
C8C260EA502E72DD698BA9C6DB68EE6CC25EA0E840F75B2D311AE03D6891D0EFED29731A4A88
5F668AFE6C29AC63C36FDADAA7A77C416C94AC2BBDE54103BBC3FDF0DE6E9934547EE03D25E6
4BF07D138A52B0DCEA20FEE112357692E5F92C385DD89929F15287046E6301D1D8B054E49535
FF734A68120DEBD833003321384319D1FEC85D7E3F20542474AB4FDE808F1CF017C89289AA7A
D78D1D9EC58EB1BFF48BDA95D0B6CCA9D1A4516ACD1EB6C54A353420C51C139F99ED0D85E1A3
F25C1366A788120AABB39BC150D1A4E35C2533C5BA316F89F1F5D9F37F942ABACF7BA6788034
21899D8C43F4FD27EB6FDCC9ECC9682B59B43841C4A8392FA0538A5159B63C3214E1612F0052
6B32272C77EF8F0193EF09968081592A2FDEEA2AF6147E79D6E41A9F742900019B7787915A27
C1FD01CB966AE8F4BCD66D7FCFFCC0EB41B17491E681DE52E57D56F2CF870389945B84696E3C
4CB9FF43AB033BDE47C2DF99828F0A73F709A419331FF214B5B59D2E5B66FD5C5A4287D910CB
546211F6C1F9274C8B3C1B5812CDADA0EDC03CA370BE57555628FC2AB48EE504FD52CA1D6F09
E59E100B7CE7DA295047D3F6B7B6EB07E78538801005CE7C9BEA455A6E4A3025A6151693D120
2592496E29B275CA78A5B463D87707474003896DD9B5C107002717042A43E2F0DA57F97A0903
84B161DEFBC5730A5669824777D0DAF3421564BCBD29E31F56CFB247CFE89D3EF86EE2C6D8B6
C492B63182E2D830AC1B3CF78C7F308F4FDC7F6C41AF8DDBB3EF77A50BB43E4AF91ED9252969
0D1A095FF99EAB8C4B38A776CFB60C868FF2A40E57622561908C9A9D44396F5F65930C09F75D
749BDEA0F9DD82869D7B885B8355656EE7ADC2A0C8776FA5339876B42EDFC524870F06336F1E
DC307D5748ED483C60C5C762632DF63D53ADC29DA7A0D8ED3B1AAD03B23E737E554B26164130
D66FD7517297B50C076CF69878CB5DF7A8FF6BFC898CB67DD7B9C06D61F589A142946DFF640B
BD78E114034DCE6B109946AE2039C831A4441F1CD7FDAD6950EBB998AD090905F8127B0DD35F
704BB38D7D4608F0C1ABF82BFC4AFC494987216AFAEDAFF8C3E6DB64B4B55B6094B3A9FDB37F
4069CBEDA8774E09D84810B7B5176D3A34F186CD91E6717B263E2A9A09B853EBC44705217CD0
CE99D0E28A6F4ACEE2A487C6850C9C7F75C9981E526F2C114AB38D08BADA6E0CD42DDADF4C6C
F808F70A95D25C03FA5D33AA75B6612C93EE2E91AE8ED521ADE5631D05C210A3F721BAE86B50
6C40779F667966E66873C4D20CBD6890229A29D678544F9B773585EA6FEEC6182C4817D0270A
7E09992C8549EBF18B62A72A998CFCD338A5EB3ED3AE0F9CB886D86D3A0CA4E47747F7CC1524
7A513C74D08D7D3DD4AF24B1405278B9E840C7FEEC5907391DF42FC28F344D55C6BE15B9C106
6E48BE998EC8D4FFAEA1A61AE052F04A08F3C89D1B6B70AA1E1644D05D9B6EDC83066B2CF122
CC94149EC33C0B8A4DF11AFE2E3E85C25567E75CC21B48DFEC294AE868A4B6D1CAF143CA918E
CB6FB2310698EE63131B793879956CFCE73F56FB93F83DB1788EEA4132C5A04A86A003CC2EC5
230CFD596B4BCF1B0706BB2194E8E694A149CDA206250FEA4DE4FC083E3BF677980598E8B894
60239EFC55C82581A6EAF917C6D4822E858406549B003C2360ACB5EED7567496D8F79DE30D95
05A99388EA0F900D8988A6A70F50988EC2B51DCD67986CCDEB49BE397FDAE4EF14C8908ACC78
D58FF8CAC1DD009699B6E38C2AC97401786C886ACC9DEA396AA9F487D9082A2017B808FD7A77
42D97D3238BFA35A6879669067CE36B354100C8459A6119DB5BB89FD721B70E4B9E7460CAA35
B891C2E29A88FC1FD5C542EFA1DE9A4283B3E3F2C3ED1C8FD00D801D30B10406835008316B8F
4A7122F57FCA5EF594745944D6B538AD76E47E29CB1DC5A0B6B72D6A2D6BE7B3F5577C0057E1
9F46B602DFB6223D60EE3D27EF755E99C3EE9FDE3CB4A5FD2CF49763C1A4A302B71CE018B967
668DDEB13AB7F35A0BB6CE616040A9815FDEC77AED6745944DA45FF315AD8BB2A21CA9422E20
4F677D01E3C1EA268D7318C2A7F1A4A51A20A7A80D8C7C72BBF16D159D47CD0DA47A6028B618
627DFBCD0C2F45EA40B3E680C0FFCEEADCEE89C5310900D6588F7857CC6A9E50CC47D3B72E79
F233961A06F164868B5286071E7173C5F4E14E60D759F14BE0199B7EE4C83EAC7557E6A86D0B
C4F978CAE9EF1C62B39E4218B877A3818AED235BFAA3B238EC03B2F9F9C90E27E88B41AA7D9A
E667081E06F2506DBD5F54F77FC77B21FC1C1221CC62154C0F12E57BC02128B3FC49A9AE91F5
AB0841EA333BC13777B3F4F247AE30AE48B5FA999D97483E9A39E4E92ADE4C12FE0A5E6E3BC1
FA1254B3AE33200C3C3D81CAD176FC83BD1A3A14809F9552114433AA3F8159042D3E1BBE028F
FBC7392BF798BC326C41F695B105EAA6D2210041E2FF9F96A9860ED25FB6D20CF6E0F669F213
DCB886E095EF305CBDE16451510AF349CA1C38A22EC486AE387FB481D210E6692C0E60E1CB96
DB8862C0B0C6033DE4FE02A4DC129F07FE9474FFBD026ABE4025B7B83A81E321BCC217C5DE2F
5861A705614C15B7043B5F88BB673E371369470FDFE700E392341E758008E63399B514EC6969
53572F06D3A39DBAEE5FC6D06402E7941B90985AC494640BF53BC69400603DF3A94D8C559FF9
282FE619CE2DE700503D3436FE43D12EF700AD0B56957A1A93941FE1D5F697B19E0C5DC25008
A26236DC5DF4F3D11E879041FA93477E061767DD04414E5F91620335BE62E4E7B630CAA01B6E
4BA3383193BFE9581C01D58A77C63A078568216B209C687EC49DB39EADB3DC03815C8760CFF2
B647C95D5F297E68AD8BADF27AED2689B7CDD6F166F067505142EB60EC93FCDD2CD61AB57411
81818900E042F5500C9E977EE63CC6CAC1703882FA8269E929EC1151B0C59CAEAAD245DCD6BB
FF140FF061DC3A153CDD8385CCA55D14AC8B1C0F1F4616742BE168CC2C55D96DDFC374CD0B4C
A915DB4A3594E7E7F4E064B924D2F175C3A2450CC2847B4DB7958EC6A991C300B2E21DA75225
1E5B464ECA1698123077E13574935644E30AC765AB87F79F6A6913B542C266F6BFE6A96F9865
88020D8FDA12740120E558F72DF767FE19303D7CB8285055989867926BDD82670D3DAF9C9BE3
1008D81F3CD0CF3931C859152EA929EA7839A9565FE1EAD02C62E94A4B7A310F299643EC2784
EE9B04D58302832A735E2F75E9A7285E06AC2EF2BCC04F15C29D8D41113E4DCA74C70D8673AE
CF75C325742D5287A613985C2A9D61F9EFD284994A6A8D61A050FA8DC3FB5A9A26067A36894C
0962111E1A2D8ED6EF813F9F72DEF47BBD72D8B0DB2AA36ACF304B64282077FCA0BAA40585E0
9B2AAC2F6F3BDB67813EC7B33CAA104DE3758EA8CD7EC97C869E631C31B768EC2006618C6F43
26076B5FB8274A2666487D537DB86275C7BBDAD3EFE61F9F8EB9F91881FFA90C7BC91F1F53F9
11567577E00691BF59612DBD90BA13B5A0AB3794F700547039F19256BAD661DB8208C4783537
25CC2053C389C8B69063D64C196A0E598058F2F3364D4221673A0595C412D2A243320BCB348F
1E8E202333CD1C2B9ADF874539C09A416BC655CC5065B7E5D16917CF2CB451715097976452F9
31C246327AAB4A6DF431DAC149EA0C6EEA0378E8C1AF845F4AE256880A8515D18106289FFB61
0DD7212947C3EE7587CCE9B992F01710119FEC679DF8A01CC5DA95E5625F3E8F48AEEC391888
F86A8B4A70D595EF18AB9DFB32F3C4E0501BACAF899BE11AF1DBC588D713C27F72FF1F1D406A
23F8F17E5DBB5A5FF389FAD5D8EA59F20800925ECCFD2F3F1686B4D6586C5DE63076FBCBBE49
FD1D6D278CE1181D0FDBB6CCD4AC4B84DC8742F4A541569C07B44586C4A349C2ABBFECE0E326
111FB2722D1F0918A7D12AD3B08B4369C624C978D78357F98B275B42F16858DC2BF3FAD2BE09
9C914E99A37599440A87EC28B3979490F0005E509C55C56B9F032F5EE81C2DD2F1AB3E89D1E3
0F237F60899F2F19FB759AD1F34365916605240F93D3713648C454CB82D898BAD11E55E7A522
2F6DAE981BBAD79198F21B4FB4153D9FB577510583F7D705FDB568966BF9F610BB81E0135D02
4EB08A4C3372CC1927DA958052260DF507411E8A2C6A193C02CC9F14A4C80CA6CBBE1A9C7742
390032D6CF286D534CD6B50C951537624E473AC1B564EFB6DA8C7B17CFE2075D86CE0D4A8692
1AD190406C1103FC89B040C7DF4FBD3E57CD846277D470A5AF7AADD062C91D512775679ED2A9
0E34B19E552D0A67E8DD16F0B25A4E52D6BA6D7C7AE832CD2F0CCCB3E2E610715D759D58C01C
6EA7DAF10027AA98D049C01220BE41DADE1A8D8DD8D98FD5527CFB440E7EF414C73BB05492E0
37899DD02704DD383241C69431304E6162492F5FD8031A66E1D6926790997DF8EFE2DBD53D6B
46F5FA46ED7DD60C999623630A1A15FECB18998187B06D16504BC67414A4A3CCC7935EDDB44D
1075B6E52A1D04CB4E4EBA9E4044AD46CD2F7BF0489EB611966D7287947ABF7D1BFFBE276D54
8F3C8E330EF0B4C80705B5A214A1C55F2D975ECEA111046A53B0DDB71AF6B45AF1C2DD291E58
0BF713349977DF2EA5D60CB66ED47277681A21BFB77C59C45010DF0E0C00B39525EC161D1203
51EFD72A4C47E247D25F526FB6DCFF4053B271D68478FC6877C78DA38A3C9A141646F5CE5FF6
1D41E3CB641CCF108F36E7895FD54EEF31C9F7AAFDE5384719C3737462DE3796CD964439590B
5DDEA36499D500A20ECDCE18F270D44DC3AFE5BBEDB1E319DDD0080851775AEB64B6FA369188
9117EBB4F76F2A864F8D4D396AC813C28CFF315CDAC8794837788CE430D69FF52C1896F1BB28
19D5AC8E22F127AB9C2787F94BE6FCFA005D929DCCF65213C02B45E3559B659FAA9E8B90426D
BA818CC6F67A9118A4C88F3FF7E80634AB9676529324E257F99D7C596A70B84AAF31A20896C0
87C529B16882554B74DC1E7C072B05B494FB575E0AC8AD8259872D394F16E219D7D05A892E09
F02CDD462A141A1FE97269F1E769C5397906E7DFA05877F33A33A94CC646F1AA77D4922D3D18
177DABA144F421BE9739D43F411DA5E1CBBD7F51E09A7A6025294597F6120498B39ADA671C00
B6C30DD3BBAB21F32FC5ED83F59638D04EBFE35C64A94F40E7C6A675E3A343DF4C4DB2E56C82
6E97FCA07EE7A49D421516FE8E1C73239B9A7C92995C5702A5830C5C97D918959351C994C621
65229E65825A128444A623D69540B03586E6CFAA73CBE1FD8E1BBA3EA57977D316B370B677B2
D67CE47A314F15B48D7DF2F67FAC26970F47750CFA45723BA6886E1426A09B05BAECA1D26007
6E051F534932D4C907D4844AA7BE0F6BDA5C2EBC71716A065411533B7CAF1033402807ED3E61
D0CE7563CD3BAFCFFE4408B9342657A4ABC94BA28AD7D6EF2357EC5B9A90DD9B7DE3EF6D1CEE
5092C69E54822199B0EE8A540A8E86CA9A67BC1AE6A186AB7C1FEE0790851BC52D2F88883EA5
7A17C308B6A1DFE5FF4A39BDE7C69342218842379B1A040B2901ECC312E92EA5F764C26E0B47
329F1024E3445A104759BE9169860B78039AF401BC532A18F7E02CFC7C7BACF9E015D848D5BC
2C18FC2AD5FB7911D5ED2DC060937720C594D37E31BC11807C46867133980BD3D279FC28D454
7E5A19B2CB92212518EE1E86B7E416ACD556A814BF404E7F7600A34AE46124E165A89957AA1A
64C4FBCF06F1DBD7838B2EFBB7DD21E798E827D1671A7065FD70D23EADC071E5B7CF10F5DB90
C3892EFD8E39D64C5C15EE8D9E52DF80D12A785BD294646D4B2C1EB3B77168D21EF0801E6478
013CE2DFE0FCF201655621FF057AB8F6ADC6294226FCE335B149AB9AC38EB8E149F4133646FB
BD3B7D7A0C35C733FCA7E28983518A4AF910C43DFBDB8315AD6BE63B61E44D096C4DDC561769
0F5DECEB85ED8B0ABE1D03679AAB33B4E2C5E67BC808F3CC82D2E3C761294BAFCADD54AEF24E
AA758A0B2060CAA213AB14F901BFB636B117B458AC8954123EFE2D8451ECFCE1393183C66ACF
457CD2890D813566C4E99A5C5431D5B3C465F501E13496602231C70639BFA66DD2D42178792F
601B0E0057ADCE22A7E42338D7C2B4F5108E19FF794506DA96A11E60D58D493A3C7D7871BB40
074FF73566B99133D77810FDE1A3499C05CD2A4EA441C2EC6FA6A48EDC1C88749F3982168B27
8078DBB11DD0AEF658229D263E9C1516126279AA479AEEE34427575D374214F846FE81D7658A
A709D901C408177000C2CC2EC16117D35711D7D251A85850821421FB387E8144E54368E7C79A
0B4C11D3E5D72E19D18B3D52127EE5C5035A7C8B498D091792AC0CC0F7F46C763634C97FB81E
DF393A0B0B4857476829D3B5ADE7B7FD77D8D225937F1E296370B44034BF4F96BB16DB5A3609
921025F7039BFE0ECAEBC6E6A6BEEC0018709138644A60A9D4E7596619567B238CFFE8B005B4
4C1C1DE47BE4CBD81AF30C3AFEA85848DEDF94167572E193177D3BAE95670666B37EC2A672BB
ED5F35AF694D427D823AF803C9C309A85F2E1D75DEF45C6DC84E3EA340D10DE99D27F0D2DC14
71A9B090C847172F63692B8FE7777BF11E0C7FFF14F420901BE2C7F3DF7DE61248F83A712B41
43B72520B23E8CF39495950E673E8F279391C6C68FE57FE08098FDD754534263BF4BED556C2E
032620E9A09FB1C8FF9311254A4B378AD4BDA583C372C47E32CBD64B6A9B73FC9BDC1C1DCC49
7A1FF7DFB6CA4E08A4A00D6816943AFCC6A5F292912A16F70697C877DFC3896D571D5CDFA942
FD21433BF2610439B7E265F8A386C31D5F0E47C97291FA3E2464BCBA5E08BC5A0BFB665E55D2
B7B9EF3EAAE1B2713F4F2BFD2A420B1434D01985135CF3DB8138C2A5F93508759839F7AC77A1
7E4454A9CE534F5E8F13A0F69DD1583EC698FD0AAD55D6C40150C1830DB97095E62341EEA861
631169660C0B0AB0DA716DD9FD2507D1E0C3ADC2F824CF0A06DA6CEAE8E760AB4C24B086319D
83F75AE5E4530CE5507AD243B8033605190870622E90540F60EFCA0E6B7C580A425AA0924557
4EE5D78055D363DE0E7D97FCD0F1E512FB7AAD5304B467E41A0EC87A61D07B5F2F4723F2257E
88ADFD773F6A454EF4792571207A15C2960B0EFC89568049807D419FEB25CA836AE1790AB776
589CA81BC983A32036FDE5F3BD0EFC65EEE53DB24356B70D1E046F8FA09AE4F410E6191DBAF0
E8A4B5A828C5F3246EBD0A10CC9F1BCEE523DDC86693A998868FFD9112D3BF02740A912BA5F4
C904C1AAA524DF5F071C5B4F253A033C7E3F42C1F5E72BA8CF13039C563EF121F033AC5523FA
382595CB76EC476E3355CAF2F4704C3D01D1996C71C2FE5F1CA701340CF682282A6EDDD85A9F
D224D21DF1051572AC2C467C1CDFE2231ED30073E246415A3E792BD4701E4A8FCE01CE995F1F
8229F86EC601242DDDEB9670DF554C91C00DD7F5DE6408898B691D859A2A90F02255A22E6A69
751BC12C4C1A10136204B4EA0F90BA87A404D61BC2B8775597D4CFF6676C6EC2624477BCDB42
86D168362BDF5A5537688B28441480E7286058E28EDF0AE23D1CEFBAA939F089F8E2CEAF7826
DCC4ADADF1B1881980FC64F57381A7B0A56DC62288534B3BDF8502AFA8F3CD57CA3BF20ADD7C
008363DE0F2BA16F1EF36AD9CEAE1C73E27EB42D3B16C4C0E1630BA46333B4348C6D615A9AA3
91D60FF96515CD74407EADF714AFFDBCC814C722A6971FCAFC9EEE69D51299B67CD85D63FC24
6357C5B73E670AF79006FB8E0031964D81787219537E2FA895DD5475C48AFADF49285E263F4D
2A0F62FA6873B52C1A2F98E5CD3FDFF8E29F1A496C34145C2F3BB337F12474A079C33B173775
1622443669911E103B79C1459D5BFDA7EDC404DFF132DD4C2574A39A877CBF40E9CC4014B7D0
3BF87AD3A8AD8B4F86A13A18F2550423D90EBD8AFAAFC732927201DDC7FCD2624EAC9278BDBC
0E5EB38CDB5826DBB1A87E9523BB1B9C86DD0DC1FDAECD03DB6EACCA8031217768772C7F4B34
F5E4F9EDCA817DDAD5FB8E19300E90430F4532F460B920A4F4F740FF3FDCBB0CEADE17AB10A0
BB74140D887B15D93ED640ECEBCE5D10E13F47498413FFA2E54B165B2149C75B728844ED854A
7C8EF86A0C94D773506260420959C2BF98510CA864AE176B235F2DFA67C9C36BD46CE710792F
FC1EF75E2E1F6ACBCF0A9FDDFD246597992F64E107675F0EF6F6DB752E2DD447FAD03C73CB3F
0D97C98F8624ED9975D2FB262ED9C3A06A334AE448C10D6A43DBB523C77B1D3AF6DF932D81AE
2DB11F87890E047DB5AB2C80B94A8829D384846C8BE2ED49D42E56A57111109EB6D2B8AAF68A
E908D44F7F5E51A201ED231D3606AB79C828B7E86A48F19B556669F94B4646430D74CB58794A
A592B36F3E736568B676D44BA170832E96D303A24E66A123539A14842D52E6896F536A5B2D51
0A00B563A563C837A39B47CF7A34D2BBABF3CC0ED1C3F2C4A3C758F577EE018867B988F2FF9B
0238C89E5A078EE5CE8792F501B1939B7738C3825511DDDFB32C8721349DD5942AC14658A7D2
993F2E80566A497E6D00842CA5E2658C41E0458E37187C763387397F9F183B114CD03BD26FCA
526371138E1B2E118B60F19D89228CDB2FAAE23D04A3BBC421924B0000DA5E0C6EB215BB4A6E
30B61F87D2DCF5C71AC8FC3A6066467363C4116E6A2D46596B717301763BB66AB7DD9302183C
18E958703CD904143A3CA001B25AE6148808337A9E11A8C34BF1BE72E0C08C684F84225DC002
EE3AEA9B9C746148072705D245CAE6EF232251ECFFD2CAE34CEAA20D2997C71B121692AD7F38
F867658A71DFE9A2FCBB73F6ED2007BAC7A93E716E3A20E2FF5F4D8AA252E984E0DDF89FCECF
6FA9EAB5158CAF993FEEDE18CD16FE4F0236C6E0D1BF8895CB5EF1E6F88694ED71C3A2312F90
D3FB9059FE600136D2729F98C61529BE71DB9E131BA1E37B68A85279CB682DDF44E84B69AA73
3626636625241F74253A7D2C9E7E432E71824B5EE0B28F00443938F109283833143CF60A662F
4857B489465A2851E8A8FB615F02A176120BD942F52BF24D927FBA52709907CF3696EE86C637
310F1A4C229626842AFCBFEDD6D6636B59B62CF1A96196E549E3C6EF1993A5515021A4A1AC2E
95792A8F30446E2BC93D043E066B532B795DD27429B94FFA12A96D1F7F269B733EB4937E029B
18B8D1B248FF99F8814EEB58AAC7ECDA4318BDA5CF6E6D4708096416AFE4C671E6307BBCFE9F
DA326DFC94FB24A8CAB3BC35281BDEC5240451B9EEC142EEC3FB0FFAD3CE72142F9EE069F055
CA96CAB07F79F5F4146B6EB65A9015A69A04D1CB33911E5D90094E86E7A8FFF40F8115C43DC0
4D60E85DB871893AA1C460F152783EB7161DA3CE718FA82F6F066A155AC428635479EBEF8608
D34C0C0FB2EBF55C2B97ED850BE54FFA1687D8E3F253A366B8D1AA393793ADE1418ACF2F604F
37D90226C13923DA0BBC5F7B3B398F9CF8D93EBCEE2A72BDEA4FF1E8577E6F6C043B6C2A83AA
93BF7E840B5CAA5AD22D1FA544487AF138719CF5F0127C5AA389FE87C5AC97FA89F3DE4BDE50
B8C59AA61A9448BCC21010C46B0750BE4ACD613E92CE47CACA3FCB41EFF46BF5309F694E78B4
D170E4B4ED1AB0F08876F08727239270807F862976525FB35AB28D9B294E2FDFADBA64642B2B
1C864526F7E086EEAFF68CC6BD037FE31294DA590D9F5A45E7DA52DD6A68AADD51EA3988BD55
7B18390A61AF4FAA68F543C6543F5697EF5E41E9FCAB9B6AC3BD19795300C91A66339A730859
A25D2068F386DB6044E79BE450E41578B4BE93E8F773542B5D8A0D4F0A41D88FF45A1C3E4B63
73C4755769091DB1E06C85D5890DA74CD504921279E3459580D990C7C13082103415DEDE3076
05CC467E5D81F2460E6400F84CC099E49FA570E7DAA6DA39C85E39F2E4B83D691C7348ED3A08
71684C1D03360269D330D408C74D6A01C5D3C86CF2578B6989FB7D5A20F6A6FD9CD7A33558BD
8F66E3C7379609DBF0BBB81EB45153E553D65052A2ED0FEC4735D6E481AAC40CE08B8CC085AA
28ACFBA9087A060AB886A137A3F6BF9A4E1F87D7E156196E51FCC1E37B8AE9BB3F643B093835
94051D944DCB1D0D371F7FCDD0CAB9871AD28B689B4E4170894F3484F430604529D96B071DAB
875B0714A6E40CAD8CFDF3B04657BFC54786B4510E96713BFFA0F43BDC26F8800DF07228BF4A
03749420729B5534EA2D57A6E3D623B58EF6AD138E0AF9C1968E95DF48098E1B0371FC9D6D13
86E4671C617E78AC6250A16D09B297A7D54C55521AF967A940EDF4EF28C39B14749ED499A128
60E18FB5CEA30A1A15B7A80429ACE5242A3BE3491544BCDD97BB84720142F7B7C872EC6378D9
9AF4EC276AE9C8944BB56455BC333680C622E252EC46A4E74429A6C0C57C832746F4F4B153BE
4C0B00A065DE09B1FB5F64AA3ED9DD8B77593DB99158575D1A3244973CBC4E02A6DB023BFBF3
F7E2DC8EBA1E65C1F32BA3F8AB0A1245864B7324077DE771EABC6C0E2ED440D8C57CCFB4A828
C580AA55A2FDCD03700B34325CCB85E33D374EF604146919492C65581C88CFDD3B6489FFACAB
8B2F43D69305E417FCEE49A04339046937B483CD6E4CA0007063188BDCBE2FA03C1DAEF119F6
7E1FF00B6D399E96276C5237032AC271C47440C28126EBF2D9A93B1E084786EF3ED41BB5A040
5FAAC979D23CE732E9C2EAC9E44158DF49EB0C2FCA4B9B1D88E9875F154548B36C5AF6DEF168
81BEF6FD77697441D2CD745996B41C7F4665A9037085C041F37583D2683AC5A750B18155679E
00155F06149D3626AF0DD0E1244280AFC843259F1BAB6E8617068C3B97A4AC00CF5C07072992
327085EE2832808A7801D5A61F076F86DA35CA2C4BD9787706BDF21BFF87D9440A7B9D07998A
BC5EC293DCD08C6BCB276F8DF989C3F4A1328F3CE1CFCF2F0F3ECC6CD547F5EEB7F9F332D1E7
2CC3CA36501F3C0EB2C0B8758F90A7A62B22630B651BB66C9B4B20F0E9FD60B38BFF4E3C3899
DA825E510322548F774DAC9CD31520281A1AF532597FC892EE4E20EC343124383B311AE68DF5
1F52963BAB3CF0D2447BE0C2E75125B408385D73600BCD76F22C107F5814D6656577121F7D36
554B1F4776A2782901B90C12769BB07623CEFB1EC3E73728947F7F2CB6A86F17C83C5DAC4B00
8F394BF6E69B40F3118E75E8C19A938EBD90BB4DF0DD6A57CCE94BFD159FDC306C60B28ACD8E
0BCFE787B4C48FE80787FD53B8FDE1AABBDCA10991AA1F934A4E78FEA2CAD2C59D497087E750
DAAA0AC3DBC99B4926800C280C229B6CBBA9F5F0618D5748C154209BA7DF18681B8EBE0B8CD2
A7F61628C4E082DAB9D6E34FDDDCD6515CD4ACF29836FB779FCB62ADCAB225D7029D7D4B2A39
D579299C0249BB5B08637F0D0063EC525F80A1C08995AA53FE45085B53887FC268F25CFC3DD2
16B88541660C3D1D212E027615FFBA3E060042B10D1096A73FE0E3A9A532A9502CFD557B38F0
EC76560BE6D112E982D99D85C152A2130F6F3D16AC8FB416DE5C07DF81E5F66AABB18A628C13
DAAFAF8CA53C3A767393FB7A4B610AB558375525C978C41FF46858A1265533641C1D3ECAE627
B3498B766F68369F38B55CC07F88703D68DAD1F5115D70086389023B6C686E6312E2135C71D8
430DD4172189F6C0565C932A6541BE150A8D0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark


%%EndProcSet
%%BeginProcSet: cmbx10.pfb 0 0
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/UniqueID 5000768 def
/PaintType 0 def
/FontInfo 9 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
 /FullName (CMBX10) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Bold) readonly def
 /ItalicAngle 0 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 15 /ffl put
dup 16 /dotlessi put
dup 17 /dotlessj put
dup 18 /grave put
dup 19 /acute put
dup 20 /caron put
dup 21 /breve put
dup 22 /macron put
dup 23 /ring put
dup 24 /cedilla put
dup 25 /germandbls put
dup 26 /ae put
dup 27 /oe put
dup 28 /oslash put
dup 29 /AE put
dup 30 /OE put
dup 31 /Oslash put
dup 32 /suppress put
dup 33 /exclam put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /exclamdown put
dup 61 /equal put
dup 62 /questiondown put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 94 /circumflex put
dup 95 /dotaccent put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 125 /hungarumlaut put
dup 126 /tilde put
dup 127 /dieresis put
dup 128 /suppress put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 171 /sfthyphen put
dup 172 /nbspace put
dup 173 /Omega put
dup 174 /ff put
dup 175 /fi put
dup 176 /fl put
dup 177 /ffi put
dup 178 /ffl put
dup 179 /dotlessi put
dup 180 /dotlessj put
dup 181 /grave put
dup 182 /acute put
dup 183 /caron put
dup 184 /breve put
dup 185 /macron put
dup 186 /ring put
dup 187 /cedilla put
dup 188 /germandbls put
dup 189 /ae put
dup 190 /oe put
dup 191 /oslash put
dup 192 /AE put
dup 193 /OE put
dup 194 /Oslash put
dup 195 /suppress put
dup 196 /dieresis put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA0E079529AF9C
82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA9351BBFB7CFC5F9152D1E5BB0A
D8D016C6CFA4EB41B3C51D091C2D5440E67CFD717C56816B03B901BF4A25A07175380E50A213
F877C44778B3C5AADBCC86D6E551E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206
742D1D082A12F0780FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC54
3273C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DBB6C2BD2F
04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A6DEA4D271676C2C8615C
4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF639BE073001A36DEA6C08ED51452F062B
971740019692E221F4455EDE46AF24B8407A98B791F6AD525C72C09776247E194043281D04FE
1CD1D8AD8DCEEC3045B4F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694
AE108BAF285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33DE08
3C20D636EF780E76196EBD6EB9A8AD0D5C590F0963BAC7667DD74EEFF4739C067E092F6DB18F
75FFF9B267885F26D398B7D5F558478C5D3BCB0764B9C46938F44DC4D1140EEC280D0F576D72
8A5F6B1BF747C71619001BC82B72541EB653CE4015B0A538CF2BAC8DB0A8C17D70138667B575
6FF79FE8AE36EF127BE18849B32281061FDC18C80C19D2FA5482C839C771D45EE95F6DD42FB0
CB92982832C148360E0C09A666658A074209EDF384ED62BB0855D39762E1B1B16F33039C1339
9C576D6712B0B30ABAE77F9CA3A8000536D22267E8CBD6A858C529E60AFA29E128481E294389
97EFE81731303B4A25D84CEE0C9BF1C61D67A2F89F1ECF33AEE0282B8475D27D74F7C39317B7
1F39B0722FBB4B8553820C8E6052E0BEBADD426F292F282E2A36328452D9BF2253D0658218C1
5A2E97E1148C002E8EEF7977706AE775D3FB84FE49EF224B11E9661D5948ADB077E525F81A70
4C305F1B59B7DC421DAE5B09D064CCAF55EE88CEE13911A3DCBE9623D8995431AD66A82BF0F7
8430CD95D672F4BEDD5751844AA3B0FB0B37FD7F7FB5AA436EFDC159DFFAFF3D7989CF5684FD
D18F78243D5BCF69B95EA7C47EBB6521CE5EB9BB2204E7CDE699ED4F3595AF28417E6521EEE8
CEA907BB1B23480E1CDB579D8CC2C79DF883769411DE56F72D16E67673D11BC9A996AD5C5CFC
1FDE7F550B915A193235A4BECCAC701A67DF5C84FEBA7997B748D280ABD108305123CE11B5AB
5937FD2BFA07A96738BD15B8F06620028D2E1812B1E2BFEE8847BFA1137CB08B443914C79571
F87AD9914F204F942BD7116DE1087E674899A1B5061F72FF134006595292C7DEE518B7156B66
05D06E368BAA9464C0E6C1F55F357AAA2F8AC90BFBBB94585BA72F11ADACA8305A04CD6C07A1
B70A4211A801BD6607077115FC2CB052E792EDD27D5D700EB4DE25327B0F50C1AB29E5367264
A2164B207159893866B9B32A1D7C0133F428DAADA7CFB2B5A4F180D831FAE8A4BA0952873FE6
37F2D4A2AFB4CFB65CEF26C8D0F3B7B38452F4470C9FE42A6D8248BE3C7D76FB017F0F228D33
72F49A3CF41DC00D0ECAF1F4509EBD57538528A81263CA54697074CFB527EDBD74636F7F28EA
AE46B66DEFB4C233AD0DA007B6978FFB0F3D3ABC9EEC8AA12DC8A051AF538DCC6063E3B137B4
A359AD53522F6CD3C7676A4BD25FF6AB5D0E25C083A6FB113B626EB46547F361EC55D2671363
8D7C381FE3E209D61165B30970C25CCE56314B4917662FE1A3D8436CD3DBC306847987E00C10
AC83A74CDD62DF1CF7EE6EB23A3D910FB48C6F2E546940A7D9154A89AD58B0946C727D18D235
AF390EC8DE9ADA3BBB5B0D7A9E32F8F4698FAC50F445E6C67C55680C1B74CEC385CF61910709
61334C72387B00722228ABCBC21B4FF7C5DB2850F65E243CC1666EDBB18D5A09D2E175E671CF
A24D35178E5E04326A274FCF9F1AD07B57EC7EB025FE4FB024C83418BE892B9BA5D0A633E09E
F28EB5C73AA211D4684B697916DD845D24C952E88A7C4A69FB40E90DEBB32264C021AC83B5C7
7077FF47C85EFAFF2396F88AE7269E4875D1FDF647F636FD714B823846D90C5B8B3BF711D631
F827B1644331E4B82620287D7433876960928748540E5C03C31E16C56960BF0941CD26E28D3D
54E4FBEF7DE791A58CA9E1AD1CB9E0A0F196A9C389A657838A6C35BA717E180FC3FEB8EA740F
4E3363C45DAD7C5B2B7A27BFC86E1159F3211580CF4BF027C556BDD2E1FC11C684585173CA54
AA68967DA203DA98C8D38321EB298D9BF5193468FB202A6B25266A7EC83472D6B6D0662743F4
68AE3479DB948C36047C43492113F53EB84AF486687B25350D37D933181CAE79EECAF57B12CD
15D179292EE7ADF8A56D84D4C080D2E49EBCDE739C3BA73090C1868AB9D22B2D426B79993EBB
F48658118D52FE0A20BF3A29674D3BC70DDC2F565EBFE26B8A1B9D50DD0BD5C381A6369CDF2C
F415672740BF106EBAD216CED4CBA8BDAB6AC2CBC8E70FCF2AD869EC2051257BF2E938EA6826
C2B968888571F91C347D38951F806DB3694FC7F4AE10029343DF20CF86AF16AEFBF11D2D9E30
88154CEB262BB81691D7020AF486B1630E23E46EB9F00DA3C37D62B5D9FE9DC06A74802536F9
186D368FDC29346C1C6FBF00CFD784AF5842E196BC908726165E9695F552679E3CF19EBFBB0B
A0DF2B1DF065081DD7857641787656DD03BE6B2C8FC5EF854B89E9C7C966B4A0B77EAA0A898C
3CEB111A24BC1EC12FC8525D2B1DBA2D6C65253CC673C022F642C7B884A05443859EE8DE0283
BB1D73AADBB5F73A1E684405A8C12F1A4BFE00907577F2A75C04CB6D02CDB4812A3770BDD372
CE44DC8698A7F3A0A18F3321131E064E8B88FA49A2592D983C522E41F062B51509254A7BE8E0
3CBFF95492189085A5DEEA7E4FFA6EA787BDA03F0D763CF4432DEC344C4028861ACEEB2D1587
C1E2FF5CF22D23C9D02DDA5586D8B52037FF66D80C3B536564F9C56BFADE5605C9D2BC2811E8
9E23EE867A2DFA7B4E85E07F319F6D08D713502F04F043071D4522C1E525146CAF520BE38C3A
31BCA06E3292A3D919E0E1429D799B273F2B224C7D790C9437BF248A94FC2176B46C9B1CBA01
57C9D19ACF1C0E2E90BB7C762DB169955A3C2F968604D5AA0EEE51DF7EB90DE8D089C432E167
58C23D391768D9EE3E0319151C29F5C7AEDE8E9A3BCBB0F5C02744CA63BCB1DECD9F7CE8D6A2
F5ADD89DB575F4FC2C1B1A17E56AB98866C90080D62767A75024BE669C60B6C0B410299391AC
EA10C8A42C4261746098EFC4BD0243F704970AC8819D6B8EF8ED1DF8C4540D5566D547B0DEED
36EBB702D898E700E6114074112167A2D0ECB73D484613972B0D594BC7B3365783885279E30D
C50B20E7974C8B6069CBCB776675322CB6579018618125FD503E54330F960A4D64CDD611646E
3123E0AA40D2A0B2BDEC191E5FCB660EA1B68D0C11A46395BB23E9B7EF46AC77A6FDAEFCE31B
2F298CCE2601E16360EF10B6A79CEA6C577C759684F5DD6D6B9243A5436080116BA0E804A97E
EBB6128B03BCB48534878518598CF21B3E897FD2840D59B6CD3F5CC0592B522FFD6DFAA9FAE5
2CE397B401E0D7695616B1A27FE93EF4F9F29B375157F99DBEDAEC503DDF27653B5B367D5497
959E3D29F8D8F326ED87E24675A0C80C10F1A03D5A7D6BF0A78193E038E61054BC332210BF5A
D11BF0A78DB2EE21CB1E811D903E63836BE32530A7150DC71D238200208A6054FE86C234FC94
4CF77A704AFC71641BE0208B63B65C467A9CA05F53B770260D11594D122AD6EA034B8DA7B7E9
54FF76DC292609EC34D429E90F591A92319EFAA65A0C2C3F3338BC511B5242E7FA4AF4388398
9A9071F044CD0947EA0A82C95FE53A6CF677247783DE3C356197067AC1D48DEDD671FB5ABF04
E5E8417BD64402D3CDF380EA1F6BA6D41D8E72DF60301393317CE7B832A641B3C8393D40B77E
01847C627078FAD56B22A390049F73645C86B165C9482E726EBD07E93DFA73325D7BC625EEF1
E933210EFD13E4081621ED247128BAE5196BA1185AEB7722695DBDCDA7EBCD9BFC566843B911
BFFD2379CE7B0CDFA190D49C8655310268667EC47EA9D35B3920D537D61CE45A7B88D923A1F0
4D18BB07E5D63EE84407DB1E5256E7E5EF08ED7CA0966FEC918607EA239E150EC8696072586B
65E00F0AA7C13B12C15A2A34364173583C98BFEE7858857D4523D8C1A11C6F2EE75B4746DD37
3AA13B934DA86D09113C072E9C014A5C5318C5FE76748F5BFDAEEBFB06CFEB09EBB31428E48A
498E3B7DF3E7BDEA24F80317A7430D6F71037C6460CFF8B657CA6BEB07598DF61AA6E55A1876
90568F4823C5B15D28B8C77D817EE6697425A6699D45F6A97703368119A8AD48BEBFADA3575F
7B4C60F54F022FC9E85A9440AF1DB056A577A05F8E3779F2FBD9F871252CF7FE20F464296A30
FBF2B7759D2F6CDAB81E2E622FFED36B9A2F2E0A6105B946843B5898BA004B60D51FE3ED868C
05142B30A663B8974E0B8A772A49F2327E6575FA5BB8F8DBE5484C1FB7F5D82AC176FB5C7ADD
B7111D5317A64559004E5C63F1440A903EE1F9E6B05E958B3358C181EEAAA79837D10A66CE09
81E3C144753BB4D8E43120FEE513DB4A8FA90F1EA4452BD7613E10A70DEC96BFD6D5D1BA189E
DFA5257BA172B43727FC9D8AE562F557B456940C348EAC7F6357B8A58F8A415A16818F171ACF
54BCBF1370F38E4ADE8C314ACE55B91C12F1D9EC20E803DAEA65DDF994F982A83DFF6ADF3749
B48487F9C95D341EDF99E040F0C0FEC4BEF20DA51745613723AD4076500AE3E88346511A4350
CAA2429826A3F49ADF7CA8474AECDFCE41E42C38ECE644A450C5CF88D522AC293B8EE1B59E1F
39689780F8B92A6D9CFA765AB5EEBB7C7FB212B4A4BDC0426F8D93DDF7E793317A08EF326881
86663D6F40451B0EEBB7E60B8702A03F51BC510645C03EE0F5614BEF6779E34FA3591206137A
3CF6492AF2BF2EFB1AE0634B664108CA6B46203FF37FE4FE83574E2175020B6932BF706A0C01
1E53154DD9F25AC043CD302B3B19C89DFC46861D6DCF2FB24127FBE7284B2D3E53583083DF4F
E3ADA87A397A32B19FEE8FCAF50F5297B86448AD92239030CEA12A6DB32E8AD45E9F173A0360
7541D20C4A159B491E590D0FCD3E24092DEBFFCB0B526ABB6D07F84C568584050210A0AC9977
878C9A77A4665784B0876890802DE370D97F828F39B46AC0822EDEFBEAC8A5B9A441685E74F1
85AB50984C9F4D44DDE6E7629965794A45CC1E1C5DAF81FE713BBBBC6BD8F3AA4526E66EE28B
80A7B4B936A28664ED3A3EEB573CF7AF8A96BA941E69B614BBB93053DB4C75953528BBB556E4
E62003C79733730237E4DBE3928F461A2E647080C5F4CF53CA61A88F22E4267DE825146B26E9
B1B7100973909AB11BF3857B52EC6249CA6ABF7A47BEFCB6781924622EE2DA8D1E18A300931E
057D6D3A7E2F079F6E4A622A57B47818CE3367F89244CDD7B18E0B2D54C25CD21B62F2A97C27
9B7D122371F6A499F2FA84840BC6AA7E5A5B1A83C83C03D920B72D9B193715FB49F0B9181E6E
454201ADFDBAA3B87F527DF85FD0D57DD3415A0041C85DCFA69554B5570B90F1A830A1F2B085
20671C56A5E54930FA038AB1CC632D8E91577183B62BACD73513873A32C6001412500DD26D1A
A2478A2BD242188BD901C515D01EEFA2AA5E99E817B976B6E1470F943D7434404FCE189A8DCB
7C9F4C658B525D4526A4024680574694F9962D10EB0FA3C0F87425A762F28A332F6F1429088B
0EC28B19E8AC83ECBE21115584008A3F825C95E189FF89BD59BF409B503821B2256A1449DE32
F95B73D1079E83441A5D3358B147A91E5B04ED1F81AF3BDD974BAD9011A7581E4B1C8CF7A519
B27170E29F5023F3DFFE9FC1B60ADA73C059295683F69124932D1270592AB6BB933D301FA180
C170D3C355E17B4B71CBC32E497A9E9881C843CC8EE959BD9F9FAB58FB48D4DF7A00E505AAF6
B6F9AEEF1050AB710B917EC062628B930B5917E1C13AE88CCCB03F3195B6D4FF62392C84D7AA
E574D6DA3DDCE7B9563C3F2D3FF1C6079F8997EDA44F55E9877BCF8D58F1A8FE2BED0EC2F558
F623040339337523C21300B09EFC53E26526F94946C03AF7111C1B7B5B7804948C56C68DDB41
B06071A0876E64B80406613E7605718D50908800661BD8E2454355A4242673A55736EF74C890
751A32778FE41574FB3F44D3397CA6B8F57F788C06316445A521AFC0E8601525B66207A8AFB6
C0BF651C4BA2272BF12B7903BE1A4472EB345ACF2D0A6F1C5523F58EB6F1C99644F15F545D9C
4E95E508D3992619AAD61FE1EA5820EE6CFED90B2C4DAF35BFCE89908145F120291E15A64A63
C90FA04993EC295CE32B62820713CEDF34D80CA8BE6D58E53B16287B0EDA0AE3F5697C120EA1
C368FA9FA54E0832BDE21B592073223A8E171CBE0CA39840CE631B68AB03D351FFB2892A17F5
8B5B24CC5BD2D80A51567B2D226B935ACC5551ED2577493C76575AA68F66462AADA385046D8C
C160FAEFED718D063265399D34673892083615A09F2B8A89BD906AB2494519324F0B5D5B61F7
62EACB39D2A4BEB62F9638A2E2BD995715E2EEAF211D3353D3D1149BA95040CFDAFC244AA33D
EE902E98B1425C05804962251157BFBB601E664579659CD7F5FC56F4787DF6BA7104CF3F5759
03C624C035E6B7F9AC3BC265288211EB85E937BF5E8E158DBDBDAE4D485BD74252583E4F7883
7A63498BD5AA8CDDF424B53B92E0D8A3EE7F4290E9EDEDB6483CAF58C14E3CC4C4E334F6F6E9
9F21EE7B4C8B4741A17B5B324A31ECEEB2A5D8CB15DC2C6E61B2D06BB86396B959354E33646A
C0B176F45CA2878534717CCDA49F960DCE632709729B2FE9A67CCC419021EB7FB6A20F1BE203
E28D24DEAD4CA3576A368D473071868D99D637961309EFAB4D0EF704E2DD5A591533277ED542
E71E508932857DA9F86AD1CC2A7D0FF89EF99DFFEE4C71CE7B420556961DFF7D173C87A72654
BF34DA7B3BB427DBC53493C1B8EC39B64F025C046E35194C167A9354AF5F46D2B9D594A859DC
9681850F97FC08A37F56EF329955AD76D51FA95659109E6D67E4306FAEA2812576B602A8588F
B74DBC6E2A61D783A2F8B7594D45B4BBF6B28F679EABDA67CD21EECA68B3B96FF265AA2B4ACE
75F2542A562DA0E61EBACCAC61A5578976580B59A26CE9243ECF481C88F1C3E90821DE1F23CA
7F80485BF1440FCF79B86BC3283F92F0424F683E945F216872E8E7E7FC364B19D14353965B49
10DA05C20871B43CC0C70774832570F1395916AE5E6D51445EACB3D08561DF288D351A12ADC0
7C6898D45786AB2362E25E65A308E31F65151ED07CEFEFA1475387ACF68D3E02D75C25B7EDC4
F0848F009D77003E59777BD547C58756808AF382DF62839A990224FBF42CF18F86F80CCC903B
0EBAAEA435737F85EA3404BCB20A7FA84AB51E8F65B12AB6C6EE1F8794E21EC3ED10B1B4F835
05F581BA781986FB03124792E5F4467F9CC151D2316A9627C86E57995B0228E9FEF17BEA9D73
FB58F88DA0B1D590049C2B5456084C241CDE51BEF430B3F1B0087FE7D7F2AEC94396E6A62D3C
C4EC0564CB460F654591DEAB6D0C9AA09E27B09FDAAD0079D409401EDA040A26435E0351CC80
CA2F1692992917E68E1DBDED2139282041BF55D5611FF5304D0C390548DDED23321E62C3B4F5
1BDDDC6B832C89B1F9FD0B1E0C1AEEA0A651C717567FB6E6D6E5E832995446A7238461042A0C
C08C1EA75B4C1FC38062AFC441B72171BE76BC3B04E1D179CE454DFF93668EF8CDB1811C0C21
5430E28B9D4E92D5F1996E9BB66724E1E81A0359E166BF88694D12BF6944BFC30E5BF06D0F86
AD72A4F372CA460F99E254F7B6EBEE687699E1E4C25F8664FF774F02A5CFE926BDCF3BC044EB
796C18601C3A0B584FBD450FB51033DDA3B3BDF27219517C494923F3520A5E2CAC10ECDE0D05
72F3CD62E8AB4B242B55FC17EE04102304F2F59DEC48FAEC6044F952A4EF77938C4279C19CA4
EBDE2BB0BE7E2A9B3DB31412DD171834C1003C9CA2BE2794D6B6F9B3E0D763998811CE212497
1AD231F46460C10047FDE0BD96E2861950B079BE17D3B789E8389D9D0DF5B667D8401EC872E2
22247CD67D662CE8868C1CF7905FE257AB980CC24E27237C761966ACE5544F490EA3C9E45ED2
229D7DFD03DBB00DECF59C716CCB29011E2F1AC87C5C61B1A2CE0AF6053A4B02B7179563CEB1
411017EAA621AB046B355B6F126CE9AF8A5CD10A347EC2306BC80CACC1EA8D0BF2F5376DDBB7
DB541C13BA7E8B9701DE60BDC70BC49A6FB5645C0C325900305F3881436FF74F880175940449
4857CA9A4E3AF1EE2F6753C19D7163F7A0CB84D5124BDEFDE5858E0F55F789898939E1925A0D
598150CF4C8B75445A0099EA0668FCD6E4C2B8D19555B0DC504784B8781F0D490249CA75D7EA
4C8EEC74B6D9BB7D6E51C625B86F8EB3B207344F9C2558D0FC935B366D690C60A5AB5A790C0C
DF990AB4F9DAD07C5092647629A7A03900559F4AEC9D3D4E636C2645E92312459B7525034BFD
96A129ADA67FB022DA92FA7DDC069178ED028A2F301EC9B989F6B71F8D5C7E080127212E2F5E
6D7BCA4E821D3FE6DE74EA18B12EB7C51A69B413AEDE0CE988491CA695C7D8BBFFEA273601D1
E82978A00C7F74971FFB7F1105BCFFC9B77E161EF3969CF8774B0C060E8B98E889F6AB874F57
E4903334E656EC57E60966A059B1636E4B42DC7CBD8D20C7826BE1491BFEC2C30133F224D70B
20CA9587E6B1154387822C16A38C6D0B680FB004DDC9273391B9691EE7295FD92EF783CB99D4
C97B98C5E3E686BD6451250A0530E6503E1EF27FA2F35170C362A56ECB1AC69CF62BCD6B9106
87EACAE375DD7106E7CAA924C19ED5885F830B4D1660A6B469EF250C1344174169E2F0F6681B
C0F3EF69390985D83828FEEED2996CA586E10296CE26A4E1FD0C6C9D3C884BE468AE5010EF08
D1EFAFD27648DDA12C05C983DB51F4FC23E314B4D404803364608FDEC3743859786D5B85700D
EDF918EF085E14DD0FE250C6E4A1F2F2E8D0ECC21206BB80B7E461DB009AA3C82AE44C3A3733
026BB072FB2C65E407BE58AE0CA6BDFC249520B173612F1D945172968E8679CD102F0CE7C650
74A99F9654A9626E156C470460104C978CF36B25A54A940BD5AE248EAD8C0323A739695FFA26
5B8B8BF3A39487DB90D3E261569ECC2EEFB7B6B0ADCB1731024A5192127E56D05165BA3B7450
134835CEF2828C0D10A24ED207B6333A96AD20CBD04DD5C7B2B3E4C94830361C819E49BEADF6
60785B8FCB35C28DEC43365FEA8E369934B8ABE96A95661F51C5DFEAEDFD98057DDA59DF7123
1E4A5E4F1019C1671706B6A3779D76006D9CCA30E9F13936B2FE963B606D07AED1AAF81EF454
0E579EAD134862C30563D081F110CBB10AD1321D60D4F1FB570C66BA8591D8B99016E83DFEBD
4781515809231780EE80B36DF09D778AF18767637093A0A31336C8EF4BDF2A7C03E55E19CFB6
E66AD4A318F695F2B0A9BB970BEA5938060A13B56F7799058BD4AAC6417E96A34888606CD4B9
BD7CC1EFD67FB672513C3A7FD61B237178BD2AFB0F111723F35B6E2C376C4DD10D7F89D4C5CC
DF5BDEC342F0F6D6585B6E3880A91B0D01F56A8CA6470A21648D9F06AF9B04CA83D6296AE76B
EC4B00CF9C0F4E19EE168719C7BD41B1E05022BDD5C724CB802335F9F0DFFAB25A4E52E70E7E
763EC73EAEE61C817D9E6F8ADCE322C1CCD0BE398D89A0A7464AE3AF7B6C0F8F856AB33A1060
08B3A36C555F2853FFBA9F364A525070DDD39D5DB1F4F16BCCB0D4103A0EA3BA3D2BF859422E
93ABBCA91113556262BCDA0274E62FED8E2FBEA7E599E559E67599D56200C94ECF094130FC8C
7151200A252304CE4C937B973667180588353E6B65FDB61A16F22B2A3FA18915260512A549AA
C7760A44DEB1D1E5DF5650DCA5BA87E18E4F07C03CA34C62437D306583D73CC3EACACCD6A74B
A3FE55B3C07C499446B67206BCB7BA85BD9A4913F440E31B670A8B3EAD0D2BB913F187E533B9
C8735929C2205AECA74E5DE743D4AAAE06154D1DF0103E0A79EE629F4EEC2B71F11EE71DCB66
A001872D038F762C908E58EEA1772AEC3CD1AD2DFF4AD5FDE87F63EBD8D066CF54ED5E3235C0
73E34AE6DF447F4A817B63F17AA65921B35ED94C2609A5C4D538D4ED081D20C3E04ED66D3250
82CE64A7A8FAF9624F3EA0CD030D70F5732D4C0E29FF5FD9870CD50A62A4E6DA7986E5F06FF3
5C1FB76922709F4BF247222B30CC6B0BB58D683AEB91505FAA80E7611940D7AED32A610FE0C9
2773964FF9F92F389CE1899E7CE12E67FD65C30E3CC09A722327A7A7082CECCB566FE2EB3DD8
8426FB226AFA2A50CB5322E66DFFFFF471456AC1412FC19DE9EDB28837D638BC0C253BC270F1
446580262393B6EFDEB28A5E8578CA1454259959940CA856FA16504648A0462A59235F808BFB
FD39DDAFA09A316267E1B0C145A4A03C9ADC54F526BB63177DBA91B8A451CF78F9B3DB6B7ACB
32CA6E4A418631DAB624A248F2B3FB6CF0F297A7ACF49EC1772F01D9CC39209CFA46CE35FF16
B533E61075C33F9F42FF4C40D59952E24C21545DD99DB567D5C358C9CF85D411B01EC2C740E4
15557B8979B1EB0A415A24425E1289308A60706034F3166F8810F49CB3C8DDA06F5850B56960
8DE1EE8452D9A30FBD04EFC19C8635B0769DBBCA234ED5CBEA0C98434FAE3938D22B8E6287DD
736652D031BEC31E7BC52EB8BC75FDDD1946936E10DD3DA40F4C615A21E1BCC93E0DACF4875E
9FBCBB1537CEFD9F6B9653D91168B7CC3B746B605FF7BBEC53FD322AF0C9804DBA7F4A53E08D
6C4810474C7069F0B671CC8F36BB233169651ABBCD4530CB79AA1314C823DD655DAC47235AB9
6A815E58081E32B98A6F0FF013639CBEC60108972EE9A686562A20EB188B777CD77F4469A676
906BA4CA73F6F02616F1D45745A471E7A5BA2795209E8324365905B5CF7EE61D3E53AE1CB5E5
3F46EF208122DFAC4A80334762A700EE46CCFF8F49D5A5E5FEA39285131E7CF056F73EC3E19F
FB55CF4409047497982E17E0DF2415DDA5F458D34D1C7F5DC02849A069C6F84F2CD91EDE1904
9B5C25EAD8BAB0C9C9843DA6DD24829549A7DE70958048F037C56C949E24FC737582B9EB177E
66D5000573977AB7C5A9B43B76C8D65486384E8F0F5D60A604BEF0EFF30EFE8E7C9856934C34
5B396B9DF21AB34CBC982DDFAE5C433F9D5D1004E5B7F82ABDA6EDB5FD0F236A17293DDA8020
69696E789C0081A4D8AF4214D05B7F63607CF0ECEA630E30CB9F7352368FEE8D04803A6827D7
3B260DF18DDAB0BA5AB0B9129CA7D204C64B6F1D9D23CA41DFBE939C313AE7499B50D24BD711
DAC556290CA09320CF563BC402453D3F4DFFD6A7C5F3D54C1025A4222F29B2F87DC9D9B0A60C
52167BE7CDDC6C7EA9986211DE163D566B8D4EC6AB2FF906126552310B152803F04E9793DA45
87B0A5296193DBFC840AB53EEBD3C4E7C204AE174D4A0956E731BC742C55F2D486A3EDC9B23B
D61F3FD30E78D7EE348A8FCD1FA9C1F47891F67F1913B6986F53183665D9FD6150BF01F9F3DA
D20D1DAEBDBEA79317E580C8710F8AF667C2130B69C69861A4C3DD3EB0F87EB8CAB703B6A4C6
5D01F872F7BE20ADB5303CD0D839FB9ABBA30A9E09D504E360902F865D76C3F7BA7D4F8B0AE4
087F33DEDCED0D95EFF149721FFAFC446056549D3C136DD045E949E25F10F274FF02DC0B5D80
D0825E8C4F13D9AC797F9040B7DEC0E8B841F9F33D73E41DC08FFBA8919951A77F12E6974970
EB3896533C69E3AA9190BBD7617B0874E9A7ED6688E13D344B5B3F2A805F8FCB0F3B092C8336
D31123736A3330FB8155D3C454BCD658FEAFE642F6F312901286310E4C81D9D739DF8836E14E
DF255DB0ECB7D8534B70854DB25EE45D495746B44BB8012BCCAF8C53DA5DA610779DE56FAF0E
6E8324E5477F643D72D9D554B213D6AE9FAD4557F00783EBD5BC945C595C9D3BDB552E3D5495
B799C5ECCF5CD7D69B20BFCDF89A92AEDA439069A5CC0431CF1E2C369CE03BB374617E2F3CA9
EB52B4AB5A7876849574C3A84B63B4053E000C9CD2CA596DB9D4A81FF225461A812A2351488C
0893C12431FF2740DAF6673BD1149EDFAE413FCEAE47BABC858F2017A5661AD726E0285AADE3
0FB064ED1C8DB6CAFE5610E6D555F6618F103F00F0FB73F1A8B43E92840BD29870227E7777A2
B8C5516B4205E241154DEBE166295A7B22A2CFF2DE5183656F6C1ACB51B108F7C8B7AC667687
D3EE4AB64AA6E01BDB38669BF5235DFA61AD2921BA5B05E16EACD389622F0C6C0473FD939C16
D8514CA4A9D64F3E1772EDA127E5919B915C4BE4024BBE6C06E9B8272D4AEC868758F2C9FDF3
704C77BCEE0D21C5589109BF76F26DAB3794D869E6BE3262D1AFBA823DA6DDE55499B648A291
14BEB69F8B5986122D08245B9F2D2C945587EDC363BE7582841257E08B67AF556110BC1BDA7D
22AE635A7FDE5EADD54650EE2D2F3EB9248A09B6A54BFD2728ECD18DDA85E795B7662956120E
B39D125A5D339CC9004D438A33C4F80529F3A8DAAF414791D60DA97A940928C775A20AA2DCB1
D31421B631CE7B3A778D93E46774BB9F4BA4277BB4046B3D5FCFE77C69854BFD9FCF8CA627ED
64658353BE4B83561E32A350F58A7D701607463C9CF1A0352BF91A137E5395425324A0B90F98
A6CC726AE2BA3099FB23744C0BB0B11CBB50D91F72304BEBC10E869B81C6DB2C6D92AB98F347
603CCB45AC2225592CEA5B55ADE3E181AC6CABF0CE92DEC7B07D31CF739F83E03961AE60F1E0
59EC4B154FAC3E5FA15B6C192C55D7B6A3523D215257E0A81344C36CC2BBA805E8D974C4BA4F
09CEECC3AC94BF3611A6C35605278C2AFA08384521CC92ECD983F1907139086FE37A7DC1ECA1
D9A03175281D417B7D06D4CC6DE4C855FF4136782A3B780744DC757EA3AC6C098D2FD248F120
77C370DDADAED2C7D49488DA021E49C47FDBDE29417AFC8EDD763DF9C4BDE4A52E009368F8C9
4E663B283D25E7D6D281AD503BF9EA79D00488F45CDAD43BEC7AAED1113B309D7B9E07A22D2E
574E03D11C268D9E5EC5C262B14D45C8693A68A322EF6EA82D1725595B19C0C20BFDBB76A157
7D1FB8130570A5B96084BA045A49989152702183013F58788466570BB6C77B619F31318DDF05
BF42F1E33B877C16521CBCBE5A6AE6835B545926C615564777336CF28982A4470A715D53F04E
0CC6E61277E23AE3D3F0894AFCDAB3122549B664DF05957DCE63A3195D78440A9626168FDEFB
6B138ED18036F08DB2D60730579D844723E1B99B0CDF9CABC79CD42DE062D6A7F7B9072C5115
F6762C859B8C7D16CC18E877ED8BC9A7F65D2765F8F013108405DF82E053D9894A044DD6F1B2
F77AEC1B9A2B92E2B2C3490B8B4529805E0E89D12420FA82287086DF0C0D5DC713DD39F752DD
BD3F2923B20AD4B09F1527C4A0AE81B459B01371871870E8E7CA38F011709A9C23B4439239AC
1DF13D24457F6F4EDDA615687E3D0EB669832DE8AC749DA8906CE385F2660C49E1B855F9BE74
13A49C70D1A3CC714A25EE4BC891BD86AE4E04D5B1A0F908DD696061B82E56389248E75980C8
2F044F4B2F3CA98D388BD446B5373930CBD79FEE7B666637B09D7D0E98AE5D3E23ABB2AD6FFE
FA0F92B75EC08C85F5015960325EE2D69C19AC38754EF034272F1D5A7773DE35DA03E21CEAE1
B72274686B59741BCA5CDDF444718580EA978AFA10A67EC138281320536139FB16037DA4D39F
C3EB0BA0DC1F33423C5ABEB22E12CD3C1568FBE43A286BA6CACADFA322D558E7496DDEBACBB2
1F756272B084B46F4DBAACB8B9286461F83592A8127BDEF9DC2130D8699524E4D9E49CB9F895
612830D9E074BBD57B01BFAE6C63EA31E1CEB5374BF22CC2E6D6690728AC6A5F0CBC8D237BF4
8EFDAC1864AE294331EAFA4D9B93667C0D51CCA8F49E4E3B98604E553CD2AE041186F1EF8230
6C9DDB5AA22C27710231B9E5E7E9B0B5345AB6055D9139E7855677B3BC578CE91C6D447D34A5
B5159B3075902BCA83603817F5E43A4DC27FC131621AE36CB658F747FCD6135404A02A70033A
A7039A3E1CD564D5682F520512F97976B1697CD90C773C790FBD623C56DFAEC71847BB3E9ECA
6BC6A6B242E3E4D57EB6812E1BCC3EA9433180C1995055EB96D26B5C010123C6FAB164D5BBE4
100032081721F56AA94D9E44F627118AD292E7B9D6C732143B779F464DA5B5586E66776818F9
0CD1C2BFFF2DB52139A169CBFBE88A25EA3A52ECBE7677B2DB64A725251327BDEDBA3DD6FA39
F51AF87370B521E379F2424414A02CB09394D821533629C867BC946D81B7A379814049D93E96
8355582814A06F8BD70B03904595C9CE37DD16D2CE7EACE8F31159C7A21547D1EB67A0A9A0D7
E666FC627A281472E3614F4DC0C670173EE4881A517E8FA359B8410A967D827928F8509B75D1
6464EDF26C4540B56506B2DAD01C255C20D3371E688100A609CD64207A2D0E1E3417A6DAEF7A
382E317BDAAB825CC7CF4972A92B7F213F5ABD0E3ACAC93C4FFB524754BBE546C8592E6197C2
2F3E528C2F438EE1B7ADF77D738CBD1372DE464E4197A25E055DE19611A7995DFC4272B97344
CE6FFDB7386CE6FDA13B0B64B3B8B6C40F65CE46140994B0C065DC930F053E851670CED8F18A
4BD9EC7811ACFF197A0E2E63B4B028C3EF4EFCF7455F3093D9D799C92E5126108D7AE72730B5
AED74F1292F99D64F3EDABF2214C295A7B44D1DF6CE2B3627E90FA6C64D109D7DCF35EC13437
E5032E96420F018CE17122507C98437127CEDFC2C1CF454061204F4F4071CD71E7474A9F133C
09B40618A5D199CFEAFAE8ED5703DAE0D677329885A2AD72A3C702C46C78FEA5D08F57FE74DB
515B2481982B62444AF01819FBECEF784D5634B3938A70D93F8D90539650C3E789DFE2C41DEF
0A9738930A29522DD3AADAFEF619AE21F10819F39862085B48EFC43E49C7A38C1F970E1F6E54
13585C3BA182014CF26BF98033F41246B520AF7243C6AFA317221DBE5484030AA40EE245C678
7913C637B39E2576A751E4111888A16A954E18CB3AA1D745E3EE5E429F3E58F7DFDD27B5F036
21E3408568E2B4380C774B292E76349FA62270564B08DD37BFC5962A18F732E26D7C0BA75B25
6E82EF87ADC08DE2A8149A05ED5D1D4C46BB1A1D2ED08E2549BB36DDCAA3B8072F52021DB35F
1F5C56B591ABA25A8E032C825CA931ADC325A3AA30936776D642B4C2140CEFF26793F54559E9
9494016EF32D325023B6496360796DA2B5D34923A19B1743CE26CE14842B0C360BB085C666C4
37D7B1DE2C66F2BBF448E54D71B29BE19108CE3E6FAF62DA520D4D606C9D4E47AA2992A253C2
C53418BE69F9EA5E9EC420CF536C1B330785860DCD75E307661674F89F489BB8B35746E759DF
287B7783562E88C21F77144994D57A3EA6E7166055D227061DF6CD2D0D66310CFE1058B8EEE2
44979F4DC484872DED26F63224624CE5EE601639EB125AB391EA23C60286BB11C8A8E7922BE2
229CF4C84BB66C4F70397FCFC240A452E5EDA07A2169FEFA3A3407B05CF375281952212FDFB6
BFAD4AF6A334EE01F4A2DFC895084C724A854B1CF434802358262311955A53EED38943662CB0
9085B9BE26AC158EBFF978632F746188967E408DDCA896AEB570C334AE8B05041B10E84C6355
70040FDA0364433A7006622CAA6F73E2B56B5C6E01250CADE18C0E6D8A8142C51C53B83432A5
41A2C0AF834EA0DA13C1DD1E1DFAB7D7E9830864645F9EBA0A63903EB781D74C585486F2565C
AAE9064CD82A1BCB7347E01D5564125E21920D0F10F48EE5CBD8B99059031A681EF2EC9B8A9F
5277A3D70E43ED1A4B3D4D9BAABECD4695F31EBAB45F94DB70082E5F9CEB1ECDC8B9AF80C7E1
FC7AF8A29227D0D6F2FE64D19BAE164489AB90B3AE0393379703F786CE3032197DEFD596E852
E37599E0848DB4EFD3D2519F74794D87D9B2B505CCBAD4EA4D1FC1B3AE3680A6F412CD05156E
27F8786CA614B13CD700E42DA87F0C83878CAE51453127D4993663D33205454A1A4B98E6ED0C
88727543F9C2F7F0C8D4A3AB7269DBD1CE198CCA6FC85A4E116C9CA5721CF4D1F2FCF087CEA7
0CA873303C229725472A13C69F07D3B7B8E9F75BF292886F97F942A4C3CBA8BFAAFEA93BE2F4
F6B4092D054337749B5DD799B864012115367D03638ED38A2343DE66AA0EE9DE59F50533EE50
C3891C786F31E02E1D4ED4BA78160598571479DAA9B1C6FA0943F149D7CE98F2F1B7090D968B
D07F43ADAF95D2387BA778E616F7579799666C118391166F6849214BD7EA96B4B348A0BFC89D
E29081E6282024CF14E65B2068CC4034ECF3F1500A3D12B404B4666DCFF9001045377D496B40
81833D019C5DAAE5B70334C32AAB76DDAAF3C28CB24E3E5679D041DBC8BFEF4FFAF857C1D30E
A844C451203CCC6B83A578EE516EB034F6702A56E7F0D8BB250382128CB18134075CF0E2D0C9
C001BA712072756EF8005BCFD0BEC8FED3A19847932646E2224D8A0E0DB374D249CD7C721401
872C1F4E080B24F9812AD6202AE7C01099B94251475E4E72CD94FEACF8F2C05F802C2AFE1E18
9CC6E3F820F1CE7EB71FFCE8F39F8F8779DDB132DD1DEBEF118A028AA461CA8B1C980CAB55E9
B5B08600619FEA31BD21B39C408C65074E88218D9961AE5B4F6B9117B7D79A07B2920BF4CB08
9B79EF0EB3C3E8BEF60D145D6FD4578C5725BC62ED88AE910B0A01076C2C1F26A84AF354EBEC
757CCDF4EEB689FE9F583FA602D33635FBFFD71F675F7660B47068921A2AC1F738028E9EFB86
74F0B608620F1E170030CE98E60BAADAA5F372F738EB79638A14B6979D5B6214CBD633BDFE79
191473E225C2EABECB46E215E4BAC46155B03CBF04FB752CE4B1E4349CF0B4ABF66A37E3D573
F17361FCCF2CB9CBC0F732D0F4390F127BE3ADF48424A7A9E96B7BDD6F98630789C192059628
E6C2B38BB5B056E39D6171B040DD48970D4D0B9804FECE457684C2A9A9431C8DDEC6988268E8
34399C23593D2C240C8BBAB5C4DF9F08F1DAEA802AF740BD9C76586108F08971E376F751F996
949F5CB72802C1FAFE02C2DF4974FADCE64928153B744A64B4452EBB9B9A2348A1CBECFE6B84
B93FD6AEF4ABAF2171F4D6EB48252B3F8E6EBD2BC8174A690C0AB32547665938A977F42FBDED
BEAE395328C968A64B71C8E246FEBEEEB453619ADFC32953A3D67AB96DEF881CD61817333AC6
CA210B28FF72EDD8661612C65BD9AA5458BA2074EBB6CD56E91660A61FBE441262A06939BDC1
3194C2BAD3C58DCBACC37C631382397ABE59A65A5EA1F6822D620D350B92E336FB47140DD2E3
C541B49DFAC99E611405A22B7D07E8CDEF572E6FAB1C8EB08158B91CE6E92A7E7080F808B7DF
41AD8F37DCCC5210AAE0FBBDBA98EE418B5D27420E8DDD4C9626CF636575EE9286703101E7C8
C623B25BCF0317FD7C387D2136A46861079C882D145E07BF71DEA2283D5731D54037F67D9283
47F5478A359294DA0B939311ACCF3281977ECE5969B47080EC6D75301B19195D25732BBF2808
02ACD1855674EF6B113E3068F2068F00C8B08E91F5B532A74CC5D4DC43AE172D563C59EC2037
FC7615605894A4E03505C0536ACDEDC8BE87E08D66FE7E9D3A6FC94C2DAD93AF556DE625E1F8
105BE9AFAC03E746312377F3EAB2E4BB17CF1B8FB6D2D49845076AD1D5A9217F9ECF878E6866
031032E5188C0BFC35F33F909ACC9325A26B8750DDEDA979C97F900474BDFF0EAC7759D37E97
BD543C483BFF99A60F9825B3457D6BF82FCA933F06CE9C9220EB1CCA8A900B53B517B173C5EF
5EA99AA9225B3E01EA21AEA69F7BE72B4EBCF2C3EC3B6D61CF4A501796D1388678143EF742D9
54AFAD3860F22C0569E8A4BE6F0BD45A4C879A0550211790C41EBFBCC9462E4D213FD78C197C
FD8F659C44C8EB6BAFCEA9C5903571BDF3646168D9270F5F1AB64DC784EB4CD8E07DBDED7B3E
84B86DDFE93BFB3B82EC6946386260AE11EBE75DBD21DDDB7BFA3DA078B9DB7F567C06D60A2D
2391F6BF76A67C05D9415B466E85173D26DF9EB2948CD8F98FE04F9B3DFB8F71B194BD557B1D
BFDBFC9B173A45781F83CE26E83A549EE7703EF0AC3AD8B42C0797FD058B2BD0FB2E8FF711B4
7BE22F9D335E51BA6B19D01413B3C312C25336FC2291B587763D07D11627D11525F2E71F6FE8
04C072D71EB2647E6596A82569560AFE29154E057D2B0CB711BB79998372896202516017F8CB
FFB400EB746A5143409423530DEF5671C707348174E01061AFD0FE88F2DC43E9C1BFEE8B9CCB
D66485EEA6E2879211963147A944B7667AC8345CB64815F5CC670B078FEBE341A485B0621966
57C6E8947AD51524C38E2A2DF6A1D22D4CC10625E9B3A4508F8E783A415EF6C3790A0EF96D13
B4FA31783B5A44AF0DB56F0D92462DBFBD8F088B87E7B42538159BDC9E8772C31B80DF45329B
EF10C171E804474F027DE84C2D120765EA94C9B373EA8272496A82155EAFEB4C0D83B0CE1113
D64B375A59E2A224D595F1FEE7AF7A6076C08282F501ECB43D63CF625FFFABC6DA445D19A5F8
50A5AB81C4E19AFD25B0E7FBF54199F246BAF2AB6E4BC5A0387071AB599045DAC334501EA44E
46655AC4AC793D5BF9B235DBE7477D1E415B2054DD67916D36F750BA46A4BA5D390099A49856
B829D3F5A8F609CBAD2462789B603F0580B3442888C9A7C62395E57F08159F27EB8AE38484F7
1D322863489F7CF4B3F87B067C86DCE76BEC251A9BE14CCC178DF387F542A7ECFCAE05653FB2
89C3F34027767D2578E5F70A1676AD4EDF0D494C3993E7FB11B0158CE511515FF16919115F86
332ABAC9B4551CEBD687CB1CCFDFCBD8C81206937376D17BA8B18574E14E393D39084762F438
30C2C79E48E828CF452FA1B89D62D4E12E4B08DFAA8641C4B82E0C75F9FCF10F46BC176C0FA9
F8D5097BCFE96B3067156F4AC5810A0A9E1DC08D2B417A33CE5884A714B8AC8A7278FA32F3E0
7AC4F2DE5F36D58D2081B75BE176957A0294698194AA7A406FCE70099B91818884F21E1720BB
6D6F83AB2156B8D3F41750081D31B1E7CCEE84A3170CF0AD06FCE38A20B667263F6251273CB3
2B10B84D443055704448F06EE3C001028F4194AE6BEBA97AC73AD151A8B525D25B086A6BE0C4
F1DD96F1A4BC239206E3960AA349A8C62FFCE176B6D65F18BF33B24733988AD2008CAC875B35
42A982F38360D20F141CC87F121295323215085A370FFFB6F00C6DA1A73B13A70EB674E5ED53
476C31C2F93945C7673EE0728119833589929200625DB81CBA1C3A9B3B0A4C62738BF7C4E5CF
E3A46611AB144F88BDFC930B55DFEB1B416F42635297408C4C6E06D66FCE2F87D521E721B933
336AA3AC182E1717261E84B4A35D387DF89D81D67AB12E50281BBE365E698BDE57C261E29935
58BAA52606EC7835BF4ACFCB4F3C90BFB9F256487DB1C4B697B34109A8CAC753EAB10534B97A
FF0BD0C323FAA90B883236975C362AA462EF02D42EA35E0CB931A092DF0F2BD2920F2348B63B
F114A9A41A78C6CC9BE237C04433DB6D1A970A4F163055526E3A35D8D6E9EBACDEB740FD4955
ABD561A77BFEBF79FE10088953D3AD0EBAE680E79E256FD52A6468AA897D0ECE5FC88330DBE5
28D318D7E53DECD8426051496D02EA2348512E86ACA54037E016EA60F00F207CE2572D42F15A
DB84BFDFEFB4E50B7901D05B76FF706D578FA10D420A619D7582BC15806BE9103F8833307F94
F3348CBEEC58C69EF3743A51EEC6C3611ED38BD64890038E98704A841BE3CBAA1AFAD86C1D2E
E2A82011FBE2E94C3361CE13D4AA5E53E7B6D4C223FB9DF6D760EF0B1BD8C8E559000FB92D94
4B0027357F85AB16375399CAD7960D31BFA9AF6D72D8215A5058494A8F79E6F5867225CF4CDF
1B0D2EA4A22FD9E00F4040461F85EBEC0D9CF813FFC508AAC93DEB66DA0335045F683925E4FD
CD7C7D794A409C0E7C3AA806D377EFB85E14A533E218CDDC1C4971129DA4B948B822078D216F
ABEAB2941728A657C3987A38A0251CBED8A2C1D1D48BB98916D071809860B096DA0378014C0B
48BB14397DCF452B1C830FD25CB8DDB68AC03A6689CE306867FA045A899C853989EE2B6829A1
183568D2FCF0ABE950D662DB5AF1578A105A5EB0993E8F4AC0C38AA3112357C5BA4A05487A61
D677450FB2DF21D8FA47AC91E46B2935633DDB5E0BBBFE6A87C88845C8560410A274BDC06C24
1B82BF00C40666AAD5D246208F5D870171415994B970A4209AFC0CAB2ED2ED09F44A85B5ACF5
4EABA2E277481B78B1DAFEC692C0926236FFB4CEA3671CD177FA3B529B513B7DB675D178B8F0
5A66C9B2B67036D144DE0294EC12E161E2A0AF909CCC4E0A1A182A84E3B4E5C3E1136BFC5AFC
8EBBBF4805E47847CDC005193DA020B70558619557236927EB74DE81164CCA2FBC8181E0811D
95893C46FED13308F1BB57893CE3B29602B14B36BAC9034454F8F5CD300051273FC4661ACB4A
515543FD100133417CC08790A75EE33E9C0B07DB5B6682B03C1A27A82E4CD7FEA22A81ACBA20
A59D3048AC4AEB241E49F90CD118C9B59819D092B2A906B36ECF289E475A45BBA2E6155A4402
7B50DF95864ED47BCF43816106D18260AEBC21B29BA9BE1D8F83AB73BFF201939C069FDCD049
BB309AFEA83AA5070A717538DBE5D4553243A5D1C8F8865ED9005C975A4567D9D686A30AED21
2B4058D2E0FE38585B6BD0002F1940285E2F34E45CF7A4B0544F0FBC9CCC0AB2183086858E40
B0007E751EBBAE1778EF1DA3277BE52836162FB7BDAB2731DCD74F81E4C239EDD57AC427FE5A
E4CED707B2F718FB11C4D04727CD5361C55D681EB4E50C336C3B39CA951EB43A7324851CFCF6
AC875AE40058C9024A1BDDA7A58FD98F5DA10E7729AEFFBDD844839C08E750773FD6DF4ADA22
46D0AA109FC0436C164CFD9C754C648DABDF8193C54B4A28AA086F795E156E2A517554EAC660
D5984E1907327F5308940C4E59C3602B4416AE1ED642842566B51E632ED34F310D55C13F9366
076B4A40A57E43A800CD307D345412B6CA0276044C2FFD6334E616745D8461CB1F297FF8315F
0009FE783DEA1CC5F74F297E0633B83D40F9EFF85B254A8CDEBE2E707F727F38AECEC2FA4C83
CD2B2AD7F52838314E38C023E8349CF15C5669B7ED30FCFA10239C6772448C89A4B090FF7639
7F0ED7082BE0D5812E4203E5892BFF7CBCE40A4BA9F30D0EBAB162662BABE7B593F5CFDB5026
351193D4F6ACC5D19D3F4C14F14737E819E50E89B6A3923AF9EB4B71C11A6E61EF5B731FB43C
A64B95441FC78269D524C2A95EC8B445A026D13734A9C365A1D055D6FCF0BC1D2C3F5F6F1487
40753685F4040BD4D8859469F9E6EF16312BB68710AD5CD8066EEBC5B3E5CFD1A337BB4C732B
9981EA3FAF0970E4F75F7A15F8C2CE7D9E87A60E3AB593307B759B9343EF63F04FDDC5C75A64
3C2139A4D15FA745E7AED1E0E343B18FBAEA00562D0559660C70ABC2DDBDA03BEC32FED207AF
AE62E5FA91006629D4DF17678F8BB7EB5F1E566AEBF20B4EEE90CE250B182D87DA7B97DC6704
EA15C8BA6CC09069F0FD8FDFC295E1F8791B9007C2A65CD579BE51FE803191F13D4403BCC269
7E6A9114AB0E2B01B5DCFB08B221853B1C5BB7E9A6109DF58F1FBF5F9AF974EA128E8707E4B0
5BC3B4859655214040B5A5571F80DCC13BAE940925F5A76D269A582905CF0F20681D8A19F66D
58DB65C0326AA29133A280B725FF32CB74097CBCC9D70430C3F490CFBA91AD3D0C50617CE61E
844FF7EC1F678C7650D22A8FF7418B1788436AD44520C4E70AD2E93AE4DB3264E03B00760E68
CF20902BF5FE5432F49C00646F823C5D4F7BC868B5C5310EC80DB1E4E19115E9B3D1F32BE0E5
AF425A78EE7D2ACBFEAF4D008512D11484B2613C9AD832F20A314AD3DF773AEAE9A2D666CC1B
F4C2F8197CC85C77A4CF29363D9535CE54A6BC300DB46A213FBA062697E0D879FB67C22F1490
A122E987FF1ABB3A7D6CFC060E6CF185F6D1A046ABB737BC5ACCD31FDB5F6A5A7B52D3E16FA6
480E654A3BB7DA34745235415C37A053C5D4C2077F4599D9827170F11E547FC3D36079770CEB
F46479A7D9FDF4901E310A105CC7B4C019A9768DA8689E85269D3C1EC816F5F15A331B1C62A0
ECA084FBDF0948FA7E248E2C5CB54091DFAD9E3233C1C960675D9486B837EE227FC2CFB37E31
116E81DF20EBC2942A2EF2B5192F1794E1531967140D99DA01FC39B8DA8CCAA8FE3B5FD7D444
D088BC2D81D7D293AC9062FEBA3777232BCDA3989F763C5344601900E095F9E4BB22E320E280
983FF3919244F66EDAF9DF9595AE303B8612030FF910E8EE2BB0E100CE438B298C94640472B6
33B1ABF465E9E7D5DF5EEE95A4CC9BF192A9101B9377C16AF1FE25DC0FC31BEA21B53F713A99
C93A665C8841EB1A26C1FECF069CAA1467F290246698DF31F371DBE74F5EE348F566E8DDE0C5
3006FBB62D9869AE9F5F2E950DD93524826CE22F55A7D5EB96C28E125358C5D36EFC8AD394F6
40589FAD3B25AA57A998325C0105579A0B48DFAE1674C85EF9F80A5D76ED9859EAA93B96396C
942769C513A887240088E4A99EDB2E7265ED1770F91E6113866853B9B5EF36A5D5D1AEA2FDF0
C6455595AAA078D079C3FC7CF72AC3B8FE552FF393C54C21024CA6D89FBBECA1B34A79C2067A
3B770510ED790A12D68A104F4CCE4695D9AF48FCADA4D85F041845C0140DB8C185AAB008FDE9
518A7C1DC7581635FC04325448DFF5A40F0AE20F1462F07313E56F7054B1F67E2ADC185C844E
9FD5CB65400C1479B603F3DFC1C2FD6B46F8DE207FEAD936DCE8C2A454D368031D9EC1042A6C
201B8748BD28C5E861556D558F47FF7980EDD521182F33BCDD9628240E1D4EF9584392FD9B6C
D2EF25325B8BD4BD15984534792A5C4499ADF46011DC9EF1B3FE3AB5EB36F203A41ED170FF38
23F8B863EF646BD8DD3C8C83ECDCDB9017426FCA248311200FCC3CDF7BB13031FE2602638E4F
792BEE3CE7BEA9C583308B859F9CBF7225504983813DD7F2A4E625D1EB84506582CCE1107BC6
C63D5080E03BE0C817FA54218818B4894E82EC118E0BAA7346BF6BB5AE5A3B3BBDC37E8C4B8F
FA2086DC22F3C531BBFB518B329F80F8FB4FE169147618FC8ACF78AECABF011F44AF8C88C5AE
C222054031841D9B50226279CBE3105ED2A60310BCBB2182C6B9046E9CFB1367BD91E07D49C8
FCC43194918ED83825EF9E69527F3C615B3C53DFC5EDF4270791F70777FB5FE1810F43A09C33
0CC5616950124E596864D74A196AEA306B1D1BD2AD9C288661680D0BB10DD54A83057B0452E2
9BEBDFA44C53F7E6FFCA98515A72B98CDCADE497D3F5CFD49B68558B333CF3F86483F28B2553
3F2B40F62B86B5D67440F13EF0D0A33434E71709F2657B6DDC8514B0BEC7682A906E2A2F1363
4638214FD7CC3971650589CCC0DFFB4DBBA93F4B0100B273E4DD66E0338D12C931B2438C4F9A
F311DEC90F88943A5D20C4D41FC388E68194943A06161E5B8ED0478A5CF044C0F831E4F4011D
1607928D035FD6ADF7D891FE3306E28E7B80D9E3EC8423C942E49D812205B91F663F08CB8CBD
FA2E85B63B6D67786D69989B60B87B4333DAF4CD2585FB66F50EEAE27364D0EA2A8274E3FDE4
EE5CE4C119A1C409A4FE1D013078F48806379BB255F8D1D400EF3F792D20C48C259571D37EA3
04D90E51F4E06AC8F265996C9D1846B6CD59B8F33582A4CAEF8207A1F71BAAF3EB21EBEA0C96
D4B310163CB79B23BFD268AA69F86748FCD32BF6118F0F93F78B3E519D8BBB4B23614084DBED
BDE8B266A923490940FFD4D3C22D31A86FBAB3682AAA194CF2598F83B5BE6B661B5704A026C5
CFF6A620DF8527A01D27D3EEA645C7262AA3146C19FA9B1B6BF1B0E72AAB0D810835D5BEF4E7
EF4AE887618C32A85BC90F138C566B6F146AEDA92F9531A9E80120973880D17418EA2D09A829
5F8B28935FE5E02C07736E368C7650BEDDAAB54F9193282BDAE826B0EB57BC24CC50369EA072
CE91DCD1E144AF257BF912D67EF4BFC3726F85E95AB4003BDF1CB4F41CCA39C6C3E084658607
CD79FC8AD6A8471F608B68EB16A294A597AD4ADF04885C2295153C7C19AF72A7FF5C631DA5CE
CC07BE789B7D238F825E6EC773ED2D6045EC52AC0CCFDE14A20C8AC23136C373F8AEDEE55D90
0B163C2D98A1E18E23C4001D088CD85AB7A7B2BA684303D305D54CEBACFDDEA88326287590F7
33176559773910852D5A5AEED4D3D90AF81C83B9097C0E01FD1108B9FAA24D183E19F3F5FDB8
A1E8A5A6B75D93A70282800E1B6747BDE0B6EC9F7116FF6E442C79E656AF92AA2CF4BABB7D45
4024068C3F026145BC393F5B1D80387908AB8847142F992C0CD9D375D43A673F2A7E92612FCD
50F0C539374B0A1434A636B992B251C4445C58B274A5E40238F93C1B2E0EF3E9D58B763A86DA
94B73CD1297C6FC452B1CF755AF657FE86CBA73368F691F6FE244951BF571049ECD1F1115AE9
72A33309450F7D5794E81A2CB0A3A46EA86CAB30F82AEE0BE7E2F47EBC69C53378EEA07F8647
C1FF4861A97B65FC60A1EF0FC8790DD11D2B5CBA0071EB32E6E434D4D200DE11A7AAFBB5CCFE
35C31F469E09733B5B35A532F683F0AC9CC8BA0878A1BAFD714F0CB29A4F752CBE57E100BC12
49B1379EBEC46D48139A8F791AC6D6DFF3B730914DA3477E90C863E6F689F7000383F8B5F9A7
73A6E9236BD3E96EE4D96E418E1DD673B9E9169977478CF6B9A92D7CE92B8A3F8B7B38EF2083
4990F3344FFC213584092CED4B36E393FFE2E3E8BA6EB6CF28FD88E4642D0F1DD4FA308025AC
AEDABBBED5233AAAB36227A25467BB191C372E9B6E0FF34F40281394D04171E230CAFC5A969D
D00C59F3ABB719EC8DFA60CA3019ACB2EFEDA053FCA6B3E0F6DCF9A3C3CED6848CE4B86A75C4
2076863FC54198036F05EF5A2A9CBBB347FF58DC5992AD769F7073D9CB3321FDA327074827B3
E97B0484CF3E8CC358BB581BDBBD069B041740E771D111C3A3093293B147DBB0EA89F03B9908
5A5AB5F5BB1963913615841D5C727226A1EF88824719C3579E921CC89D0B595B55210A4462A4
6241C43341A3DE3CE542417EAA0028E1A35E417AB4421CF1E7447E0D7936E09CAE9FE4182179
9B0B233DF02AD6F178EE0BD1222D900F89CAFBB250DD454B12AB53BCDB1C96846F6305053EBD
14FE5E06F88B2333BDFA5F4FE592BF7B471C637526041CD4C1E5E1F8C93B394269CDCA175F6D
FEB1649ECEFA021C99B717AC6EDB244E7DA93D6027E24F75F728AC969D02DA439023E0562E7D
FFE31B62066AB562E8931E99A7CD373914E8BE770540A29450A1C0F1E3878A1A11C20C9CFD08
044788F28437E406E7086D1F6F8A63D0FCF313EB60A405EFC9CC79B5B74CBE963E56FEFBBACB
288F1A507318F14541D1B74FC5DF2B2F64AD55E2B36BA81852F6070DDB3519968D0ECE2D5590
12F638D75E3D93F82E1CD81E6B7277CB8446DA9CC141A1CEB32E185591D9A57E83CEF6942057
AB7ED6289607B048AF4ADC4F4667A5CA980ED732484BFCE097DC26602C7BC059CB60C370F178
0DC72774EB31D26EF8D747CAE5A27CDEC6E4DE59FD68E8C6812C7EC50271156B4EBCD137CA70
ECBA832F1FCB7F883B6C188EB77AC84341D3EAF37DDC3EB3D81BCCDB92D720A10C466AFC923A
EED8EA7F974B8CD7B2F427C436D3E86129ABEFEC804F802E5A0612D5C8C829F4750947DDC060
81D81CBAA47DD9BEDA0D3BAFC51B7D96CD852020D3E817949F226FFDC93256E0FC4FBC8D29CE
79F17F24CE89F476DA9D0D6AC9FFF055B087C9F815C5B62B26DCA11B2CA941422D841515F247
F15656F68B5445DEA19A2616C101EEFE7AC0243D5E302E3556012DAA567B9491D80D806FFB41
65CCD7FCE369284FE8496A4246B454E4AC7121A14B894C32E418F9E8D98A425CC72C823AFF77
71D2C1FE845DF6FA65F7FAA1D92939D2BD4BAA9416DF7AB075BE161F33C309FA99C18C3E67FC
AC44EF8BFE435C8619BBA63AD217D6028D8B13E52C9309AAFAE69726DA87FFDC669FF2D033B4
471444D757307DBF8F157CCA7C3E85AEF85AB40351158EDF87A67BE741B10F5CEFBD14C32DE3
B77E2FB99CE8F746A93FCBBB6DA0F96AA3ED846909C0617D604560F6B869A76727259DAC424D
4FB06425C8AD9049F8CEC128484B0009728FB237F3689448B370151CC06FB13A2A95A974EA7A
C942DD011E92DD3F6FF5868B3BF4512CEB823146E4BE2A115403A2E98751A66EF7C726F1D57B
EA408C6D47ADD16A327189F31161E1A8B6737EF07B6E5436D9968111056CAE476856DE1D33FA
D7934F2F8E0A5CADD257A4EA39230B0E8721BA05421B29F1BCCFD02AF60D201A17C4C1436315
3CE5E724A9231D5D39F152C056D421DED29B8D3148A033B976C669809095B17F03F970B20243
9C9B5C5A9A470D0B76C50FD1EF6AC28CA30FFBDEE1FA193238B26A7DC65B99A4412D87CCF433
C376E12F567F1A5AC5702E24988B0B0E8F0A7FC5970FDF81673936207D5DCAF9681001E133F8
79FAB568736EFEF1EC23BBDBDB16F9989046EF108A0CB15D681CEE2411A4B4443242CAD88E2A
1CECB158A97E4CA98DC137588D64A4A4C24A0FFA7AE602A2219FF2CF955509D5ECA2D3D71897
C626AC391FEC02F4029977EAD5E4D4995515E39B04BDBFB84D621C357D89DBB10A503C641608
FDCFDBEA54CBA58831A56261E92B7C760B919BAA085CDA93030EC7D636752F963D06A455CE5D
AF2BD529029987395603A2EF3B272B1D441E888F2C2D50BBBC0674125A5A2E78D64E0D618B6D
31CCBB977AFF5151E0F2158203325D54B945292EC7977E049385F3B49E01B31051F7AA9E4AC9
78BA2F7C2E1B59B19B46326F2706CCA8A819F7F5B8A6B57AB91B6BE40B396312FBDF99F17517
4BC36988A26333DBA05F4B034A6EDCED94240CDF61E632AE96DBFE21F8404124B8713D5DFA1C
92C9360A5B490AB26B737ED8985D50A8CCD0A0097FF11C97CD161B41858BFC387A8C8665F09C
F0460B4A7ECD114193245C485060399574ADCA7FEC4C4A53A22A676A92792AC8F264C080914D
331336814AF414ECA4D9E78E54D2667ADEA08BF2BE37663D406EC56E8768A086EAF8613C8079
26F89BA03F822BE515EC4F78B633A677FC52A42B1116414C50F6ED2049040655451B4FB856FD
4EAF7EB0CE64E4758F9857D8430AC378609383FF3DE31449F3BE10C4FD3540199C9251A87AD4
F4C95CC15A5F94DAA3BAE07E014EDB0B8517D257D9DA07ED76F178A1E14611C88EFEC355D103
8C3D366B87882A1F1A56FB274B2FA89746D311B17043FDCB7FA3F6470CB45BD1556F44944361
57C7D959A96A579F40106719F4BFEFA13AABA22A8D7F6C6719058FA18C5B8061DFE396F0C46B
A47BA07C16505507165C03E2401367F9C8BA1BAEB148118ACFE38383B6A269D928DD2BAAA7D7
87DA0EC8C9E54F2F09269F691B4892A0EB340018F30D8C9E691C1CC02D6860445D22403A82DD
16A62AFD86C5AC23E5030BD7922D1E283840BDB834C5C574AED1A73A65FC53E42B03AECBAB2C
475BAE87B03E3AD942DF69B039DA26F7B2C0454CBF22BFF8E21AE914D7A4A1D4535D02806107
0253E0E232F898353CE1343B234B1EB039981747746A134D9B1133FD99F7EB43B85F9A7742C4
CD67ACE2FC478F1B45350CCF4EE9775512D3233AC9AE0DDA949E606A6B3F7F87E2ED5A98D4EE
AD9BBAE3C6E0680375E46460F6DBAAB3CB0B707871C1967B8575AF4963505E458E1386E6FC36
4BCAFBF4C29784052FAC4E167565CB23A87F25F2EA436EA6C0F80A35C47587C7530C57627684
D139705F99B7C14D4F53F45FBBC63B7F40E5C726C510DDDE4D9BE0DFC412BCA6D0EF2F7AFDD6
C864B8FD8E2C9F29768CDADB110CAC11222740ED4544BA7DDBBD3C68050CC7361E5E45AF3416
1186200291CB69BA569D5D0550779B030562506041A23ED3C5CDDE4D71B6A905BFAF2B8A3962
17A0BE31531AC5AE602B32D9886245C574255D62580B28874126B25D948218C75724545D3C14
5D41E321BB9CDA88A3A04B41A817599FCC549F5E8A5D0FA489A7DBF8C3221B65C6544D6DB731
727D50F17CB79DA1D98068D84DCC064CF635F114C99142697EF5A92B659CCF6C9783AD2A2AA3
C4F516FE892AB22F3B9C80D003E012AEDBFB0016C1627A13610DFF036B93BFD9682C6B64B584
EA3C1DECA22168B4E31FBC16FE86AC4D02B03CF85997E1B1BC51DFC8D1BF03175A4D7E27444D
B7D69589FC45794D5AAAD247CAECD431921785E5574D86DD2D02BB8E09FC1C62EDBD77BBD2A0
AF5D1929D29A5C490D396F485099653AA4927A4409E0B646543CA7D61B0D276236F3B3C7B026
E8303D18E1589E954B70F24874285E6B5C461F6596157842A9E3D65C1ABF26AFF2EEA5951CE2
FAFA401525B1D61A8A0B70EA2731654B8C263858C5335A7C5244DAE8F283106CF5A827DABC06
576F2C6E27055ECA577CB16E5830AF95CDC6A9DACA96354773517F9643D44B698177978C5B68
73066927E903CE3835F46E68158A0309D608A8B02D25C71FED9BE503CD128D950B6CF6C8B79A
86667D90393F1B169C7AB5CF1B8F62540A01A8FF4D0EE730E46FA6A61640E48E692131F8CA83
F71E7D0B39EC9A525E9C2AD0CA3F5149F88D386426D3CCB187932F2446B6C3DF15D2C0878F6A
16ECE915A7D948FA8DA19A6845C5BF5DD21E4583FB5464882E4CEE50D6B970D69617BEBE2D30
D00FCB4A82E9C2D80AF98784AC62E633458D9B7048047A83C61C42171F28C5E5BB2906944921
488D3F3FF780945F98E1CBCC81ACA5C458E38D237FE1B348985EDE0E80B892BB174B7446BA63
F86987ED3BB80F7C8FBC6308F1730325C3493724F3A54F35BE1EF5AC42530A1DCB0A35830DC2
D42C497A54F9162AF26EFAF400A458522246FF516BC9A3DF1D5EC04A0F42E441DA3E8F811DA3
0990EC857644934ED64C70676152AF1353340C3C3F54DE04E7DCFAD63E0A9585F3A6197C38DC
9FC95DE0A6BB97C9133C076C5907E92BE797F873DDC02A97AAE5ED76BC008830435139281475
C728BA0E69B580ED01DC08D23E0754C591B8B2F4723B473B7F6D891C2110054661C7CFEB761B
AB474172F3F9A151ADC29B88E5756895A2480E75F5C06DC8667542812C079C6ED456C6805713
818F1712E7A3A4B13959448CD511A4BF1C95925237B7F8C09E73E92567DE2E3A688F186F89BA
6204272B5DEE50D6BE2656E7A997C367D1C29D9139A9CF4B1A8AC455B0A2936E8F57E9EBD623
A7852A64D111E3A476CC83975CDEAD4D006203A4B1588F26280F51FD3E17AF6567B9E0294507
CE971FF6EBAD076F384D97DF65E2D3E59948E3CD0C6FC2A401371DA54F2993BE3790D18C0EE0
6AEB09C9E804C0124DC42B833D299DB67DA2B4D5DE4EA1A3D3355766212C2131E3E2801497AC
629688A57A1C0AA26459FC6E5361621C52D49D8D3353FC7DF3D58C1E77C30E5A717DC8E68AE6
885516D74E1B5004A405629697063D0566B5EB705277095BABA9D3AD5149E74670332D779A43
6103CD01A311DCEFCA0D8CFCF3B114EA3A835091054B3142A4A34B921BCD5BB545F11D774994
101EC958C8178DC018A5F7B5836446E2C705A21A4615793A14597F90F58C4F46C4EEC434F9FC
B2341090730B05B84C6FB5698FE3CDAFC83715D0F503064F1C78C70FE2E2C5C6569D3F86C028
0204B5D77C3A94A0B4EAC790C3FEBFC743055DC69CFDC3A19F2424D67393C3A767009C64AFFB
F2479FC800F316603EF446D77B4F882ED6C4AA8D775619113F97FD04BFA2C5C5D71817366736
0581F1AAE2E6124E3BEC089226CE74275A1EB699ECE77CEB53C6C4A1647C68D6FE71B2CF8119
4F82CA145F3241366AE2EBEB87847784EE268BDD0F5F0DEE50DB66B47065BA4028700E9E315D
7FF76019321E45006161093117DA9A7951F34DB22872796EBCDC426DBBD41BFBBCB4F96E0139
087D19676935FC4D7FE0A5D44FD293F96F64562E2A0F6862E52B08CF83C5016D15600380C245
EC9E7E6BF05FAE7CD5F084D958CC3722C453A6CF4E31BC4E23AF3F9885103C3C8F8E026F5ADA
B36F6E34FA0C74230D796BF7B406A5A06509D22D57D05816EBA919C9BA46E3FF9BAFF0FD93CF
47625CC414840EB7F898B322FD7253F40838710A867F2C10FC7895B86476D631ABE4F97FAE99
63021010801D7CD687CD4900A3D1ADAD6370997D1770E17E3E1BB28B9450E3746D270B2D3EC6
E05C3DF8DB82AD90DAAA6D1BF57E71EFEAC060F22F265B707D2EE62B731905380314EBAB07CB
4F0C85D690BE1B9AD5D32CBC7C6CC5AEEE296639E29A0A4250A15BFC349294258B5410C7C68D
C4533A6AE62C94B032902D42BF6B5179A750591107BD83ED767795BF5C1A56BF7356B26C3B59
20B6D16F6FC46CBF61313FED419F5D42BE7793F48789B53BE16667D02B016420FD73D1AF7B3F
DAA595FDD0D3CA12C147CBCC1B108CBC2F9BEEA174BCCBE19ED7E6127A4F432F69CCC611DF31
94AD1A5D28A65449B6ABD954BFF51D753D0A4090F6454DD8FBC876E7A7FF3C8E943106FEEC1D
2FB6CB57806B4E96E23A83DCB672D9B1338753C01FDEF47A135291B573CAE1AB6F1C0EAA0E19
ACD7792589F7354DBE35AAA82368A08F27158A16502EB1828BF7E8F39ACA4486DDFBDF6002CD
9A2DB2A2B7823DCA9052C1CB254AF7141BB889ADBAD758F1290C77A8CADD8F87043E822C1F7F
161875E4DE79E78F364C805E98432B07F965127DE538C3F56EED26AC5F43C46CD84A52DEF9D6
32B0A5FC4E3FF4CCD4685B47D792D4E645BBB1F77CC7DF7532712CCE34C52386FB863A878BB4
07936591320AC8839305228AF3E36638063A52394469B4F46AB0430BB45CC5FC5524BE323E2D
D2566059EC06591908A72F7394D6FECDA4E95CCA417931E0A8676BCFCC79ACD60D9B173F54FD
2690CD8711CF70A7BBBAA211F644F6BB0FC822F59C711B33258FCF9EF0E10B360D68456DB30D
7EB84B739B795FEB8034D5E8123C1F9C0C4FCD5A233067678EC0685FA68458B241E7087D7BD8
C3C775F3A616FD8F69EAB717CF6CDD04E842450DA047C213924101D86C549E2449F0B1D8C60A
1537B40FA2009017511E8B9158B26BAA9F62ED33FA70D54029BAE885360CDBDEBE41B0A6CE1B
F3232C48BB8B6E61155D149C234A97477493CF7367DE9D3E865286F49B11EF1F548D54EAC209
FBF0E50B1DC7DD041AFD1E8D053044393C4939930826DCB6C688D5A6A3D2D36D4F6C80B94851
CFCB42DF4C8E1AD64135B89B427BF69343D45B4BDBAC1FD80E6DA8027F131C4B4DFFC3D88F34
F4173CBD79FDD6DA598C6E051F92170A3CD72D1E389D83FB181FAB246E92F177AA514BDFC0F6
8BF4CDBBF62399204BAF083F12F8DFB9C40A7DEAA94CFD8109C22D56479B6881B829CFB908CC
20281424BC8DE6BB59D1DE83DD24286D6C4B9C2B497CFE9F3DE35F106224DFC010381B5EA9FA
E3DDEA7457C6CF3F1D7A1C8EF8D8FDCA5444E6B53D35965B251F0FDCECB4561EBFC37A0D1A29
A027C42B0679C384FF81ADC4CE01083DC0A22E8D6D9CAAC76AAD3781A45264CF25415F9632A7
D2DD169A3DD67D046CFBA7B730EE5DB5E3F2AB99EA8301CE349D5E7F554B0453EEE16E7A5A47
CD114FEB05A35B74D1A9C0EC5F74FB1E35FD0132D5F48E5D96735622339CCB28F2BA8795ACAB
088599E9E5C0C815A1D61412384956D556ADFBA917AC36F91A22B6DAFC8049396F692B743649
125840CA820DE1A71BE06C3CC2A4B5D1DAD80BF9F9057EE8F5C3A9B2005240B604D867786149
9C2B7E0F6EEC567B28C0DB3293B9E3F8C801C0F359430F363D449BC01D4D1BADA65736176D58
DC04287AD8B28A93DE4E4C25A412DF49EEAC5C30F750BCEEB264D0F99D57BD9212CE5087FBB3
8E4C65FB28057D6489994E84116F39A77D3BC56576BB761C84B3C2CF403677B034B8C1692306
C1AA270D0EA01ABD26B14A685BFE6C338B3BE4AF5C0349DB22713422C90C6BFD57170F1DA7AA
43856F505ED3E5FBAC25F8FFCADDFCDB432743FCBED8DBE32957F81A1991369A5DAAB8630B9B
408BD6522F929266630C62C50551425FDC6BE738917AADBB53D9C5FBE8377C218816B640AFE8
D48DE3E3987128A62E17B4756C8D48865036003071F58E9247D376FA94B037A1539371556BCD
F3A6B4180536C41465C5BB93D9CACE6841250325C890BDE1FAB0B37106A680C5E54788F205A4
3FCDA806ABE81377C52FD364F55880A4A7EF854B5E1F0D312DCF3B24032EB2AC073B187670E9
592272289C9ED3AAD6BC90D7382E3A80554B57E7D9855E01803A2E8A69689FA918DE2BE2BFCB
C3CC600571C42492F5155FF9CE36DDC1957099D8AC583BF8EC76E9D2781534AD17C753995BF1
CB348F609E698AC36072AE0FB13510D9964DB58EBA53ACA4B1034284BA27DDF5D23B4A8C8F12
134D20BB358E2F52264F1D90EC9268A252AA84DA2EA8C3042B9D4851CB107267D8AD60466B88
CCDBB0E83F0FFFE8A4E891A5DBEEDDC7CD2C93D7F2F402C5B657D437716ED1009DE4CD3F3931
DE5457AF941EA0A763B5E3D3297AF475370D9DE9EDA9DD9592FB39B41332CE15CAD67EA78A09
5C1CBAE07D98564EEE4B31B976BACBF3BA9777706EA8E084561BD2982FB50F32818449BC0986
37322165DBE5C0D55687F495658CC7668D6554B22D625077953B80AA8912D34597200FA64D2E
1318B0AF4AABE080AC6E34B919C4C0D611FB9CFE5F613A2537EACF474EC1520613E4D0436AFD
DC0F1107445405BA0F527EB9293BBB8B8B19B17771BE4369FC52A6A2436DBE9237FDCF95BD64
35B5C695BA6367690FB893DADBC82C3C8CBC562D9D70CC814CB64FAD5B5D4E269E19EE5A2F88
79535F556301EF670C31F5AA627C6B9C43F28CCBE996F4B2EA6E22D9B00D0492FEAA50985DA0
B809E728082C35FF9DBC178E5993E6038E28FDB0CA9A5E02C9DA910BF0FACD796DBD95D86B5B
464861A3D6768431ED7E626877885C19CCB3BBA44AA90546003045321D8EF2AA639DCF52377B
80D18F100680424743880CB75F7ADC7E5AB559CED873EFE5CBAFE7B8D6C803008E8C90BA480D
ED6D4B8B23854E21498427FA1949CC358EC3FA22E15FC6A0B21CC09194AD58D3EBA38E0207FF
83CBE967083C554E1732C94A7EE592DA9ACA59DE193A3FCF88D513B280A2AE7B4D83873B3A21
0A89F6E611562D201153FD1CFF856CE858CDC1C3BF06B5EBB0FC819C55B71A5391096DFA0445
1618C17B843B48226189F2D91997A28B371C805E859799A33DF12920CA59A55223545EE6A753
E9710DC3AD88006B59D74EC96BEEC281188A1F7071877368BDDCA9BDC18348440799C71DB5D8
C5D60913812FA68D0260B3EE6C8063B7C6751E074BB831F91FD4CAE4F5A7876F02A2338DF1B7
C182971545EED06625E3007032F98C02E7244E1A233722EBF89617A291F33F15FBDC622737E7
CF584F53FAC845880D0DBFA38DBCF16ADD36CB3BF38F19008F2D36FADF6A4E0270034D3A3AFD
94F7C466ACEFCC2C1E7C7C1CC67D760D2622838E0960F608E97EA65B5AFA630CAD3A746E1E7D
FE2F60E661BC742859923613999B18720E9081A5A8B8F061635087FBF30BC74CE1F8ADBEFE0E
BCE9FD00684EC5537A0A474BB65EADD944AB5D0B46F67EAD24CEABB41C680B1A5C0CF25D8E38
A42370ACA00025655BC3AC5FB34979D4487FF16ABB7279B7391F6E965C009C566643A229C77C
B9972C229A6F07BA370243C4B5530DB7F09F9D04FACC915E49A6023C7BDEE02FE8839581ACAC
3028643C2501AB8A8059B9C3A1E48E8A9E89FFB06C7025C247FED7B17403CC52D04FB69EA70D
27820B8A023751C19918CCC043EE50759319E4FBA5260D3AE2D0810843C7F9DE255EC6F83C3F
5E9DCBA11FE4236D1AFF3EF6909041BBC630D0F8B55A0942B0563B3FE9F7B98AED66BC03909A
3C0B593AC3D677466BF55D1E6790763767C8603C5C0A09B5BFF9D37D2A4B927D4A119B3730EF
AC7CCD07416334CE3433F4219B5881ADEF236FB7C0DB9B37DDE87AE27F45544237A6004A9A8E
85211B893B4B74CA8695320A2B1F5B9F74DCA1F36CCE6E0502E4F91E21328029DEB2F3B7C6E1
1492E6097653D558CD50E4F817B11140F029F793C242FD2CD525075D9B27B25481F536174156
BC763728F9DBF5DE404B1CFD691531BDD5A0AB5C7A8030888B01CB27D144A49D4D45D6F94B48
0C3FE2290A45FBC6701BE89DC9F11C3225200EF0898CFC657A1A47074408AE8259260B360D86
A6335F4E0CF366544FE10F42645DFC80A1090C7ED65770F9B45BA3BF65181DDEEEE16EBF7C33
F8057336813931FADFB91B626C471259D57B51EEAB22E782EA7F8F3E8600B2355530BE1BDF32
E146C6B71B9AAEEAD2A604C41692B7B8FE5C918AB45A257E11DDC750A8C01D22F51C5407CA98
F708CB47A6F461F5E74F12AFF3E783CC8E559821FFBDA7115E7E749BC212E9C6C6EB0EBD3883
B56AC6401722F72FB7BE674A923D0CCACC8FE9E73B45ED8FB582C68B715827E22E1DEB70F995
73B4A8150323877B44FF872C27BAE08219E86E4532BD0A2994AF39B1CE6A0102E263A5FFE837
75E9CD27B115A2AFF6DD1FE68FFAF0BA5F554298FA7C892D566A08B8967E88D8CD5DF8803F8E
822CD54379D5EE4665939394AB950F527A746C07D140932EFCEB43702DB86D4B99283DE5B1C5
103BBDD82A22006F488D1FF632A66F5F30A10F3CD53FC57A29BE2625E0E17D231B7A123086AC
3F3685D22BB41C04947CFB48654EEA0262CFA7EF951A8B878B25AD1786696A7A3DC4DBE0EFBB
81D6D9BD0B1A3FC4F4507873F7B6736C901EB1FA4709139386BD237F77EA23626ABDAFB0F99E
2E6C5582E3F46F9E810653E63E5277207F901CC47780F981545E8552A319C971E98BEDA1B6D3
B6620893DBB5E35E3B9793EFDC917410F420D5977F2667F6A20581FACB9782F77754CFF68E1D
026EE55738CEB094B2FCF4A56C27C36A91A245897FBEDA34197BC61DC8B1A390A312E20B31A7
5282E82C9E73211954CB024E2DDC81DA28F340F8F25827C65646C1C940CEAFBEDB5B572AA190
3AC3D9716AEE3015CB09BC2F0C2114C842779B548D0A571DCDAB95635E1DE43BB372209C850F
7831436D98744D293984CF880E9892434B9CEDE4823B76978853D41889D815ACD1E0795296AF
3F1A3C10CB20DD1BE4F771756F604CEEADFCC091A39BA398B920B5B5D13C240DAB6D91FDF993
7D3123BC3321147226679617339066FC8C4F948986114E2B4C98D7A8B09B4AE05E0627A3F52D
1D89A18329CBABA8D571060C4A515706229A48EB35730A89BD527A34BF2116C1B72EBC0905D6
0AEA23D2E1417BFA09D8F66519193A35E47EFDD11EEDFB31D39F1556E82E5E3169D9342C2ABB
597FFCA432F14E249CA530D1136CB89D77005F9527B9CC2933A867032BA2065B83A868E60CA1
B5C16F7562F942ACAF8B8B79268AA5F0AF345352B2F6616F42CCC8462317E8B88271A6E631BC
EDAAA250AA42EAE85765843CB73CC6EE4B2AC6548901C8E786AAB81FB6B9D0283AD5C6D86022
4D7A91712756EEDF978F02A67708EF41BD14D8D7F78E7BFB265720363C0EB446B7D7252A86E7
C3A6CA8C607D7F56328E1698FED8E8AA0D57AB0FCC970D10D3EF2646CDC8822676D73F3909D0
834B17B4BB37EE89A5F5D04AD1C994815C94D86B8FC800364801A1A297B54161E1F499F6A244
9DEFEDF14CCADB5307B0C6136E1CDCF09BF4FC1903C4B13B28C435ADF42DF2EB50863A67370F
8B2E27EE338F31C5053C22C3C03FC0D3203A62595054EB7217930BEA3C4048435C2611D8F18C
AFD925AEE6FAE744893046F233A0F99927AEFD0FB49CE31FEF550AE3AFC5D1BC28DFF150474E
63E8E3AD4B565B26A28106494220E8AD3A9D8C96E445F3FD6CF5ACEBA10D51C2C30B5A1DC73A
5F4F5C54393D0BC2EB50CC845F90941B6236DDCFC50BA7F216E99D920AD65F6D8245B1E08498
3593F06A433EDEBEBE8CB8B6FA7BA1D61EFD713D01D2D93972624DB759620B4DA3BD18A3F032
DFB948D0D76F5FF11ED42AE6BF1C0E60C5342AA3EA3A50DCA1B84CF4A71D03B14CC663A06AB9
FAD87264C1D323D21FA110B36BE4427EF65AECE7A53B9689E900D8EC9F4167C4ADB720E5B787
78E88701FC2A06D71422DB3798A44DFD426B620F01892DE1D3119002F564A7DC6C1AEBC6054E
FDB5534C33C9BB0069805735098FC987E6BB018ED300AC85DA22DE061EAF36174AEBB3879D3C
6C2F3BB4A38E2A3844F825A2A202DEC2D80DC82EC9B63F361D265F3AC33450C136550E4349AF
0714AFD46143B62BD60BC6AE3AA3220AC0AD7F092A0CA00553DD40EE2F44A853C756F1BD7853
372B9155A1C992B4F95404487612314CE6B704ED1B93D295258D665B2B9EFF886880678CF7EF
ACA165FEB6C69A4022B85327B3C0BD6CF1940D53B7A141B99EFA005CC5BBD42DC9273D67E589
DE38FF0D9BC190317E92308004280EC6CA01F67FA2C4750C7DF0D1625728209CB0802465FCAF
F2C6E19C61EF4CFC2748BAE865820D3A1AB0F52834DE5CAC873FD371A8C6E429DFAF3D754D55
2A1F7D2C479D2003311347E1E6A1D813726D47222F1F1F4A6F211199CCC1CB9A09BAD3431FFA
087724AD0C2059BAFDE4461ADA12770A933090BFAF0FD1AD9D4B7C85ED09A3DD6F1976168518
0E6FD5B0D832C47D7607207522E07CA5DA3AD266FB5CF0A39CACBEB4E7CC57F76ABEFDDD2FD2
66EF1A47E713166AA497A1EC184EA51D015D0745F97E507750963D6FFF747EC4F22078361EB0
B667C2AC17638689E052E1DF51C1305448850F2F44C53A77816B1A1AF9EC35EB48FE5B5386FE
7458F9E981C9B014B16F02D1311791772DCC0285747C1AE3D46EAC3E70AEFB7C0E90CF4FDF3D
B2DF698A188D4733EC28B0A88FBD1ED47BB61B0D0CAFD61FD02A965EA56358BA8C654176724F
A7871DC0EFF4E91F9C579CBBDEDCEE0E9AACC3DD7B8296571F9CEEF41A5C4AB344688AA8F789
083845C95BA206CC0BF41098F23050FD4A9292CEE158A98D06A64E4C73732EFA4037417BD787
A7F2914F02A2C664DDEB73E854FAA7A13062F4CC40CFF8D0430B3D7A5D30E38A32473DDD6D0E
C9EFA23485A77859B2E2F04A18577341813F9151A9C9BD39F46E7FBF2C430060824D13F79652
E9E7FEB6A9B2F7871BBDE79885A1D382F7C17395900697B7DDAA9296B145A50D5D94599C82A4
0C1EA990534FE9A501C520E6A439641AD2FAE3C91EA148D97A1975675E59EA6936BC2359054C
F7811C28EE56A0ADCA2012D88A23BADD3D5A939D907AE9366C555CD23CA9E17E83D876975527
C259CDCC0E98F1E800F2A231E28974C1C2B6FDD1AF8C250DE524B0DB557FC2B2D22CB0949E46
C7C03AFC94F3CA1E14B4AB034FCB87EECA3ECF1BE9D7A11F959E4EB2E69675D70335A0C81998
1ADE32184B588875786F8CD504580EB54AAD9FC2C7E2E97D47AF0DE112ED63A1E3F180D9CE9F
AC361CF837D7CE8FE974543C8C75D79E1130FCC8163DEAB3C0EB3F33E325A58DF2EB986FA28B
65FE95AF5C8DA0F10A320431D2A09007CF93318F773BD2E03C04E10B846A31F1E12CC1914373
2487FB99FD03542F3C2A687B97F3500BAC3CCB0E4519AA8BF5AE614F80EBC459860164726028
57BDF6F216A35F865F89D9637F5570ED23271C6EA15EF1F6C03B58E408C1C3F22F1310BBD78F
098C287E439270B8DBA7D8EDA10C8E5F214C06D1533B042960F95A61987000720C7AF8709069
A38D57D7397F61C4D10729BB0C6132280AF3F1B5D428EB3EBE9171AD974DB9761F01D8146E49
482C427A548E1D7682D114C12334F854B002E8B59D700150812547F909FE58C573ECF991DE18
EFDFBE7F310B3485B9D8333F43AE82A713B8CCED62A9D1246BBEEFEACE8074DE3C7E0E88AF67
3940A571A95C136265BE83107B220E2F28042CD3A8FB2E47D7629B88610FB13D3330B60202BC
78659D7176A2ECC891E8E1B97C1C76D61495967069DB9C8E42A51BF27E395AF528BF0A275075
4E94849789D7A54EF3C952018CA57339F27FA57796495E07F1D51730D156D89F7E33C959A71C
DF27BD38F57008961BB37C0E1D742CF754B6965D398C0CF1D18F0C917584B3332859D9310B0A
DCF92344E1E28D45D75FBAAF45FE16D7BD557FE6754F08208B103CBD3A32874BB3BE0BE8AC08
4480B088301D8F1DE7C8290F36A2BBA637A6BB8D67617C919E97874A3E12751D8F5301598405
DE7193FA45D0302F11E5F560F33CE41DB692ECEC32C4EEBF45512B979866BAE5B75C70C8251C
493B4A660572955BE825D760372DCC6ED8B3912C2E3DC097464C9B5E142453C38C30C034413D
771DB050DC1BE2F87A9D2E26D19B987E8417581085459FE250BB1CF3A710D9748B680C44EB89
2A38B9236C5FBF886CCE93468C881494DA206A4C1DC4EC5977BD49B1528F2CFD558F6AD08833
CFDF249BF7773D96FB08C859C375B588D52F52C8FF9C3B851D667DAA37EE66586DD0F42478F5
38FAACA250DB56510625BA56359A8B6796CCB3BC77F1F76385CBE7658AE83374D47938A2689F
DB93FE288C858EE4AA180EE9ACA639EB51EF276F08D3F555080565DD8A5C4AFE3E18777682F1
DE61993055BE7CCDCF7F2C7FFAED8D5A1EAEAEB4023562715D35F296CD10C36F9ECE689CADEB
5A2EBB37579C65285FBA62BAE5EF2DF59A20F41D6D939466E1C59855FFA0847AE8C9596E7231
C4ADBA2DB549801B9928AF730C4A10CEBD0493F6D75AE52A7D3A1CE194E884B72C907B902A8D
87FAFF2F602092FEA1D382439AF172F4D03E6D423ED4CE82A2DA91F934073763A9464E684772
7A3C29AE3A3291716B8E9BF4FCCD8EDF4E55D6B9013CEF8B9B05C002E768C95F46B765917375
0BC1AC014994DDDA3C7D9E8858C47E8812C9B7FEB03B9B300092EEBF6B7A5277EE4C647303DE
D7D8D6C54FCF50BECDFB11DECD1AB61040F6E56C14FFAD0678089D6BCA1B5EBB9D3FF09A6C0E
4EDF2498DD3D4107B38371F2E4C3B4E5F3B7B2AC0F915A89AB9E9F914BAE9A26FE2BC651475E
DB150A73EBDBEB0D25F696968227F3240F42119ABBD26241FD28D7EBA7920AB7BD1D356D4169
5D5EC0C190E2E2501A70BAC09568870873A47919763D15E0E63FE87BA15DD3640DD779B56CDD
FD0C9F4D9928B0D4CC92D24A56E562AD9908E17BF233385EA0779F8E6C3DA7A7D1518F1B582C
BB6A9B4C59A8733A80893151973EA9BDE8FBC5483B9FA1132E7AD90DA426AB0F671250EC961E
21FBA123FCDE8DE174F2B172A5E2791F43EB02FE8BC731550400E723DB997A33AE7CEDE842FF
A3D4F05FD46747178EBF84494401754977B303B52C713112F5D9CA1DFDC6919292126E5B8C6E
1391D988383EB3FB151526C2C9834707F651F967B7FEF4EBB2B4C1D31546F56D619E9F1B3C5C
5518D06EC55CA8111B0C30F3622946864B70ED98F3EEC10F5609933169BC1E5A0D888FA2E326
D1C2126217AEDC146D9A0BDF66C49523AB4124848D5FF29F3F76FAE770524E5197B2CDD255A5
07566E31E2FA1533A55F426F9E805E8A1DF7E1344716BE464CA7CB315F1A88D254AD0EAF6C58
196C0A02EC8E5C6E6BC7DE8A1C2A2E8C397BF1CB1E42444997E2453D8DE7A79848A98B20F4C3
ECD7CC083DC3415DFCD9CDBAFD97671DA2D244C4ADB7BFDBB7E9C5D2AC0009D17A090C284CC4
05CD59399BD4CF94BAABD9FC0E14A85466135FB1ED17080DA3D4C895284FCD7B908F293E2AD5
76EF26774FA24EF57D89A2CD5310479E36E33C5B9E6DB2C2FB5C0510E4FE9A0508AB7A7769CB
50124CF609BA47E05879931D838FC9BBE7C08E3C4682773A7EEC3D2932B8BC5D6746B0D4D46D
5BCCCCB5CDDBD75BCC5E5F306F568BD2D4DE809046CB77D0061FAF97C170BAEE6F153D1F045A
75E9126DC4F6E5E525190CF860D69405DEB535662310A20395EDA1C026AB2C918CB56935D4E9
26EFFD4573EF67A66DFD93862FB0733DE72BA2D0AA48117BE3CA76682602C7AB142245A647DE
147D8A57AFD97B5475FD13A4E765D00DD60DC9AD322C6C54DC1DBAA8F8DE600D7AAA3C48131E
7FEECD744CC532576B62DA2ED0E7E81F08E17E5DB3768AB76F53061996C64225E6ABFAB54EF5
7166EA5A078A786853B601D9290DD3ED270C35DF866A71CA5D4AD43A15A4A9DDE12B3B48E51B
0C78BE950F4268B34AE72477CD9DF89D9860B013DB8B690B64F2C71F27CDF3ADC7C6CBDD314E
2CBD3052C80C6B146DDACF17C7BC939D5C9204A43947B4C5468A9CD6B63E7E9498978077687F
195B2E14F2E069A499AEB365D90F6A176271BC97DE026CFC5601702C4FA958518D6A55F891B8
2E416B619533195E0E1D15A6F8DEB9EBEFF1CFD84C954E6AD74EE2D802DAC4220B35056327B3
D016AA07B35034DCBA93D96FD59783AA1D5508627AE138744C0912DE822184213776F3AAF02C
8C6F6A2C8D7B9FD865F6ACEBEEAA082F9D18A3A08BA38B851B4E66B52E2D94189CA460B3DACB
FE9C1CEFDEF52B6873D36900A76F82127869DBBE4D5149AC9D6CA0B593C3B5D40FA439EF78F8
2C7EC7C7BEE3676732805A4DD915E6986585790626DE31A41D66D1DB95DC4B53B254D452F758
4DE5B750131A954629694A0BA3DC669B88967F61ECFA09653D2665BFBD2460E8A12C7D509FED
FB0F61AB29BD66A76A5633F21A8A9800187A2B0F89975837D421D3E539FD0EFB39E30D4B2A62
343B8F599544937613DB1AC5F9AEFE33E7255D9BD6777731A42A6EAD1BCD05FFB0A30E870A50
D72B7E1AF90B9DA6CA9A7F01604704E8573D5E28C01DBC605F171A79553DB4897F3E1A1923EE
76703C93B67D968812CC47C15FFD8E7E6E6A1F7EC3A1B0779AB9CCAA94040C280A3AD56E86E3
76986E0B1DF20C872F702BBA10324BA72B58203F865CC6C84537AC97DCB20725312D4CFD12A9
7F557CF42C7CF9089EE60A661D50311EECFEAF15888F3079622EE5F7B01C2EFFBC917A809428
1B33D03A3924C062CE4193872D4C30E95191A901E0A7FC61608A190610DC13FEB8039934A2AF
DCEE59AB615551A45E312AD0D84CB99EFD6EB8603DD19C75E12C9EFDB5D770FF27048EDA35A7
C9DD0D18ADE1BC87086EBD584463A80C397C184299DD23C93E61A6FDFC5013233D50E1DA581F
BD9955DE2FC2F431C366C51F5CA7F46D08BC6DDA5395720AB78BC765F27E8FEC9ED7DCE7589E
B31EE237FF9D6CEEE5278F592205C209BDEFA3D6860F52317DA5EC629F70069E24083CAB894E
EC5CD3310E1D568EE391A045DC8CA11994773B7373D189CE66653EBADAC714E6DBE72606B9ED
930442C8C68EEBF444724E01506D87B44E010C3973736F3C9BBEA07E97337C0EE4D9FC2A4656
D3C2DD059D73A178390F2551BB8B293A22B47333DF03B52269CD6B0EC08063FA9409229A4FBA
EC048C89D75CDD365A3F069B7883506212C2E0EB035928BABAECB5524315BC723822813826F2
4A349646262ACCF16A7D54E9A5586C0625B4F952174A6270D05CDAA5F791EE0C5AA5C138AB97
22A7ADF729F45D12CE352CEA568A8BB15E87C886E0851572A41C9622BEC6406768EA666F7F5F
33031CF6291D04B501A1EA68E54420DE675D073F41529100941EDDF1DBF66B453A4827DE4217
0A76B431892A2605D292A0E9E5136C346B2B0D1CB6A8626A92AECFF04A55B0290E8FC230DC35
65A189853FEBD77AAC5E32F95C61689AF2D0B53E1A44336BBCFAA0EAF647348A885A8C7020FE
72F56DF749767FED6534E9B41E84D0D84D0E0B99B7898AB7AD380A814EBB96A4FC4378DD1367
D1FCA5F65960E59D6BA4D6249A1E20F3E691CAC0388E873654BD821635C538B6609912627D1E
4CE993D39957191D489BED9C39DC3F9DD5A09DB1DFE2D2415BD50E347E6B3AAE64A9496579FE
2A6A6B8EFD4679FB2FC24868831AAD2D6A65BB5D731DF9B8BA59436DE423E17363D9D8277504
BB558B7F30CE9D61F3A881A5B82CFBE810CC2D0B86A2B9144D6EF1109ED1B6681DF81DA27F27
3D517B4F35C0A350BBE586781C6324F67EC7E70E790E95E72F7A7C3848B73037A17DE662151B
06178161374FF7093B0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndProcSet
%%BeginProcSet: cmti10.pfb 0 0
%!PS-AdobeFont-1.0: CMTI10 003.002
%%Title: CMTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright:  (<http://www.ams.org>), with Reserved Font Name CMTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments

FontDirectory/CMTI10 known{/CMTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000828 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI10 def
/FontBBox {-35 -250 1124 750 }readonly def
/UniqueID 5000828 def
/PaintType 0 def
/FontInfo 9 dict dup begin
 /version (003.002) readonly def
 /Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI10.) readonly def
 /FullName (CMTI10) readonly def
 /FamilyName (Computer Modern) readonly def
 /Weight (Medium) readonly def
 /ItalicAngle -14.04 def
 /isFixedPitch false def
 /UnderlinePosition -100 def
 /UnderlineThickness 50 def
end readonly def
/Encoding 256 array
 0 1 255 { 1 index exch /.notdef put} for
dup 0 /Gamma put
dup 1 /Delta put
dup 2 /Theta put
dup 3 /Lambda put
dup 4 /Xi put
dup 5 /Pi put
dup 6 /Sigma put
dup 7 /Upsilon put
dup 8 /Phi put
dup 9 /Psi put
dup 10 /Omega put
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 15 /ffl put
dup 16 /dotlessi put
dup 17 /dotlessj put
dup 18 /grave put
dup 19 /acute put
dup 20 /caron put
dup 21 /breve put
dup 22 /macron put
dup 23 /ring put
dup 24 /cedilla put
dup 25 /germandbls put
dup 26 /ae put
dup 27 /oe put
dup 28 /oslash put
dup 29 /AE put
dup 30 /OE put
dup 31 /Oslash put
dup 32 /suppress put
dup 33 /exclam put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 36 /sterling put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /exclamdown put
dup 61 /equal put
dup 62 /questiondown put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 94 /circumflex put
dup 95 /dotaccent put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 125 /hungarumlaut put
dup 126 /tilde put
dup 127 /dieresis put
dup 128 /suppress put
dup 160 /space put
dup 161 /Gamma put
dup 162 /Delta put
dup 163 /Theta put
dup 164 /Lambda put
dup 165 /Xi put
dup 166 /Pi put
dup 167 /Sigma put
dup 168 /Upsilon put
dup 169 /Phi put
dup 170 /Psi put
dup 171 /sfthyphen put
dup 172 /nbspace put
dup 173 /Omega put
dup 174 /ff put
dup 175 /fi put
dup 176 /fl put
dup 177 /ffi put
dup 178 /ffl put
dup 179 /dotlessi put
dup 180 /dotlessj put
dup 181 /grave put
dup 182 /acute put
dup 183 /caron put
dup 184 /breve put
dup 185 /macron put
dup 186 /ring put
dup 187 /cedilla put
dup 188 /germandbls put
dup 189 /ae put
dup 190 /oe put
dup 191 /oslash put
dup 192 /AE put
dup 193 /OE put
dup 194 /Oslash put
dup 195 /suppress put
dup 196 /dieresis put
readonly def
currentdict end
currentfile eexec

D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E75182433CF9F3
33A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C998B3A16D9B4BC056662E32C7C
D0123DFAEB734C7532E64BBFBF5A60336E646716EFB852C877F440D329172C71F1E5D59CE947
3C26B8AEF7AD68EF0727B6EC2E0C02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE49
2473F240CEED931D46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2
361A4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5FD29DA32D34C95E2AB2ADB3
F60EEB0600C8ADE15A2380DE10AC5AAD585FBD13097B1A7E8E210D4AEE96785449E07F0C8EBC
2EC5EFBFD0897DFDC15E5BFAC9584D8DE95C5AB288CD8AD8B9BEF0B8E5F887B3B0B331542FC8
184DCCB753DB6ACEEF98B85756B988DFCAF1AE0DBE7D37D5F44A2E760AAE3A5197C27B15E322
75A64946C3E4D0476FD27FDE148C788DD2106F7C825E270588AC05B57E625AB17BDD02306F9E
5FC851DC32A5A6EDC43C770A71419B2C0C8074EF3F222CA0C85189E00124A1B7720316E552E4
294C2869120EB0D07D23D24996E0551D8FB5E260D8953A9733C0B03F93A1B3E58F4A0D4F8B7E
AA87730D8EEE5766AF83F3B40B49E2BBD9CBC03D9EE5433D988DCFADB743571B2F06B63F46F1
0BA31D5081E7174D0070CDCFE3159456515B84BDBF16FAA53C52B287B5C81F64271FA91F0269
9F6DF84C3380BD3A844576F221DCDC42DE6500A75281D9E2532BF930D0B34329E7C0A641FDD3
BF42C30D715670BF1B7C2CE1E374D0A3CDBB8A88C34F66027C7C67F5896919FEE444B256B90F
81B7EFF02ED7F50C009AFCF611642AEDE54A4E866580884FA4F00E51C52E6FCE19C33C9391D0
2019BFB66FEB5E8FFD6469CD910CAF8B7D459450C969DBCD44650F8D19955F720C3EB5F3BBE4
16A31F68CFFDD53248475A4B243649B70C92B24F705C83B12809801314BC38B9C121906A34D7
6563C508681EB40A559405CE9097314ABB3E88146416C89339F4B5306A3B92E33474DABDADF1
6594F7FC0B1C7609675558ACE4B1E2692518F3157085B27FFE1353E3464381FF3BF6159901D2
F91E97EF01BBFE4BB89BD05C7EC074076348BCF10862DAE4F8DF81FECB735B8FC2BB8F85F0BB
4B0CB2BFCD6B54C9BFC5373B6B68947A733BB91E5145192632CB8BD531CD718838F43F60D495
7B001530E1C07E12C6A6BED3F3EFAC0B2BEC20F0FB1207045011860F77A9565D077D48D147A8
F93AFA1164F6ECD705D0F15DA6DA30477C5E9ECEB7193D2F3DBD19AEBFD60C0C068F774825B4
49102EFE563B3CD3A539A4556B9C27FD305DF0415526E6288E6071AD627B8343F1754C2EC616
54282F53EFEC03F3B2DA900EB6DDE03FBA04754842793D14A72CF44E42633FBC8F85102FC806
B6A42B0A0B13591065F7FB3E00E5340A2ABE7BEB4B0960F755A8E8325D87860B95EF2A3C96D7
79F865001922C8CD4D95CA3D337C18290FBCBAC64D1ACF316B1B4CAA72D9982CFDEAD19F4DFC
9FD3F9CF52D7EB7E33721F6609777929F419D19D711B96912C06ED0F00BBB1D768E9217F0EDF
3A47985CE90A934EB4863581400EB16D886A3E0E408FA22D203527515C3B667083CE10267D4A
4429C8618353439D2B1BDE2111E32504602BC7ADCFD01F9A552E84669D0129897A404198BD08
24B3380820331CD5C797AFF29350722080C6668BA599D7724CECD1F7DA8D8D9BA9A725CE594E
F5E3BBD8D5ACBB8AB91945357DF43810BAA50B05BF92A46152A52798AB86BA9D68C24D302EBD
06096D6C19EFCFFA1DF6FB1CC458D280141C7E73310C65C99D6FCDF9C353F54A94CB714E58B4
388431B541DD7643D8045F8EA208B129481F04E578310B07892ADFD4A7F2E9A8100E3C6FC196
09FC890D48D5A377096D1E86A73EEB059F1AF4BCAEC7FC7FEA4F52AE9538D76FCFEAE9C0F815
6A300CE2690819916884CFBA8416674CD9A65997DD387EF107F6E3827FE310F6C25B2B881EB6
2F398E59DED94C39E96190754F2CB5706BDB1F7D5B212A316F879C00D228B388159BDEA4E44A
FA088300368A981E74CF9F16EB97AB72AAC0607E7B77DD79614DECD114760E0FB30EAB66E81D
911A89EB161B54995BD7A6AE8780C623DDC0E201A1092187DD4130BB4B4FCA6518BC402E8110
A0A60E2BB2A60CB21533FF9D15518A9E936A7BCBDDB0D2815C5FA45EC3DA4B9544C71770927F
FF5DF8A03D2D00EA8CB39E4E1EC13DD0C18A0AA2AEA52ABE75C75C5F99FD0D94B6E79252CE58
10112341A971D36890555F0A2B9C8089E83197CC1498867545FEA2CD44046BA1CA0D41FFEF42
0C9C430BAEF2250FE972EA92271315FBA487CE124D12E2CD4FF47F0A64875CACFAECFD95E402
EEB7BB115DD842374A7C68CA03BEBAC13BD2F80B5D355AB2801D85A83201D3308D1A2E946309
AEC005F2747AF78EB72EDA244180FF0C427D9556C3A11524219A308EA611E6D01B06A97AE716
1EE65409B5666EF75907BB69CCEB5A388DBB641DFF83ACF4FFA64E68080671DB083F4FAA6436
81C9FEA5F953A2EC4FB04D024B2A99974E1140B07DF4CC9BB22B6C39C194971A08772114956E
5574172A47BD2195ED69FC17170CFE6E86158A9071975E5B434A9FD66646067E971BE01344E5
CE9A4006CFB7B7671D2A5E3A18A247D6D0C004DADD776BAB77F0BE89704BDDC9F646A296B842
7CA3DB5E68EAD351F5403B27BAD905552C772CDBA4D0401AE3CAC625802B7C7DE7E389ACEBD5
054999273B27CB6634809AF0CCE3CCE956FBA42F38AB630BF6D165B5DCCFE2E6461E61600F1C
AC5E42153FB847EE921CD1A4CB28DB9D73435329707D8D9B414C9205DB52807560FAC3B9DDEB
1EE1F684087697265E152A30E9B351351134DCB380362BDD0B766D81A9F88369CCECC9135C74
B7D609E019ACE113B0D8970709DCF64E24EA432FD40B9DE460C4C2AE554F274FB906185D9EC1
B7B29D615E5F027DC991F5B11302E5915ED6AEF640CEFDC0E9FB76DBE6E08633B539AF6C244B
BE6E1C5010A7CBF2524CF294A6BF8837FCD087337F0D7660A44890AC049A0CE670353D9242EA
0C5D3E0C71FCECD5D2FD831FA3A0F5D753A51093839724A18CE92B621D85AB702D54247B96DB
2C689E973F37328F7A9B9A12B2932678C67082A093572A9FE5A4633A2C9865FD79F983D46BD1
DDF639A04B3D1EA10FED5E7CB216912BDE884222B848012DD702A231480A76A40A70E40DC81E
0E5EB09D72D981B9AFCE286CC06A8D8F46462F5D6FBBF167BD30CB5861220543589C18AE3AD8
15922D8F7076513CE5046128510EE4F99B1A106C0818A61D0B3C943D83C76E7820058463BF60
60A138723C6B67444F47063D683E0216139B44E7EB06787D616AB42EE32DBEC99BD68E689341
A7888CA2F42E7B7AA947534C12A0215794C66DEEE2CCF1075CBD52B980EE574842499B805F55
D9CC9EF0064EA14B18BF8AF53BC5464B6F7BF0A495197DEB8DB4F5B643B5485C1B5B6BB6FEA2
9224C3332C43753A3DA3729635E0B7FCB4C85909297F686C9223FD7235F0704D89163A458B73
9B9C20D80EF252A993A87D4F292EC66DFDAAE4A07222528E237435648D214212E182D6B2DDD9
EAD29826F4B4BE58320CD3B32150E11E63EA223DCBA938D1EB12A0280399290C5FFB6C4FCBE2
F800E6B9DDDC577031529E1898333ED0D90811304123166F7C1BA06B32F88DAC1E7D3E53857A
41C2C5D12F2D4377B5DF684376E2DCDCFB104B106FA2E6E7F89E33AA0B7CD5895A77A500C277
06BC5A36EC3E1583F4329EAA62FB1E31241C23887BADAE87CF1DFC662CCBF3962FDAB192CD21
4FC3F3FFDF1F801EF05C8CD6E3915D73657095AF4A4C9D99F8DD341E747F578DAFC901A2C197
473F3FB46DC7105FFDAACCA189D156012F3094C8086DE84BF4E4B38F0F6D47977A9084BB46B8
1A10BC915B0072DECD73086F51FE9ADFD0602D9DAE27C18D7BF13D5B83A74B0EF0D1485C1605
3A1D486FFE5A119B33B1934BCD1F144C493490766A486CEDD9F967F2CE615050D2B15975C6E2
F46DCFEC5CF18BE018FE0F0E5CA54387546AC0A4F18B9E7F1755452E923A6764F55AC45A0C6A
9245B2F6DDBCDB264BCE3AA1BCD0F87D419B58E0D0ADDFA686D194D7D0AD17BBB1ED197CC394
749EDEE5B425E130FC365A04863D8421E9A0551FFFC756F245E3317DEE104E7F583268F6D328
0ADF8AF2C7C77FA5E33945C566BE78B83C1157D364BF36C44E6A5703ACF18C015AFCA58A7C0C
C53E1BE47C3AD30FA02B906B33656EB94E08CE874EBBA7B4260821F37CCD038DCCC77266F77D
A288DAA319934B53AFE322128BF9B1C1D867A6BF5615C44DE30F9E6982E952CEC9B96402656B
C23A44EAC170A3CBDF83A87FF2842992D95F87635BCAC213D7A2B1CF178D6E02C333C87D5D44
EA3EF74A3F7140ABB1F5C3F94DEF7EF4A3BCF9B86ADF434571FDE68B7CCAC85D2220AF28B930
B2A69DF0A67E2E6E6C61F2D3494960E7B4E5890F966AA10DF624FF0639F9E84ADEBE2BA33AB4
C45CE826E10CED96174C40EAC97DAE442674240CEC2CACE5E43E7213EF104481C9C0C53F1B45
F86678D982D5DCA7C6551CC011F7FDB9C6FE359C7788047CFE721669B895232D1CB1BB6E25B3
3E39CEC35CBD4318800269431B411947D729C6DB2D1DF6A48F961706360D87A6FDEB7BAAB561
3279723975120CD323AD04985EF70428530CE3B8C1D35ECC4582B1123EDE1A6CE7004CB4D975
B1752D9E58457F53B3EEE8C92A45E9391C9BA329D9979AF675F16035FB1EEBDF785E8E7CDFE4
E2DBE179228EDBBEA08FF32CC9BD232C0E13873579B3CFB62F87DAA95A8B22D103512383EFED
B44B2A4C3AA763138FCD286A3498553458B32BCDFEC200FC04C6313EA28A1F0FF3D279D4D6C2
BC01BB87AA15248CF395FB79C81D6D32840C86576E28FB29A1E77E56A3534466B1F2EBE04161
22355E196AF772E2219B4C81AAAA316B9D9FF9872C6809BBEEE566F51B6EF547CEBF6E2C0437
F83BF1995570CB81692F910FB8E1B2B30FD3AF9A178730AF20C0B67258E9FFCAE3971C4E459F
02069872AFE3E9B78ABF9A73F2F15CF8DCFBB5221650EA40BC97C2A8C032BA3B6528C595C145
634C5CA56D36B85024D76D2C33EB845241F8159BB4FA6765982FA3361F8454A4A58825C06DCC
5A811248CCE85D96421096CB5B4CD75A471EF188C97C84BE3AEF3E3E4BE5D7F3A8E7B2C67917
B44E03064D768C9D3BEDB63134A9E24F57EA93702C022BFE0EDE6F47BF83ADA82ED06A574CDB
318CB5E4B8097EF8DDAF4B63F960943B9BA091B905BB3CFAFF264FD5EE13E0B1FAB6160DE054
8A8C3FADB7129CB2099D6885418DA2E469492DF407C0FC4B511824EBC0EE2CF1BD97A4754433
56482492DA5B8C7936E0EF1B79082C431E862A1FBD8319BC8FC0654FD37FC4F5E46F85518184
FA4DE3FFFDD06785A92D692FD28E590D46CF042FFBD8043F59E01A37D280AA8685DE00767821
902722BAADF2E396841938CD394C3F894B1510AA78CA31CA543B812AC5317A0918A96C9F6973
08305F62B8D38A75A5B863F07E409EBDF09A4257B82046DB43BE89F08053713B0E031E104221
42BEF6CA28A6FF19B7C1B18306E8B025E05D71890A0E435A55ACC8B2305C6376EE0B877317B4
2B00D6D16A69BFBBEC45D945B593C974D0B1E5C853C6CDAC81D42DB0209DE9BE4F34EFB5A40F
B2D37493BB90B31D0281860EF0D64C8000205AF8620518A1B3253FD1590B4A2FD063C19258AA
3F83052FA2B7BA015D717E68D03D9D1C2B24944A77DF5B7D5FCE7FC9FEAEFB5D83EA87E9C6FC
BA9DBA66B5556033C9DAE176CCE5BC22AA47C5FA4ACAB21B60350DD94AE5BB86547A718FB30A
2B453A9752815DE6A2EEF37EE5BEE37E19F3FD4B9BB18BF4557D9941734B3F0AEAE91FD67AD3
02A268F4A309B289EC9C8D8DA636588F8EB0D2ED20B4C715322EE89BEC8248D1D4D4D0246432
92B78FED99E85C56709F00FDEB16B0ACA0BDC65B79BA7D681916360B98AE21FD05EFD73404B1
20D87CB4281B95B251A9607A98E330849CCA6CE06A8A371339768DA2CEE4AD0DF1B6D5C10FB3
94472B53409BE7007986B2D21367B390A460EB7CFA68267248EA2E8CD010B6D180132B13FBA6
5EF0C9CFC3BDB80EDF014B2B292F9D2208C76A4C65551FEB9996818788F4D05B13643A24562C
6BE7C241B9D853E59367E2424BBE6E466C7DE2DACC461E7661D3418F2AB426DBE3EBCF95F1CB
394CE67B7A5616D13F1B2F4E462F65F4A47D3FB0D0B0AD7D7B98C0003ADE8608459B65777245
5279AD82AC064CF7DF310A1A18DAF7CAE71B942AA41AB94E04AC3D2533473CD1ABC261077487
D4BD3C553F2F1DA719A97C4A22307216F716AEFDA32EC6859AFFDCF600276998CA098EE7622A
33FA26D590B22DA77BEBE55639EF5DBE3B9CD6A6BC9FE72AE61EB93D663BF8F0A67AAB954DD1
8E31A32C748CABAEF790B93194744FC46DF72E83CA7EEEF8D740E84A2B87503A69E512D4AB24
2FCE8D1DF18C2247449EBD0B43227B3366FEA583B985D7AF6F0B97A9F83AF0095D5225934BB8
0D2F31B3121029C22975116BA69B28A7569C027CB6049E61168B927E107051AE7D786E116389
6273DE91F3BF8D32C2EEF27D6AB0F056E52598B9510FF3874AE40E54F10BC5CA606B8F75C34A
CE5620A3DF527D02CB8249C0599DCE43E3153755EBEB697199C1FEB70EA2DE2DC40A5B09B28B
97A229D715DE6A0BB6F92BDA9C45A084CEFB2BFA5E7007AA6B3AB5BF8302ACE380C6EE33457B
F17B5C32B1B4B112CCBEE25807A9FDA26AE77CFD2C7494F1316F5C61215E87683412D6B96E59
4CBF9CC01EF33F6EEE31D48DF8DFDCA5DCC483E5F6DE896855DD7316809A81FE3A5A23E5DCA1
C7E5505A3E5BEDB3F94B8B71E7048A66F1C12F1C17A9BE5FCC66868E2D61DDA8CDD65330909F
C55E8B17EC056C2AD13B61F926CD7D091229E53ADF6A214187199C5FFDE58264D3258AE4E8A1
9053230442B5AD8834F01E1BC04B077BBA80D80285FCA17242B1ACE2FE5810D18507817B13AF
C43DEA5BE95ED4EDAC5C6C435D4C993DFA49DC9B0E7F9737462F011CFA7EC5655B572DD80E2F
CDE371441525748A5FE363EE0ABCEC86631BF36F8698920D4BD618CCB198C5AB11A8EB2CE755
97475AADADB12E7E26DC12029601E3BB5116DB81885543C1AB9E24B1C9B4B23D5D591B39002E
BB9C78B675FD915EC5E593612175ACC79D025AF583F4BCF5BBA761154F0514B639DF8C28A45D
344B5043B16B944D48FF9E1B93DC4FDEBA7EC68F39201B5127DB02AA1C1D51F8886C13F4DA53
2B86E7798AFE6C3A5C55B178A736808E73543C8659208FE0C2C721C4F86E5568604EAF88278A
78423143E51F382EE35ADCA6C51A94DF4B1F1627313BEEEB2F5ABBD0F680DED4206BBD8BEBE4
E0392FAEFCC6FBDED1D146B9134695002A34DCFC06FBCCDBBC7935DBAD5706ACE55C82AC16CA
3CB87F2D73B31799FF079E031D6EC25C6FC98EB2BCBC2629035B18C03B6FA63862D762B969B4
622EE9C41771723F69A3287BD57D2FC1859435AD30F30628B47D2EA315D85CB5E637A7A35136
9CE415C9006F57EEDDADAFE20A956D5826C8C9798F731A6C2BEF6B441871C6B331E2E522E7CD
81CC12A62B96840AE9F6E5A700939CE60EFB857764B5221C9BE8885FB29EE3533CA38E451401
012F192BD4E35631EF061D8CF212B9C85A82ADE8396008E5E0B85560506082D2B4761680CEC6
5F058E1BD85F870990C63E6797FCB8C86A8D3B7F779258FF6EC92B456A43513933422561B180
D8EA036E2498E85E34F70561F74E2FFA09D4487EF7882666D23AB4F4724A91DCE13761E92C7C
A2079B1EEE75B093266F540642EBA7AF48D8601248F0F14614231A2758309C5154BC20ED3F90
9057080A6F2FBD692F7438519AAAEEF72A357C0098265EDD8DCFAA7F25EC0DDF6B8AF6C71435
73ECFEE099B33FC49D8FCD97E1FFB7B8A50568334E34AF8970169E96B2912A1A4087B4058501
E965971287F491D04B5C6BA2C27E66E68A29DBD66CBA171D41C4E86E53E01D38D29092E07F12
A569BA7BA59C02066A0D4BDCF28BEDEDA81A4D02B9E4F4B05C48F39C270BDEC7F328A2D444E0
482BE5D0625A6CB06A2325928B5EB00A660D8835C4F50F6858CE32911F9592B816C7269ACFF9
6768D215C6F7BCFAE2C1A40FBC05240468DF458000AA7477BE9E9FA75186A45A6FAA91966BC3
8D29D62200209BC45F0E3BFBAF893926D11674C1813C23405DBD7F706A40F0BCD6C390AEC7B4
CB8F319BFE956E6F98AB8240F19466122A1C466DB51BCC4FE356D87E29E09A792E33194C478C
6A475D046D568991AFC0C35C03E715CA3153B295EA638D54CE432B9BD0C345B3D82A12B53E97
5EFEA333972193DBAD70CD5EE5369E6F41F1603EDF328DAA90E3B4AC9DE1B519BC01FD3767A3
877D8E688EC8025CCA9FF1E7B3A9E18999CF13A7EB8BA5AE501AEB4DD68AAF54830515CA5990
B5C3E8ECFB37E91F35CFD884D4B4A90F479AEB32B0C8300E5F32DE5ACF3EB0BFE52277419609
E689F1792467EF6CA6E3811AD9DFC2CC2CCBC23A4469FB8646FDE8A7796186D1738E60C074C6
C2B3DDF5810D69F2428045CD606EFA8D66F96C66079256AFE12FE5CF5A6FDE51972272E8F065
218BA88536F7C1820493B73D2C7D6C71A17B6F41CFD12EDC1686712B2469F5B1EA69F9E0E1A6
FF19F68EC655A195CC91711D12A4155EDDB628F9398858FD37F0B35A17C975B875A2AAE500AB
EF43563A79CC5F7ED4B329018E416878DDC2F7568E57FEBC06C27E2992991F8911FC35F368AA
E4200DFDFCD73F9997EECEB9C3F9B844FED5A901C80FEA324E7AB736538520EC2DEDB0FAE43F
E18A7E1B43265201F144197CFB60807C107CB2BC8CF2B73F370B12AB4215BE71A6869C42FCF4
42B2748B246881229CE2F044729C9627FE672FDAF7C55BDB0BD434B959C9517BECB6BFFE87E3
B4D7A2A7BC95D3435E23F7395871ADED257787D2099AD4737D88EB80AB69CD2260364701ED86
1E74ECEA5A8D3E4AA152E53F16F0A895A06F98742D85C3ECCF64BA27965D2B38A9EEE502A93B
0BFD0E16918EC3623DA8EDF984FEEE9633F7440EF211D375B09939598CE9808C2BB6B3BE5B62
FBBB317C07C8B595C0B2A908AAEE92D72C7369B1E20E0CD818EA9E1799B8CFBD1D162FED2B6D
9ABF878A6EFD56B82403833E5BD9BC2C57BCEA7F1AD728175472663A0B8615A2B317343D1CAD
703995E81CD6E425CA195445145D67D6997151C52741BF812CC81E922CF665F161B0E251CBE2
4C5A018231AD5943F29D8D1474E9EA34D55A9EEB4F6F0F7F24BC9EA91B74EC159D289E2AAB2E
10E8D8FCC801F4DA9F3CDB3B84665099AA896C8634704FD10DC9460D14489F243DA52D5985B7
502CF49390815783E712476DBE3061CD16B6ADF9E544549F2B675210E8A89141D46CCE0123B2
1C1B52EFFCAB878DBCE710915CA7748FFCBD3226F83D77174A7EB10E2384825E356D1CFAF286
E04ABE3DAFC835ADB2A39E3A42D63C1351AB56C62682DFD15BB3CF4F44637ED9DB8797D7C664
0ED9C66C7FED09C0EB1C4C691292D9D8B499A616EC76F59302291AA5D35B5D03B6CE39050BD6
198F13F6752484F5AD13AA48FC8D62143C5C9AC70324D28ACF5DE07C87C7C94F46DD5C1AEC04
27D5FA06B29FA25C1EF70B5B9BD5F4C43188A7FB8B95F51A406E2937617D922CE899AF1473ED
3D1BA708653BEC6F8A4D999C2C5AAD1D0BD32F9FBCCD717B8F8FC1D1413F647D905576F62534
F58D596E67963AF1AE5700F4D5968A98899EAD76A1D31DCB8A69BD4053A5E0A3C3356C5A1D64
A182C9F6171135278BED55DA97D44360ACCC65D123D82EDBCB843A0EA0E99E8AB406FB94F0F4
86252C2203C21A39B686F877FA44C412EEE52586C7F1F71050397AF1132B60FD124730863DD3
28D3DD0C225C4B9FE076E1C1F837B105D9B64BEB27F93A28FE1EF5BB52C369DD72296C85EF25
AF62BEDCD4DB77132F85251F0022D9C251BDF71BAD452C013665A2BFEF3E936CB8E140DED766
DE8096C7508A135C859A0A499FB007FD25E42DEE6359841860CBA2C7611963106AED4499B064
6D77845D4E76B8F11F125D6A7EEF960736D8D892B7F23A9EE3B835B252BED0469F3410190E28
09A77111DC009BBD191A4882ECA444849ABF999E98D913AB360919F4FE55CC05714F170AC2B4
60551176D6FD10DE5C6FAFA347B5F402D9745D05CD3DAF30C1539275A5FFB5AD97F0086135AE
5C1107D77349A0A3C5960271190D4599516636FA8A07B4746BE7FD23A6ECF17CB61C4BBBEE07
C711B0E724AFA0F51B8E2EDFD541AC9D848EF811B4AA5D1504379CDBEB1FB53A21A403C334BC
6CED1E8CFD7F274B0759E0DF7E1EBE5FAE101308D481838F4A035C83F516935404CBFAA190F4
2494A31213EC066D056ED1F6FBE1D76E59C398459359A39D7ECAEF11FA1E06D170357878EE33
D932FF5E2F8A269763245ECD947C3FC6683ED04216C8F432BBE770852E8A76A43D7E6764C0CB
72DCE26360F8C522793839EDCA3E009E9209C740D280A9A01EF6C15827A99B973D833C013531
A8CABACC1E30D0DFB9638E9D422E148B6B8C0CA3F74DF0CC941606C56C3B3F02FD2CB1618314
705CAC31783299A4E819C5BB66E09A4E5A4808EB264913F76A3B988D41D1A114387CE7F46CB0
912109796C1C7ED9D25AB8A52AA42A51586FBAA7C73CA8C3AB069556FBE34D8FE12FDD573C50
C10136F845EF8C54719B401C93C66D9860B6D4FA7E3B5E3C87203AE426DC5634ECBDA0E32A00
3CC51A681B5349D4AA9098A392830054AB48A5233C3560EC8070F7AC46A42A63DBAACBD071C3
70B7704CFB815F014F72C246D52A2C43F85E5FA2A612863E24640A767F2497918164113CD527
6C6CD7F3B16D8C3F893568C7DBAFAA690C12AB2BBB02207365C104D05C27941C58E4F50B911C
D84972B31AB0E0721BF6B1D1C8611FD30A74E0E166DBA4C409ED6483B1C36F9268DA1C469117
5FDF79478913B822A690148379281885D9F7ADE2F25A4EC01371F8C279D4D209102F4897EC27
EBA786DEA3D1CDBE74FD236F00353F70FC345F1D7ADFB9A7DCD96B348643292733DCAEDF98A1
67807A8EC6DA8BE7036B40C1FFD5EFA6680699FBA60CA6556B0473D8C5F5136558AC7236A130
C5BA39A80338E56D050737160A8527792D8B83C333E3CBEABB7A61A7AB585BD8267FB59879C9
E5F28B17782345789125D2AC1E7A5F959143FD8B83EC4918E3405205479FD951F2DA92ED6686
37233ADB6B02D9D694CECB035D84FCF19C3627AE73F7D7AABE70839A47ABF9F7DF911B1CC12A
4B916BEC18346F4388B132BB22A21314D120DA29220155081148EB3152A2A91B9DEE80885170
C6847C1684461F398830214F2B801F8729E827027A72DF83AE8CC4DD2E81C9C4D94B92EAADCC
196F5D7F12C35D287F2FE2D1B905A52F452DCC792D1AD1D03B4471E15985F0BA37D5BE700608
F64FFC75A93903D5894EE30F9C47879A1AC5675406D3976B1A614471F6B2F68C07E1D0657CA1
736557592DD09D42BD0D1F26EF8014F0EF26C26B27262B799F1A96026CBA60F8556191C8D7B6
FE924AEE61974EEA55E285DBC432E63B961FAF76CDF925781AF9CCB27BE310F37EF8E50927D9
6B1E7FD78689C85E00A5DDB50125FE7CD711C2FEA5B1C7CC0DC3118E7E7C6036D435A190EA4D
4C0049A479F4400C4AF7B45B7C24E2B6BEF0B5A173410F2AB0BD7F11F3D439F7631DC7BEA98B
5DA8BF6414393804ABBC4CF203ECBD7586B75A56291556B2B37B4A68120DDA56FC6EBA5C6043
AE98450D5CF6D722FAE520A689CE3A91AA3B34087DA93EFF211DFAA301D04C343EA3C02DEBEF
CA0422100FA9BEC30A42E8F2BB35B97788061DEEA3071584AB71F0D7DEB7AA6CF71727FF062B
AE3897485936CE459A95D768A606E7259D03AF4BDF1889F175421AE3757E47C861843A0545EC
0239DF07F6B0ED0BEEF38025739B71DF49486B23750C9BC1011DCE982260BA87F0DB9A1B2311
664799C49EB1A79848A9AAFAA618ACC4FF80F09A9834AFDBAAA179C1A84009407BE42065FD47
621565EE30E59BD1D461C97C1B7DBF8B647874023644341337AF09AD48393E5C7AF8BDC7218C
5E718E92B1D6F9D3238B4E8F2B21E68A063EFFBC487E2D0E0879542C48AFA9076712AA0F6A7C
8C8D15A171D38A604E02C348622C9C1DEC120F0F4FE350AEF7654530E79FEE964922F3E114A0
0C46A6BB59E0BB7649CF928F296699738D0F2D38E1A241F68C79519CE7503888388238664258
91FDB7B94FA6D3B47D2CD5D7F0456BD72A6FB40D3E6E1588D45981B8021B1880566BCC748DCB
4D59EDF88AFD8D7502906777E6AF4E3884A4FF1A5ED9ECD2A8C258B4007C077009E3658C6D3B
E99481270E4E7ED18F207CA24F92686E6B6953CB49AB9C42A3AA8CC95C9BA945921DFB3E08C9
F3E2D328F3102EC6D83A3D08E655C55FFFA707D37E4ADF58DF358C5F441C8FD45D7C44B97DC2
7E3C12DBDB89628C910371CAF0F9BAE5E66F64F98C8A87B092592AD8475763F6FC6CCEEF6C78
6F26F331CAFAFF6296893F40C18525B492353CAF332EE8645A24F622183EABD0EE1F5CF20717
0F19E0BE2300A00428BC668F10ABB93C96F954CDE1CF74D6494E45F1354F7CFAE18D78E000CA
62FA1A8F274BDB421C20CD5A1BDA570C7975192EC4AFC5AD1FAA28CA2FCF313258B53BD28A5F
29BB07776988DD391F9828631B65C7AD2F419DCCFC5E0C5772BCA82A74CFF5D369A5089463FA
B9DF0D5BE19BF255F835890F8C8520E3E5534DCD2F5DF818020FA68E1E60DC76BE824EE7852C
B2E260CC281104562D6E9A46864E7ED54E9B98E300347897BAE5BB16BA548ED2E087DD83DBED
95F86B554275ADF0ADF407331AFC0BE37E928B37542F51B63D5D564C0C6B1C942413C684A2F2
463727AAE2445F07F7DF9785FCD2C8ECB27D2C3C962118F9D7FA9AE59A54A6C07C1BA42C3D96
C53659FAF0D50A7D2BD6B9BDD2CF7FE26AA2220F5343462B38D009F70923B419986E69AF2C8C
DFC2E07152F5E6F50785987968CEAB66D2CF3C61D740BDAA58A3FE54B269D817C691CD76F6F2
A1D72E339FD1D8CE795FB70EA77AC6BB7B29DD48A64BCEC020E139B9EDBDB8C08839C6EDD739
8B1C6F19612D4CD95F9FD5272D8439E0100F2B0D11DEB0D50C0456D129767AE6C314CEE56372
DA56CAFF93C5894E2FD2FBC0E667C2A7A11B322F348F1C13FE019616FEA9C70A4F89B678FF7B
88A0725F5C6CC3D53FBD1DE6F6F2FEC54D301AA1F04997B81F706460209133D810305E89867D
E9503555C03BA79F05E00D3A3C22ABB3C889DAA31E5EC6B5E82E67F2C8531DA5C06CBA7CFE3B
175168F529CB45576551003347CD0734635C29C18EF77F953B6E20E0CCB90E1C7D521CE8E787
B23D12849B19CC736DDE324D410605B9DE63081FF1FC33B6F750F3A3E1CBC33EA8E2BEE2D0D1
5580136AA8BE16593C0FC3F14683FFF70A7C0CE5EAE2E1D0AF44ADA49D87A5829EC2505B8907
8F791FC1DCD12CDCD027F14BC4C811B32DB977484F98F91380ED65621976F1618812E27A1F2E
7B6DCEED4279281D3A0F24BFA0E13224AF79858E0A1DEBC35087044A2E7753F8BFA42612EA65
3321C8464070BB6559222CF3BACAFE5B1D618CE95C223AD9E03CB2414CEFFF27D8F9295BFFAC
9E752F59CE7F297DF17D607C12BF104BA775CCA2D894D8DBC8D8EEE525F9C8F1181051A634B8
764DC2C8EC7E08F4614A2E185E9CD6548CC2643B9EE92A264BEE36E6FDEBE577441530F5F0A4
FBC31B70AE686E041C4CED877F0C6423C98E8BF9F3B7603E45834699F96DB45B526CB7D1757C
2C135F65A2D2C6B81BDB91171DCCBA54503E50A33506FBC08B2BCC0EDCA35F414D2A92F84972
B38DF1A8CBCA7E513895B18A0F852ABF649A377E486B5D3E1FE753201DD234C331309A65A945
C7A76D01DC976270D58BEFEC5E365DC16DA9C927FA9088D25E8FDB825BDCDF8B88471546B8F9
CAA0BA6C36AC94D610779097B07216C4EC967E48B3A84C367F5FCA7EC45724D007493C13545B
EF47265C0E8F80A49A5750988F974135B565368FB8FD949F4FAABA24AF03963C0583B4DF1C73
E649ED7FF128E655B685A1E039E862425665193BE8B2698660103707141936F8510DA76DD50C
E835AE01DE5678722CEC41C301C209110A66301A33901E89A68CE106BBF62ED61F929AF6073D
E8CB35EB78BCF6D53D786167BDC8A48A92E6EBE65915597A5ACD2D3D7AD6D118CB9EFE368879
A81D301E889517CC7C40CE14CE77B61033067DCB2CC65761367A219E43267955D44AFB4096A4
5DAFA01D067B1B42FCD5A3C41248509470F98787AD97B4CB3271991E9E8DD86DEA5A850460D2
4CC54ACEBBD220C4ECFE5E17046E107DC68897D1513D6CDED959B11E36A1EDFF00D8A6F22A49
2784741360C17FE567F5CD434EFEB2742F256E49657F7EF3532ED45F1C57C1F8CA42DC6B1902
0E31ABD4012EFEAC36EBEDEC9F45B8B26C686F6506A4B14AC5DFD761B2A83E2038E8EEAD1927
07D2AC852EF652A2F057B1D1E6A7637573A2A278246B030863BB2A99B85B1A83055AB388D351
1AF6164F9D658DED38DF57F14AFFAFC6CA04C89369529743B8C6DF7CEC7A2504BB0975DE988A
061394665610EFBE330AE183BD3FB6EDF86A46F041C4FBF7B7FF3B75EE63BA5BAD0C466FAA5B
D5B1F61CEB464CB9366B8001453DFDF0E50BD0D3C795E373A122BCA7E3DB66FA79CC5682D0CE
2AEE77481AF7EB11C9259D7BA80EB3A1C3CA83A4C526C2E2BCD1F0C325E3BF6BCADD078B77E2
19A131CC7E1BCC9F016B8DF39E401EF48ACB49095EFA75F3205E5693E5C2C8E8D5C1AB057182
C5345B9E3BD7AB3DB595BF5B34EC8F307D1E389C5281B3E3611549687DB16B8A901DDE936CA0
32E2533C40FD144AEF9B7823E1617C660B19B2CDADAA9E5FC587E763BC785FC46B7BDBC28205
2A4388AD04A2F1EDCF03A797905974DAFA30371EFAF30F5143EFA515C5203F8794FF8628B39F
29FCF8DD58449E653EF4A1D04C057CD1C116718A5650E21111E25AF95994AF50EB99252E2384
D1E9F3AD016B2248A62D25D64A12564C83ED92B8E2F77CBD628452C3140257C9C703AB79AEDC
76B74E778F86799769038ACCF870EBEB43001ED56F5214397B81098264DE3DD676A5BD3F121C
8D281DBFC0AACF3F93C1E0150DC3BD168217EAC2FB06C90721015CA01445C1B643EAB308AE96
6EEDEE0AC2EE6608ECD89DEABA1166E6D11BDB6483497CCC75ED8D33C4EC815373A529CCBE24
96DFF93C5CD812A29DEDA6E467A9602E63A7B7089DA8AE4AE626A79AD9E97AA619236435035D
5DFD1B1127ECC3300BCF327D41DD63895881E2F23635F4C02062BFE8D3EAC6C38DB0EE447245
F7C5C002673D6DE64287BB7C9669D4C633B929AEA47FA91A7E828AF3A5A7DAA12E5A40549CFA
B7657A8F9184042CD4D09CC7079937C77D5BF8E8C3A79EA3B0CEEE1C3EDEA64049C4E4B77BEA
606A3E99B7DAA5C30B3FB58112F033A6894A176A53406D6249AAE1102CA591B26BF64B1DFA81
4481B1B6DACCA0FA8997768204DC2538A4DE58542046A0BCEBA5821BD8ED029C3FF29B938288
AC8A9EC2536FC31168466976674777BA68B143CBC6DAEA18B58184D56DEFCA7213FB7C60687F
4B00CC53029583C19FF799D476A53CD991C5A0DEAAF4EF15ED3F6462B7F602CAAEF97DB5EF55
C7C815B711BDA54E498D9F381E14D1B402D95F3559A324B2237E441A9BE73550AC380EBA36A1
236CB0D6280907707B88B0ACD0687CAEA2E629FA3EB7286DF794819D2835B321897282113581
1563849FA298298F93FE3958E447E63BAAE6B9D8EE9CFB3783C00CF2D9442D7017ECD191D64D
87B59D2120094FAA398C6A8ACF2E22C46F413E91242A9760E7666363B4E245DBFA8B5D61C609
84CDC745C4F280D7D432220F852274E4561057512EB48A8EEC9A4F4FBDEF39104B24ED658204
805295BA4FB95E994A21BA7A0792193F0F4BC3750E67ABABC1E150BE39B23DEC0D8052661CE7
7E55A168AB65434E0B98DB6BA4AFD6FC3E2B4435D0EB0590E3CBF3AA744649E4715012CC1118
07C75F6EF0D709C9ECCC034468A02B2FFEF89F911E57FA23CA810E26B5226D5A3FB65FA69767
EF1E2EC4BC00AD3170915A49EE0E35C7A320118D6B2FEAD6A5CBA7A8738F9382FFCBC14D50AB
189C1DC30E16C735B238136FE61ABFB82F4C336671F76A69E154F96E5D1D21078BEAA794A63D
E17359653A009E3BEA0B9E8181DA0461607E7C2AB6EB69A14311F86934A5D92422FC969FA045
4E350BB3DE273DC0C20F51B827709BE86E80534BDEED031906B7356B75B6DBAA9CCCA62966FB
0891AD166BD17019F4DD8CCB1DE2CBD0FF86BAA8177F928C722E59B84204C775970862BEBFD5
5B9DA7C57B8280A517D6B41C4EFDC9F4A6D9ECBF6B9ED813A45C75AA37A215135CEF3F109DD6
EFE2CC5EFFE657730A0FDA93506F2226CF1EFF07E768B9341B4897148A30108545097BDD54AC
A083C7633FED3FF5C692C5C177877295DBE000F723FCD21D71A2417C5836AFC609578A905BCF
DBC6528DF4E1579EA7046F24CC65FFDF3121A2A854B96992984A920AB5C62A43A5E991DE086B
AFEFA05591C4D254F0FD5C490CFC210C152F4C1A4B2F10D969A400A84DB80190E48759AF3384
A6433DC6F691097260B35189D43B9508B63E2F449EC2085919F537F06F4D8D111CC029F4F2B4
D86EDECD968616E17A83F0173EB7F5430B568CFC049753E83C107E033515DE2EF3148243CC2E
E62B0ACA2F33AA08FBF8DCB0046101C5C98DA10F1BBD7F62C5267EEA5925C310B853820204DE
CFD21B58ECFB4588B7AAD02F88BD6829CA656F066B441A8BFA11DB640D6C1420B47539B316EF
E33A4664AECA02B0B1B1DC9D7AD41839AA75AB617E4AC55E9019D693FA1FB7A0AB2991879361
61E67C10D8E43F5FFAFDF4DD49B9FF04CE569F3F435F51E77727598F7183A9FF1551F6768260
67FBBC46A81185D83216C5293599FA3EDD7C0819E2B64CD190A4AF30201CAB4D800E338FF59E
1F24E2DA77071C4F9B2076AF2774870CA2AD4A37EB307F1314E61AE6D1FA14CBD11139D17538
31A95E13712B783AD5609128517AA50F44F26B5AC0E2BFE8764748A137352DF258156F868828
17BC7E1966B52748522B034054B18F36DD6FF7CC928E3CF24EDE433E9147FC74ACF47AE26638
C67E5D99F02EE7F6525C93A0122BB79923CF759186AD70B13A0393B148B6E8B0378AC56F4BA3
FE36D0042D0262003E801EC560DD97F8BC51BEE9495E96ADAAEBD5EA6EB5E3830E7DA1287F75
69250681A31BCD83D3034DA694A5227C51523CBCB87CC041292C67A7B76053095E7015E7FE2F
904EDD0C5E14658829016A7AAEA7445DB103E1755E2461766981BFA83D99DFA903A44B62B7D9
26B8482B4196BD33CB324E6CFE428CAB2AB88E5813270EFFD9A3F4AC8027505DD4AD6A1F139B
00827EF6BA9166E61A315BD557D08F0562D1203E6247682C1E3B8089AA33952CD77531D3E9F9
675799D7CD9001824708DCA8CC5F663A5B116250EF90C3C48B3D3C72DD5E82C064BACAD6B402
984D039088B3E3B3DDB67A32257C85593E1855A427E9D2B369934A93241EB969602B952ECD56
1B1D3AFA7A9EE519EBA2C871A30FD61E80F89DE7A7B167937F100EB8D7E94DF6A4A26A9BD34A
9D8C9B9067372631305DCD987C50E6578A2D7E08F642B85E55EA8FCE8009D30DFED26DD7E165
CDF231FE8D5A7ED5000A2B3D7840EAE14F661D1B227EF9EC8E2FEF7FD0044772AC1C166B8B2A
B2042CE62FDFB5A3FCE1622D6842A2813C30C049C80389B0CEBCACE48F839C094FC1D2B4F3BC
D7B7DFFDFEA513A7E263D3E08FAF2BB910E59551235F57988F69D27E48B40A48A13FC76986F6
8FE1C699573A17B45E27C50234144CE0363B9A1D56DABD0537E3D078B1A0D1BC4B3B7D9A49E6
591B20301A2FE43FA5892373FBEAA1E1026A5A8AE2C5EA0EC3C100C68BD65FB9ED4071A4B96E
9705BA746086470D03531AA25708C3E9CAD94C494B2D46961D7CD4882F55258CABFFDBEC54BD
472B9613F8839669DBC5C6000CE3AEC03ED79015E7EA16B359B8F34BA9F530C71729A591ECBE
64AF7E51ED2136A8C96317EF90AA3AFA44A6E85F6532C2458279049A5A76C75FE5F6DCF9A3C3
CED684D0599BFA427E28C3C7FDBB1D77E132F4E7256E483288FB6FA48F6BCB42D400B4A0E949
E8DBBFAB9E5576A60A786CC0075CBB06C0EFD476845A738CC419B854B3DC32154EF9DE4E7532
06A08432B092486DB29FFA56DC7DB392EECF40731CD06F1F25312B41B12548679B1CE784652F
A9E29D2650275499E710F01BA2E80C80FF4D28B8CD79C818635CA66498445E31B761F921EC19
CEDC67169F0322FF01BC72A19A6204A2993F37B889DB2D551CAE97E494D43E5FDFB0E07F8C22
00892C029201A2B1B20403BDAAD1149CC321AB12CE6D47057BA104346118BEE5DDCC97701CB9
15099BF2DE3E81527ABFE42EAE7EAB046DE61591EDD3B7D75DA82ADE030C6F7F4B7CE7389C56
3DE255891D5372D2D63FE86403E2BFA06165780DC43CD71A15398BF5ED121E03F466A495805F
5E35A62FC97C205B334FBDF69BFCB1186E18EE61F3CCDD50BB17D64E0E36F9E63DD6693BF7AD
93092744F4713E1D694D57DBED512D024828F35A7A5497B418F30AB9856814A41776FCF0F23B
E4C53ADAA66C20DF278847E84A5644FCE7CD71CCD39511363515428245B68956DC0F8F35F77F
8337D62F040D616458DEC5FF37E19B9B4220F39441D8C391C0AF9325BC6B59A3B59E6C769987
E0ECED103F68141CF245A113ADCB7FB83946C6EDA2A2DED66BF5E9E2384DC95114B7399C5D60
9F2BFEA889BD9BE7BBD39A7AC8BD5CA2C4F2D04A39467270028383FFC0A5A5E2406C423AC158
BEA24614E13537E8265B44CA42984D0AC7E9362EEEFFC7E5316775C95EFF20638C57A755BACE
B00435EA4155D44213DEB1C418D08330E8CAE979D85475237F88E0316D8824606EEE497827B5
869E13649AE451F6A10988217990F8FD2FF9DC429C6F2140D5D6B33D8DC0EC957BC7648B5E8F
E5E71D8433B0EAA9CBCCCEE6E205435409589E1BA51FAE21C2405794F2C3B5DFF7A58E2F0AB9
7D142EF3D3E8F444905C9B2E2174C7D410EFF4710B64A40FC477348243E2B77EB63D540F39F8
13CECF4B2171BDC971CC212BB533CF6745011EE52AFE6AFBA008DEB709E7493813055505F59A
B9262F0D55F05714B6AA29A3E9F86A6F2A708CF595E9BB5DB19146113F6CB9593CA11764E1BE
EFE65D366C1E97B9B678B6918D74C738433720ECF3768E2FC7B83DCAC304AC3368C73183DECE
8A210EAB67996F25E89AC74861EC22193E112F2C1F5A6F90A4819B27327CCBD53B8F6CD2FCA2
AC59805490D455DF2A2B453799A7762AD30A6891EB11B7D63A8D976D86BC79D3A50DE80BF64D
98AAFE346EC12BA65A26CADDDD34B66BE4A98C6EF3E3805B29199BFCD1C4FF3CE485E1D39594
D88F25AF5D6ADB7A2BFEB4DB38E6BF5221CEDF250CC4C37D581DE855B278B0ADAA141A2ADCF1
B772C3C2E9607519DF48BF6251046CFFE938EA8A34B9AEFD289EA225AA2ED547ACA11D4A021F
206304CA64D37C8B87C4312DFF1864B264A350DB7BE87E46F63C75B18004113C7ECF6821DE7A
9B782932029F8A7D187441D206425E2DEA88032FBB8AF7E8E42888422B96F46731F963D4D222
E30F3B912732A25B39D2EDC787DE461696A90DC6AEEADF358AD96353091D0B9A141588D51AAD
C03DA76B9017AF884B837CC3011E3783936A702FF2D20FD32FA1999CB88E62A79364755361A6
32C7DA9D56DFAAC6274B0760DD50A9F99F80CA16AC32AF92F4ACD72FC57BF0B1332900E13D84
37269A292DB4D70D1F1C2872A753BFAAE6E30440418331F1E54CF5943E28F927EE9A45DC82E8
F4F9907AB8BD3DA2441BF45AEF0FBE4F3D2943F7C6765F9B4CA046FB1E278BA638D81110E8EA
E703B80DB99122C5D340C13856706D2BBD9C6ADDFC1359EC69B1C5B839BCDC752C262401E470
64468476EE1C886F6A5B00E8571BA541C2B39123E0C9F2F3A991BE356FB2BD9C22D14C37AA9E
ACFFB1D2E6A75FEAE7119DCDAE2B8742A0E691C43DA7FE12A33D191C92D7C043412346FEBFAB
3AB4065ABE9D5CC9F9653B3B58A5D1ADAD03055AF1F83837543D5D6F88AEC74B89FC8052E440
644E5A6E19908010BBD73B9E8290C23DAEB78B8EF0B3A09DCD45A23D56EF4849C37FB55F2BCC
793D55AA2337FC44935FE7254242478CF88DF7026F15A020F50D35D57DA580841703A7BCDE85
E40FA6A528395B8D0BBFEDFC4F065195D7803E16F3F1E3C4AF0D12CB780EFED2266CAFD2B82A
4D6629183FF040C1BBA3D9A3EBB9A413F2DB3C0A81F04751CECB15ABD7558B0CBF6C7E2C10B9
037074F9C437DB346D70B1ABB8EC3B9962A4C2DA5B055C25C7075F9168A7D96800751DEE38B8
8937D4CB95489AD0649638A8A383F9FEDD1A3BC87CB354BF10DD1617CFA89F85445411754D23
007472604DC6569D3B0E826CE947CBF703D4704F293085BF201485B667835C2BF10467D27731
E4F6ABA393B43C59BAE1EA2F13E77EEF7BC38AB1B0A4D99A464E171E7B9CDE25A4E4B9C168DE
896235B21551FDCA7D449335C50B732AAB2589536F5F2EF3877B590920C505785C3261631AC9
90214FCF72CEEEFAF01DE0CB4D2BFB7D55739A1CD3843EB3DAEBCF1F36867B4EF045B050A09E
0AAE65A76934F337781D0C6C40F9891F5D6FA291A539315B8727084C4A40E35B8E4084AC0C5D
D73E792B5A8DC65F2F34320B7B4D44EA706ABF84065453CD4EE8FD62CFBB006FAF617545A1D1
01949B349D9B3F5F538AA30719E328FD89DD3E49D50E50656C0BC9739695D73E720C511DEF91
4C1C961043D3A6C8239951229A52C4E73627E2D2BFDC47EF19618B67B1A13F0D769416FB6C72
A43B9071F55B2F4BC68990E4549EC2D164E9C64ABFC3EE6F5A310F794362BDEA711A8AC5C7AE
B4683C0539844C7EAE0F2C344135AE73A7560F5D9C5315095588EEA842B538C345872CC7CE3A
26A69C86791D289D1F60E8D956189F2F573FA34225D5ADD3CA30FF124C16AFC20CA1F5B1EB68
AF855B69F2C1AF3278384C3D0033BF6A3FE89A4973876F950F1528523CD8667428DD5F0DB4A9
3179B242467ACB1FE9D348A68E0198FB9FFC147B94C248036A475E8E566C0E73341CB58EC699
067AFC912C5BC5BCC9B9D991B01240D247B63EB40108C418B01DED5A52A52BD85BCA53368457
39056E498162131E0C1385C02D8D8EBB3EC680AC5DDC84139E717C0C30D99B1581F320462BEB
B6E50B05FA984151C9A36BF5BD624F47304C213D79C8373F116A0A86AA4ABD5F70C8C19AA681
D292224E0AD7DA010BD53F0479D2B9F66051B870612EA88DF1807911F09BFB303A143252EB9C
98BF3EE592F4342C634649B541D5C46A49E77D9F5AC1A2654503EE965C98A86FF4BBA1C4CF95
91BB30913B4A98397AF5C4035CC96EFFBF8B3B98122E37A344D6F92A5E6803BB96F60F74EBFD
C963AFE390B987F34E70E4CB897AE1DEF890B729BDE73CC645DFC05F8C445FAECC5DB0F39BE3
8D2D596C51D75E2FAEB86AD5BADD95607E040D7A93F01C85D340366E5009BDB3DF7350803875
DE48093A2A1472005C3B8E21242BBF7D9A0E91BC73BC67328774E25E396F90065588F3DC5AEB
1BC7925907B6091D94FB31FBE5500CA3F754AC84F7677D277CD8D0966AA2ABFC7101F44DD377
EDE4437EDC01F0B7A955FFBE9EBF4BDA396496454B3CB2954B58E3C7121DAD81BE7808B906A5
8DF1495D04D60AD1BC1F88A50B54A76C67A060BDDA6A87FBBF825241B29EF42D51705C090BE5
4A1F06B901A9572C10AECACF52A1EB8FC371FD4121A73AC31ECA966B1F223A5E6AB7338AE7C1
408FE4D720F5B4684B3F67463ED87269591C1F9E721858B0C80245D2F3CAB98DE898F5CA19D9
B7D4E04276C648245398D991A06CC92835C9D2FA446CA5CE259BC8C0225AACFE1E44D72ED5A8
36521D0EADBFA66C73B6E1CF261109EB524ACB621D8727667FF89D5ABFEAF8F490FC613B00AE
75B41A2F9A9900B626D56A6E4BE7B020CE95D9952DF71A083381A30B0DC19E650548B03EBE47
12D2A470437C06B83385AC94F95B1F3428B4C235E3E1BC70FA6C1E5453CB6B5A676CCC277233
4B55E23CEA5BD025642B9B2567D32857B3949C92B7E148A8018434B904F20B6420A058E20CCB
11736CD12EE53BFDB994F3974774CD7588FCD27CB2C40A634C4A2ABAD162283D79433139FEEE
67103B7EA1695A16DF4B7EDDC2A2D93FC4B44BC2D11CC7AC26899E225972B82CF615AD2B3ACD
87CBE5A7E2BD9F6DA103C36173AAA93D9A6BBA7162E4D6FD66EE0D23DF2E9587D9FF6BC895BF
7E9EDC1591F7D7EF20AE37F6524DE18C335BF7A5C1DF169004CFDEDEFAE4A3AF008BB248473A
02F36E03E698BC3758A9BEC28A69E702DAF659FEDB1269277E9FD612C776D261FE0C6BB875BB
F87B9D68F8FB93EB259A99712572543A4AA4A7293ED84F45437C45434CCF0A364AE01C836B2C
829906F9005B7CF448F1F7416C608D82D93290F7B3510282D9C4589BC7ED38FE05CA41F3D58C
77BE29263FC7181B0116D8054F2D06CD70C346E8254226C7C58261DD3AF27EAFA9F2E1AD718E
8AFE84E7F0AB4FC2DC9CD97E9D518E350D01B5AD7474A8873863D50EADE19D5CF0E8F94C0078
15078D6AA264E978A3C007B24F7EB1AAB3A7C5CDB66E89F1D771F0241A43F3076E9B765F316D
0F8887C9CB31CBCE809DAB6836AB4F2CC6F17E921115BAA237D8276AD6BF81A5B2D964DEDCDA
E808781F6884D25E2FFE8DB031158687A42665417495BA99A20C3F1F5ED1FBF83147089E7948
7C8E9315D26A6BECC4530454671D7E7C312F40F31DBD657D1FEB826785589E7094EF6917A55E
3C408854A08797E147768E8EC1AAC508DA8BEE83DE0D4D68708DEA729865FC7F6AD761C6DB95
2B206A6B1398343330EA6A995408AFE409910B83393071919172B6741E5E5B44AED191E51981
87C14CA42185C82EAC7470C9EB3AB35BEC4458FB43DB359FFA17525C2C8CDCDAA352A40BC4D1
E4F2C875C46A5E101A1274FAE5B2AA9A77AB652276F9D715280414AD61A7BE37966856649797
B553A145CCE916CA33484D65F203B6BF6B6927A50502C713F11D9A07A1C0CB4F8C2ACE7E602C
70DFD029F88D0E8743266195D666854449CA543F2CA03576C7D26DAA2603DA2E8FE9B6CA4C4F
97FAF63340C0096F285DE6B0855680E0992C06BBD2AD21362019F903434004DA42D0C2A986CF
2EEE20EE2D33BA593F51B6BC38AD832975B79AF42821672673EF204E1E367E3072740285D707
21ADABB48FAEB2D268D334269F2ACC5B711327B2A60D627C78DBA399E640213021D30880A54D
D4654929A5B7386E5619BCC1BE20E8554C22796EF70409ACF0097AADD2D8387F8C7A40A18428
A84DB2615AC981CDD7E3D0EEED39A4093EF8CF3E78F675FC6829F06ECACF6A3CC522E936A2D8
BD437BDE99B5C0A764BADBB7CE107FEB8439EE25D1093338AAE91C497C293F61652271062774
585C8C70B1277235911DA49372B3638213E1D7D892681AE7F9D65B3C5BDDA0F37319DED8E26E
68599CDE78BC93FEBB94228668F852885CF43AE675D176723A951A5635AAFFB9EF418BAC5767
71372CCCF5DA79A96908C48CDC1D56222A265CBF56046D818FBA902951AFEBE70914EFACB2AD
9B3F3D6919FA65C3CB7AA5D029F2F3884D8FDE89A2A489E44B1DF193C3B88EA3B8D59246C1FD
F52A89F125664041DBC194867EA99EA0A22A849E5FD958560309983113D00DD94132FFB8065D
1794F17FFA7578D26C923253F1F4C528384F42CEE36915F630D61CCB8DCDBBD75B331E9742FD
15B5D8B0905238591094B6E6B449BB68CF7191FC2B11211D5FB3E3138786F2F444AB7D874FB4
6BBB1B652A55ED8271FE7B85B3C7AB089F0AB28DF0C56D18139E06BDCF7A4BBAAC2CD36B4AD3
C4667C42060561704FEA1893F90BE88853A2A4692DF711EACC06D6D49348BBB8A6F3949C08AC
91ECB7BA5D08DC4B2845C097F2BE3AB4476431FFE2B9EEF1F722C76C907D0379D7AFAAD936F8
D9DBB576E447A49159605479E90E957FA1333320AEBB9C3FA77763BA7C240AFBB80E204FF58E
ABD5CAAF8FC7A4CFE322EBEEE181F862BC355D5DB347574FA2503D6F1F4BFA7E014BC93195F0
2FC6554CCCD36919847F4EDE3D4AA1D5C17DD942D5B4EDDEE61C7079651775538AABDB77510B
C0AB0E4A6A0DFE6EF6FB29B79277EBEFC6206D37269FCB626EFBBBEE8AC7A41F6ABF0F1A2175
BBA7263BAEC1597F8E32D03595713C007188F02DFAE1111C8E0CE934C11CEE557F51BB2C38F4
85E24E02CD36CE2B64F1DABE354A12BFFFBC6FA16BC663DA328CC3AC493DE8C20C8A00F85CF6
937B30CC58507F61F8F382B46281023D212BF7947C6D6EE720F138E85B8E1227FBD0382EBBAC
54E9E7BA73CA8762556B4E3FD2288D0948DAD7D7167919FB03FE7F5EDA46A37F1152579F0850
46B7AACB3A7509813F74CC60E439434CF08775EC2B2AA953CFFE9F8BB839B03C887BD098E7E5
D07400061A4A730896217CC7041213E6CB49408BF47677D67ACCEF02BF8C72103FD6D72AC374
71F40E2836C9561A5697DCED547BBDED5AE759F8091D977FB4559644308F11454BF25A0821A3
CEC516525AAB0D31CB601F31E4B389414554407B7C29764D1B975688003F39E7142F4664F65E
C265B22AECB31A6B23941EEC24298375F619369C1E0F080A221BEE8B2CD4555322417FD43C62
204AB89E27363E753259E8665D04E0738640ACA215E96440880F00A57A790FD11BD59CA4CF8A
BFBE93CC153F7FF97FAD835E9BF4C54E1DC2B4B3D796BDFB96793B1353D9A272D338ACC7E03F
1AC5859D0EF7FC964A0055363DE80B53E1479A61D54F0982EFA1D9C63B5F5D63A6971B7F2A08
F5B577719DEB0365582D521126B7B9C0840CC94526A704CEBAD53733B2A53EAF6C9A7FDC0C28
633804B27E0C41D362B69DAC1A24B2640ABEF30E492159E3ADCCCFCABCF0892086C0B717AF53
7F0457D897B66CA606F7362FDC3956962046F4E15CDB2C81696C07CCAFF428A095173BB74803
19AB048BF08E11C09C002229BDB41F35C35DBB4ACADD1F37240EBA8FCF7FB989468A57F6D1FB
E3C6A292D7703FCAE61C393E7F045D8BD2A069CF9173D4CF2F58EB7E165167005C8B20F41605
F0BD79BD8A96E1436641EA02DBD108D3464AE0C8BAD2D8D2DAC51CEC11DC7CB2B3BD38A1DC24
BEA7D2DD15A6CC20102B3C05AB78A515A1658881BC52CCD81009218403019C4CC163AD92DDCE
DE95C15D043B2199F8578F444B61A66778F02ED6B0E0A8BAE7DBB917723378AB60A208421E14
A4424E00738F4D30BD017382850794CBE2F65CB2ABEA85CB420D457A91B4B4D3D16D9AEC0BF1
E70E53ED94347F2BBC082075868DC9867511631256ACFA464161298764D4F67457D3466D63B7
0A4BDFF98671B5AFC40B07760CF28338EBF7461683D65216DC178BBC5FCBAABF775DF2D7158F
AEAA8E48D14AAFE204D6D338281B6081139C873019CA90F4CA778488239E5A8428AF655DFBA5
4E1454E637A0C8D493FE0FA7326B3BAA4E3714CE3EB96F2C8AD594C94513BD5903E53445DE85
43129763B37E57A866CD8CB0FBAD7ECA45F36C0ECB690120BD4B3985D88E434A62C239B07951
8E89D38E6270582B5651CFD3525021B0BA311F98C5647D14302909B0B0E187A172033C8DCD38
C7AC1A5B991BF82D28B9132E55CC3FCC14F5ED91D3C53922D510DCADECC349C1856F971C0D54
BD6F724DC522902D02053812705876DBB8E24EDAD47B475ECF814A7F73CB243F2E2FAC4F80E7
7BFE57C7DBB5D6D02AB9B1C9402F643E4258A3EC6A05FFF4B15A6C0E81FF0A33A5FC066C1F9C
0A2EBECC9F51362249A9B19FA77D2564E2685A80827BEBD657796057073939331B8A449AE07A
37B87770437D4F6AE8BC7683A7F61CE05EBCA6DFEA71811DB4CF7CA2B41033F1FF763062DAAA
7FA11B4293CD97A5324168EDA727CF0DFCC7706EB95D97452B2E4FF583D617E57C9AB48BF985
0A009C9F049EAEA66EBBFF235577AFD48E22BECB666426C4080E30ED66C0F36402C4C1872159
8FFD20FD189740A521B636CC6422A13BB3C8160F76E259E0858CD3DDA955E377F1E69161C67B
63747F7B4E7A813CC016AE922153526344D556E9271E8C72D3CCF3886B5E61C27EAEDC2D80C4
DD605D5594754A80A3F5900CF39FC69864B264E76271E9F870A5C874FD9130DD65D92D1C52BA
003C8437148E08824A1F97668539C131D3DCDC23286C3668DCF18BE238D8A5B7C23636622EED
241389C62082767FE6AD453E8E303AC03F0E3037F244BCF144C11A1DC31C5910B47A5DECE0CA
5852732220F89EBDE6190483C4F497ABA510C3A75EBB3BDFAF87A77A5181A92CE739BD19B58D
1547C5E558297A27BAE2306C33258B9A2880859B00232D0B9F24D70604402A8CFD65D70529B6
35232A70F1CFACD31AB8470C9745395B77F67C5A0B31DD06E6E27B647A5B47D2724ABD50F6D0
B03C26E5EF291F35173422593617462A345B9FEF5855491840060BE9AD169E11C29C714D02EF
18CF9E4DFDFE749826284B5DB8E2FAF370BCC0E158128613C7C65060C6F9FA1253D56748B343
EB7F8074F582CD588A0B3B4D7BFC1D09AF6F50AE74A970E58638E4F3BD406308DD7F21B86F60
7FBFCD2333D9713A46A4C730A323F3CF74818A0113326A843BED368E7A53DBBBB9E2D73F5703
0C07A84B5E6A6AAD5B7908A485B4F5EEC7136634E339B5A9CD2AF4AFDCF9DCC62407AB3FDF57
46E02E6FB13AFFE7837BB8A50E945E95F13B6C65436038D46C40F48B785CD0181B6AC147CDA9
33FAFCD98F79B474BA0F69151235CE85D9B2F8689B05C182CEAB603A73572D79A8CBE17FF7F0
F2C49974669198266B3775BE2F7F8E9279FE46177928BC1E317D7B194A967D1513974B782E9C
659848B00B87E135588964BF23BB8C288D7423341BF45F0585D90878535395BFFB65D3B59576
C3362E1E08756153B7975612C3709822DF540A5868404ACA77548287434EDE5D5088A19E671C
72626F4DF853A89DFA00762A7ABF283B7292D2CE6345EEF8F545C5E5F8D6460D79B17229B8C9
8B2F5457621A13EB17206B5F3F4D24E6F9331B05301400E889701FCADD153D005487BDF68BCA
DBED3F35AE662B3DCBA47C4A93348E2FE71EEA36D6A73C50F85DD16C66DE7F0A2BA7DD7D3094
6EBE7DD322F7E2ED4DB5C07F87A6A66E76AFB00CC101E499B496A6CE1F1ECA25E8DE6AFEBD20
06FC4E8C75C990B37AFABF150A463A9EAF84E732BA9A47D03589DA5D8521B98B60DA32CF8B90
1A194B0500FA80C46C3C6575811F4ABCB7714A7210F4BC272AFF0F32036AE0E8A438F3A162EA
DB62E1B5BB0F65EAA45745728A4FB5C31A3AC1A26F5938C9B9BF413B246E2921A112B30933E6
C739C4939C0B4AAE1D754F97B9B90CAA608C40DE0DB832E5F29218B2D628E86983A39A98F77C
4C76C4174BC087480CC5EF6D1DDC1C7B4C5F28AB9C2DB6F8BA02D41CF8479776848F078C6FDC
4B3978A25F18F1957F3C87A2E955FF01DC3D1A698A8D7DFD135FE5317CED921DC505FCF25FDE
DFE0C56814E3B9937C8260D9A06D9CEE4457CF160ED23E61F6EF68E33D3B5EC586CF7FA74D5B
FAD5DB260DA398761454FEA0831ACB04E390F9B2324E9345A7B97875E3E448C294BBD26E8FA0
1F63EA8875831A2D322CFF8F84844D9108A42F6E6D096674962963C9B2584CE149DE829C7BBD
4401E2DFAC7F01FC00778130C0A332FDB650F74667EE6CE8B3234137921AB0754E1967D0CEE5
451FADBE57572D59660062D5063EFF8CEFC36BA701CD0652DC44A6B0E611FC1260689B74F4C1
246E79FB8A4FF2D9394851CB2298076D9112F645A1D6C54D867C24B182591D5510027EF2E9B6
4BE3ED807F1CE407F2B60FA303E802B4B03FCFCF42932B1D01C783BBC81F029402612A5B0925
641780DA1288B1EE4F0409DD5AE04B33233B025824119830FE2DB158BC43CE551C51A726697C
F4543919915EF994EB7D590B1458FD8BC373CA6BCF3EB8C4C9241EADFBCF03DE29D60A61F1D0
29551ED58F89310392F89A53C5625552C9A12DBE002820E757215E0EE7A58EB80950EF804829
0C5919F94D8D1418BF60395AD86F6314FB65BC24807F4EEEE672CD266F5C46BB2A1B8E3794E0
0E26445283C6E0F0136479DBC86AE50946C2E639581CD6AB94E64202D01990067D5AC9503945
528FC1527156EB0C778B98F4B0367439DAC4DA642F945451C53DB5ED7C5FF7B996E692536908
437620AF784248989ED59398C16988D529AEE8ED512EE13CCEBA69E9D2A9ECAEF5041430444B
1D8229164E1B0DEE0B4F5F67ABE78C631A97897522D3E2ABED2761A5456C135C49495D6DAB03
5BE21E0BCB875FDB82EA1A13A17E82F0EE7BDFD86D7BB408A318D8422279BE6102E8B6F26245
2932292977FA8336D0D0E41AE62C558299AEB39E9E5233137C635508E77B8A03DC8D7DC953CE
0428AF9EDCC731EC157C18291547C112F92CD54D46F7CC3D27AA43145F31602C137B4DEEED87
4CB477981E32E99DBFC1CC8C5DE16114FED27AE5DD634D1599B3F17714E5B9E501F1AF02CCFE
2C1ABE64AAE9AC63005118AF87EA9EEBB55EF77A48972FED7A8460F20AAD73EA6BED656562EF
A57084F00DA50CCE7E3882E49DE831069D1DECF29BB2857EB2827B86EE42CE5DAF13258C035F
33ADF80AF9ABA01668FA6266BA66BABD51BB00B20941F44AB23FF5C667FC1CA8245CA458604A
59C231ADD08F5C2F688E59796F54094F5C6F34CB7A9BF1FC116D7C4A8B592458CCEB67F2A82E
25A67A25127934369F4242F94CE979194FB15BB7E93D7B8B039100C755F57EA2DF78053A7789
D77CABED8A3058191AA2432684293276B94F046E5A4B94681659493AD01B4F99BDBAAB91CC68
6346BEFB4DB24A39B74B477536292C804FEA4249FDA371D54FCA0C1AD3173712FF24D9C9C76A
0938D31594592A71668428D6E60CFDBDB01878207FD54E11FBBDE5B164202084603747B318DA
3C8ED38424AFF23AA111E5617311CB5D28121C04D87766145DD26E3E63D0556664D246B340AA
C1728B5C6B98376D028A791D7A0303FEF89BC4F61BE8B5CC627B31A0951818F5E5B7970BE632
328A13319C1B7E22EAA922CA173D5E39A51F575A776F8DB63BF0FE8B532FAFCABF04F090D5B1
3E7499A1D25073901BC146A6A467AE2C279626E068968C26B4C6B07951790A6B6584031F19E6
9CC5B596C5D25F323DEE72C335150CDEFF50974160FB89D5A9EEAC9E92E14B2FCC4F8D43917F
A2F6A7BFEF312AC2464E2D82899DE6263D5B93EB2B2372941226FACE629432680C957C2772EF
BEF72AC3B41AE5A0CB0F41E8B92593EFD2EC18477EB5C5E5C75716C4F26308ED11D7EF2F23D2
03E577E6ABA8965D6F9AD94C1CB09E474A083794097E85CDD24427AF15D2D143EE0664989419
D9E1AF1870C71329F39DB71A3A5E554447A2D6C5F740192E6E5B93863F4C580F80546B2D58CD
3E77BBA664601FF76821631B383DFEE8E7AAF524C4D41AC3D92D6457B2DC27F7EB6D13CEA339
C11F7DD542273E01A1BB49BF2F73371D7C8F36FF9F99421D103BD3A81972ADD88309260778BD
00889907EEFB5553C45421D89C95975036F0F97F874A19F92E3AF0AE917E293477276EC0C56E
3B0DE7D7887CD19A54E1F601E489069AD4FC9E472920A98E895784B9D74424BD28B997EFF5F3
268C98B14DB8CC5CE6578A9AF72D31CB1286B8A5D003A6045EB8FF9F662419696A653517FB65
AB31C093A62EB7BC5FCEA5749107F8F4E650A5402B98D299FE92663902B60845FF6E4BA2DD78
5DC57CD1252042EB55521293BC66C6721C91F345609EDB3CCE9A09A2F93A9EE06C4862884139
58F7BD0ED4D67AE0B50B38B8962DCBA0EC4F725ECC9FDFE6ABF43A94B9634A685BFD7AE2BDDD
23716AAA5F345182317E149A72019C54F27BA9377AB6FB0C1F407ECEF65E7C539C90C549971F
C2C278FC27653E7503D43B23130B6C946540E19FE3A4D36DF0779A03F0FD03F006B8531F0D63
342CF441B5C26A65F88D41F76FB2FB17D497B1028A65BAF363B97BE8CC71AA4BB84DAD9E141D
B1D15C02BF398AD495B9FCD8D3C0A15A899CC2286D4D7B4ECCFC856D1B069A6F4B3F6A387129
C31B4E90BF347F6EB558150F53AE99DC5CDBEDF25AC19BF2C47480528C841E72B1645B1C8E01
FF33AC4B884D5CF361380C113AD064D5008AED3BD51448BE6774B73BBD5493D12F597EE5F319
BFBBD487406CEF951D68FAFF91D8FD589FB6924B5D4050DF2B97D2BB80B48840330D76CAF3FB
5E8576DEF5FC7DC024DA95302B9787AAFBF5623A00A26AAEB50D7DC72E30ED1BB0CD5DBAAB41
FC176EB0DFAEE47AE29F0954F77682015C87BA4627B384B27EC87A0DFAB0022E4F31DC6C35E2
2DF7027A0FFF472FFADFDF72498B4197B4750D386521B6C1A08AD5760225CF655E120082872F
2CCD410465A0311D43780445999AA6BB02868C04424545C49DF91C6599C57A30881E1B14328C
9E8D2112BB4AEB8C9CFE1BDC0993B321254C3D9170884FF07998A3C1E3E4E05BD89A43F97B92
F89018AD12A587D8BA43A759D27F2D282CFD42E5C8988BADCBD5C126AA7FE525CDF197E6E1BF
D0346B51B05497D11034E5812F570725141AE059487F50B1313D5B44C37EA7342EDD077263D3
8EDB4CB70359DA8B8727281EBBF45CCAD2F537EF8891FF9BEC0FD8085ED9CAC81087C32E7E18
5EA125B210AC7D6506A1970C7EA2517A0DBDF3FEDE08F7B570BCF92607B8A88A463983D62111
E219AAB559C61E5DE31C89B6DB277C43CC203F7B7FCCD44D746704236385A2A0548AAD2CDE8B
8AEF7B364809128DA80103986472B3D0EE47E276562CC25F265A8DEB1440EBDF1F8F180A047A
67318889493E359961633A1F62D4E6F5EF75EE84FAF4AED296BF9BA402771C9D2A06D55667F5
3B3725536764B1F4FC2609093DF40752A6823AF0540DA824F844B8C5CAEEC388DAED5BE40E39
C17624B2F9A282B64CF6C194C8328671561F62DFD6B79E365BFBF788C71FB3A03C7C505C2CB0
2AB3051037B017262955BA4D71ADF43B10CF041E05BA548D49D936960995096790ADDCEA6B41
7980BE9B24D3E5B5BD7830EC6FD05B982B87BD2EB55036F11AE14E68642B348A254BAB36A7D2
C57846E05C2DCF8A3E3600EFA67B52D19A335D69F8AB3B3A2FAEA7281AD9936CD965F8106677
D50A0DE776152979E2A213CF86AE126B7017F9CB416EBE8B27FE85AD84E1AD846D26CD671711
10BF7C2CC7E2768053E302C539FD32321033DA7073AE99178702FD69AA4C67FCE95658524A3D
103108EDFD8ADCD0BD529F12F0137B53AF32A78035432B5FF67008063EF6ED95D67FB3BB9CE1
43CD5AF7741B13EC37721ED9D78966860F17FBA74255F97993D4C5D34017A12D8C3FD20154AD
9A7990EE84E718273BE76E3D993EC2B4294B029EAF54FA533F096668B1F248B52A47E5CFA885
EE9A418DBA91DC5D6477261F11EBF7907B3C6559B9A5CB1DA2B2F4665B8B60BA8366E987AE55
A9CBCD320328F3C02A24C0523B45A950D00262135AE77833511DFAE499790374C6E4DD8E4513
FF8C71FB45AD964D999C6CD8AAEDCCDC1F7EFB42D38E7E6A5551C9CB2FF394FB941989EFE6B6
9028560E3F511BE1753844E2D55D23F9749C97388575C139FFB493519A2F5EBBE58E8F3E3120
022CE5CBD5972FD124B445704A546A9A1AEA1EBE58C90637D1FEAC84E84BDCCF77C05B3530D6
5D186E7CF7A5039DBF16B77D250A57E9BF78C540CFBFD7551C2A5554F35D6BBDF7018DF26736
657606B810B031F375C82DA2CAF45522492EF955ECE63A860275D30593FCC56ACFA44A30CBAE
4C7E354533A5709E838E6B891A7C10FC8CB62B82A8E8CD1208D7DA9F1E4411DB0DEF65A5CF46
8D438927C4A7902D111B9E76BCDFFF7420EFEB85589E9817FFB2CE71BACE03016CCD51A71C1F
CFC8347E3A98443A53FF01581DEAFC030CEE9CD71EA2C0557450D366F5498E73F96B1E72EE3B
5E7E9C7049102B1A3018D40AE1ABF09627EBB645869A0E9938B119226885535A7A322DA73BE2
ACD720E559E37396EA98B7B23C8D56AD952589335DC4F71F579C8553DD7F88B7CB82702002CB
71425E6B417522855E5888874261EBB1E7A06583D7B03DB5970B598597F677428E65F58CD63A
F1E5020F053A0C30A611523C9DDB3DC5F5BC775B28A7B4530E302B7819C1E8F5ADB79F9EE6E7
9F77AE1ED4D01274AF7A65933037FF996F5DD62F1F5F2AD3C2076B490BEBC950B50B24E1B699
B65DB1A41E82C07B25DF0B8619A44F2A6B9814711CB592C82E9493E6B9EDDD781E0DB6B95DC7
6A21EF72876EAE30C30B2F86744AD954164AAEA0BE4031230B8F3D1380AC7C2ACD27F0C4EB2E
44A9350416325D0A1336D8C6D873122DFE583961227F7607BA831A3CB12D9BACAF285D9F9BD8
01D3EB4C41EF3485559F1AFF43E4B8B672E519CF05D78943C68B7D83B525A1E053F64A835697
A0D4541A8F186123E481243C673C10FD65369D53372B4B62BBBB75971616158BEB0AA447FCDB
D6DE32F1544D65689AE5F00B1300E629E8A59ED1723D65DE3EB9B65A30E1C9A1A2C0012B509A
F87E973C750F8E48083F81855EAC2BEB00C8EEEA5F606CE30840C1549599CC5316160DC0AC0A
58BD2C458926762E4E7088FED38F8D67CF8B020907DD5EBF9929C2318F2BB5E33105270FB0C9
8312C11D5B3116D47E13A88998AD3B3AA83A64E4ED36ECB988DC9B4CE47364C931C642D5E156
1E6690666E89F0130E37CE2939B396C9FF0A16C4FC85987289D536229CD0CAF538D0A799167B
5069A5E31F3AD001029EF8207C90E7FB11B0158CE5114768D4265E3981DFF7EDCD779CCCBB3C
D98E579A7B67E50FBD3D252AF68A15C7E01DB40708FF42296C18531EAA7D27C21014B9833FD6
8356A915F53293AC0717C4D16E7EF7FBE61C5CC225C0FE2A7122163CDAE813B6A792CB5D84F5
6D1138D948D0E51DD83B9A5498D9BA39EE9B7A149D45427014DF34D81A2C49F9A364733F1DB8
9812A1B4F77C49B8BA5E8DCFD7DE2FF6FAA9019A798E86D7D225F996C47A98A0DDDD6F8E9D8A
FF3149F74EE4D6F93CDD1D9B0CE22FF6716E5ED82EA7F780967EC08A8A58E8BB7C340EF97356
F45D846B44A3D95929FC30280187AA15CC0F008F224EB90E42C9BF2941E59B97CE2EE1C43902
90D110E1784FD0629B06EBCA45E63C5228992944904172348F67851D8551669C37AC50FAC7AC
6891AE4BDD744D82D9DCFBA8B99724C76ACF4BA6A9FC50AA6061B23A67B51AE8B12E5B3CA564
B2AB94A0F75994FE4C6C8FA8037F29526799C1BBD081F145C4F7C39F1DA80627C6872F8582E6
576F80934FAE50296DAB3D8724306AE02203C27FC34E5B4032C15F03C245C4FB0784DB0F560A
0306043F99173AA4DFBB09F58C2FBE68EEE0219C8735C872910B4B902FE7C2E803B8EBE8630F
5FBF4768867D402DED12FA153905D26562DBC7BEB944B17542F73295F05649916123A5FB1E10
20015AEFD346BFE29B351CE7C963397AB1BD966DD3CDA57DD4603A8C9E1BD0F79352786A3454
6D92598B1FFB7B9FF5A938D3C0CCDBE6F1686B31B36C2A0AD1469268D265D5442154E7F61D61
313C2F1D86911E5ACF4926CE9E6BD5C22320BDE84891BBC844DEAC1979CC4BA0D99B052FCC20
DE7E34669D01AB55C1F2F9D0B7ECA8E474135749E7478673C1F10D4B6EC8395F9CCBA7B471AC
08BEB8804647E8FC8FF39CE6B7749A8E54EE47EE701194993F101D3D72E02B1F14A71159BD6E
1DB2702306509BAB9F822EBEFA18405BDE198A9D39C56480C6961D4C4C8E803067F27F0AB1EC
C52CD3035F927A8DB85F7C6865D449B4D169FF31C83CCA59317BCDF6569D92811F719C0450F2
6B07949A8FAE3EE12418E8C3573A89E9E27E49E0D706C102E2DF65C05F7BD7F885610EA72CD8
CDB7E396C2AAB18213E5605CE6CCE26789F09EC3BFBB8B03F19BF371E76379D44273324E43A7
DB447E2FEE05BB4CBCAFD6126E7518A43E52867DC05DA9E3D3FFDBA769A16F708003D4BF411A
0B0F7D0B4348A3801A01DC903E6C7B63F00962A48E8D868F2FCBA7EA4420532944AAA35A765F
508CD50EF359CB44732509953777021FA3D6B5948A9A8933D1ED17D12E7DEB1756376944AAEA
D3A54CD9BB9C11F85AE0D11F0E7ED131734B04708D1D156705BACC4CC43F358E2526DD332494
BCCA735EC9DC52E9D7E532FB0E90FE148D4ADBF56555A56F6ECF608DF3A15EEE2F7BE6453950
7528186C7F3E4276E06038B29C9B09506F216540B549824BD37532EEC49FCF31B40653A2C7C4
0B15BDEECEBC7F608C764CE20853C1A9B5EAEF1CB773098F1AE4DDA13B82C0410C64ECBB56C0
29D8AEE185E904EF9F565B7710B1989FAE633A1C1BB2376C4A91E4AF09A647A602E48EBB50FF
2F59ACE0B7E9698CC553D686BA90555BE6A705C385A484374C52CE2D625066E983B9AD3379B3
91C4F2B6EBDD204A25CE8053BF7D9A4C97134F1E6871AEF23D449CB740008BD719FD45658A31
5615BCBC425C5993184EB613FFDE5271B1846B5BC1FC3EA638B4A9B4F4DE1FD8516A6D3FCFD5
03B711CE24064A0EF8FC8AD95FA3A1C3E1CC1280075617B2C50AC262A21B2C187FB228C9D92D
BD3EADC0101E5084EA2240A9B9398850EB60CB82C34C5F794B5748410B88CB372CB9F151E0E5
C33D74B5EB9B1A8127CE513011E23B12CDE09C23323A13232257B605937F63BE944BBA3875F0
97B31A573D9787505C025B7D25DE2AC735A41A1C7EE2F9EADEDD5C1169C3EB6286478E01840A
B9D813A87417F8E08D83D661D4F319624883637140FBC6A497494BF07E0253C626A7B1970CAB
4F3D19AB0BA8B9B3EE7476356F91248AB5E1D31B09FD54C1217924D38990718C144A2C4772F1
5A612CDDFF2B326BB7E2FAEFEF1FBF4AA79DD0894C16D68E39E3F441CD73BCFFAD335E241BDA
AB651307803FE8C7A465C2ECA793F07EA096F01ECA7F1A3302340A5B501940B23DCE8E42FF80
BEB899B669FB66570664052BF9EEC645EEBF463363BC51162B5C354D67ABFF76CAF78AA17CD2
480C447700861B8EB1E18D7D229EF90C187361C0470C92322085C75D31B3C8548DEF7F8EF778
2769D631AE68ADE59CE56E9CCF1660ABB39D844A9D87AD8BF7D9AD33B0EBA2321F413E1892B7
2F372354579F8A87B54714753CDF66EEF2A76135EBDB89558AA9AC0190D76A0E01A65D8C1A64
CDD91A9718636D2FE705789A89BD62D15023115BB1B24F0043A8B19B756249EC8A8374B10AAD
C4289FE6B1D181CCE01D35681521156ED95731308CEAA0E1EFED602B619DC0019F1C9AEFC123
86F8BA8B05092A7B9BDBF7484B421CA34FA99EBA2C74DA7ACDE074F349FE1B8BBDB782ACF365
9CC955F7E19AF6BB79432A59718DEB2B5028324B8185D8445F6A0586F8641EF5A1DC69ACECE7
CEE0752C7B13DD0406E2A1F60BB5E7AC79D7ED31BFAFC8168264508FFEBB3932BD2BB07BD943
7174DA658CBE738B1B3CFAAFD547E0DA801519BFF51F2A512555A684A6F68B7311CEC5A0E4FA
1D4F69EB45339831C67A3A855C2A1B166EB6CD28ED6C791EB82243C62347D6B60B24B45223D0
AF7E21A589EC0B2BD209A8365515EE19DE23B78EEE2E3D9A9A55F78EE39F5358C99B500B4CAA
E752AA1EDF6CD9499204487FF45FB713BC16EAAEC0C11C76FEC55A40B3D90504786C4E46581A
719F0ED174DBFECC1FF5EE829C04EEF1D2C31C0DEF73512977EB309BF623C45F61F45A511076
4E5B685579E2867497E115482E70C6CDD2F26FE06A60A0167228CB89D59C7540D00B47E1FAA0
79EFC89B0ED01AA6B805A111C74C372944C6350A5B5ACBF54449641FCD352C49C541C7FF61F4
94DD1B45417299CA7314F1B63CCF2E71C063038A2386AC7B7C9464B9238B93943E55A190AAB5
4BF7D804DA84E91402017A33506B4CA3F105B9B2D7498B630551B8750FC3F28AFD54AEC36137
C2137DE0D7176F2C875400BA09E855473D903589A6B712AD7531836D2AFB097C025F0B2AF26A
4F6E67312EFC8019BC96C58FC23BF3F2A608DADC97708C000338A46CC2BD13353915E4F2BD85
DC60CEB5522C4FEC32AC38CEC53CE194304B555C1A8F26A3F702C2F9EDE587F1BB66816578E4
00B42535B14A7767641A550F05EB54F66683BAB77A9F19B2AE2686B0E2A28676D625D9B31B2A
AD60539B5E7E291CE644AB32CD997BFD6AF1B115CC846D5D5C511034FB91E842C2B62D1C4F72
B9481FFC9E57D2323A79B706A7828191DA055D9B269894C5660F5B9E3CEA0634B761563C521B
5ED28F5F2E1394A596001F502ECEAA149C5F81E635F18182DD0665E5FAC6160688878896423B
EB05A51309A98C633742277278121C39E0963B0722C7BA409F7294AACD9290088F901DFF1463
3BD76DC7B9557303B8E2D73FA36F57EA67245A6BCA63DE2351B3D9EF8471E53BC664612FC86F
68E3C373463AC0AC8D4DB9922FB6CFD986E709FA57B43D66F7AE2D539947CAA6C2BFBE4A24C4
09D3856FE31E7E79E46C175E9DB772A16EB47528F49405F19052394E5831D213697ADF5077CE
A3EC383DBF3316B4739C49DE60D574BB6883063D85DE0AEFBF26BFBD6428D56B3EFE67E021D8
2BDCE5DF3818DD9949B3698C1602B30EAAF12BFF3E51AC1408EEEBE0028DF941605898394D86
7D292479E6523884B05F08DC2DDD6CAB4BA9A07AB435427F64E8EF9B007B0DA1615E2FDFC528
CAF08FCB2A9A214C5934E6A60732090E4505D244983DA0F58C5841A3767F575D89B11869BF69
46E15F82D73DC179EC3EB44E546D0645FDBA8D7137D55E5A8B22D5C570A39F1135C4E965B9B1
F129246469EBD2F5F662A1EDBAD059FD3D9B876153B1ED834E1FEE35804B779168A5B659E7E5
FAC674F402C2C153D3575150C0C6574C591C44FF7A19667FAB47A8EA844BAA934B08BFC58BE2
672E34C687C311BC4102CF6346C5DD54D93552571F0B2EB83C168EC4A16DD89094EDD2F6DE02
97EC3298AE2FA77E6CE76C42305872F7538C68A77F18688924F9F5C02F51BC1BD13B0CD40C64
F7AE8ED1C35971B03A791FF4A4C57843B9A8A8F8E1D2CB5C51C4F93CE159A060C99EEA0B0680
EB99C6ECC422E41AE1E9F07E38155907A54BC41102D05BD8DEFB9AACEBFF66E2CE8178383B98
0BA91C8D4295737AF2BAA229E5B9F0909C91E56BC6E061D4BF0D0D826411255F0A3D417360E4
DEFCED639409A770A68B4780FE431AF93AD6C229D9E4E4E73928BB2271CD8CD9168B9D9E6498
A9D5E1F19CBB0CE6331C98BB8E14B585138F18E9C5E20788FD9B96B10691EFFF5A72742DB76D
EA9D7ECDF3D34D44C0FAE7BF87BE638D72C37844D105324F35F9B2B0BE5E041ADA52B3E50BE7
6187B5CF38C2AB4EC7CA4048A42365205DFEE5603049FB0AE877C71732FCB83D9D85CDC3E6D3
A4754BF44CECB039B86FBBFF5B2842A5B9FF2698550D593E329639B61D35918CFE1FA82615AF
EBAA5F4876A7CE58971D48ABB97BD11102241141E58489DAB5B8197B1462038CC4BC1C5EAB43
D626CF0F74E680B71404A5EB0698725AE5C901669BBFA01FA529F7EE786CE4E9D89D52D298E7
CB20214B75C6748486F3DDE5A3CCE949627FAF616879B67ED86A6923DFCE17C85098A9F15A52
9329385A91A5C4B516605C65A97431076EF83CFBDD89C5C92C1AAA9CA125B54D74B3B3097E58
83DE65E71B8A4A38C9A07320F1E01B218F595B19FC4088A8F99B08F588530B854E3E1074EB65
CE1C480013D760171545EBED4DB412635CFB69706B5DABF9FF6DA683BE728BE51E8607F213A1
95ABB337DE35DB5B32358FDB374FAF9C14F3729A954CD4948182312AFDDDCC8AF37DB0900F40
FDF190E7B06E6ADD9FDF686093D21DAA96D9F0EE86109D521E619EB8B4D576946347F9A53792
3FC4D2AFDC0EA4F5E1E05AA3CC798B97A1A238650AABBA9687EA9FA30369AB0ABAD1A9587D0B
A1FF93D53B7648847DB692F59D8850C7D237F6BED39439B1419F1CEA51E95E15049CA30B5954
CCD76EFAFBC52C7BA7ED12DCC966B25E1351B2A23CC11ECB0AD78186D98BE30AA8FC94A40085
780D6025CCD7120FEFA0128CBA879FF626C5DFC55D2E0466ACB483D1F1B0E15CBA9B3EA6B729
0927E7AA0737F5C2BB11C41F29EA8262E689C525EF5A933BB6BDF72BFF36219D5DB52ED3334C
3372D9019162407577CD21F83F7C8D980886003FB12FE0B14F9AF7BCA745F3914F720B639DD4
01F5CA9F7C32B5CCDF53C908BE6FF6BD891ED7DD4833C166ED36501A36DB80503DB991813BDD
CB5FAF60069D9580901E61E6C13323E7187D38976E9A138108F567014C2149998C42DBEE1CB9
F2497041EC589B12AAF253EDC5DE15AE48D3869EF42F086D8E0E53E6E1DC9063F4DFF450CF50
E387914A23F5919D53F9DEEF0033C26662E98D1515A52FD8D77A005485DEB865E9A869B9B218
A872755C01E75E30080CB5D9835365D5F7AAF56FF1C21E336257DC22E679227A295D22C878A6
7AF659D9C5E94A9C141539F0F3F2E7C10EABB2DC645CA8EDDE6D146A0777DFD1A1FD2CB13976
2BA4D2049033A9E0152B0FD462E7A39A6EF3DF62185CC8709614CA9303DC0B723958A4E18055
3CDAEB6360AB830D83BA78AF84F9A730D698D8850FDAA43516A5CE2B74AEB39A8E62038950FE
427C8EB6AF8EBDB8A888B620C5727B7C860ED8CB650D1F16CC7CC3348953723C2B31D12091AF
98A361B680EC721E1FFF9269EDB95CB90DB61EA64C2A49762E13BDA6B520D47DE819430C3690
1E35675E94493CEFC11B34E60645A9262267C32B8EC6C2D5487DDBDC27DC56533EF87EDC7183
257481F6FC8FD00E47A175B137032A4D7BAE80380D6CFDBD822F8B5F4A08D66882B8C8863B57
237EF8F3720A3E087648D1142CA90DAF860D19F4273627BEEBF7C1B4BC274F729F83FDAD7C3F
EC91C41E0210F40492DC2AF8316631B3B24307418A7CB4F387C6D55D0EDAFF28CC5C158AA379
6ED865BD9A189DED6C5A14C00B509465336CEDB55B4F4460BE74B3108AAC4F8E35D794BB062E
9E80E066F659591B8E2A1B1AFDC515EBA28BA1E06E23366F89142939932DF6D136F00178BA8E
BDBA5931BDE21F88E5EBF843D424429DD34C4348889EABA9E812BC33513E29E545E6F4624F6C
3FBE0824304FF63D7555DE60CACD0254283EB55EDFD3AC587AF00483D8F77C11829DE1589DED
6340C8E82F3CEA0A2651894AED392F967E945DFE97007F9432B93BBDB569634A50096655501F
5967B1BDFD3EFA79CAB87F6B62ECF0E38E0716AADB9A8C005818DD6D8FE1CE3FA6C2C2B27B1D
99AE037C72A0CD5081D9C993DDD36DCEBAE17C0DB1CA4D11BAE0A0407FB19C91B55A4FCED58D
E0E0BD2001BCA4BDAEC08D9A2E662777770D84E02CB7722D3773A548E1DEB0D64A27CC739D51
BF82C4D8997E2ABF40A41AEF2D0F115562DC90DF5A2B5896DD714F2DEED3C0A62B9280CF1092
46D08A01A7B5854C4312E04F58CB5237A03D6FE892B0BBEDFDD0A3FC298A8E990D705EBCB925
331D69721B9FEB491FF8C37C9099512F4D662C1F7ABA98EBBA0C4C473C575E1E1C5F4D2C469D
13F92992B5FD51705209C1A55D7FC95E2C79DBA69F2A82CC42AFAE088424BCFF48153246B2AF
21255018521322ED356375D807A6254BE7CBF24F949DF16F22B86D98FE7B2750ECFE186A39F0
79D15F7F2F74D9B13D891841A857BBA2C44925257DFFEF46017CBC201EEA268B12F8B006E115
1E6BECABEFE9586994641AF816B0A5FE16A6204CBF7036CCC2CF4FC70C5BF1EF28235AABB21D
A91C4789BDBFEAA7272DFAE4EB8A2DD5DBA29974EC3F192FA4ABF53BD1A287F8F959F64D3093
B6FCCCF56C363E7011A397B2E7215875CABA8E6949637BFF389FB0C4EB691EB97295EAF43EBE
49672707D2166023B0F16DAAFC126642431398F6E0D18CA60BB94E10E92407EB6CBAEFB8CE28
9D768D4CB411605CAC9116E57D34D2FBD969EEA84E25E8D3B50BF99BF90D27B369942127D915
F9CF287CE983C3AAD2347A2CE6B61F2E522FC45A51E0457783F5B6B5E43E532B2194447C67EF
9281E5DB2806643389D9D95C5D35306574CC05110F42EEE53164F6EB0EDAE4C87148C41D59BC
17B5721896B63DF0EB995FD4E9FC04C9EA01D422C0070D108F45134B14864116875B33286583
385F531AB238B707D442E13B4001C18AB7009FB43A4B2ED8215FBF35E4E67AF10ECBCEB841EB
BC84730F80EA39BAC01BE483D9E3EA7B1C1A9FBE29B4CF1ADB37CD10C38EB723DEAE5232FB24
1A6DA403C8DBF7A37BDBDB60E32FC9CD10E8EDA5C46A86F47B409A70736C8205D6A5F07C6AE0
8367976FA2CC05CFA2B17D446D0EF4FC2446DA5310529E7A6BD401F711325741382413756206
858459FB93B9977BF12BD014C2BFDF4B4D90828E3171D054F4CAC1A292E0F7F55676594E87C9
4FE81610B8E57C42B3CDE488AFF99B2BAA93597C63FD6F1608230B6024F550BE58B81BCC0398
5E06D3E98B4B8B7D7B8E9009FC039AD205F79662BD88E0803AFC071BD9CDD9B4A939B0348B19
04EFEA577A66D54798FF0F3074A82DE919ED21D8728D244259A8FBF0CA42ED45A4301973EB3F
2DF8921C1C540D9028D2C2B0D1CB2A7E31FF2D178274DDE42596635BBEBA6EBC30D28F8332C9
994E347F129E4B5CC68D061093E3B18B077643074FC52626A47C1B2FE6F5BAF3DE8FB2103F2E
27B65E5196B83A67273A87F1926F24DF7A5D20D32DCC322388B4FEC43B7068D6D7ED92525BAC
979956B2E0E209B30D6C93C587A462EA45C6ED114BF3CDF0111A8CBCBA7935B930924FBE654F
8701D889D244F0E0B7F170A6B28C47C9ECFED5A03C2F02C752E2CA47FA48DF69DF43450A928C
6665447FBCFE8C543419CA33BE1B1703156F24A372A326A66FC5FEF30DB00EFA1C14DC50AC6C
C2801C52EDC6CA11390CEA74C95EF8B0BB8787DD2133C01DB1ECC1C2E3BFE01100944BD59BB7
39F1F5A03FB7B0C1EDDFF085100995397F37B67FEFBB00933E24DC0ACD060B0A8B3576016ABF
338112019DEFD77020978CC6E9FCA65DAA7EF8DB5DA17C9A8DDEBF9149D417E6FEDE66F7C798
C81F4A3BCBBACAE103C2D46B682E31C089F71DF9B6B8EA6F978FD6ED4D2497145DD3AFDCEF3E
DBFCB97022412481815E19FDBDF7950ACE8790E10A10206B0075ABE312EEC64B44AAA65BEEBB
25F619D6729B93D40FE4C34473A7EE4880BAA3AAD147C0F8F0429BA7CA9350BF60FD8B9F760A
F5CAD5EC12C09EAC07B0461BA095E9529252EFD40923E11BD438F2BFC56072757CC1F6A668D1
369CD3AAB40F2313624C2C8907A4564D5B4E1DF883854765D4ABB7FE85CCACA624988B135879
DF57DB80B799467E160A735DDEB7F724498B8824E31E4791804F327778DF5F33A4618B864F4D
B880DF0247C6053C2CEEFA3F5786FC54AA631C730CBD8BA0AD7D8A946086295C8B117EDAABC7
B32D2A612FDCE396F8EFFEE39DB1A466D4B54278EC8F70293133C88EFA371E3DC6038C4B373A
E73EDA93C0520A2CB354310CE4E94B793068AA33C36017CA6E6BC83340B31D28D29AA90C4AA1
2E94146AC6DC1E2F712B46B9A1ACA71EBC164C36AB32AE3C3D44DFD2A84390FC76879587B309
DBAA8E02574CB2D1B7BED8007C5F1B6208F5EC4D6D7B74EAE36F87C85AECC9ED803190B6BEFB
967909ED56AF04CAE5D346441A88A893F74269AB4C6B20B81F274E64B621A2716A8A8753F097
4E5FDDC01FB27BA6A6E77CF05F9620D0C6655151FC47396DEF002840DA88CF1882B8525BAB38
7C4291275639C6DE69B10AEB101EAC2CF9E5278485360436B175DA7D4EB5950704AFA7B9405A
B1D38A176D80170882F18A115F54B3B5ABC2DA1DDB42AB04A94BDDE7F6431AD79225A35F576D
CF62AF23CB462077687A1A0214D825C2CCB84E763C36A98BCE08EE0A02FB8B8A3C13284F7BD4
65CC3555F234C0F6B8777866774C5BD7D9EEA3B87502F4A9C153D9A14D97C2C2135B05BA3591
ACFCF85F45FC0B76070D104EFEBC4CE12F8A407F536D61E3A0C417A0CC34C2B8523F51A5D92A
AADC7B3E85D20E009E0692C23DEC307AA1C386D59D6CF6DC602D2495765F3C5CCFC89B40ABC4
90B0E8B7F4AA4F450736AAAFBF8283F659037A48003DA9BCAA34C185D675C617C749208F95C5
BCDFAB8CFE07DA6CB6D5A363027D9FC2B1EFD9BD54AB11C55E2C66E141DA8791A73589FBE34E
8FD6EDF70BC7EB9D8DD841D7D7241F30D2B06BD91890EB0AFE4A9F56323868CDEE1E37AE26DA
214716F1049C5EFE18FCA5B1236DFE62955E89BF0EEA229DF979D3D94B0871846F0C18DC4D1C
24E8F9A38908830FF8553AFB387345C527D564975BCAF4A221E64CB51B932F382811BF9E6DFD
A80F33CF5C3CDECA4F78E0A435ACA1E6E9069444FE1EDFCC273359BF99AE9A1E32C5F3B66C32
CA4F604CD34F5909690877DBB256B493FF5BBC334484A10D685072F1ADDE15ED0B721C65481E
D186A1C5D4E1206AD68C54DC02DDDAE38BB766974D61026867008368AA5DC311A762B8B785CA
B79A1722DB025C0A221D970326B80B2E28B339A967CB279998320CB6E06CF788E102FCF751D4
42176D3489BE4C6FD6D0FDE707460E63BF5A3CDF894A97E3AC5DC4E8344F4EB6EA1003B518C9
C1EEC8737BE6F11AD226B26BA81C6F14BCDB624EFC6FAE506570190CA689AC61BB9F135BB248
0E6745CF72262ACA1DF0518A8C0C6DE59ABC0E0439C91320DBBE7B2726D122139D1516A87765
2AE1A6CDD5C380E1482673451DADD950FCD7CA605790B52520525B29FE5A7E7A64C54B7D5C0E
0E5F4122754873EE0ECF04DB58E48B113BCA12223A876791545721FC84F519A8E18B683251C2
E535EBEB1123CA429E48F90242FC2A2278654CF05E06C490E5F2C1AE94174F09E3D43B2AA449
BED8D2D394AC24ECDE887EA2AAF819798F0AD88BC14AF69148F14E0D90F59EAAE5A4CB3D5760
A8002141937B382E60372DC91A9A9CFD960447823D58097355071F19EC08D62FB1E6BDFE7266
E9928519CEBD0D8B583F160CE46AC48A1B93FB6B6B341FE71E4A759709ABB9BA4B0269EA217E
ACF5F6037B5A91EDC22E4EB0F4EDFCC396F4EEC6B3593CAB769BF9EC9B8D2C9475B551CCECB3
1ACC6C7F089AAE3CCB914BE37C89C7F1B884EEA847E33A0A1A764AD800A06513F4FE95CEF673
132BCF928E8827839912EC09D2B7A6970D69E705C696D7C662CCCE04A77108E0F033D010A9C0
F436D606FA6C5B784CEC53701305A4C686C220E72053B0AD0E0BAAD6451A3F5E99F3E6CA24E5
317B7A9E69E97C1DF1C62B0A7DEFAF8EAE58FC7836A4198B16E6497DE5F47B614F8223F6D112
1A994C6646E15310A90C76EC058793EB6261F71807E8450B51D0BC290A63E52AE43690F27660
AFB358E213DAC5DBEAFF6688211296619F2ECCC637A6B36081A61C58217327DCC895EC4ED31D
F064AE911DD693A538E3621706E951B70BCC9965F4E65F7D2D086C52650CD59BE42157EBD458
A495BC3F47911C1DED75AAC02BE98AC5AD8CBEDF1535734C2272E6511BD0987BB2B3B76443E2
2AE9B12987679778BE101880DEAB2CD428FBDA07FA3EAB56B40D286A7C4EDB8B05C45E7ADD07
22D476B42A3C052521831A6429830AE53B038DBD43F8214F4C6C805AE4DC50051736CF595A8B
6F84C4EB07E603BD3BFBC1DF769E3777A1380F2B3C5D44899F9BACA7D0C8DE11188DAD3BEEF4
B3F70F3359A3DAB2D0DCCF65903B853D92379DB252D7C7806F1AA5723638C665F5F4354AA105
E3F6067832D5DCC642A37874785329095052B4A6C2EEFFA865B5F307A5E976A5BD7A42153464
D4DF68828920DAE4851168E667AA4034627A4234A33E04DCBED0C83C8937AC6F695721133250
3679D5E253679B5EF447196521E87B973F6BA8A229EF100E9513DBA28112E701960DDADBA856
D8556EA90DBFE07F4F2C2FC1E7D28AFC89F6F5919A2893BAD39B4C261ECB10E33C78121177E9
39F3F4FC5DB6A5CDC6CE4016F8266672F602D45CB377E43B2C905F1E04CE17D3FEF8D2D13583
880852FB534D853FABC4819FECFA3DFEF9CE55068BECC94A3A0EB685CBDB7B410372F62996B3
BF9146F1E8E40A007F6E633EC775B60AD1E2BFCB900D4F01F8F03AAD6440ACDD449FDAFFD386
30270D9F8994C9088810CD3AD2DB7DDA53BC82CA120F6F797B9D6971387F1B9BBA3FDAB5BFB0
76D4F7A17EE5D771A876682AF17739017FAC8F5D5E04A763F95204959B274A3B554438D21EDB
15017FE16F87149E8762FC54E0E5326994A694D2EDD89434923AD3F6696861F4DCDC90DCDCBF
A6AB7B64D73E0B6C709B68ED458C29877FBAE1C28F312C251584AD275533A9253ADF5B62978F
E69F03F273D0C6ED62997F8427AA70C42C60EF70DE3C9155C6F0ACC7B816CB291450F352A685
1BB1BEAE0EF125F2DED53879C911E50FFDDAFFE84DE86A14ACED24584AD843697CAC267E2C14
7D9786EC37DEF0B26E205570691C6063E07FD581B30ECAF220340BA5440A9B84DF49E2278FAA
6DCD1DA32F72972185920C4FDC8911BF33647C36B2F0000DA6D905B1F1CA5FC289AF8C17A4FE
941796CC22BED96DA743A532E9D3D53DF861B493FC9FCECAF5098AE2981A2F183548872F9E51
B64BB5BA1296EB10B08DFC27F81AD189D1AEE89FF224BBD8E95A6B401BE6EBE714BE31AB7F8A
90DD07D410F33C819FA0A4620EFB5DD6BBD556D643225557602F9AC154714AF13138539981CD
0604CADC383114C8F7D682C239BF928557BB5E09FE19F23733643581C0D1E8A934840EA77CFB
CE86498584EC91139838FD9206BFF51B46CFF6613FB985A6DEDD798652E630C77779BBEEB051
34BEB11A4204D1E7ECE83C9703E12668FBA3417026CD9D559525CAF4A202C66880BC1BFB58EF
C5E66A85131B0668C5860479C56333F1070CE992FD809B295F4FEA77854D8EAFA5771CEBF37F
409FA9809C5F207409DBD08EE877B2AB1D03ACD23C0EE5A7A0B7FC727C973DA1E939DB0757D8
4325DC77C46E59B80DBA9C3B0FDFF5CC42E30FD630C0CBF26096DF7CC6FA34B2000AF9FDFE1C
2881702A147C134856B1411EFF13E4F70ABFEDE1F300588EDEC326ADA98081C513D30014C74C
DCB944074CB3881B3FF645AACFD4AF0B7DC1E2990D7A8BAF4B02FCBE2EF40DB8668368DD12D1
C1064A7E099097C2CF9E9DC3E980C97087C7292463B0485E749E781A3FC8D8E96817FE0E4E54
1105C046135C86C4EA4CDF3A654B1F035296B9212217DCBD9CD07A3D32B5281DB5AEE9808BC5
26141BF96DC061A6C035F5DA34EDA3AC9BC0D99686E6412ACA00D22FEDFBAB311E2D55AE50AD
52A2069767BEFCA7BF52AF0670FE86EE4B108664FBCD4D461A7CB0698691F0C54403BBEB33D1
94C53A50617D6F3839A06746747E47B96EE38029946039E5695471158773067EB0301B5CC759
7D81D0C63974C63265C59F3BD53A4A6EE201F286EA433AF3FC2827952C76BDC3F7ACB2A81D14
C936BB155A21ED1E571F28BC8494DECE753370D15149441A5E6BFF163A1D8B0DADD6379F3CBA
3DD3E9C5726DFBB5D34E6D9EDA5E0674E7EE33DC443A07FF5B16E2857F4E0655011F6E898515
BD96FB03291496764077F529DD30DE5B9415236138A24A030A9D06123E239B8734C68F89625E
D55B29C3AE236845048D0D53DA55D5B41A3A6B67B7136E5182EBA6F04AD09BAA5EBAF11C27F9
6C2FC507C1768D7CDC42ABD669EF08485605F796FE66E39AFE14D96481E9F6DD541D56C0C17A
AD1AC6E0910C5ADBDDD31FA7DBBD11D9ECAF2A50978821A92FE5F20E407D5F93D8B05C90716F
A51D9586187C1F2928B75D228A19B0D9E49C73FD78D8538CD33161381B720CBFE6677B4A4E05
F90041D351B84494803560EA7ECC77A20E36AC1677D7DB5D2F4EFA53C2854E5587BCAE22797E
C8F328ADF0CE9199B99906DD512A28A5A348E4BE7CB571C8D127DE7A0BECEE6ABA7BEE0C2D68
70958399DBCB2AFE9B208B76042DDE90EC23A6B8C0707451972E12911A06145A787E5FEAC85C
462B58C68933067A009D6F40978896B80B1817B1E3F493CCE3664A19353FB7E0C37063E7F5AB
F428A7CABB3F454B783B7B2A6008DAEE0DADCF72E814E04DDB9E8CFC9C1A5A0ED2A3BF70DE33
5FBD454A17C5DF38054181B95988642DCE3BAB50D6317192DF170245DD75A895414EBEC37540
1DF8F994FBC44A3F359961CAA5759A928500A689FA02DBB1F05CDF2CACB2EEA5DA41EBB3867C
3936B346ABFC8ABF34D66A681233795DA9276F20AD5A17FE03CC9251DDCB517C0CACB16A8E2C
CA1AF014517EDAF7F4569D7B330A612D7D99C03654E02E5F4A0C7F1EC449B2C7909262D721F2
01166F975AB93A36A72428968A7BD2B1FC33B4E0A94FB5FEF835DDD975EF68B4F0728782C9AF
AEF705FA6CAA81FA58CA64F4261488B3C2F259851EC1200CA0AEEAB5C030A7DDE5B27F89DCC5
54C02A9B7F26352B94B4C3502BC96B202D3A0AFEE0F9980DA98822E44157C3DBC72A9B15A4C4
CE21AFC9DCCDB93D6DF8767C9FA124767B0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000

cleartomark
{restore}if


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 110 /n put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF728D2A654E52B6A6C90A3A
725F86627D7C3EC5AF5AC512976D35FE42AACA3FECB401788D0BFFD9F4743BB2
EC5B4E7891F216DCA5A69E917A171E0069A03FB214ED307DE947225049D46E0C
4707503F09811A597A9113921AAC23AB1CAA9866F81A02BDF349FAB129F23E86
E384C043053055938D42ACBF9F0EE86CEBEB011BD5BB7D593104140E6AA9CFB0
4E0B47C91E504BB6A95B2CBC36EC03BE01897C3D498EB30FBE4BD9584B9D766F
CB3CC7C96FE2E91604FBC4AC4032F55765C9D4D92A2A3904AD081025FAAC58F3
A73CAFD3FF94DDBDA0E58DC3779935D8C57A411817736BA7EEBF5A1B03FEAFE5
9A22ABDAFEF761C20BA35DA5FA70C3E5113E86CFB544E95C9BBB1640FEA0FFA1
99AF73FFF70FDEC00C28CFDEAE584987B2FE9AD3250856CDB85AC2EAAD91A917
87F134A4FBED440734EA7267AF81F1DAFE76C487B531CB5AEF60F8C504213D4A
0E822CAF7C9224E528E499F4554D98E2232349E8704A84833B7B2061C68CCE27
8424E77081D3DBAF453144367DF917C9B3C60192E8BFD83CAA296B1D558C0CCA
299860F14BD4F5B2874F135668772805E00B6A8DE95562D975C4D023CFDE9BAF
21B713F31EF3B9DE363DCA07AEE9BD0CCBE84194F2A0A9C811B5E1C307FD6714
AB893A0015289BEEAC2469C790D2A6AE1A1FC4591DDC73E7165F6592B08F4AA9
4DC87C8CA7337383AF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1DEB8CF0BE87C59313978F28295C0E3A01D2B5682DA86A38F390982A8FE
C3E81B8D3532C92C4A4A4BCB421D248F634447613101BA5B301431F192BC6962
E6F9E2542F1B0D3AE7560888A9344A7EB7ACED0D46351ABA0DC93EEB47CDF0AF
28B602579EE7E3CEFE0C6F5332EB843348D80B020E7A127C634BF2A3A55B6C94
1896769C33D5BEFA8F144D6DD702380447904C92197B8C7CB55679A6AB8FB7D6
2E3087D2CC3CB9BC10C0CC485AE395D036339862CF98337FEEE3394157B9862A
120162EE40ADD32C55B39E4BED180B4E4F51C28377589B982F13DC6D44E758B3
022813BABDF45231A712C97D06658FC2AAB9F59BEEF9FDBE186B7CF64ABDB9E9
CAAB0BC223880A2DD496BC166B6C88552D2B1B23965FAB5BC51D2EE90B8E1322
5688DEB8C76E0E9C2FC7EF7AEB6E7DAE821F73A43A5CA6814FC018337C234636
4D61A7EE4CAD90722EF68E825686812D5A20AC3874A33E3202C32E60B44FFAFC
8D517C3A5B86ED309A0DFBC06EFA9BA510DD6C8E6292544F0EB765371C64CAC1
F04F96546838C6E7423116B4FB72F7C81C47C55138A3819E121884A0A5E87BE8
DE4D02
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: BeraSansMono-Oblique
%!PS-AdobeFont-1.0: BeraSansMono-Oblique 002.000
%%CreationDate: Thu Jan 29 18:27:26 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (002.000) readonly def
/FullName (Bera Sans Mono Oblique) readonly def
/FamilyName (Bera Sans Mono) readonly def
/ItalicAngle -11 def
/isFixedPitch true def
/UnderlinePosition -104 def
/UnderlineThickness 69 def
/Weight (Normal) readonly def
end readonly def
/FontName /BeraSansMono-Oblique def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/FontBBox {-71 -236 691 928} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18A96F6D1C771F81C4B3B8CF0CBC2E8
4B44D923DDCE84E17DAE82547EA9EA5E732D78F03AA245377BF0780A3752527B
6E63F6A41202E7A6C4E4F9330A0AABBD04387E12F2ABF531216BF498DC6B6BE6
06DD50B385DDB864515170905E2BF225AB9AEF29A2181200040460795735C124
59C90AE9BF9F01F42A2ACC5A5D97D4F6548FBC903ECEFE9FBC8492EFEE55ED6F
F29A7BB50432A42FF30DB3CEBFE1C2BF83D613F2C846B7F2173F00B4EE5FAA8E
12EDC39BDDF670F50F6AF072673281554416E77FF134014D5C465127C28647BE
3E810BBD9EC9F9580C21D2E9479B8F0435749734B76F4C06995E769710828768
3141ACD67803BC92D5B405AEBD4B25D5DF255B110F1EF1C35D45D24AD0B1E0C6
8816579DF17721764D5D2CE396276ECE1E6142DC2EEDF83FD7B65717064CF671
051D92A9993F82D241AA1C3254DBD3DC53886264BDA18DE9FB8F584DEC9A32F9
82A6131D7140BC7926C074E26639A7141B87ACCD64E61A25DD7E26F463FD7834
964655DDF83538CF1DEA3D6363DE79EBBCDB429279F84F5DA8035CE823A76FDA
C2FE77036F5B9D71C0CBB063689C0C9770514E550CDBB1BE97D763729B78CFE3
DD162726B3F3190F0003F4812E9877545507664B32A1BC0E6C933BA64EEB3563
39606495CEDCB8EA6E63ABEC9F3558DAA0BAA350F45A6E9B145480D9513B87EC
14F7551489E0F96B698A104DCDAEF9160549D551093AB3F5F7EBDDEBCAA3ABA5
F0CD388ED13E9611675BA045A8E99C002616ED89D1F3EF0537C6E787DEF9B5D3
F20879DF1555A646A79400D3EB80A209937A45A6345C4E51748D3A5C523F9F93
FCA3628D463FABD8537A948B3A3715BAAEE70345F5186A550FAC78ACD262E671
AF8FDCC133800B82183CD17B4EA18EB6AD976F91FE3C1447EAB9EACE7CBF724C
7F52F682946B78E00F6C4F0163B3459FD68C958FD170BDD5DA586113BBEF60AB
50F8FD2347AB04EC32D2C40C50B9C4DB4463D24933E5D16503D8AB0C4459C0C3
00845103AAF5424958906530924D7BD0E993DED97E7CFC2B5FFBA03A7C12186B
B457C29A589AD391EA7E69563F06E3AA95F4B369F07638C1773BAB64C1FE8F97
0D471A0D13C9DCF49B16F8744B81AC53BEF659DE7E05C42831A9ACB9F9D08D45
3770D784C82835DC6FD4E321BD07B41D59B9FC118A74B5AA4AB4631DB0F580F6
C560E7F8B803E493D30A1E67D2A6F0185D046D6B687F38F824D1DC1B4148D625
5930A906FB676D3E18AA2B41D1DA8385E076896DC203E12FBB3F61ED6FEB1660
D7A9CBEE65765788CA758B2C4EBDF492200BD4C814CFC0E717D338319E2C677D
7DE40AE3B13D070E7A109DBA9E24D3F95528E55AD9CB3E7BDC8E4BB4E21BDC85
92E8F5C5221646432ADD1F24C5DA1B69E6237A09A77EA0CE52F0534C286ED117
40AA85D8CD92374A10E504FA7C3A456B594B30BB1849484C6497BB2C138D356D
7C32EEE419C7647C331364D796727877E562824A79FE06748FC74275D0BB442E
B697C32E2A4F85D14CD42EA4221027D34D72F62E1ADC25B4B78A469CA929E39D
11C47DB490A8639815B4B34A13DE2BAB2C6FEDFAF3979C5B5F3A7BC541FA68B5
A28D9FB23040BA54C4A9076C65A018C85656ED0A4C903E12A7FAB8CA114FD297
FF2BA7850D94DE6731DACE835F0E9EFC971A25EBE3A18918443355B3FCA76880
0F6D64DB8EA493535A6DF4F0486E15DAC7F8155D5D4E352A711408108878E7A6
A039351BC822A74077139762A6789115488415AEBC20BB4F7459731D71A8C467
C486FC7788555FE9718691339F99BF79656E68121EFFB4E974630A4629E70363
AF5142F698C56373628B47C3D2359EC6B0D0C89822A9BC599F9A9ECEB95F8AF3
60763772741F26A85CC5C58BE7880A54CDCC2DA714D17A7AC7983CC64D86393A
617AF905B3E515FD074DD6B82F2DEE9280437A94410E12B722E2D35D6FC7F2E7
45464A929E3DD4DB53B149DD5A78874B6213D10B87F0B4050C143415CF45F8BC
C51BA3E21B0852991AB9E1898FF0A4ED141401A84563158CE40858924F430529
8926329A599CFF69D031F67AA755C51A20BD51D57B459DE53E6E0C35C4757F33
23D870ED82BFFD00D5526596EC4B10E557B728CEE513B99C743C183FC29E9CE4
0308BB5FE1BFF8A2069171FCB8DB20611213A81A1752E3D38B16E4C602919BA6
042FAF33BAFD9F5647D90EE32AC7631C84BD480A4A776C80DEF557BA793ED500
F05EF3B03A4C5B70C8CCE16D8EBB84BC3DAD567C0BB15BA02592B5AFE72166A0
9AF95374AF567C266FCCB6871494810DD594D445E487697FF897BD13A7BE4769
E3063E5A04209821D98910F9DF3537A06658AC8999AE35D9A0AE869C577ABA3B
904DB4C8A6964FA179F05A5DD30C1C5B27104843CF8C9F8B4BEEEF4535C6130D
9D1F61BC3F329140DF7783438BA35B97651D5F429B7A6A476806903DAC1D5CA1
AEB3D4D663D04EC1295DBA1D77054E3B3C567BE81288C9886AB2FB0E1889DD54
DFE357677EB8E71E9D2846E587DBEEA5BAC7DE132386AF274791CD727DACCB3E
7D7C097FAB6BEAF7FBFCDBF15249CC457AA0C559678EC014330350D4EAA7A7B0
C1B715A0E8399298C423F08CC1F563ED1C01C065B75B1F184B89E9DC1EB4FCA7
DAC90DA0ED53452947CDC23D9DAE1685843F7C6ED2D27437856A5384862EE3A5
B2E3D44C8CA552563FDBDB42C02DDBDEE651EB4BA617076C3BE05F471B3CDC83
400D1BE9751E75C506EE316821BA93F1F738E8ED4A53F2396D5ECB9E48555721
162E66C1BE89434BE23FD8E5E2CBABC72742C35A983471C1838B8E979D0F34C5
A974521B80C6C65B0944378D23AA46BF33D577288AEED46F0CA288D30FCD3A69
1E01E24F01CF157919378597001B75DAB98BD0B3BAFBE983265B4BF272BF0DB6
4281DAFAA5BD9A4A05C65798640D56C14086AC844402BBF1415CCF1CCB2F0409
25E9788C2761670E15AC11B496583F798644B4FE6B2C15E418CB304AA0E1A68C
7784B7315D1BF1E8E3B4D51D3601BE91E47123B548863D7111FC8AFC14629B90
AC064409BA5C5CB0BB8B396F2309FD568CDDE0FC7866F9B24E19BEAE20A7F938
A8D6337D18FEAC54997A284D34AFBC18CA02759E2294FA7079EE7E2B0C317896
F7E0A4E2E53DD4D19BDC5784178A834EB477BE52BD4AD6CBDE89857A7C9C3CEC
4480556EFF41CE7A629AADE121FA845CFC6C5F49967FA80E0BA179BB3AE0D8AE
110D668B5B6BDCC5A82ECBCD28868B68261C35E47B88BDEDA76701B99CFFF58A
CB47D6E88AA64D7FCBC31E12DAF07109E3658C5C89AE2EB79BA52D20C42E0551
2461B702BA43D6183B70790823912BD4B55ED5076AC2231EF998C0E8E79EFAB6
2B9C15687175BF446989FF9F7F9F76EA0959F2E18F2AC5DA2B8F9E501B4E0509
BF582C7962F90922DCFE5D0A41B6E6320520C11F1D762112CFE9E409430F28C8
2C1620642D6BAEBCBE677467E02BEADD7F70066E69D4411123505CACDE48EAA6
EBF7AFBB97114FB66081BF957407D155D538CA63CA453846E67055377E3A7BE5
6356377631B4E3012F9F7C043D6D76CE464E0B720BE5FB13FFAE9181D9A1E6F7
C2395574A3E0C74D14D55DDCD60E209E70CC56ADBA59294184DE70AAC38B357B
F76A1A2B236FC510BBE81E178F00E854697E15EADB96B0576511B2C35B60FEAB
591FAEEE1CAA3A1C13A6200D8AD17887EEFD1EE2F666D42CFC9AA70BECE30CE3
DDE0E07696A70106913674CB395CDE885238FF66C77607BCCC30428F4AA6DE10
B5657FEE88039867BF17D46B89AA49F7E3C629647CDA67395934435FC763DE27
44E78F04DF8B0C31D4C3DBB1C64CFFECF2F51901E9C500E2FF636EAF39400FF5
1F64C632F264227A625AF7771D0690A94B78EB7206B9499CD7AAC30ACAF947CE
EE7A3EA48A15E89130EFF0BFB69F45C7575358FE6880D4CCDE798C0827B21CA7
8BA8145A742083420A07D04BD593E71F4B95076C51F1762F018E2E80702C1F51
6E7570B8AD233BE2022B402619EE0E049ED0D2ED3AE97797144D3AAA014C3699
3434F7AF4233524FFB3D16AFCF148586EC1A5B715119F02FDC2B17F6EC2099F2
6909D8A71464A7457ECD19A324CC25ED32470564EDB7020EE3794B6F2CE28F7B
E689F266AC31223DEBDEBE5F6CDCDA2A4615EF28F7C8730BDE31114A589A6DF0
28E8E8448B8B686F3F260ABA1D3B5DE4E8545FB341E78B76CDFBA05F80643B76
769B6B1E315DEAEB779659039489B43D6B53AA7C9E31DFDE082DADBCFE6CE8B8
B7C2842067279E824D0CCDA79E9909EE6363C14D5D1A572FA7147AA54FC3E36E
A426387A0D4E8776CB79FBA815B789439CE5A9F7AA73D3E58B4E26CD2A96C07C
BB935B7216487AE342A933228AAC23E002E79E06A95A0ACD455A24E477AADFFA
995B0894338CAC258726D2402F0C7DA62D130B14447197A722BA65EA8F501921
949F0DB74F97C496189CF41D15194161FE9B98FCAEFF2A513AA3726E04A66EBD
AA86A268F71113AEC5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 101 /e put
dup 110 /n put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D91051800EE6C54285
AB0594D87D05EB4CB44FFC094DA0072AE7D4BF2F4F9BB812FED256B937BC2574
8C529F97ABBDE98E033CF1045F471DF1BFEADBC5177C15846916E69AEB6C5CEA
43DF5C5D23CE2A0123B7F3DB21D4D7A800371D9F554AB9335E21DCE1A8B5952A
54B569B34D3560958F72F56F238A7D895E41D225B725BC865425385AB3AD1DA5
0D6C3B7C572A20F051318FEE347E34D446F595922BD7325FC1A5A4FA2625F03F
464AD876D95A5A1F54F33E1838612EC35D854C52D30A01349D43EA140E6E387B
CF102EC0769B3DC70C9FE3BE230318DBBB8BA4057784A6159F283EF927D72CAB
53B4C775576A86D629F251E11D664008152BC1E474B3624C0E06E154961C28DD
E476EEF0B01365A2ED1D8F19418A36FC6C653C5034F9FB9A18DE3DF47B131055
68836D7998D9413CDC95090DC7B29D5338A6DDAA6E9A8F13FB81B160FFF45F5D
0E2605FF72E659EAA8C519C0CD9AB50BFFD60C8830E85C603CEE72432CB7C45F
2F1CBBD4739B07656C46F57F64DB5943FEC105440A99A4DC8D9866FA4CDC3A7C
E8933D10683D8A9E10337AE6920075FBD5C3BD5DE0EE141A4B0604F71078386C
023BBD8143AC3DB40EFF983C8E0E41986B467CAB0A24DF7A64D39EF7D4A56F81
169E96651B5E25862E5B1AE093387ABB49C568370F03AB5122171A7C70C01641
BCA8A4FF20D0156884E39EA4940D1F6B8FA5ADD82A0CEFCE9A4487A901BC4836
6195C42BA629F0B4C03E41F3FE0E468D399CB61A42EC96D8522EB326F8DD0F5B
334D0A9241BBAA5C1263A0F890CF96BAF4D396DC9D0FC637B6901B619A0BA066
A36F4D73F69BBAFDAF9BC71925DFE4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFTI1095
%!FontType1-1.0: SFTI1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecti1095, tcti1095, lati1095, lbti1095, lcti1095, rxti1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Italic) def
/FamilyName (Computer Modern) def
/ItalicAngle -14.04 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFTI1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-94 -320 1401 937}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F3352947BD440B27EFF35014E69B2D4A1E3E6C11
B5BEF15F1C9B9166BED773C0A7F7CC50982C77DC7E78F250433EEEAF42CDF094
ECF6E1ECF893F6FEE69AA0F85D5DF1E7EADED78FFC156E291628F8CC7804F06B
62D3BA889336AC6ADBE1B7D60480CC1B296F9BCA97DE33DCB279D6F0BA3D9A77
A23E61EA065CB50088BC96CADB967FA8D5036C8555CF1BC24BE9B5A5ADB87A0C
376E0A947BA6CE72C317012D37F8E705B41B5691F1AF74AAE195FB30F963A98E
AC0DD6DF90B9446767E26BFAB29C5137B9577FCF00D8436102AE83B626EEB40B
237373200ED0F4E65426EEACA520A1ABE781A97D898FCF322DB4DCF6BD2703F7
6527C76B8CE52F64CE259A3E658B4C11AC2E62A7850FFC2397A96AB26D8425AB
400B67D191412DC8B3ED0D44E4B64435CA93AEC6BEE702B9D3B0F59B7B62E6A1
534CE9687AFC4DCC819CC6A624392455155D18510B8DE55E94B7481F52029839
8EDD33F49AD664A57F6C46CCC8AB92CE365A0F10AD75A110791CCE87579E8BA8
401BBFC529DCF7AA05F6081653F573F5A5C64D1888F358456064948CBF73369D
4410E744F4F16C634FE8C6E0C1E02F218B069277935A3EB227108B9B7FA9D78D
563C5890384F13A6E29A14234B37B223148F9C270579849E707C6A729AB49070
0D991DEDB7A769EA9B02F440D64A25EED6E6770C3550943838BB8D6B2A70A3E1
6AF70890C661AECDB7FC2B119A14C21D012320856A5B740DA507011DABF49C4B
AE84196E605DA8420AF12CB0DF607F8776ECED9AE9FE4E62F5A85DCC6EAA4C14
832705AF38098846BCB59A32E8C9C686F75641396C487F779C951BD68B34894F
BFBC7369C5DA34BCA739636D4445F8BF2CF5D25427779447B6EE1479E47E18E2
6AE71529EF484EDB0A79B777FDBBDF2AC9485E8DACAF539AA945AFB653A67191
E2B544E919DA7ECCFB710BBAB2B4FD4E7F19C1470B4E2C609BDB781A6DCDE96F
7AC932677F6A4B4CB924C4919F5EAF5546D773CC4FE56BD369E55A826AEA2E2C
8616680269D83798CA916640A61B18191ECF1668486A326D71E272C7189D4074
F32F94A2EDB3C11358918BDDC4B1B285D7EE1A4EC1934BD726D008A91C7F75E7
CE238803684474D33E48108A9311EBF8EC8BBA8ED193512632C4CFFB180A4054
B02E8F4CFC38264C602D0D1E1BC87A7B37139FF79A443BD847AC598AD257D15B
1C247A25CA3DBF9397E0AFB7F8F252EC70527AEBB221EB1E6A811CED76FF36E0
A79983B1874666B181D0E8F7D15965B0A9705D1B5F7ED680C722C70477DF10EC
1F05991F8AC46F7AD2B6A2A8D1867ECDCEA7739482947F1C6D1EA367589C59F3
14217972217684473FB839E44C92416AE6CC2B931BA80871AB1502D80DA73395
BCA835DD14366598536699DC80FD90A866830C53C985EF566EE0025D177D8718
8FE3520FC6824663A7F3F263BAFAA03E32EB713DE7F6550079954C481C3697EA
12F2677BD36DAFBAF589E1A177F0D86E0DC7B5D695317EA4E7786D750C09528D
DF1BC705815DCA5268A109DDE6B2B61F652CCCE1C46EC92A4D3F5C4435FFA48A
F001CB92BEB44C03224DFD3CA71B3F973E0E04220663D0959A407015E556EB8C
D2CCF0E35720B0C53E84A0C26144A6D9533336936CDF1901B53445CC26B3E501
CB5D74D7B19519EBBBC38D9856EA271F903D7BC9F45AD4021F3E274FC91EF298
B5F602A4F94573C0E001E415B6D64BF071A2E72CB6E89D32E1BA01B6F44B06C1
D9FE9142B1E2EDD6DF93AB1185D0B5764CAB113D8ADC8572C999E639EE243A61
56F148255C915205F106613AAAA43C1B428B8F1AB5F8BC9E9DDFDB255719DF0E
DB7781CFB0BE9E426DD9C4D3F28A07FF884C9E4AC7085BC69220AF241975A19C
FFBD25C88CF9543DDB2697B15151088234AA83751A8E32560259CB241746E913
B99D26F80F4824DBE03BBC46DF88DDB70D0530E581CB441C72316DCDB0326172
364A099A5CE4DA13FEE0FFC4CBCC8B80947EB6856A229467D5A8493B3D41B290
CA0CFB3605B8DDEB76DA57E5D269C67B6E0BE6073F74F70A66AC90550CB0DE9F
99A91DC3FA33688B8A07A856417C03535C3E49999961BEED657159198DFC4899
5AFC7007489C39508CD8DB77BC76E0908328EECE858C899168D0E6F9ED5242BB
CD56A9ABBD8D0F0DEEFD2B24F2D10F52D92DAF82254C7DBB8634A63FB7E47F36
30C69A079D715A506E52BE0C0A2A3846A894BB1001E7AC43FEF1F46B90E6B049
7E4A48A0EFF603B57D1BA77297F8A64D1C43A2AB285667707177C3FF62666338
0089C45BB2A4C3AB9DCC2AFE0B780D54AD116CA0BDF1816FC35BA4A820A017FA
6B9193D91DD9CBEE48B3F4FEC235AF963BAD307E34B7BFC5905D4395ACCB3EC4
43C4F8B6B8EC5796C2F8A1524C8ECAF12C8671E24BE60422FC0A97D8914BE663
61F753DA211554AEE505A65A240FFA7C50C69BE85A6E3AFD4E0C53EC2714D55E
830422D8269BD4C49E0989390A1E4D0239A8189209453BDB8F301EBC0C146C67
EE26A5CB006790D4C85E7DC74CF522EE900DAB2BD5B188C92D7F7756A9B2EB1E
06743FBFCA07E340F5670AE1FFB8E694DCB2C829599D8707AEE1D3FBC520301D
C50C29BA00B6E90AC2795D83332539DECEFDA5AC29B7D418F684CE800342B9E5
E56D87324955936EEBD5B0F572E1577A6E0BBE7E761987795CD804D5FC28DCF0
F8019ED5DF405B877DB57F85F0EC7A019705EB739B376D0326054B8F539D607B
30F8AB3A1CB7231B90B4EBC862133314CB512B6E5A06571DE7C485DBE6B0ABD7
E1CB75D226C85EFD2E4FA4FDED5C2AFC4524B3EF23CD9DF9743F2ACE02FFAB67
E3CF83AF7A9ED4B5921A5C4B2B0B8786052C572F3727B47EB3D7F491385112D3
68489DDA9A48A9700462FB215AB875FF4244C8DC536D49069FDD216819E3C86A
6D4BCC676D7292084C9B448800A881953F6B29116946F4C9188D189DFEEDBE86
B805258EE065759675A0507B7DC70DE112070D5B477C955C8A3AA8EC55DA3081
47786FD7CD7D9F0D6F48ED61E38DF7FF7989EAA15DA273DCCD842275C8FBB600
3E416E6CB45E6362D91D9B7200D4D6AC1263CBD6A3D56A082309A099D08B5349
9262964E479C3AB4AF7BCD25FF1756C2EBD239A140413C6B889393D35EC332CC
EA3A27074C104175E3E7E809D3D90B737C529217CDFC1B2B0D4C38BD0C67A88D
069043F4BD5471612DE6935F81AE1138FB78A0042C6E3C0FDBD0A72C08D89F8E
A6BE18E671C95A99DB0B93A0FC4E93B51158441BA9970D09F1E8E4A524884E52
445AE7F45857949472AC906E90C6A369B773AB2E1F62D1F9A0904082A6A7BA76
BB3012EFA3EF13B5CB54A9A94396A87F0340D1A5B433479BCC14F25AD968C33F
E86346E3C9686CA3604C6AE3B8061FD5A6E9C3DC9A3F34376273321DC5FF5859
1076F6D871B9FC3FBF06EF866BDC2078EA19456E30F9B29435E9CF7D99E2E7A0
B09D613044B10987945AFC328FE6F40F1E06399B085996B99730BD1B359883C9
8733929468788BFC549777397882A8DAA878269E1F6B8FEB5DD091D1AF7BADBC
63104BB1577F571578CAE73AC7617F61204CC6D61ED82D4D11BB33FB7F0E0424
48478D3ED7AAE9A1C894A17D8FC53F00CC9311EBF8EC8BBA8EC0CDC49AA8B91F
A0303A5BFCD4BBDF58E3AC347BCC63CC8D00015B8E65A3C355E5FF4D990FFCB0
D05A510D17A5976E4D90C0A2AEE3BF22565F8F0732926FAA0021141843A20AD2
F0DBA6621AD08CCA90683DEF9BD4FE1AA5CF9717130F86A3D4B669BC65C95F7D
DE441750DBF4EEAFBAB0550FD7BCCF119AFA083EF443EEFE9F33E25E553C4525
41B0721856474C03AE17956D786382DE8390A9E77BF5B24A44F45F43A20BDB91
831E4E9B0071BCCD21A8206C5C40608203A5C3D5836CAB1BB06220DD9E53F92C
EEE279D454C520537FEB050D65A4FED1A48D45A42ADA65A334F5AE1117D4ADA0
3CB2AFBE3091974B26187EC086ABA17BB167CCD897B64997FB130405B134B804
F296BA6D1482E9C73FAD3E78B3D71B7757CAB550549BDCCFF22D91BFAC975D0A
AADC2FA9ECE0C669C03B8FA0AEDBC9A62B4A83EA97173400073C21AA02010163
CF5C0E3EC40DAB3CB6A9708BD4365E4BF2733642D8830454B3D276E1E6D39511
7D0983AC33EAAFB4C15E1DDEBE00DED0E676C56C0C8B3140A9A43DFF3C144835
42C641D4061430D58A4EC2C73FCF04372A9C5E39367C5FBAEBB73C523B30CCA6
45B8CCFA9F6EFE382FE4FBBBE7EEBD2D0C6D7A8DECE666928A10E2F80BC9861C
C7439AD1FAB71F2638DE722ADD2D6D893B51988136A74ACEB184E38437500964
71C02ECEEFC1682471B5FC5B9BE436D81C5D103CA1E3C68467423AF6BAF14265
B5C4E856B817731C66D414687687531E50B8C6BBE8A2AF20AC81134D1EAB2916
45748307DE1610FF94F8F3980ACD233D8056EFD67343990A15C4E18FD1958999
FF76F23CF17109BCA7E9DED4236DB84139EAE750E3041EBF0544C11C5375F8A0
AF882447EDAF0BA01DBA71BB666D1677BF14C9A9A4E3F160D2EC4C5C58AEE2C0
8B818692657245795F4D2D090457DD21C6274009382A01F835FD4BD711DAC552
E0627949C88BFAF90C8D4530796B19286791450A1CA0D25E4ACD8E94CFB4A811
05CF9F0010874FCD812D449CA5632EEF618E6981A26662058C3D006BB070F413
E9465984E6B3DBA0D64874814683DA17825376C975A17EB4522F9BA6A9645652
B4D9BD505A485CE71CF6D01F362033FA73BCA79011F3405137F9DAA06B2DEE25
D2EA1844466C7AE5F097EFFDB7A028367380CDD6111709678673DA22DF01E879
C476EAF566B2EE653CDF1F9C7FEED01625938C05778D06A527BA83F839314635
2C6F91EC06358D799DF62B5032B77CEAA48BCFE3525B3AD83CA1303AFD870648
9C39508CD8DB77BC76E0908328EA89AD4D923AC1233D38398462824BEF1647CA
2DA06977DD9FD26B5D9D351BF5739DB35A23A45419759618084363551A6EB2B7
D1DF395B1A303F775B916E11236A4B7371087D04C44BD11A6DCDB73AE5A9DD0D
86FB2810999FA3604E6D6F0BD030AC26AB9474E52F0676E3B2491626CA7407E2
FF56014216A274BB42FFD3BB8217C1B5A77E1B079BF6F243F8958111AB11B0B2
7C292C8F30EC9CD3F39D2391D59B15D9E38E9D2C00B939B26714C33ACCB984FF
9C3880F47FEB8ADC190B00181A86C465945D3670D967A08A9C8B97452832073C
73E43FB69BCD78F3DE751E5FD5C378F5C00FA615F8AC7FDC883E15A201679CEB
08E50154E3E3CD9BB147F4CC3D68672EDE6BB2CCE23553BB17F8AF6092243060
12C0486DB53E41FC2A1FEAB76A8543340024BF4E4D11A3A4C872FD2A6DDEA95A
E25F6488EA8D3235852CAFD245E58F566457A20D07C10128868272F8D6706CCC
0540171BDD622BB3B9DAF843C3758FE706252272CE51B3287324DFF64148B5B1
30980FB0DC09470DFFDC4A0ADB476821803E88923DD9EE573C82584E260A752C
0407B5F2CAE747E4DC41DEF73CE3D7B529D57F922B7F2B2D119F8EC7DFE75503
C6822FDECFF5AFC8AF014B7EBD88C9F5764ED65DDB5810F109EA0692F8822623
018B4D894474E96780AF123267BAC93796EAAA2697D1F4DA65541A1DAACB9A4C
B9AEB036B69D4DF4082A5476DB2825AFAF2F3FE79DB14DAE5A39C14B151B51D3
532166425DCAA0F0754D33163A4C3263040620E3E51D38EF3BF5F9852614175E
11F75FC1C671FA1CF98C60E797C1BB73CC903B35191BD08A66C13B06DD3D9048
D46C802E52A7363BEBE9D39B3343F5FD68190345E882415A8279A8A6BB7C88AE
260A1B4FFB6C64790478BC6A18E798C9B19235FD0485EF4BB9665C6BE6BA4120
BA817AB49AF04AD1D9A6A5FC74A8F78F01FACD379DDE7F7110218AB329AC529B
C8C9356803CA4961068A9071E42395D0D90A1A0932ECB02D057A295A22390FCA
60FC701F111B48BE85DDBC7CEAA48BCFE3525B3AD83CA1303AFE4F9D8010E8C0
6AA564E6A6EE8E3C008C7721D89A19E8B6ECEFDC0C57728145D99A899F7BED44
065F0596BAAD00969C92D66E1747662BA6DC98697D910DCCEBF116A4828A4CA8
F39636A91E7EB672A32755AC0E2D6926367CAF2AAA214DF47B13C3E067915C52
94F65A7C60EE724E5D6423700E0FFE02BBE72E023932A2F936FCE030CFEAAD4E
A0CAADB7E0278BE72D0270E12D1DEEDAE0D53E95C3793DF9D2442F9AECF3DDC1
ECA9B83CE5726838DED788554CA7351753B9E8A4E788DD8ED4A2EC5F78230A78
D88BEE8E5AA5EA8190914A40B179135893F2CCE85D4D2DFE12F49329D85F651B
DEDC1B02D7D06B9B6614618068F92EA79BFC91EA5246A71EE83672CD3207FA46
B320AB68A367D1FC762962B1820D027B8AB2812DFE408B2C53FEF4C58A1C243F
368BE5E4191E303B7BC3CD6F2B11206D06FAFBAC9B5BF5782C69E633C0916F66
6514CB0ABE2E10D764453AB481B70301BC3AE99C7055162E3FE268BDAD543051
02A5C56E2DF756810D7BA76BDCFFEDAC37B01631F3A0E926766BCE79741AB473
A45531FCA6A3415BFB34610D1A4FE322CA3ABAB64C14DBE6EF891E4D22B39558
A2317CD10962F6BDEA3B09E1A3FA4C19D2366611F5106B4914BF137E1EA8EED8
CBB9AA7BF6871C57088B3C645105D530783115C4671E2AE2B8CF02AF5157B9EE
B3ABC895174C3FDCACE78B900C12D742D1BCEB27480679F2CDB80A1D741DBD9A
711E8E891A08246618EB16DA6D117E4AF2445E020BABDF25DF4F46A0ED60AA13
0149651F5744A14896C31F3D7253A22EEAB6B562DC60CEFA54E555BB5E29D195
8F2DF3A93E8C92F737331E4A04C4E1273E95C5201139273FE87F76DF85514789
0AB956014A804BCAB7DBCFCC3E0F07C0EEF482842F59F9FFBAC6391830EF5CA5
7AD20C60B50B7B314C784BEE07170FFD382568132096416D97216425EE0E4BDE
8C8C77EFFF928A004444AD72A716B018310819B480E4995FE8DD1550B21E3C82
0A4DC640531F5E5B8F702D27757402E830B544E0B8AFD54EFE32D10CE9A17CA2
30AFDB48C56316818AF6592F7C46DBF783C781A1F5B5974D2D76267B95011177
AA7469F29C6AF579DA976BB1A9E7799C5D4B1523B30A199DD4A7DE8B7A3B2BF3
AFAF77B153CB81108076138353B80C61DEB9317FCF4A5AC6843540F3E17C0E75
420A27A072AAF76AADE6EBF4CE82ED6318CD3342AFA8C2997FAC841DBB9FA3C2
571FCE16D3094F5C09CAB49208872E72AFBD603222BE25A756399B84777B60D8
1D0FD19269EA8231DD2AF5754486784C03525D082ABB14D66A5299662B553602
08180432BC91247F4BE8EA33D99050626123A85D6A7D6CF1381B1DD5E631CEDF
3C70FD9DEF29D2F6245F8E60C074C6C18EB844541694B2DBB0A4E923DBB843CA
F362DF38E1CC0E55B4446473DE6C8C6BA09722F5817060B17D19239A42F15066
42CBEF9E5905CF89589C564BE309ED55FB41D848A6CC9AE210BF2E941E093A53
4D94483A59B67B44C8D0D8A5FAE233DE593276B50E835F224C8350D380896CBB
AD28A99ACC3074F0212D585BD15E9AFD13422D16E9493A2F85039F59C5DACD72
9608CE8AAF3A48C72F9474ABE483FCF896577B7D75C0AD49A9C2155E82D625BD
C5E567499D3EECD9C2887003F865C71530EEFE823186355E912CE921873F7875
36209011AD3260FDCEC2B61162DE2FB18087C129B2E697B64944126C058C2C2E
FFD253CE73A9B36D1F52208C69325CF4FE2D3C5D21986C8D5B8B8B32674ECCFB
2CB127FA6188165D16F2A407B155D3A8CC1A09D266DE52A805620F7C570BD891
AAE0661C65311170128D355C33C971D8A6131052A4555178CD509AB35B5EB4E5
376C93D672B6A1A98B3B6DA22844B85551F18D0689BD8D5E10B5ACD3A2A01EBC
E4900C957D7FC66A801D6CFEB3517B82D1756478B78D3A6FC553C1FA5A97C6C5
DA3CB8708911BFFAD1295B258BAA0A329178C872FFC1DC9775C83BB0334995C1
56949E22E1B528FE211AA425C675E45379541D8D4A8991A930F82571D53D8690
15AE1B69E59874252F0D7A50D68043457B35DC723A60A75EB8A93867EDABC048
370EAB4E1A29F08F9C14B623757C226BA6AC65DEFBCC8F13A43EA3B7D414F784
8B4FF92F4273B1840264CCD5E7D86AA3D18EFD237CDA518A4BEE2FD133B7A18F
A8DD55EB3B6CF717E5C90E66D10060C588B80E800280E232C2C18B3CAACB2D4C
B6D0F823D45B6333C19C934CC62A5072E86AF46E932D44B50A8E94735A424902
8E23FAD7CE467FBA75ACF5B385C37CC8D291C80031EE6CCB9DEF18F9A1736B56
31A9DAAFDE3F0A7DB4B12F0902609E34DB917730E10C106A9720B6B7F6BBDAA2
D0860497D01DBAB7C573C089B975E7707DF678492F3F161094164C7F54CD1831
44A996DB7715CBAC3C6E4FED5D34B47DC120CBDC8FB3F54324112DC66E4F7A66
EC82A85F4E86A28E0C537E70CBCE27D9AF179FD6B988D0CBF48583D0F5164F29
70212870964508C90B2D0D264ECADA594526FBA26021B61B0638D2E38AE2AA30
098526561478FEF4D30969E4CAB1F6556AF49420037A908ABF521D7DB065F20C
A9ABEED321A07D23CA44F4F552ED66918F252747423C9CBDAD9C3247938EEBEB
5C31BA48D37651D3C1504EA069AB90546DB21D444B49B1C0AAE1F2A93AEF54FE
B8B4E235E3DCA09CDE93BCDA2435F8807D6493B7C6AD9FF6046780C3763D9D2E
E59EBD3B61420F5EE1EE6149F64F24049F113027C660873714F9E247DC93CBDA
05B373B3C9A36EFA989959B0038A308187A7396C33F9664E712644E1309E321A
C3767B43839A565DACBDDAFE0164529FBA57A390B5B5C4A50AC955F9BEDD03B0
729C26A666807A34B7BFC5905D4395ACCB3EC443C4FDBAE5E06CCF965B3F6304
32035487F0FD508E06CE0890BE5FFA129CC01E565B3522DB975F66E93275951E
B6939E90A0382FB2F5B60431F67EFCCBE2CAB0755B30C3FBFF3D020F7E7FB702
002CA02CAE79CF2D51B75C8D4BFF0100C59CAC582DCBF700753636126FC304D4
6FA3E91D728807DA6179712958D1F81BECD4BF4BAC216DCC76AAECC6C2F927B7
74C765DE4306EF30C49374364AF286DB39F36AC8B252DBF3C798609482147DB6
F8688CBB543D3928197003EE8F207F548C92DCC4D49B144506C27985A8122451
9340C30F6EC6119B5BD0BDE795DA2FCF877B6A0E736B1DE557F79465D5AF46CB
6E9AFE43C103EB63B58D5D5850D0226C556BB06CE21DC15165D0CF3407DE5CAD
96B40D5D62AC4F5C2EAE78A06588B10D6125458E11A0373883394BA9DD6CB72D
A3774D18F6144CC8F1055A044092E178E2818F7F76EC845171BAD91EF8473482
AE8A1054AB696B497F17CAB589A8864311883460B078EAC63D6954D4FBB581F1
5C21D4B8816CB61BC60FAE1D03444DADA776A47AD9AFC3ACEF3AC4890DEF5150
662BD0485A9393967C7C97C4A7384FD0C9971F4366F460F346878A0535B4200D
FDD137447AAD76EF314567EF7B00886ED9D52A21096D02B3123025C83DAAA2FD
9EC0423F951E652D87251DBCF8ACE59E335A06D112DC3AD4A1989A3C2CB2897E
C63692696B62640A8DAD92FF21C2B8B73A859C3BADCB7321477B2E00428A9AE5
CC05DD047ED183A031142801797162A328A79AD0D6A9D442D6F6CE72C27B6E33
E4579496764A93FC4A56D4A62D0D1F8C18CA39161E36F0735DBB56FE1FC81239
042CDE3909DC49B63BFEC2FF13B69122419E560E6DC28FB58A005E235B9EEB4E
BF20263A8012A67C84D35DFBC47998037D5190706D2246483E31FD1CBCEE7CB7
349EC622D6DAA547F7EDFBA5C3EC49D94E6CE2FD9E04C816C7281A7CDBA6FBE1
0EED9B181A01CE4F79F487BB401626D8D5662A85EC8B782BC023287E0596E8C7
021CADA860FF851C1C09E1C5281C859EB777FDA513DFABBDB5407AA3240D28AC
0E29CB87F380D796441DC697A168E4BB9C8EAFB9020CC042D144D2A462C0E569
96D697FDDAAD58CF3E9D2CDF2CDAB01816D466D9D1038E882F05CCEE5B9B5F09
3B200D63EB2C312665A8DF20C9FF09E8D012DE95F32E5E1E07C9503B4DE853BA
6CB968DD682DACEEA0E4DACA3ECCE595709D640B155D287D01AC3031E1E7AF01
8C0821DC1E5BFED07C3F3181B7E1827F7B71CA2DE1CCF362F230DAE171ABF32B
835E9FBE024EC02974846598A7B75209AA4A2D750A2E11E81C8D48DF4143BE17
E8AED8F376FEE2C47090D937C8F2DF2FF6342EA510E53CB230AABD88851E4044
1D29E047309648FA18DCA5D050551D779A4A279FBBCE3097CE970F382EF913C5
FBA5CFCC0057DDC6C4E7411DED8B6A649B0930E9787D1CB01022DE84858DE78F
5CB85C1FE5EFA156C6E4443C21BE7E5229AF91FA8E16B5AE0ACEB23CB5F1D3FA
B7A698C82D5611FCEA5606E62F37228484D0F967E12DFDDC54827C9BE9A1B8D8
FDDEC74AACBD09883E3130C65182703716A217722C4A06C2AD4CFBF4328DAB83
9CAF55E46F84B2E3960DAB18D604CD343B46278AB770D7B1754E091F0E4F77DB
7BBE841522819B3E09FD2B7779FCA72E2120114175E3E7E809D3D90B737C5292
17C8F483C5F29F61649A21FEAB076CCD14323C83D8C456B3D25264E54B411296
A5A8B254F639EA59B1545C7E24D29FFB81DC7D3C746787CC2FD79AE15C3D5926
3704F53CA8D4C757CB0D48774F3CBDC7E1846EBD47D78BB8A623D24BA94DD98E
637D7C9C418DA094EB58A748E76A976728BDE2D47D16F4DD22E103232E5FB20E
744372B05287C3764AE4E1EB0E6AB442D39B9DC6B7EB5FF854E57EBE65B15C2D
F050779583CA346518C733022F216F6E98335E02EB4C8198B4F567B91E85BBBD
531D4E1C1F875120AA80B3AA3DAE76B666C8CB334D0824C5E83AD1B8F73F3F81
229AB8C189DD4B02987E508A79C1DE7132A3FF824A275DDB6A89D89F5081F1FE
0AB6B610FD9A0FE7A7C11B2440A0CA3622559C5D8D83FCE614CD391B0E8B1D19
14DBE820971584932746E90B3BAA6A8ACE63BB85E075B2EDDC5DA3F10FA419AC
2F519FA7ABF5738ACA629AC90E4D3530060C9383278BD1B16D94BAE586F747C4
4D6369FBBA1C2C05B4C87EE580D6E53BF9392D4448D4AD4EAB32E03D1CA9AD39
2AD246789FA2F37D70390B240669FD3F97E7BCBF323C8145F369DEEB9BD4A822
DC3F087B3E2A2915E0454A4C1522CBA6CFF6FDCB041DE429251F2CF59548BA27
990D6B91B3822A520D6F9C1CB44EEE85395A9345687DF91DDE798AD51B7D9374
93DC7267453A068D94CF7ACB4B26454C2363183AEFBB1270035946404C7C151C
6E88F3D7B7B948A1D2CD381D1B697778711A8475EC2D76F0ED88048E0DAD98F7
031F9022AE5240BE53B1A0F6F9C40B669F0DCCFC557070593E264BAAB6166EEA
FEA964B3F7976A8B12EC64C77C15E7EBBFD886BCF39BA9B38F279F980D57F5E1
8BBF484BC0F41AE879CD13B8A3A393DE9E8B932406BA5D34502CF47B0103ED2D
42165F6CA7174C432E5973D394AA7CE5FFB35B0AD2A21749E38E11BDA3AAE019
9F32CDC9E5492F17615E9A4A43DE2F14A5B209788C9BF4E38DCE8FA7FB766069
A787F34A9479807A3A8E822D46954A6E2C486FA4A8C81E93FA4F4C6B83BD0C63
BE875F2EDE38345D50C1FBDB9089DD7E62FCB29884B572663C4EFFE258C05268
3578763986D70FDE72E44C3EA0001045D53EAC00FE07EEA97F67D0BCC6F3F444
83EBC2B0A008822C1589E39C3400B20F87FD783BA6A1DD5824769CB2E5C41EEB
1B460055138E827A9A0D610D6DF54ED07F5F9838B206F41AA5F5ED79FDE408C1
1120970123946AFB0D2DE04119EF111FC5B27CAEB1C72DAD6B142C77725461C3
B1FE1F6A7D6959BDB18A28EAE9BFBBF2A42C2ACD8A06F299491AB2E6A89F75F3
E090F96003095CB6A11D787C2A1809FB3D9D75B7A77C4347E358A3CB729722FF
1C2BE742D0B481EC493BB270837CD982EF32EAC93508D544A070C12A76E31C42
9B3BF323FF2243757696C3F134F993291E6F3874F9F4D9553B66598F771AA4BF
D1A1EB74E767773F2E32BF5153AD60082A6C5D0584AEBBEC3C4A876EBCC64A3C
1ED59F30A91C0FD075871328CF40C1414C37278371530C062AF3A511E25AC0B1
7B4FC43DEBB45F9001E9673911110EB25E1209D2F22C06D7209B61587DA4D6BD
0C5BE98068838D2969E15214DAB22B129E3D8F30857ADC0FE1D59B63046CE650
447902EEF914443CCE58E350571FC08052D90F0F15E0EBC371F4E755A55A19F0
8E8FA2C1225FF0F5DDA730D0B1DFAB45FD4EA900194FF7CDEC5AB9A012B53410
DF5DC1FBBB35B6AE08F2261C40B4915973C52ECC8A9A47D8619AB8210CE71904
0952D77B2B805E4424AAD00AD6FD4FDD4AE594ECF1341EA72DEEE11D41B05C0C
366AA0F7142863A3B776EBEAEE6CBCD6B1C3635E81ADF4C2A344633DD9300D03
52842E2E1DB7DBB662927CFAA66508B29579C69E57856568B4771A6B5A94E01D
429B8B611E2EA676AAE26C1B143FF92C264142D5BEC01611741EA6EF546FE870
949924A36B682DC5CD0B04F7B65BF5FD83A8D88328100D36B603BC38A07E5C5D
5E99A4AF24BD1FE5C83214F75082654AFAF4CCC70AADB1B3C0E6BEB99E4432E7
03A6822EBBB7B9F2848F611F6D1A775649ACA08A54C3602D3BF3B23901E0EA7E
A2E94B2530620E26E9B4A8BE1D5DE857790F2B98E5E8AD40D6C22FD5A1505F27
504B85F0F16989E85FCA24C108A8E48524A513FA04C776B1AFBF0CEDCFEBC545
90D3C969B13C634E811A45DE29D9D116D158F816F0D0DFCA6EC27CBD74FE9849
CAEA2744D04C882204C585DE92E03CD5110F0CBFAF53170F7617CF9227400105
2EEE7416D07BC29895E51B42465F8229CC22C723348F3A1FE8426CA4881EF350
2D209191D001121176E2EBDB1C64D975906ED00D3BEA8B2B5D407E5D72C3DCE8
F613C8AF98519A7E92E23207322B4086F90030D758960B42569B416CC0467D9C
2ABA3D359AAE439F10EEFE9D34D13C536530031F36ABE41194F4C74A585A0EC8
237CE52286E6F70F6F4FCFCE47ACCB854A74DEB5C6463186759AD7DF40E82FC8
0CC91876CFE243C77446CEC4B259F22E51F89C4AD53517B5AD2EF191EF2EF6B1
B0E9C4F4856C9411814BE688140C78625F4DB4994DC7A93F2229F0B3339FC5F1
285B19EF7177396D3F678204811ECD5701AE34646FEB2B89F9B1844287AB8E95
ABDE0DE1C8AB9BF19A5BB8741B68891AC35E948C25033C1C5DBE6F9AB834ECB4
EE4CC86569BA9CD7FD9DBA6D51019D9DB3E17B4C8E140D945D140C023948BE12
2F6189E118A5E60B4764519DED983955D033876F4B2B600522799DFB143B583F
6BC29762999FD896589782F86F978B53ED70B0431D318462AC7840125D9C77BA
76EC22331C2DEB402A1E86B7AFFDE11AEAC70DD8B306E7A35E788391F7B71160
E6CEC7B0B61DADB95987EE47FA2E476E4669D7018DBB400361FDA0B39EF4B1C6
39A1381991A4CB77CB20907887094F37CB28AA098BC4BA22F029985A8F358F27
E39AF188954AD8D03ECCDA8985D28A36092F79420A3BDA2A10214F0A6CB8D145
0F672BB0C3CF07EC85B33AEC147B3FE06A4E33E81B9D05CCE4191874AA231979
AF6B5BAF291F2F8DB250E2775C6F589776890CF2C4935AB85A481DC6621C8FEF
3830B2EB475F43BF1D9A4FBC4599CC66DD9E12B53F24E8AAC5E8C14B65B3910C
1D7EEC7AE0F4BC871DF6068010D0334C2526B70DA1393533CFBCEC9A2D13D426
B95F0EF5022436C5FE8B438784C9F3EFF68E4692793C76E8EB8E79B6B77D1A48
F1EC85AC2D60FA33F9B6A3F931210CCA673B8DFBEB5F020C817DADF7DAA182B8
19D2F33D3A5912F12D03C2828C9F1BDBD530F71D944DEFD0C7F2F968EDA61E58
B3394A90526295892F8AB2202A0CB15B2AA0AD598E3D4C07194CF1DBA1CE15E6
577D120C8C884E733C81679A76328BD26ED06C86C6145E51E513E4094304B74D
E0FB57478D52F3798246A06F9C88B0A75CC367D2F6C456D174526B7D79AF990E
500F0496B6DA0AB3B674DF8A9614E770566000331F19BE71788C6CBA14D63F55
71429CAFD16F9C3128D06B998CE35F72BC11EC563C4D62EF994DFA50F250768E
98AC0BD742E7232CCA91C3B92FCC9AB2A7AD0D2111E0C17C14FBA0BD9E942290
3D76CEFB2BCA10577C4B65B10C4E626CEA49A06A63E61EBBC7FCEA9D4E3540C9
491DC78E578476FA6F09C9D5FAB1B778472A2919763AA895506F8FF5DD05B8EB
4B11D5406993E348050563469BB1A5444DBD6465AD69F3E231D1BB01DA43875B
3416729E516A39AFD742E730D5791E23F4DBD3FCEF77D4529210A89F4D2CA049
E1322CDF33D70DC6311F85618EC5EE718CC853761E94BB55BFA09A780CE75C1F
FEB5252CDA74D15AE70E0C9565FAEEC1C9F8BA0318446968E4CFF8B9B250DDD4
7CA496E38A1E0B004534315E9D355618B8706AFD4C1A4DCD5737A34C787086EF
B76DD814F2483D18482D270DDD3F048D4BB503583D972EAE213BFBCDBDDDBDAD
DEFFBE1E3A195B15535AF1CB97F7A8410B401EBDC56FDF83FA04813E7FAA4D0A
0711CFC3E1A07E4DE7043BBB290A575B952A8F16F10AFE92098B32E5A1973EB4
8242C6CBCFDB8FC93B6A8B48F048C0005D427BFAB2693D04ABE2A44561F0F246
8442817081B7CF7C4A5E7EA9A4961A1D8A89E857B9BEFA21053402A2956D1D68
8B13072B68051F4DD428AC334944B3C36C366D00DD60A56C8BC56C8995076CAC
80DE758218B82FC3E5FC1AA80CBF2A6A555854AC82DA853CF3FF053FB78EE140
93459F41FA320B257BB0D494EAB30ADC515FB980A8CDB3CF4993FF1AE79AD4F9
A371ECECC3DB3D8C5F32233104A9F80E163B946211A07D7E6068500894304EED
A172A99BDDC724A5FF22189B85782EE6195EF6ED3B6C056D884FD1C519E63BAB
119D174083F064952FCFBF43652179CCF397C1C5B6821791E06B9609CBF452FE
6213C20E30C3F4E303E0B83BCF6A010D9C2F9CB9F513EE814AF0AAA6C53D83BF
B269A98DB0C15C9669D204D12C2BD14323C751080105AB62872DAFA388080579
30E7D0AE58544692B5ED12F718B8626CE64D3D8504DF07DFCD9B962A65FC36E6
96F17CB5C31F17E016CCBC73C481D07E21202DEBF0BC70A92D3B64D1FDF723DD
5E32B884F47F0C269B6552554390F27127240241914B37BE64662F0C91225BD1
B2664F466DCB71A60908B2C8CA51964E43988842ACA1D8A6A54F0E65A449481B
4479C73E1B3A08E6999F6630AC094C616850C31D1F649152E7737190DA539CAC
B70D4C06637E8E5F2F549E20551D436944F59745747E0C16D6D3DB29675C6C02
214E81FFC726E6F1011B033D7E19A7EC9672A590C87CB9B8C1428755E368B917
A0768A6C447CB399037B4DA273C03D8EB7577910BB0A2147208D9C7DDCED3012
04E35E4750FB3E774173D2109AEF825552418BA6FF077024B33DE798EA742A44
D7EBE22A986A1EA77279F9D1950020BFB80C4F4AC5425A36737E6EB57D050EF0
853E601D913AABCA0A2F0AAE2FE329B15AEA5A6A8B33B8253276096DC4F27398
9DF7B33DB5E823F21A3F3018CBE80DE64147BFEF5E58D814FE31B86BA95CDD17
E51BD80B1F0FAD9B0193A8A00951818F48E6835237BB914091449B9301BE832C
FFAAA7F2F9A1248136E45A62BC30A413647D905576F394F5859CA7194206A9D8
2ED97A1D85375608C783B8F881F870EE9916C1AD45D28C639CF5C83C3FCCC808
7FF83B554B290734AF2D9A37770EFAF4DB59560F078DE4CF1E9542BB46D8ED28
8835C75EB6FC1E778A3C02D50D71CA3BE72B042DF848E1FDE8190F912363BCD6
76246C9F7F2825AEC60F544C3A3E13C81F3A92E9B949075B392B84CF4114D366
E1AE833CF9AC417BD641C190D9CF24706A97657B839C14B0637786EF7AE3D012
534A91266178B2ADC607D752495F20DFBA29FC7EFBB57AB664C5AD4411CD76FB
C92C391F6DD06DEAE2D33917CA7B902309CAEA66EA03C160F9508ABF3FBF5769
918BA18B15C532BAFB66F052CB767CBE7858F5790CFF68BC0AC736CBA66C14A7
C68D51BD2D7B41C3B19DDD57DA9AA68A59D9DA9B920B2150A8D10D44B0FDE75A
C7B6CF7D2EAABC3828E302EB68D9B3F326028B67DA69B10DAE3B887BFCC763CF
6E980912D5406B68B43327DE7F7AA37A0C953D17C8E671E52588E61AD9426108
6E6FEFF7F0DF0E29D2F08BB2EC33E7FB92D4190038370FE36D559E4FA9E67D49
E194F29351CEFE78899CE46B900ABE68BCD572B0A6A0228112011F5CDE11CC54
7530F6AF4BDF1543BBB1D0D9F5CE5A93EC855454FE14070FAF36A4CB63B6620D
697D373EF850791DDF81662D8BA0B9143D164EFD00C56BB1D1B7CDE29DA22F56
2D73D2FA2CA6A71D08C9DCA5C2B21B9A97FEF3E792124019730E879546DC352E
D3D2727346FE6E40A8AE1A93141DEF3E4520AA121FAD4F6AC017D667BB9A681A
62EAFCA393AB86C3218137652ED54DE66F7844DD74DFBBA669B63B9170834984
45005470557B23B9D00001CE1D6544668A511FEE990DA3A112216BB74E51873E
114C3D3EB1B82A8970B3D6C7A3BCC24E1F0EF4FC9971C05FF15EE718F53ED391
CCE88BDAE8A4D319200574EBB1C9686CE64D3D8504DF07DFCD9B962A65FF4C5F
F641B9B205E9D0723BD2F9F9B7CB3804DBB490DA0223F5ECAC58F58C6DAB6DFD
479E5A7AAA48461C8D0DFF8BB01B2C6F406A0626226A15B7885160354B912ACC
AEA888F70E851943C1783046BBCA2774F2773393C7891695920917664559BD8C
8B15B696B4D033C809B6CF440C1333BBF6F62FDAF2204657DBC086DCDE225B97
02EEA5CAF478A0BD4A94800D73007B4F6060FC2937DD6DD8C26D12A66B7C79A9
9A1499DE4C4D470BB9C2090A4BD77FC107023E1F52279AE360AE5FAC91EDC67E
3CF9B9672E3379BF1CFE87FA7CC59AF975A8D9F64F4E5AA9137DB99103A45887
EDBA38723E96C2EC5EFF288D871261CE0E42EC4E0A062D122EA6217774984282
7256927B4D3942239D724172A9065E809D86513B0A36050F3ECA0A3B389CE6B6
A7AD2CED39189F321A791889A3D80A0BE4C3DC4BDAE7DD3DC0CB1BA4BEF78AD5
2C5E9DA1C31616BF3502D4CAB2BCDF1851781FE3C49D555E725DDBC0E9966403
6AAE261453C345921BA40B71D6CFD20E2E9F67072E439D7D8DD713BA1357618A
FDBAC7A28D1FAB9CA5E61C53503D3C34B5493D7E35073E63F2C9D0DBED7EA618
CE223F4CBCDD0737660FCA46452D16B620870A3073E0D1779AF31770033D9C76
403AAE6CCD6E54DB5961E65D31BF3E7002FD2409AB6C9FC24421574422F0D296
9402294B31E69271977AF39A87BEEE8B85A7B5AAD82FE5688E20806A669175B5
F46CB4229D6E13A7C257214DBE98F6D4C3458D531CF07FE6D0C9ABC3F496046E
0A172FD7ED2EB66F8CEF3803FDBD24F15BDD3C57E071F52B765F40D1A093ACFA
F943409018D447A9F592D1ABA356F58CAA4FE494BA49A64CF9BBE2AF068B2AB0
5CECB234A842A6235E343A01A94B4F28882C71C31FE267AB01A110EA6753CD52
FCAFA6ED6BCC7266AC6A07AB8899349450D4DCF857A3E18C577538CBF7EB736A
5DEA95A929C6784F1877C5D8515C405F275EF5835B8484C4356C53565BF5D428
A93D1DE5EDEAF222B156CB0A8F084ED2223EA58142A856E418FBB6808BD6560B
71AFEBC3450F84B5A7C6503548AAE0C067C9878DBE7D3D083E2F6811DAD855C8
B7BBEEA3E86021F595F9DDF02BBDFDE5BD56C9529B335533F701659832CA59D0
F0C5410EB25A0702084D1E275AB1D8D906DFA78D98F352F67530DB5CBBA6E772
0EDA6C9CF628FFE1AF092F50035966E4AFF810D5A5422F4965610F41824C2157
00DF48EC2D9C426F1101E75FCDBD54D8633AC69D6D38A3C6956FB7A910774C0C
84768330A65DD5BC40A418A237D81F33C4446DBA4FB36C0B7350D1C02721E591
3F1D146B2C4BC767BD81AC5BD40ADB6AEB372D926895B5D2687E16835141BA35
1F1CA9E4C9DEC44B7DB066DA3B80DFDC1D4A49FD15D7B595ADD8ADD21E7A2828
E58E303012486BCBE41AE031891C93B75DB96D71F61D3D56C1B4DEF61EAE390D
FB4C36C3CAA12B1CF5E83AFD66C7E66D36F5A15B20077A78B66DD73285E0ECEC
A6F1A5F29A22622BD1043E43EB7FAD04AE32E82045A6C6F7A394B908DA2E849A
666CF4F05C5E999B0E5009664E3D8D8A44A3590945E904B885843000BF40B905
A101333E3FA66DFD7602952E0B51E79EBFF93BF4BF33F17681B7BE8BC6CB6615
080D485D5AA74D3DEF6EE23C2A4CA5A8F37CFA6AB7FDF98560F0BB1177DAD408
421B58D7A536902441A8AEC7B57A1557B12DC3C33A31D28200B18B6D3BBF4312
17D2EA7D143DCC7A9379F356A5B9A6F3F1E2466A6A8862CB11F9B25D090D3FB8
7B3777F2AB7461609D1BD6965F447DC5FCE4BA16089F47283B9824E2883E9E17
178A7A3AAA7F1CCE1A08A96913FF59D97AE939EFE603DAFD54B8C1638D1302DD
CF65254BBD87B538A8BDC93D400BA65770DADA653C63268117213EBBBC0E684A
CF29654F905EDF37C4AE52F67A3160AB1818327A4DA1BCA9DF66CFAA3E3C9EF2
EE63C3AB3C8DA0D757B08D178224D77F85F0D938DDAE402E1F9CCCD4804034A3
B9A9136DBC7A90A9ED738FD89A0982FB3C27E56C2047E64CD0E044A8CEC78095
E1C12DF3F685652E0E005C6E33B12EC9AF54218EBF23A7EEB5827212B89BC6A7
396BEC782E446449EC02EBDA16C41214FFA23EEE44C3C855C02D3C0DE6916573
DC22FB6D9E7A10EC53DEC2179532594E2736306D82A887EF4B2D86249CF0F762
58639F4FB3F7422FC91F271D2034F7E062B1E34BADC9C6524D9749872564166D
DA3E4EC5F13CA5861F3B824FABBE799184FCE49816FB7627FB3A2D301EFD482C
D1245672D80F0C52DECEFD4D785A477EFC78B960298D1627E5DD2BE89CA00372
037D1E183E53D96F591B548B049CCD0F283EAD7061EE12917D0F28EDB241A0DF
A7D21EF5B899D00348905F3C7CFDC07151723BE64EA404BE2B9BB2A7E8B1E47E
52E36695B3AA585AEE6B666391AF8B33B47EC4BEE8E150B2D70BEB1655A0F0EE
1E85600DCB74187CB2EBE51C4C3822F1F51030783F8CB8DB5EC71C42270FAB29
1ACED3B0453ED72161A78BEFA9519370DFA82577AB9233338CBB2D94C919A663
307CB98E3F9AE062ED5F5386FF5D783A91D930D5576025CCD2128FFCB220A5C3
F9C66AD8BAFCA48664445014E2E98644E29263F1D44E0332588C5AA6C3B681B1
A28CD4CBF1AB16ACE276C6EC7D7BDB83B57FA1AE8A5313E6D21F67FB6D16A9FF
0959552EB40896EA3CFB655957F1D1D2CF5E5B9D86235A2FE1817CC70EC57F21
B159EAE422FE5F23D281BBFA27B6907A18FE78DF965A1C8A64C0107DB00ED420
D35AAA82AFD87BC623EFBE3123B8F51C5FC6AC8F0A0DC322B5934335EEDC05E4
3296A054894C35DB573D333D6934597B0E0ACDF45491183332A51D5E33F0DEC0
39DC701E8FE4FEE59A361DD66B0298395A04F0B34C85250DE20E41CA567A6F08
9CA05A86F74CA84271144776BC5CE684BE51B469A26989E420C41B96A253170E
3F100A4BE40B2B951CCD28A9F49EB1C87E3BF73E4E3F420A57E20E96C84F1265
F2D5E1C843F00D43F849713BF0530C587874D9515CB3C0F1B44A1151E2CD5ECF
D763B0796B52B9CE3455855865BCFC5B5AF264C0EAAC3B72EF1FA79FE1E56B1C
AB192C9A025B6EE3A13A3FDA386BA760FBFD1F9304DE30F9CA9CE42C87755141
099FC2E1C7CE9A1F412CABD3006786D05D4196364925F3D65B1E3D3AEE511D4C
2FC72734FDDCB490DA0223F5ECAC58F58C6DAB6DFC9CAF18CC6A008C105135DC
111D389D94D205D58D1DF98ED24161F82CEC0550084F45A4A082784932A401A0
78508B3AF8FCAAE686B79E220FCEEFA978756B7B00A3527AB42211327A4DA1BC
A9DF66CFAA3E3C9EF2EE68C004F5C530003E5FBBBE17FB0ED537AFF554982A8B
488C1C6641CAD95A2B7A44BAB06B1B00362C6F442147435B5CCC85FE8C4667F3
221A83A203F432A6F170A5FD7DC66AE795C90A05B6CA643B973E76562FD60E93
0D386C990B01017263F9F911EEEFC2D2E04AE4600CF776A5FAF7DB47A0B2728F
8E96EBE70EA925DD4FDE4D34758503D858C464F3D84203F74DF170718BDFCF0D
19ECA73FB423A2ABAF8C45D1F7794D15C0D48633E53898AF2B5A60301728B3BB
5FC07A1B70FBEAED00D5B6282C7E5990FD5EBF2A369760C80B1EBFF2CF020A9D
A242BAB1C3A23B5301D236464C0A11FD992A5CC2EB92229B74CCE1D5C42EB160
3682EA6997F2AB23F0AA866D2962106C29F48AA861FCFC46211A01A524673B14
63E1AE833CF9AC417BD641C190D9CF2A29828B747B7EB8E744739F1ECD20D872
D813B1521116B1DE07BBF962B7E47D99AEC7904C836FDEE09D265192AF69322B
6309C8D191C3EEE7488A9BF555A38A4FBCC99D513E16F965305B168ED629EDBD
D2C8142EA1132F24B0F0AA7B403A1993EC5BA6D5FAD19273D75A88F70093E449
C56B6074B8A22E6479295C1A0F09780A3B5E7BA709EEF6471BBC22F9CB20F6D3
D1C9F40D9E991753EB6650716AC98CE7F7D0FED78D7C6E3684F9032E9E60E0F4
9C7D65C9D58A0B82B7107AAE38689661BF577A6470A90A1E1C2C566BAB9535BC
E5B315DF1DBF5848EAD023DCCB9EA474CD391AD116EF2EEE94EF9133AAB82D3F
E9CE7685D711825E99124389F65E0DBF66CDB26297C4830483D8BEB1F5338AFF
9EE7A2C4661B0FD663B15DBF0418169809D504203A4C56D1F85E8CBE85DB16F4
691EDD31135B752E5136F5A8744CE9AA277B8DD53D9560114563F0467C52ED12
46057CAE4934135DBCEFBE99AAA7F7BA00E3DED2DE827973AE3EECA4588EED8F
F8843DFDCC251B505F9F50969207918EF68B71960883A6DBD009912FB0411D5E
A030D6B0D2689BF74B98D7388AAE587ECB8BD1FDCBE989B600B644BEF46220E1
D5268B987C05C0B9114B3F340503EA144B8A5DB747E46FFEB88204F80A9FDC45
384C79EB274718A3098FBD5050F10F1BDCE686B29C0E857C5A0B25881F7B855E
B54F1D80C49622A96811015AB71EC4B757074F51DB77110F6D77AD82DD5E6661
BDF8AB052C95A7B83EC339A0A1DDABCE3FBE72992CEE0B2921654FF33BE61CA7
707EDED071F2C5592F2590A31E05E6C8076D2B8A73C45755C598CD84B25907DD
03E509284A4D43B906B3BD50A5B55EB9CE614A4A57FD12E9FAA570B81577CCBC
216BF9718A5AED5F1BF7F026BA746DC5A441316792799A76206DACAB17CF0D46
F86DEB29877C718D28AA6D2134D9EA55F6EF21A37F6B14CC43C354FB4236A58D
55F0E27A7F4F0973C77760FD5A7EC1F67333E1F7F95F6B21D45961B560D84E07
25E99D9CDD7E39590DC25FA98B2F04DC4BF6D1AE22FBD52C65EEE3000BA5716D
460F00A06F6A7DCF6C50B944CCAC62892B12E5F481AE1B60BDCB44273DF93102
2D46B2D547A5C1411E3BF3AC4C42393C824960D6AF327AFD3CF905AA624F58F0
758420612B7C5C60CD5984EB3455EAAE5A65B22E6821368FCB81320DF07DEA87
EFC6AAE69F735C347B907A6B3FB59E36D639D56AA2AD384B7F7FC71B40A5B2BD
64A19D367CCC4E89DA286E1EE228F515462D64D00C21944F093D638AD64BDEAB
943353E49FD4E764B3267D6B6B50EB3067677BEBFDDE9913BBF4ECF13101AFD5
887F20BCFD5B5FF7FA2EC08BAE7EA5B8D8A6065478917325A4D041967FD307A6
B130867DB7395C44A401062160D871ABE49575A9A658CE66E25676E02A74540E
49D9DA5C4AFFA36D0B37F7BA290FB16752CE5A38617E658BB57A7EE466F8EF28
0ABE829A867B81DA3C3B6F0059D172635D17B02377888807AEFCA16D979A4D65
F1F7D9A2152A6B38BAEF33DC201A05C831440192D7C5CECCA19969F2EE30D7EC
D23109ADEF768AEBA5705617B491C1A00A6512932749905A68D9E9CE081A7DF3
6F41EF494427992F3C4B3BBF9B5D69C11A4A4CB761E84D14DF2D58B94888DA3B
59218FDC5886C2BEB3B448ED0A8799630437F2E18DE9AF97F763DA05B0F2D738
8D70FB3295E2005AAB38CE8056158EF0437DA6947EC059B4212688B3663D5EEC
CEEF520023E7739D22CCD78E94739DAAC4305601D8C54035DFFF419FE30BF1D7
5A54F8ED06247976CA01ABB26FFCD7E07632B1E9E8998970799BA6CFA53BE805
89FEAF31CE39DD96A99366AABCA32B3A879580C4B9F1A17093FE4DE93ECFC939
2162C390E99505AECE2FF0ADB77988C29F40195F476BE4E2DE5973ABC145191B
A59D20004F7B77E73C744F375AC0944C97AD05865D7EF5A801AD06624BE35ACD
627E04916867B42E75D5F0BA6E6141D696C41FE1DD4B9E40A4F8B4C78C6082C2
C6F0A62C4E86039DB7790417BC75FC8FF25604D8CA030164E8C6A0AA0DCD2CE4
843A3D7F5E1687ED5F695D096EE45F1EA9EC7B5107AD72C27A3127ADC0AD6F2F
1ED5F0A5D29439C03197B1C5850760CB5C88E3713E4CAAF00D0631831198D0C2
00D649AFA17014161B78D651274779D7147E5A92CF1667F3660953FA804AAF65
F7D69805D4546EF91883ACB4CDB00DB050F33B7AB8684B540D9818A8A88D5A8C
B00EC4BEDED480FF3623FFA478507288D11D8B63511948D7100E33844C879FF6
EAC7635A24AEEC02932A37D33F227D157C9E9BF72D4C0DF9002D146DA715BB52
0D916F7C715C83790C248AB6320687B240668E04589BEACD11DBCB68AFFAA16D
9A4D075D9111C6930C5DC172F1BE3A2E14E63A4CDBAB5BE168F85D957A6021AC
0E7C715C791124671C0E7203E719303B3125FAD51235A20546164F98E97B7166
6504412E8B0C3737CF5B28A78690DB763D43A38A9AE0D9DE749962162B95305F
EC3F6ECCB967F5B3D13502764C50D07493904FD394FDA9F7B8365EEBBCA79F72
8F51A032534B4EC696B9B7EA0A3B42E344EA4A667418AA09863433A702D7FF86
55A5054D362BD1BAC90A202C13FF6EBE69FB41905666090FA03889F39AA30137
B874A33542063E941D96D0733005E9883388D9A1CD20EEDCD4F36F7E73A57DA6
AAAF3BB78CFC783BD474FAED1024A53AB1E699ED18DF29E1ACEA758A09727C3E
37F39217BCEAA1420AD0A06BFC411A55448E36322B115E4E2E27318791D9D07C
57A6300D91754E2F65707C409895B8F53434F331A18CBF1F27397FF9F374BA2F
B479CE97D92A9BBC3569888D41EE1FCDAA556644196933F57289530B55034B08
B02FE03E98B69592CADCDD6E93C83EF290C342404BF6661B7AEFF71A61578241
0420B16C147F720C2D4173F7F4898E4011C8C4336468165D247BE6D60B8D8712
BFE8F60DE19DD937348C35C4067AF3914753EAE651447E1D5A9BA865BB746800
935F7971D90057D44752760F49D23D9723A44468626554CC78EAEBABB485E622
637C9C2A89E6C36C863F0C9791C8F2B67D0B15500A82F3B2E8B2FC0C762C241F
FACC27FE037BDE44489C4D486028182C751EEA2D9E53576820D467A7C0E070AF
102BB69510F0B74AA9D2F523A3F6D916D896FFEACB90B3B5E7EA245FB1517CF5
8B3F6AD1596D2A01705D583CE369328CC056E05F6B21C302CD6E8EBBBA0E106D
58017F72FFE908356E5BDFC817B8F2AE7309E47BF1A537FE03E381E9CA9A633C
318CE8E501375B757DB611B9CA465497DC28A01332FE0B7A2B206ACBE5AD54A6
4B2CE78B6956948690B6C55AC10C211E9AC42ED5AF45D27C7E9CB024BE861A74
348F4F894BDF16117C2DB0F92938628834D3BE9678CD994D992D51032DD388B0
652FA0F22226C7226038FD25C696EA6CAF361B1E5402E329DC934AFFD5AE2F5A
C429BDA6E23C2C15DEA5E1BAE9BD79563DF251A471B8559D34A41666A870CEF4
48B9D170C9E3557E9903516CB1065AE58F7E14A17DE653EDB5E017B79BD563FE
6951C80F21B19AEC98B411202A3A7CBB64233C9A7F522F4120CDFA396E87D15B
61A0C820572C87C753335D581619A3B4AA7D949B62A2F9CC3962C637DD032FD2
57A94C10873685C3932F46572528AB62E7D32D42C454F3FCAAAE8C503DADF8F4
9A20D030439EDE0E1BECA969F7B55863B27E72B32FECAE109753C4F41E518458
77381A097822F85F8E645D15558544C64E64F68D15D5381EABC36D8EF10812A0
749288E6B78BEC43785B0255358F7B918C685B529992AA0F77D78A545800E319
B45D932849F35AD35DA2A4BA64C0272B39AC124371BD5718FF48D4759766ECB7
1C6D3FB5518FD121D9975ED807091E2103A83819308C3D2B6DB6F578AE96BFD8
FFD6099A72C36AC7DFE73CF31082C19CBD8CBE924852C726ABEDB0B855ED8B91
1EDC06036F53CE5DFB56DC9AA38394218FCFE6160AC52F88031FF773E708A829
2D375509CC4AB8A1025CCFCB45DFC4A354FB4EC681750679EBD51807B96FD163
0B47D567936E2AC2BE1BC5A0BEAC5849A82A7F875839CCC386F6E631F99E7814
6E945F64896AF2EE1C6AC8C6F2FA6932D97F98A07177E8E978FBB89F23529E10
A99CA436237A2E7B2F21DA83FADC5B0DE45B94D7B42E9BDE461E68F54C6C64AE
2ACB5048617BA02B01BAD319DA54A8CED454126D72253B834C052BE9727E18F2
0A63C4A633DDE903A75928F79E6AEA6389F33222A29CD08F959B853FD166FD53
3C3F00F4AB1C1A94FFE812732AD77C4BB22F97BEB01B519BED71567FC2D722E3
42700EDA8203C68E407E578CD3399B59995587254B160BEDC2382DB93CFDD31A
5695B19621EC63D74BD35077B3CF9892AC1BAFA0171BD2C1B075D11BA396602B
554152E40EA9CC922832AC0A724EFAD049E3FDCE2EC15DE6F972E0E9FD766041
A59FE6E253EFB104C3A780ECFFE1E50D23FBC4AD09F903E5F9927CD78C61C921
8E3C8F329D039FD184B0D5358867A75CF266BBB04DD57E19DBF954931FC99267
F1DD7D20C86AEF26CB15E97276A0159F626B0637F63ADF85FBD1B873DA49A3B5
548438BD7CD5261D0417A03105F9A01AFAEECA40FB86A4425FDF561761305232
76474E1894EDA376543BD05B74B8A97FCC517D70B76A21706DDD99182DDE3169
9666ED34AE6982B467F27AF9D5B62F9399277BE77039C6361F27BC76DF03D904
E6FB579621F5B22AFC1E4EC712B472E1E3F15D8CA12CDFADF65024FA59620D03
8DA0138483CCBFBFFCBEF6D4DD626C71F8669A64BA3CBEF55FD652C6DC0F48C3
79134288CC49AF3C99EC106686517FBAC8627509F095BDF0C17F5DC0D6768155
13861F28BCAC41588A19E69755F0C218D3349920D686C994A3B944C16C93E2A8
93101C837954CCE0306820C1D4C633F778F029661DCFCD3EF8CF607CE869C91C
60576A10D67A01F6317E8DA84E7C9E7C0D1F7E87BA535CB5D00B7E165E5BD273
742283B8808CA642FBE1DDD1B1CBFC62F4D0FDE5D0C4E833708B96009C48AD4C
27A24685BF86E13EFBA498C542F497289D523C7641ED48FCD5E8BA23E3D56BC1
ECB531744E00B64B37AD6A32A4C211E05C21743C5DAB89EB045D5E4F183F2841
00756D4C9B7DFDAA4BF2A511761A9C0F971E6EA42BBF5DEA3792710396BCF865
72210574CBC077EC47071F2A0206DA6671B8A366D242B5E8C2C8DCD04B4F3725
BFFE78AF2ED0EA59023F13899064AF51701329C731094B9EA06ACC1864425558
AE8DEB12286959964383C13A3D1702F744CE9B9D576AC496CFE85CAD61849285
75F53EE7E3284769E95E0B00DD3831ADE5475C548B632ACC8DF53533BEA67728
B3D91373D0085565941BC9F3B6A7D79F56D882E008A9BA47C19DDF7CFEF64D95
808389A09B9D0AF26A50474DDA4A66959D5ACBDED78B79D32FD5A3C1F89933D2
3C03DC8F66E4924ACBE09DE0DB201C19451449B3911342706F04AB4EABBF668E
18AEC438CAA89B325B163F96490C6DBE399490FE3FF646CDBAC7B344637F9CAC
9E13CFC253004D4DE1D53B4F7F0A6BDB9CBD1E50901EC94672E55147EDDEEC1B
3FB1884C35E009DF5CB92324D4BA5FE483D12AC85E92E942ED1B141E5EAF945F
6D7682C9694837EEA2707DE0BF63F335F0D57F98BDB2EE9D2963C9F045F90BE1
922756630C4D552ED78F9D27654AFBABB452F8DBDC892381D84B56FD60C9F3DB
E74A4FE92A2FD618C3AFBC282CD65975C881FFF50DDD00DE925780840F2E7111
AEC5503AA9C577F1FCF970474D82F13887822F0075464751C1CC267894BCB31A
189705D204231C79AF58C59A31A826EFF6B37A543C08D7E48466E3C63F9BD6A2
0EBE99CC7981F5E46508B60604DB953EABE004D1DF5296882F62277879979FE3
4C096BE1D5B11C2ED0C7ABA6058498A76BF5FB930D4E9287E91E675F7EC25B7A
7D28966F1589D86EF26844F9492C61E3EB261047E0E67405BB19E312F74369B1
5418266C00888CED3B8BE84D53845DFAD54E09F35F5012148431BC1D6D4E129A
D3DF6C1B664CC1487DF86E3FDC721D35A78BC5A2822D1CA438B653A986E8C7B4
446603FF04B82ECA02147967DAEF75BBFB4BADBEB35B70185A343F08CB1BD62D
3F7E0EDCDA6DABF57A61A65DCD3DE8B9CD6BBBBD62619708D0877BF3F2F7173B
3456060539DBACAF6588B76B16401FB8A56402F7F65665CAEB1127665F1F48C9
DECC7CA27785406825443DD59FE635F8171BC78575B045F0D8FF89CE1EFE008C
4C90A17D44EC661448F52B395AFDF76E2431E4A5C041ECE842FB1F01D2FEAA4E
49457E851DAF32127CC06CA7211421408BD0712F8FC77CEACF99DC883C3D3599
64EF865E7605E793574673093E2A9F2EAB99C4D8D6EEB8372E6FC56013BCE95A
716B7FD92690CF0DE037BDEDF8BC8C7395E6D437D6A9F955A592974F7EAFF89F
63493AF9FF1B5948A1313CB07239A3156B7CB48815B7F812296F87EF7454A8E4
C9B7E78FBF2DA00DEE09FFA0470A31F04F4B937DEDB23CA26597D815183AFBF1
24E1020749C4561316791C3F3D0842D241CBB2863B0509560DA60AC649C9D140
3C1FFE89FF427BC24B4595F51FA96BE1151F63D9889A7DC0F49D836E3514D207
A10AA377A19DC164662BB3D729EA1BF32F464BFB603F17BB00192C45BB95E913
3F34B4716D3E9D6BAD806FA22AC237379322CE7B9EFF872D2D2DF7E8D4F6BCAB
E701B513ACFE923C3AF47FA83D24E7DF4987703E54576D017D81D48C3D4F82C5
6D53B95CDE59C9AA067E83ADA9847ED534451DCEFBAB856AA4A8C0960937A055
CD0F662F74B67E5D767D092A8492D51817C6BC50789874580E14A17B8D188B5C
5B0989BA59C4D155FAC3ACE1013B81683E8A9A510D96392EC9F0E8F574B65391
500FC10D43C200AB72EDDAEB6C0DB80E7C1B9D57BC907852A07CFB856A30BB05
F21894EA7452C5C6026436400FA677052AFCDC71919978CEEF0D4490DEB5B507
78451D1C9817EA22F5BC7E2F6CAEC28305BB00DD6FCAD9CFD13942160B068953
98F3BB0C5B1E203A17AD90E7CFA8D1D7CA2B5E7B2ABD4400DF2B2A268662CA5C
EA27F5E5D731AB592DC70991E7D8BA52EAEE4C4F72CE8B91DDFF02F013E9EA24
9706A1E0C2D3D8DFA9B80CBDF5EEDA2B5729C73BD9D3F121D3DD0C22A636FA34
785014106BB7B5DE02E0ED8DF699AB5034F4278283687B7D649E0D1CB9403828
A0F2E119DA49DE6D7C3876B26D712F28CF9CCBAB4F94EDF7F8C929DDB65B33AF
9E36286BF5433B4CDBA74D8C3AEADCB60B086BF96EB74C99DA841653B89B298B
06384968EBCE47978D535FA74B7068C9D37FFBA90F65B7C39462BAAF277F886D
289A09A4F48B98FDB26613B8888974B2BFB404B160745695845CC54F020D6AF4
B9A6AAE142872E1142346F6877994B7D3A48BECBF1333149C87257468BBD9113
D25F280C2BE8525959BB8F36CDF35223535978E98E625F87813BFB0F883A40AA
34BC2E7331C5A72CC536FC42263C6641928DD950B73C14EA0139CB987FA093AB
E342529A93891CB9B1B38E6E9343032CFA62812A0C4226DECD140D6FDBB828F8
E061C3BD123511D7F78D024A4538E0C4796374DC6F0A1D2FE141670969EDC213
209818D526B31526BF55376663868CF82A3CACA90FE94C523B36397937C0CC05
B89F2439D9123AA87E33BD0538DFB0F3A252667CCEE373E076A198107864EBF4
1F66B1C9CA454372840D5CA7252DB99ABCC7150425D40A47C2FAB2F4402CE12C
DB59E76EDCFDEAA5FA46238630486C49AF11D49581592C522DDC5610CF61DC2A
500DFEC7EF4743F53345C232669926E3A46C509F52D0CD9051BDB6973BC8FBF2
BED7D739D4DB7CB4DB69195F98E736CFFF7FA3D131571CA5E43718303FA1E864
2D5BA952F02502F364D4ECB59707D1700A37B388EAA3C9319B669B704EE88F67
961AC166B4B800F3D1532DC2E4E416ADDFE21BF17E0100DF2F016C5F1B2FBF73
58DCEC9340247BA128271F65C7323F070411E4447E2CC4B77D0CE1A4266CDF1A
00144B5ECE39768198086FF40549D7200EC58ABDC3B43FA6E9D745092C656961
3640BB421061EEF01AD105803E3EE0CBA7ED5A0FE7153ACF1827C6170E2AC2B1
2105BFEB00AD61A86E3FB73ED50E76315842F56E904538D8BAC53AF85AAF7483
0E182D3EDAA05D3DB70A428FF086693B40E6B75F8928CBA105519388073BE633
6AF32F15A4E6C5E9FE7C4C40E90D789A67FF3F4984B091F5D283046FD76F0014
5F12F494DA2397565B70F50FFBBBE5E63A2ACD2DA6B3602072207EE6D7323C8F
3A3ECA73C973DC795A015F8F224CB3740CD5239B0D50DBC1026F93940EDDDDD6
154F76EBDE6032E845919B0039EE025A01F1734F20B5B5DA14ED4ED42F63AAFF
D5296EB897A2849E1B593410D9CB3B0D9935303B6486E84D61AD29FF4BAECA4E
1DCE6C8F2B5BD5AEE2B47C56197E4EE40652EC1CF7314DABDBC1A3BB5F73AF4D
48E4F710176159A54FB5BD52690039374B4C38E26662983BEF18EAD3042F308E
05D72C2AAD1DF56E26BFBD546E532BED52C7D45E7CFBA0DFEE8755D58AC7E50D
DE2E295F5E5A75F259C52E663C46EC1215BCA02F9C30058C13971142C43696FE
4915862F64292E0E4D0C24608F6939417B226E21AFCE6CEBC94B0ECF3E7B5160
6E4667120244F863B7AC28DF495D6B24CDB19F0119493F7757DA392E622F9B4D
00ACDEBBA186CF6F8848C96E814BCEC0EF0E227AA38E279510D09A996DB4CB08
A9F8E314BFFD430BC8E0973AC0EA9070527C7574F78F0344C484D3CA732246AE
0DBA3EB305F5B745DB4D0743582AC8FB6336D89C16AA0866B38AB04816E4BCB1
64D8BDBF6276E70DBABB79827A51C0910C5AAE3267F1C41D6B68B2AFDCF46546
F50B791026F710184AE50FAD0248553C9615542C78042BCD8C9AD771F3A6E959
A1A99CC1546E3549B193CD8E137F7833009C0B6B01648A55E58974E554117D39
6B81DA4D55C21C6A534BB55DBCA840E9C090CEC9B521A18DBB9A12BB7B16DA0E
A89EFCDEE0C08E3B5D3A806CA83798FA7DEA2932DBEBE3F6A53EB4C3BA7D4515
AF34EB4979CD6D20AE073B3B42CC5784705478B376ABB67D85B50D7D33212F54
01CC86A27CFAFD98378CEC430DC5D2519FA97448CA26A0D1CF52AAE2F56FDFF8
FE863F3466E5A6502792C2E100CFCEC789104631248D9EA4953F8F66C34D8E45
B373AD6C7469264EDF266D1A13C36F9C7AAD332BE1A8142FCE1BEF8D20994B05
DA7A99FA602612F9DA7A30AA35BCD44970E9BB54CBD8502DDE97E76934D1B2D3
F434FDDE0A32D31C1234F16108CEB61EBC7415B5925EE30192AF02E9DDF0F2C4
C15D7070ECCD2C59476B26A5CCE55E8FF831C5BB937B27BBED082AA5EBC88BA3
89669684BA957A07D6B808520F24DF3E54AAE6053D610D5440E4D0836E525EC9
219D6F6B33D4A72D716D7ABD673DFDF4C3A19101D27C8C45FACFB7FBA4FB6BE4
6FA27434D216DE331BD4DB3C016C2CB77179E1EBFFBC11CE584CBBFCC1882FAA
6FF452E59F44EE8DF90BD76B9260E999D8A430BD6B0F5E6C3C316A9A2A6B451D
9E8AFC8A182420358D72105450F8D7C23FD2152FDF47CC428864A47B00466F0B
3591D69EEB1464262F48490D5B3CDA854AAF89EB402FB25F6A020494ADDB2538
32332530877E6B1045C9F6AA6CAE492341955CA72DB2AD4C4BA24F9B0DD752AF
81D51A5BBF7B1B78370730DA70A8E4CFFEA278AC57712320FA8B38CCD643C2FF
1A96407334123B613D342F69FE140143EAE310FFCA131F4D6B0EBD74546D2BA6
E115F357F87DB00C709FBCEF63247F328728B56FEB2EFE9C591F1869ACEB30E3
3BB5718ACFFC808E1F77A5FF10B5EBBF73F4A267EA10ED9247D8FF0F7821B473
7DACC453A43B10846AA0E6A9822224C307B3CBD5562EFCE7657E9C7BB87CA47E
B6C7BC2AB15F09D9D37D07E3F2D2F0A7C007303C207DBFB2296A81D7AF703BF6
D85F14A2C21865C417F3178A4D24717F45E15B2CAAA7E5E69096AA755EF1FAC2
62674A688199415D23938C0C473CF6502C08E05F510E5C80DE5211B83B50779C
80CE81F57722DFC57A96E674E2731ED6A3E785D8C1191C3DC063A44207D20260
FA0CA88B95E8EC9D8B9388E03509AE3219F757564C4C3B99220F4267B5DCAF49
BA69F8BEFEF77FEE39741A38EA4C14332804747FD11527B89C18CCE0C3651834
06632FFE8FBF772725EB22321C446ACC03EDC37C1814FE97ED6783AAFE6BE17A
A89E252FD8BD2689617751593B7E6BFA01BB8695C8CA74EBED4367868AB3CA72
D10B3D43CC86A81DEE0D16B5F20CF40ED36793D01A908B187FAD13CDE6287DDA
05CE54A55F5E91E029ECE19514CAE30D193C412F8BBC006F6F71D4E2EB0DD5A6
B523A746692EEB41AE56E4E5BEC1DBE097DBD06C89950C0CBADBDE93103ED15C
4ED74C66E3EB4982655B89069CBE6F84BBD38D2BD2159A19ACE9D3296CE193E7
F2BDCFF9F4BAFB602C349B9DED566833DD789D776B03AFF30B3764FB85DAA5F1
FE751B1FC34027A9F1B23DE73BBDFE0567A5DF8DB4FB7E3678C6FE4D8CC2345F
CB96E64E4F87634FFF9E43D316FF9163276AA31655F20895F1A14DC910608821
0C2168A93F71211479B3941E54674AC7FF48C90DFACE801356F11788386E14C1
12370C3111E43FB2C6299B6BAC0A7BE71A3AB3BF11FD5245EF7FE74AFAFA277D
A17BA039A7424455215D19A1BAE69FD5BF63F93840C7DFAC168D58CCB2315B38
479702A00C5A67EB600779EF553408F0163CB1FE2DE90515482DD9EBA4615978
BC89C53DD6230D4634AB4CFFDB09D03BEDFA3BF529B9D9A897F3EA71F432F3A8
67EFFE6CB90B0D5C6BC9F3F20711650C06D0CAD91471CA95B595104944D58860
9A7D8845498140DDDD51A4585E0E41DF8D95C762C4D6AFADCF5008E4A33A8FEB
1C69BA5A76E3B49C9EF15D87F047EC796CE556B69D56AD3EE9A6DB0608FF7C5C
A242C6DB3DE574F58CB99A22BCE1F50B47D05C013DC3902FA608B0839AEC43AA
C1621DB0BBDC38463CA2C76F43D1C80870A482F4D3D4BDE83F021DB5401A3579
45F2E0F7CB112B85DDB76CA6D6A9EC61264FA77B6A8CBF1C8A059FE224F2D225
6876710654EE83C7A6B32130AA0FA2BCCC51ABD3EC0C194FC17F8259EDAF55BC
68B5656122353E14263D0661131FD161BCEA044C95279D88722D1015AF2265CB
7F77E0548D45BB469D1DB16EB7D38923E25A9EBF2EBE77245D454E8C64819334
A097B74D69CDE76B5A5C98A4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 63 /emptyset put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA853
B843CABA76BDE9582090299F423519EE3AF8F83AE7F7828B314B6E36E9127419
F274E9FBF5622C5E48D7E956532CEC95FB91B9A25FB4518456BD3BA58D0F6CD3
196694531D1A0EC1A2D69F138A0D661A72C3ED0EE761157679DB3DB67E170C78
3AA8EB92D0870FFF9DD1469A3DDF75512BF8763D5D69DE65328B4414BCCF8A5D
C3A66395C916539AEE6B7CE9558940573AD2F997C52F2B173DFFE64213108035
4D2CCB7B891E3C12B3391732BDD226EEC9CF80E09C4365ED93AC18C0A241EEE3
B24795732CA5C5850096848D4ED16647264B7C165B32BF55BD53861FC8110012
D3843DD2DEF621807E78674C7CDD3DE953DCA440ABFD3A059471D2ABD590A2C4
2EDEE0C6A35999D7D91305C6A93567CC9D3106B1F7668397EF69C17676C8044E
11D17D9A0FEDD6DA5CE5138DBA91EF10AB3B830920103EDCAFDF7103E0867E8A
516D5F83C1FCB3051C97702D0033408CA6E53CD4DD68E237
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFSX1095
%!FontType1-1.0: SFSX1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecsx1095, tcsx1095, lasx1095, lbsx1095, lcsx1095, rxsx1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFSX1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-229 -332 1765 914}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DAECCF15D23E042826C6F673D98031
850D97DEDF379B08825FA28CCD6C9575917E4EDB201337D0634732847E566818
77A9644F90E45F1ED0468DC768082D03B6CA17AF4ADE26A79F28186AA47214AA
0171FBDBEADFDD1B513C0D2B138A56995CB2405278FC10E64C960A36C87D66CA
1095BC092AD27CCB73B0903500BFDAA29F79DFBC30354B2718B259F659330ECF
B2B8E361679F36297A1032088DB0979F81900D2D420176A9CC86E91EF480EBB7
25603E93D578FC86158DDE3D029C43831540D2E90B2D4C8FF1D7E80E6D2F2828
721B3CCA9F3D814A25869BA964DAC95F931E1998B1BC182D7416B4CAF48F0E99
911DE06B5D4A7F320DE20C6536EEF043C36904DD2BC701A9DA8AA6B3CC902850
15409D48AE336F6493B0DB3B8D93918BBF0127F295AFC57AAD15C8F914547C74
548FCCFDD2C6A4B81A6383DBFF93357FD14847A5DD0537D6D6F8D79353A94A68
61B9D526F71880EDD4ED131C0411B5ABF778EBEF467FE7156B5508D30DAB9DD8
F433262A603DC09194EE0768B10CE3EDFB60D7B2189CE4C7E3C5C6A15E434D65
07152DAE9012463400CEF1F6D76C3FF0C86BF99399F7062FCF81F73CB8A7995F
49386C29C1A0AA2C5E92515FEE44783616A1B4B7AC8445A58A83F9F12F7F7FAC
82DCD3379DCC437133EE9AD0B024FD4FF7761B7018F579D8FF274C73F8C169A9
0899D0A7D13EC7F12C06723B0EEE6A97A5D7387FD2384B77B35A39F8910D0866
FC90C3CC38991BAF11AB0089A1D91B2281444095864909E46CA514C1F82F3C34
089EC1F7360573AC236E17B2CB3E8B92F3A33AB7BFBB64F3CBF9956695A9FA01
D3CE931B60115C488BDBDE29AF57BEF70D13507B80BB92D68B36D77C57E0A3DE
CD538694973016CB598F5246279AAAAA246108432EDE10ECCC6BEAE3C9B46391
26B3468CE4AB11C078B9AA1712BDB0335A205122E22208EDBE56EAAB2F3A8710
BEDF4B7F7C38809FA0C00737E1171F53066DEA5EB5A1FB854348564ADE8ED69C
4FFC47D01F2D9B8E0531E8C7819C16F9818B9EF5C5033D4DD423688D886CBE48
838678251241B46BD244E88D53A6EA12289A220F4A84B86BA2017EF1CD624C0B
89FE857A8AD5CEC84399A0ABC7B6E384E4253396F0E34A62EE09D476263B9DF7
576B2DA46570BEC9D9EA35510029E1F6D3966CD6DB3BEC3ADB2E4534C566F1C9
E414356399B49BEFA720C078C03720C14760B602535D1A87FF346AAC688A2522
5752B7BF8F031651E2A6B1FC96A2EDBD3DF6919BF7DE78B0D1575AA288D28D00
4E98C8F09A8D432677DC734CE92EE494CF76A1A3BA678F423612EA02AA67EA6E
74744C42B434EAEA2A8E34CA83698F693051893F2AFEDC687BD08DD57201858F
9245E0492887D0762B67A66FC82706705826819B52AAAD089866CEFE37424C08
52D9AEDEE6941CE10B56F40AD8EBFE52A293460051DA59D07803419130121435
D078D733D69592337808A5B457AAF17C0B903C55D1075B6B761277162CB591C5
7A641C66507725A74954C9EC681F0854829DAFF653300EE8B20581F0CA160B85
37E1E7436FBE5D607E0BD9B18D3F781ADAE361B3714077BFAEE6D058F997EA78
E1356D5BD93BED477CE1A31EBD0B7C6435D34DE4FB36D11A9A03035995C6B240
F61E353CD7684A1E92420907FF68DAB0F212110E0CDDFD031D8C194B8C21EE86
05C655CFD1D12CB78F7F0B8D8CB40507ADDA19803771373F312A5F1FD5178165
2095ADEED8929F651527E2686BEEAF4C2359420DCB24BFED4728872BED9B0994
E2BBEF9D69415C6C24404E753034518C9A1D143BA01D7D0FB5C583BB6C2BBE75
C0B371EF1D05A870185BD3464DBC09C628F8CEF09B0ED0F87CA44733503D4DFB
43726576FD8A8494BEEC445466115842A4B302E7B4C69CA93531F8336EC713C7
156AAA187789211BDB59AC7218D3DD62CA56A95F558EB0BB356F8397E5CE7C20
18A6A43203AE3207926446052A40AEDEE2FAD548E3AEE8B730BC41FB69F10C76
C5DBAEDC298DC4F5C3F84B66B6170F424BCEE0C1B754A6708CBEBFBCDBB0C5D0
2BB673B9D49874E7F4739E65121B53C83E7B9A1A5E93702CA98387CB99932F21
82AA3F9CBC2CE3E57969EC42D82A3DD8A65E358F53C5E126D46EA261E647094F
481E791E5E96831A3DD391CCE88BDAE8A4D319200574EBB1CF10C40502BE6F53
A1A842C599D4E6BA69F10D8E9602137532C88DFA94C3F30105F44DEDA8ADEBDE
1049C0FB12D24CD1D9FE8F3F350FC8ED47A84B487004DD8A03624787478FAC3C
7358FE9669F35AAC25A54A6CA0404486836E2ECEBE6792F52344D970E59D776D
76F017BB10A788908C2D97C7B0772076A4A6CC320AA43079106E61F05A00B2F5
32A71D06278E80D55A488B17B526D31D354BF15D2B2A9D71A514A35FE59CC367
AF5BCAE3381123F3066832C0F69CA3D18942C0FF3D5829CB45EB3ECC6FAC773E
E9D144C7AC9F0A13B5C4B09DD8F406D435D73B99BF59EEAFFD7D0B7BED5BA084
D102B0E55723BBDD3232D9B180AC577F705E77DC1376704C811C90C254A1DC27
7E410107518334ACAC61FF21B0378705C512C01316E2CBEC69988D32C01912C7
64B686FEF6FE3897A1F7A36E19CF49A5475C5C9E06AD6A977FCBB3DDD04F411D
2BB7F9BBD621E4F0B70DA9B4E3E4C9F3FB3FA41BB913FC17DF182A8AB6C857D5
90247138D0F1239C3DBD5CC1B0A735E7F40E025BE6AFF35CA1B3967EFA01C4A6
A78E59CEA88682D940369E1D74F535D8F0F5EE383E0B4B2D166E74FCB3A497E3
9819D725C168CB8231EF68C27010067A52E1E24041B112D075AC6FBFD889D8F4
7774DE3451F7EB0E2551F5FD19020412A91FB034D0C5E1AF3E18E0FB09EFAFAD
08690035DDB6167BB6BF18B55DE0A9D3BB807F70E886135CD0DC32DFEDE301EF
9FF989C362068FA870057EAF5693ABE477D988711557E46AE4CC04B1493D6BBC
9280471FC5E5B92DC95FEDD851BD951F2E8C36CBEE801F931BABA395984CE73E
67169DC856A633A3DD3835E99FD03ADA152A9B376698F006A4F2913A200B22FB
AC7876869C1DFE3A63BF4F27A4B583E48F8F6649E138F519E42A2903384C57BF
FF54E7FEDC3B462015087BAC6453A78C50EDF382DE4C34073E3158CD5B0D9E84
FEB9BF2AABECFDBC63344998E91AC9C177168F047E5932C20CEA18814D01774D
E60A4453597E2FC0849AC166E1B2A18C094003D174A42C50B6A17CB6AB27D357
4545933BF01C0E31E1A4C4C1C4203026504A999026401145ADFAC7298769CA00
2A430FEC6F749D3651EDD7EF91D819B369C5544D3EBF05C343C19C499CFBC1EE
F888D3C6DB49B71ED83A216241D9604C08661D5A5EC17562E8E140601E6C224F
69B94886685A2FA5A1FA7F8109E7A515964E592969E59980647908F41DE2EC1B
3666C7E6254762B2ADB7E31AD5366B52C7DF081374BDFD3EE818C316B7D3FA7B
5F3705C0F2E2A593DB7AA7618487B1D3D9231127793A46E9DF867A30AEB39EA3
7525A46E14B52AD6C61957583EFA0FD5560B7E82A3A334AC122420F03A244E83
F9B14AB9EF1EDAFF195A597ED1A516061F918A31C574570EB2B4E1D23D65682D
F00E20B2B90D74B184A25A0D0C230B24C36C06C8F2125DB485D3503F8D124425
BE7E69ED691C6AC39B0D00E71C7F2B51F705E19C87F668AEBDEB16A3E605AB55
D9803B07B51D6C62169A602E52DC7686C2E5D368D899BB113B860B5E419BB1A5
444DBD6465AD69F3E231D1BB051BE852D5D0C6159F3DC45FC77BFD275F6F7980
F180F7D92EF581C3FF620FD9DDBF7C46AA98E852CBB461976F46EF112861D3AE
86BD98E15B37612E2AB4711D16340FF23C27D1E6C6AC093048AE73DA5FA01E47
A504D866004B8E5B3414606385395FD76257FBAE871CF1125DDCAEFE7316F32F
9F6D891D1A527AC16D0E30969668573B65651CDF77EB20BA791D719E85A8BE9C
D383A2088631316A47C30E3C7640CAE859804696B14F0FF7BCE793E2FE0E4359
B41B3257AF837DF2D96C592A1E3A9AA448BC45EAFAD7F08E159DFD674C36E65B
9FA0C950BFFDA82484246C9362C1D788554CA7351753B9E8A4E78B69C52C75DE
EB75FE08CEBA21A99C4CA4F8BB2147EDBB894405800BD35BD2EB58AE5C3B3E29
81383FC5CA8D39089A9A7C328D7FBD5AD353944DAAE92656BFD9FF6C32289586
D4E366293A58A5C7DB29BA4101E5B579BAE4A479134DCD0395B5E6E235A58C64
DFB8119F8D118914A919AA308DAA5F5DCA23F1A85D70AC13C9247F52107E189B
065837D6614B821C22F49A1EF8AAFF201FAFEFEC03144AB387EA6EAABC1214B5
8008A2FA7B1A0D3CC3366BFE4D826711710DBB5880C9D573201DBF5848EAD023
DCCB9EA474CD30DCD63F4A0D51B5FBA2844823F926F7D5616E07D45FC7F34EF6
E43C98F6714D41A2D7E5FB5781C4859B00E74CD42BE364B0469AD61B5EEF08EB
10191CDD9250F14FFF4452CB1E01B3610E93FB7771756E08D144D082F09A73C8
B5449D14B1E478C3C86E52E4012BEDC79A9BF8A9FB7F2E3054A705AE43218CCE
29994E37BC2DB86E5487C9BDB503D6EB860B53E167799A3558E34D412DF23AB5
FF049A71E9212979323B5717D99E1679B5B24A20DA13C09A01030154708061DF
D5854C9CE0C835F4EE5418DE2618D69C46649DD0BEBA8EA1605589918EAD247D
0D695109B452CAE1AC5FE4DC1DE28F0BA6976F13CC7B2D320F71DBCFF8143E0B
EA69CE677706F4E3B4A8BD904920CBF94CA8AA45EFF92E2A2019A1C65AAFD32B
2D13FE6E9271771CD704E7E96F7C5306125BA5BACBC1033A185F1E4E73C92CCE
3BAAEE1D7C7FBFB9FE68707296D03D65885F27FF8D88E6A57C45961F74A44733
503D4DFB43726576FD8A84906201A78C84C8AE77010C8D90D1E8539850BB3FEA
56ABAA96B789B761E3215CD1B5C54FD82E11367711A7609BB8EEBBD3459DA2F7
FE9C96BE18683BC8896FE4E7CC7C7BA560E5E8128F318CF65DEB3C108AD5B484
A28FDC47472DA7F00C7544D2FE1385D456D087B1FDB282C29411A3CAEA6E8BA1
5289ED311508BECEC2CE2E79403B3EC3157374BA7E7F259F9091BEF388004A80
1966E9C1CE337DE4A24E229AF6FC97AA35B0769DBBCF1BCD883A5C8BC421D922
F69E75A764E0299A4848F7F3BDD4A848B99AA372FAD830DCFDD1E9A87E4625E5
42BBB0B5D3F27D47EF274115C8B18094E5C055F9A6F0EDD61898C6BD1A174AAA
943353E49FD4E764B326742492CDEC1C094B84147CD24C01E4EBADFC92CB7A12
C37A9C516294150AB0E3183925643A4012FF1B4BDD1B9B310B5232FF2FF82D37
2F72647BF8ACB31B3BC4D0FAA36EB764FCB921E6765FD922ECCE06E3CC7AF6AA
0602363325BA78488136AD46C835CE2E3CEBD81543613B6B24C8804E63DBFD96
35B16710B121EC63868D2F412C6601802F57A564428630A197E3928C065A6FE9
54E0D7B01C094F57BA2307EC71A455BC1900FA6A803B6F73052F7BBF3C3CF544
3F03CF7C7A49DE2E075B1BA1CC48CF92D95731E6B46682B0869387B3EAC5F2D1
A0ECC2707BEB48F8E6CA76530355A9967A3E410BBF112BA75C9E83FB8197E402
AF57D680F1AD34324CF6FDB4EB9CCC5D4B4E86225942D24BFDFDB3B9C25BB322
30FE2A8E7110B41DAF2C3D40FD8B055E57C2FB2E1B43B981A9798BC43C8C1E23
F256B5BA949B5ED945005796D6EF3779E23D1B45920926BAD7DE51BFA04C7566
A4ABD99337A09AD088367082ED1CF32F649420CD9F75C3A5113DD05E3CD8A2CB
8BF19EE1578D2C3F5A607ECFA363CE18EBC7416096BA480FFB4B0A08F5D46A50
C126D92272D42944C71AC03A7F26890AAAB50C4891F31B61563103514C6CA594
0C6CF164F6585233422B787189CAC177605950611392163C9EAA17CC76219285
42FB3DD2AF1E68344749B388CEC21C76608177CD51634BA4FA16928F9EAF9A73
717AE100DA8E491D3230C256991BD78E84E8E01E3FAE6EAAC2E65905985896BE
D9867B64738C273681D55E4C420C22DD61FA45C9D6AD9C4DE8EEAB740D20A484
5B3E2522A0740D2A040FCA30A6684ACBC7E151D2DD37C5473B38FBE2DC383854
7C15BADD31E15B4C6F384C66A46105DB15257A2F80BFB33FA555BFFF61E504C3
1B8B6BEA09CE9979B0D663D45B50B26326BF4959E12F18EEC78A0EDE50AF9CFB
C1914B0EA504BE94904B2A258B6D1C3CD5745446924207CFBB5178B2D9BD2F28
81FA51303FAADC3B55B5BBF0EB78928BC794C01250361B41722A0513DB930A45
6E19DACC83FB82F6F13DB76AA5CE13CFFF18705295AA7473ACB4EBE43B924370
144C1C6FCD650274118E01847BFC60F83712427FE0437508194F1D90A7738F26
801307BC60159FBFF46B35BBA01031AFD05411302074CBD62AF984BEBC2792DB
64771B00D2530805ABEC524A8D870243156AC4B03DA5A7EB2CFAC9DF6E3BCABC
443633EF66B9AD07F93B07325DFCD98144F7F6CE6249A6C34B3D0140393D2B81
34CCA2F24B71243CECD91DC5AE4E7E76D4BDF00320FC8AA99E777F5EA9394332
C5E210F50D7E6BE0C39A7C5664D4A2C86BED23DA2725227C644915001C2866A5
43C8BB98C9051D729A6CD86D12D8111320E96D52F46424A37CA8283B5B0F8AF6
4667D75E38D632D79F74EBB11CD2A431FE3103AF0DAF92256550E3AF9E776EF7
F9C44675717F967012E1BF708CDFD2AD852E07E4A52B7558D64FD74BDD464A83
EF201FB4A8C7C5D831CAD5597FE8603FFFF70BBE951E4A202AB793E8EB42D043
295BB83A46DCD201B947F34837FF00760E855DAF0C6395884B3DA5BE1E961566
A678954C549E7F2F0E53AD0E8B1979789ED599E79B36D9E48E1BE994C9BD5069
4DD758A9F294DA4BB30A9796DFC3E909158F2CA2F6EA9B66A842E1215286E75D
B1620D29034D2ACDD31C6571C0AE4C07FD7772CEE75CC9934D7DACDFEDF479FD
EDA004FE4B4FA2D0E0E964C21D8865A20F22120CF853C86C4A787731C8A0A3D3
093085EA5F212291681AFB56C08D0058ECC4E243CA760E10511984A178FAF779
34AEBDBA68ABC7EC19E0F3119A17E12595AE47730F34A1833AD18B9D45680A10
56CFBBD6B3B90E53137C0EB87DD9A66422C5E472D5998FCA837CAC9EFFE1357D
42B278AFE556D1067F2D15E90C058B40FD96808BF73365C80D5602E0740297D1
B413584325272087D1106B58B5A92C44C1B4681B0D71395E5E9AFA554357F047
F03257CE6641D3C5EC1A9A84A3A6BE62624B43C20735AA3F111DF1A51672447D
9AFD09BDB65203AC151FC7EF0EE9DF6A7A5D7A7DAD9AB28E20DE65B5AA436EFD
876B040279311E035B1DCA1C1EB6A81029F6CEDCCCEE543713BF89B36FEE9198
99A88D6E52F4B8C82D4870FAFC5768D40CB8DBCEEACD9DE4462E2354EF812D4B
C62C59AE5E68D0E442621C7712CD82CAF8D083AF733BAA0F4C5410E81DE9D962
8412B1724431E8B67A14FD97E28120D8A1373B617E06110E989B0247D1AAC065
86BF8E3B26115CFA8C3C5A73718B35844910C4610A6D0235ED4A0AD0C15736EE
3539463C29BEF79EC524565A1713C8FFAB98EB0543015F06CA5583D50D7A753D
4E164909431DCB3105E95CB82A35B98A25AF50162E52B33B4990833C226F1A31
C2042F8E12293AE3690D540308A4B48A2B38D01FEF514CA205BC61E9685FE4E9
BE00B8F57F1825974FBE0C17422B71F1F89E19988170241D149F343FDE7CEEF0
20D591747DBB555CF633CDCBCB7EF0AC2D1AF51DED5EFBB93FED447A85F1453F
E88C13A71317E29BAAA4D3E266C9C2E17A046E6D0440BF6F0B7239476396EC0A
F7002E8316097EE092694769B9A7EB1E7EE99C741A3E0AB3A98682D940369E1D
74F535D8F0F5EE320C0DA2A223B97E87BA11E1FE0D8DCF2F1A62136CF8F0C300
9E0C87855E45CFD4484584EDD5574FE761D83A482E959895287ECC7318E44FD6
21155512630194278A2835CE0351187185F53B8DE69CCB685091DD8BD6FAAAC2
28F6DA74F40329D759678998E81DF75014E185744A69985AE6EB4DC19B20840F
4ADC61286315C1F5085DB94B57A71E9FE5EDA0DDE45DAFD813BC5D248569054F
47E3D1F85C08D619F21D7FDD45D01D5669460ADED58ED522119C2D2757CF5808
E562AB97313EFB09A4F168309E333C3677E6134551D74BD39D37F446F7949A69
061CAE94BAFF39F9739767252F12528420A630ACE9DF4BAF773A4700D4958CF7
46B2CB1440EAFE325BA7FBD8764F3B910BDD4A2A0A568075291901B3610E93FB
7771756E08D144D08019292E021A9C4702E3DD3984F1896B5F92BD222716075A
3C829E7F079E0DFC9F87A6BB01B5167C9A135D34A85440D6DD0F833D2E1D2986
A9353E96FADB7883595FDBB0FB3AD3A22D83C01F92C03D30B06363EB36E3BBC8
2337486129E5B25869E4E6250D8963D1462851A81479331B3249CF8C2EB97FD6
804D4542F1B98D4A631AB1B285D7EE1A4C6124B8215A33C8C4BD07E26EF964BA
42AF2889F19F81C460C13F6E32458ADBCB1B67FD913F203BF8846B57ADCB5A23
0B890A3700633DF3DF96EFF84355D24492AC0F942A21E0D0BEC18D244A8C9F45
4D370DA8F078564B20DB46767C44FA15BA4CDFFFCBA6469A3D6C3EE40977A86F
49FDB3819F8EA217DBF5584D7B3F58A867DAB5BF1C6415820B4FE1E3CAB7C145
88D1F092F34533C9C6E9DE911C844158BA2018A393416A86F976D636A5C005B2
F9D933949937FB67AF9124F5FB2A3E1254A9A2E0433F85759243F24512C7D40E
570E6D70165F84C63370F98442CC743C544FC24F5C75B7182BF827B164432DB5
9AEE52ED50ABCB729DDDCB9EF1056098A0204565B5F0CFF08CFE3515DB1B2049
FED2F47EFCB8D869370DCA747CC217F9F56A041CFA2091D41A1CE3979F8B209A
4660C3D04CD1B901D961880B44F59080BF7936639995AC20BB9F1F870AC465BD
EF56662CCD669B9E47F0044C4B549F63DB75FB0AE3EBDA84B8AE602032C3707A
E0E5419730E329D935E08DC31585A8011D806E6A8E718F558240B6CDCFF51C9A
4E3B438D14F2825BB12C66DF0CAD71D6DE83DC7BD1F33F122EA8569C15375816
9DF4A890178DE0E5509ADB57EAECBA9FA07AD35BEA54BC1AE4D42540268F5843
8C69528D598C4ECC7D2F2B08DC5C5A026DCFD625D9E2385767A972F70AB4BEBF
FD4E5DA776AB0EBA3BF88C1BC49F0DDB958A2CA55685D2612B7F36AA67E42ADC
857B5ED43A7599022FFC8D8E90172263A50344FF9E5CAD3F822D20B33BBF008B
956E08432B63C971607E59B77B033A1752FF04CCFCD615E8C67969A4577F00F4
B7BCF0DF40C67C989269A118ADE088A0C65C626C8F673A72309C456966606F51
FA87EDCC6CCA03DD61A07F0B5E3DAF9CE29F5C56207131108073661EFE956602
7306C786600CF0EBAF6EF10AD5AB91E590C60647616498009EAA18AFB920B8AC
2AB00DF2FB0A2B19553AB263E7D28F4CD9B61716383B331C43EAF8A45FFED6E1
0DB82416A1188665435FEC61E85BD04180727AC1D6EC9F864CF2A8581431A7B4
4D40B1CB8CB60C0DB64F4CCBE09074F3B9529F07A74D15F0259D7E11B99F7A3A
6F924CB7E84EEE93E95B049B39331383210115B82B72A98EF2FE73BE1C676D2D
262FB236191B0CC7EB76E26DB544181E89C75920B6EA61C8CDD9758100ADD9CB
BB97E32E62E4BEA0FE28119CC0F6D54DC3528436EC6C72F9933B9D4EC316FDFD
18B021DBB08A6450E9AC0D78CF9DD52DB0D2C9E86FD660DC3096437DC7FD88EC
0EBEFDA8D1EA790125B211CCC182F477837E0829DDDCF3BAB1C0DC4955489F4E
CC0B169F12C5C922EED315A75314AEA30AE6B7970427BE89D4821FC9DDD5543A
D95E10CE656EA312767596D2D8D0DDAF35424D340D19E97D15F17FF84EE2E6DD
0CF3E0E5DF96C5727ED81446B5F1AAC256B436D832DAFDF398663B091C37B4C7
238483363104927A2F541535713971ED4D47987EEB506EE0FAD158FCD53D79FA
F2155FAC2191F60BBA27857D7C031F9E8AAADC3B40A27E0AA4CECA3340721E8D
ADDCBFCCFD7FC86F5B19F0414AFCF240291EE1D47E79FD3DDD591B6BB76600FD
D7F36FBE530C9CF4B22AC7E358159447B6EE1479E1CA9BB71BB8375FADB988E6
FE08AD0BD8A0D96DF011878B66454AC75984BAB2DA260EE167B5EA622C5BEEC7
35AFD8BF715E80C7F83B4AFFDCEB24EF1297F035DEB4063866DE521BEEAABAF1
85F4CB0E66A97DC3A56D93C22024F3777DED4066EADD277FC23AA66D2CADC4B7
DD33662344911AFD2474342F4A4F334D1BCA45D83C01F8C6415B9B58B2A23F85
283BAEABB9A6D43E0BBCB1872EFF984109F37D9FD41D647ECC5F14021486C6D7
693F7A37FA0375CBBEE5266B223C04E3AE50CA100D2552D13BCE5F7336180EEA
D06DB1E6E8EE3FE354B64D87C7DF67F88417613AA3DDE2C62A9EAA7B5CAC4A2E
427252E94989602F76F629C1347BEE2EB1058D6A930BC68142CFAB9D75C4F6D6
A73FB4C07229F0EB28ED3B95918EFC6FF4414B7C12B388ACF837727FE4D97D30
B38678BC7F77BDF8C64F7EBB0D1CF4C0F1185E94206009C6EFC9C424EC664C3F
8E89241DEF3224534EA231DB5801C26C97F7E8575DFC25F6092B48C7640EC090
E39008AF02D8737891E67D143CFC0E3033EBAF4F1A66927F0A67BB55BE6D8442
AC6343B712D86AE935A68FC20EDE9F9E1958DDE5D24C044A315F256524E1524F
808CD934F08F85CD4CA75D32FE863E2D4D46A033A9127238FA6EE9C4C5BEDB9F
FED130993C0CCBA3CC151BCD27DA3CB90CAFA9C7DEB95533ED3F634A3592BF12
14E421BE67254F292D4397247D00F55E9F16BFA652328797E849DAB5E11EED40
6DE854CBE0801BC4F07D472065512BBAB3555B26500FFA8C893CE42D784528D6
8CB2D730293AE1156916B204BE803E8ECD33031EB5DF8EB7A3C89F8AE4AF9ACB
9DBC470AA749FA5D41348B9ADF9FFF771F1866ECC50946E3598036CA9E084A2D
17D2F4D67C5048C0868B462CB0A4C3F910C3387BE15D70E4A43CB6CE85AEC3B3
AE33596B251869EE367CC1FD8E67C042680EE16BC22104C54ACBE6E9B760936B
B24FE29FAA5C131D43EBEA32B0989A274282AF779897C3701122973255580BB7
2B3D36CE361A84747BC9B15B0525D2D9926AFB0D2DE04119EF111FC5B27CAEB1
C72B32C848C9ECCC574171D2E2380125D05D4E5CC5C6B0CDCE45287496827E7D
BA9578CB82627C2270DFF57B832AAE954D0E9CA5A175A729B7887A6A965B1EC6
DA4ACA73628434DDC0797BF28256EEF2C789195D7563E24D45F4EFFBE43DFBBB
DDB4E3D6D9170ACEAFFD1F4F26E1625D6CB0A36B46B1A4ABFE5C5F5959E806B7
DDCED2CC26324BACBB6169D50FB9A3250B8A6B0782FF750829F982775284020E
97B3CEB302886322215C3A7B3F7C9ED24CBF5B6B2351D287FA96E36C19410C54
576EA7559E6B6114267FC316FB35D9917477BA0144114835F96605E973944EC5
05009F4AFCBFF79F815DE1EFBE8317666AC29D5786AC356DCB3BB34C9D419A76
5849AA29B47F7F7730479F66F3BECEB341C9A210E28B6780E13016347362FBBE
662696D0575DA8BB2101894B0C047DB7EF79BB73107344DC7F5D3526AEB9951C
726032A4D856788700B06BF950F0BB85EC5565D2B45742A66DE1B69E322BE58A
D4B8224C70EFD488FECD298979C10010D1C3524F6F89EAB6BB7CB9C25BFD2813
BAD0579A74869FAAD8D332F00FE603BA84311B1D40567E9DCE8A7DB780D4F11D
2F853285E26E3DA3ACDE174B8DEB83A519918AFF8710CDC8F0628A7B29520B77
AA16B866CC56DE79BE71F3E140F75E4B50555749ACFC81B55FAC7C00EC290A9C
2B6ED06F061D629ABF5BA1D5CCFFAE1BFD07522EF484D7EF76DBCF2B6B333362
EF77B648AB99E2505AC7F413583F34957AFC64DE7CE972D0B9CB60F22C63341E
DBE3E04A1BF6DDC3EE17F2E7C7EE8D9746742A32C733F2EB7D92FC02BC0AF924
AC1D03953F8E722186EEC417AA6A4D25059B6F27A22B475F221EAB98AB0BD4E3
08041A20F5CCE620BAD35C824CA29486F9A28C6AF7EE94818841417E9DC74C96
208EB2B8F3E49D426E35FA4CDDA6FE3EAEDC5B9F2735ED389713191D8FAA3FCE
869EF01C6C4FDB9C095C18E9E416603F195B0A0D22B1CA7076977B44C6E51AD3
DC8B3074E73F16D74CA3F051F5C02C10FBD9F2FC676BA0430F807D13C431B6FA
020BF3E1C1E65DCE4E73ADC58A43BCACAF65D7E8DEAAC0991E8D41B17F7A1D1B
53D5D9A3C59A516EFFD38CB6D279410F055A9395CED7A72EDD3BC0CEC5B24B93
A72B561639DCA89F516CFC27CC18C1C11B936DE53766EF2447C58CC8D68BE2BE
136F1002E63BF497F925B4A5E46C5FF0578713AD0E6494353A70D02EA84EB93C
A85E894406A5A3AAFCD959557B57C838629A22823CB3586693D9372E35F37315
E6CF63B4FD224F467DFBBEF712E604BBFB2A1C147FB5FC108116613110884964
E2108BC32B54A5278F76C7339634DAB87319E9E3072D79559B34FD08C2C42EE0
41CCBFF7EB2CAFAED1EB875FF3927BEAF9CE9956AA1833340952C7F29D3F241A
C40D05825F52CAEB87491AFC85B2CEB0D1CC1F310E237C6DAAA88EE6187A3E42
40DE315C15B52EF7B0247901EBA8C273F07A23B1983AFC516FB3F028AAB2FADB
E99D72BE23C90B01825D38901FDEB3C6B36BB550D859B0F018BA92EA52B101F0
BCAD6BEB0849F87F1106DF064688F88F754C3C112B0D3A25698D746447D4781D
65E8E77F65A72C19AFA4220E89357481E202CB5BF6B7EB8F8279B6B80EAA0735
8DABE69F269375DBE7523F7AE1798B0C17BA4B56D34A9AF18B76CAEA217BA413
00CED8428D248B16029AA707759ABD27B4CB79437FC3B53606E4A23613676D6F
3E6F6D86F1AE28A6B257FCC95666D2C1D17FC43203CF6537CA712A3E2436CBB1
D714DF8ED2259395F9FCF7BB1059056AC7FC91FDBF0E876A37F59EFE398AC309
DA68B180A7E629DF1AE4BADFF86BE3BA9BE0D909655248B07AF818BD729B7945
2B891C877D597E27097A2BC8ABC3021193F7B4DA37992C12E9E54655E18E0B8D
3819E221471B1A569BABFF11561F48BAE3AA591FAF0770F2B2400E1809A5FBD8
4954BB31C8EFD5428E480ADAC6FBA4F43B8C4BB92AA423A37D8C7CED1561D4CA
E9E03728949E3CDB54578099AAAF71EE940ED7A83E8D9A3AAE53AF582FD986BC
21C8EF3DA090495D4F32CECF8571B4BD5D06131E1FA003F01E3EF7AF87EDC50E
07040E941110C166E8E19296C69263248721974FC5A0AE086C3C781BEAC1865D
D0E6305207F29D8A9AF7B94F7AFF2A140FAB33411ECA4B1320A3CB7FDB6C45BE
A13AC4D1DEF07B3AD76A55804435A1F74DBFF679BAB5DBE07DEE824CBE2B2385
0536E8E4795E869B9B770B96E6BAE3C8F55321E3626CA59318C0150E7768F2C0
6B08D0760887BBA8202D430D6D1D8A92A889A2E408C716213F9F08DFC5211059
6A8C170D39DAAC6A6917012FBF02C25224AA805E0C9B02A0DB8E4CACACDB327E
A38BECA3A7C5369311E96E941651E3201830E2C38243F162F02E5DA17A71E849
D23FB3A703B91CB2071949CB97B53DEB549AF3DC8AB8A63A31061596AE4F530A
6DFB4BF5707832CFAAC18E884D88EF691E21A7F7893FE570866D4B7C096B28A1
858D9B4BD0B45DEA0ADA703FCDA71B2F50D23E951D0E83F6A4AC904F6C14A784
99E6428AD036B5A444B72B5707BDA48477779D34982C57A368FDBA1EF02347B5
CE65D99A38C4418DC17B7832CCC5F6CB39328ED3223A6D26B849E4D508478023
5678B7C9ACDABBEEB1741558571B0D5E16A1AB1A2A134EC9DBEC4067A9779DAA
18D0F837F9C9A1CE33EE4B71C211EB659011B00E75684865852B16E2BA5A8CFD
AEC8728A5DFA08D11A842E751568F255DD623D351E534F10B20D84CD0AEAEB8D
39902DAF1DFEE0477BF751CE7A78316130D7472197A88C1E112BE9CD4A389F08
92063538CE26DC03EE19A236F46203BF90AD03239A3AD61194630224162FA077
1421FBBBE5972DDCE7EF7DBEB1B3154358212CB5E2789472A11B13406E4CB723
AFDEE715E8624B04D331396ECBCA8CC575E9C2459EEA57BEEDBC8E13F77EE258
154973C91A0671800702818E1014EC40BCEF621BA2F39AF2E91A3082FBDF9A81
8A89D13CC66D6FB986F2B37DA8EE73246ED62575CDCE914272A8F2FB00108497
54FA587A90D95537F41DC592F2B0B50B9AC28DFDBA1E904801E6509885BC8DF6
B40B89C61906449BBD49EEFBEB69C4331907ACBFB8A1E67B975830B9E88A4408
E8D7DF55BC7FE4625963BCB5253548337BFC19F9D8710463E7015E2AF3C11A75
F0B17DCC7C1E0A45451349CF5E62AE2E811436B3AB70C92F1612E2F772E07CD0
9E65981DBE4A94800D73007B4F6060FC2937DD6E8A9623DC486E030365F832DE
A79F38C99A0AB977807FF108F3D091ECD37B466C88F1B4A9667E17E76C718E99
3BA20F6DC3C0DE5E79C4B7ADEF3F2D60B1AFA7A210F25856A6A91DE2280888EB
37F59B8B90C463CFD7F8BB1BA43F980020F083A04A68B73340A5E424E354868B
141A69C27FD2E4B70160984C7DAF0AAA27AB4E6296DDCCFCBAC8BEA5085E5E7A
1A97F88DA2B2205CE966D64200CA9D933F3745F40F0B1A818B28132D2BCB5F44
CED7BDF92D245FC1F45012819DD2FA22105715814EFCCE88F9BDB696284A5BDF
FD83439DBD3A74F8C81E8069DD79D334CFFAED4CC3FE915E206DC0006BF19D8E
F0C8C598DF814A7405408504E26F6240554BDAB473B2EC5B5A79EE3C9EE3A5D0
AC6373FED830BE9441371FE51EA392E8B5C55D9F5F6FB9FC59BEE455F28CAF29
E9DAE32D3C3D16BEBD20D50EAA7B9DE349F6B829C08A4F556DCEEF86323A8C2B
85B6508639FC3EAAE4566B2B7F812510737A97954E10D29A396CF129D500D007
51BC095EC709FA1C06F01004D720494DC237BA8F8ADF789662C3C9F480893F4B
B49BE4DB689100E2EAE5896DCC98DD48D390D7A977F888B9785B4E057CF029B9
1F25D450300913DCD9835D8D0208839682603335B4BF4FB5A10A2B5ABCBEDD7E
F10A74A212A9D81D31B4A97DD3D6B5968E1B6ECC74F1B4C26190D1FAD81AA210
A64FD0DE6659461CCD6E9BB42759C289C8FE192D3CAA892AB93871BCEC8B55C9
60DACEA85E5539494B42176BBAC6D0078BFFD5C89C730A2A55DF63C1CE7C8C48
71200746A73C92B63C7922F21ACC3CFC8CA53AFC3C525F6818BF5DCB5A8B0AB4
D8371C933E0BD1A5D978A30243C88CB457D4C790BD5DE8AD207308A5B457AAF1
7C0B903C55D1075B6E80213D6B4D1B121CBDBD67DED04BFE66932EF15A67041B
DE28DCCB72FC812D65DFB46A8DD92940563A3F8417A318EC823A5D4ADC7690DD
F5573EF76D0F789274C1929A4F4B44B1168C0632BB3AD6E600A47E7C02D08B6A
6D9236538BFFCE7D7799F0A8D519F3DD4C4CE144E244A685A96C920B73E76CA4
A226006E86D54012FCFE6D72B9D4452D2838EF6592962E5BECBE729E4C1063C6
147E443A49875BE8066920FF8E9414E4372BC2B9105105E62227A9BE1575A172
35FED8A8BCA7CC2815FE92D8DAF648E65894E18631883D5681C4DB9AEE6BE962
68611C1C54A887087222429BDC8A040C9267751B687B091E2436CEEC6C66B3FC
6D0ADC41AFE6EFF5E36B04D5FA898EC0BD095FE32595B2F9E591DEE722AF535E
B262494C2ECB5A4CCCC4B40625C6DADE08FD62A27C1CC846D0058E61A7A1A62C
09596BB62A8B6E76A8BDD302B15A0AE595D599918C073E1838FF3ADC0BF2CF03
95998ED646BAE50F283890E01BC7886049FDE5F848CD7B8C96F4A69193C84271
A7A5977F1DEE184B2832ECD425FF9CDC2AB5939A8D330AE4ED930AFFB09FD38C
62A3108079CC7D3D7905B9A493AF229268D932DF80B807B5830AA855A897B28D
FC782CE5B895EC10DC8195471065DA9D644D232B4B5485EBF14829EEF46E439D
769900193393082EBB8C61C308D947BA5D1C9B09EB66CD30D90336992D6E79EC
1E996F9572E44C3AB16D953B78679A23C0BD615BDCBF3B5C6C1341722A0513DB
930A456E19DACC83FFD8BA612E1A75953CC14D73E0AE25E73861F5BD43795EB4
8FBE56F19D0E6C7E03FEA31F59A38E0B4FFBF7C41E26C7484E4EEF37BAD364D2
05F8D9E44EE6B885B31F61BDDF01284EA40F96D8CF0E9AF626D0C1005AB96CE2
8538D91FD6BBFAD4D4FCA116CFFFFF696090C91B22AA22F83084B1395A06C40E
6015D15E47605D45E4BF6F85FB8223624C05BB8EB2638AB9D4F4201AE1CD8442
A3378BD62A85F236235CA322A2E3B359ED857CDB7D85B07F502423CC2F4DC63B
7BC3147C45DAE81C8CF706813C8B6C475264897D44401840B7974B2844BD6E59
A7E8184B1F00A215036B4954C0C814E6201DEC8136302FBA88935B9F08A67558
969CE843C914E253ECAEB05E65FEEB0961EC6219758FF05160E6C5A6A2206C56
47FF02FEB0A27A20D80737AABCC24E1F0EF4FC9971C05FF15EE718F53FE1B4F3
089932369CB542925FE084E7723A2C91D411E017FAF4CF2871EB3B517ED7A21E
A33AF2726A9360CA144744E50AD5BC4E3E7280D32632B2B0B608259CC88566AE
90FDBAECE83C4BB1A4EA4F1EBEC99C78750068599A2F24F91F301CCD238D7A64
AE2449A57ED2DC3E24F275916DA849100D409E1C9F5AC949A353E55D1885035B
D4C47DF0B69FBDEDCD125726908D7AF215D939FB556BF400D801D7286F6337CE
B228F0B38F0EC221B173B56E58FE69C725B9FD9BCCEB5809F1E6D548759C7837
513B64D21A8A6946467187048ABD8C42B329EAC163090F35C172731A8C04B535
DCB52406A2FC117F23114FC3FDCFEBD1D9A5C34BE3FECFBF56C09738EB05A8FA
36ACF00690334095CC94E2F974FAF826D9182842260AB1E11B361B10F24FAD28
32DD068CE9CF506E448C5466E15F2AB1328DCC4A3DA4372ED22C944CF6685FDE
9A1866FEEA2D5BF2E30D6791EC4E8A85E49A2CC0256AACC09757F728E5648215
810ACF775DE1403ECC363C39331DC4E3A3133BAC00FE07EEA97F67D0BCC6F3F4
448175AC0DD2EFA01D9DEF28F17A1197782339614B1E0628D5D76594E8C5DB95
ECE7123B5C7A9157725861A1A41605F3C320876231AF476E540BC38CE2F2C9F0
45CD6405E4C1B1F4CA73327ED6BE28336FB460063E42F6DBAB41F1C47C6E7DDC
8F276C19D8F511D22E6726177BB174403B9A94299609C0414F8233FFB1BD98D8
D3CADAF119EB95FB14053271B12473E4226CCE0B1053B8F7DC016C0192F64F70
6B3C644255D24492AC0F942F234579EE629C95B1BB7AD6469E23050DF8A3D9FE
3C533FA38D373D1C290FE5BB84B89E51C8AB3AA18648F59055C0255C80F2EE8D
B57C1802B3B2D454B2A62BFC379A48A55F3909C260A8322F45CF8683BA6273CD
3448A7A53760F20F0908270AB00D4EDD02432519C5A14E3C0BA25435E1E46DBA
F38F08B2F92B299B7BCC88580EA5EC51A2326F59E864C1D2969041B103BF60C2
FD9C5DEB0EC7BD9D376C3F075D96AAACA6C816C74751899CEE52ED50ABCB729D
DDCB9EF105609DA51777D3922FD785EF913C55E5C7EC7E5EF2AF6EF922ABE427
57022F5841767258BC73933B655BDC693980EC5C299A4EAE7413D3917B448A93
3781D305B2C38FDE31F2A97AD4E7F29A584793883D4E4E5B8240DA87E67A86C0
C43891DB79739CCAFD4ECE7F0EFB4D4E898FD2494B50704BBD27727256313DC2
19EAEF00041121787B44DCED2A0DF08E754A0DB0D085EA16E37643AFFAADDDBC
5DECDDB2E2E7E965D06E8A4001A7FC7B68AFC52B5A8601B2FE94084883427141
6A2D3CD609BCFDB764E8C6097B56C018A97D15CB70E24ABE645F48E869F33425
CBAEEB79A58E0F2A4A03ADB32AB73FC2A199D39C2CDED2205B041F17D8E93675
767762FE22786AA1DFCC1C3265EAA85D950AADA5271ECF62795718DB05FC20E3
C8C69E20DC470F09463348844A248A778C697F5DCADC60696F3C679467290A91
91A623F1AB688FF87FBAA00F1538BDB0E979C592BFE64D110AFB328EA0B845FF
6C7F954E9D3CC543608DEF3A0B1A979661CD349E1BA3B61AC408061C00E55F07
EBD900D61616AEB00803488CF2897B899AD70BFC8D272A2AB6ED31CA6895FD73
7E0FD1FD6C79D15D867E142AD6E6993370E8CD83B979150866F7DD9BEFCBB468
011F8CB97C1A6E1512C28F13B1BFB637C0C61A84B35058CB332E6D048FC53CA3
07ABD56C303A6EC0C5012DE70AE50F1D0651FFC6DDCC5F85F70270E98722E7DE
D9B2EA37BE64E56AF3274DE0CB447EC62C97EC92D7851DC0F24D4922133D4556
639C3E458E11EB779E9CED7AADFD78336F46A7D812B4D841F8ED4F2197E6947D
D31056B9E7B9D6E787EAF98D8F35078478BA42C7DF55F248BA65807F69CE5ECE
0B411AC6FF105AFF9D1527AF2D32C21B8C3CAAA60E06C9067ECE58A1315E7D8E
3D0C2FA04D194F94BFEE8ED7B2A9846D1C74F32A6F3DA989D4FB1CF355B2E68D
893811FAA371219D8EACC75BC25E413BB043BF1DBFF0ECF74F3F8469D3F4638D
10477C917E06334672C31232AF54D86F23985C79824C4CF7986BE64D523E9B6D
CB054EA845A87C5B0E308149E2CBC48AD565ABCE7C39292F2E12608161EB9082
8C4A7C02EAFE9AFDF53EA982E1FB1BF8E1D4A425752F9A0E8F770F60D35AC130
B932209296EFB44991B2655CC93BDE0482D734A50DDD16DE0C0F288167BA018C
B58CE04073AB24A59B1EF615095A8C84C4A380CAB59C6B046156D3DB1F5C4A20
F41F52330C73129670C38A5BE02A5747C9271B1C20C1467A6542627F60BAF89A
965EE9964BE5A88AEAB976BBBEA97EA43D1654F56337305ACD51D53F20344B7E
A4BB56CDF935AF4B67DA45C960B8B41CBA208F43655A883C5722A438C39AFFC9
2FCA346A51D64918BA91265489014991BD61E6219A9FF59BA47187D7906A024E
A73617B8566AC93C09BFC60F20519109992387BCBB3712D74F5B21A3CFC1DA5C
4055A53DC0878075FA425FCA9043ECCBD6E1E6EAD4384EC773A48F11F546CF2D
5A7C0B0E09E80081F96A0B341566B15C00B487B6A80F6E3381AFDA13ECD1956B
3FE7A19DFFDEEFD402BA11C49AB77408CDAA89CC4F9A5D646F0AF155C7089755
8285424E594856B12ECBEC383AB3DCF82E7A85FF52CF66A04318C13D94FCEC70
9FB1115621119E85DFA08C5C3F8CA4FA8516AA3DC62D321B82A9ECFB7A4BA362
9FA55311A521559C211007962F594E9C5616236A09AABFD1DC6212ECCF1D08D8
AADA310000C9B6552E268C1A937100880EA7A5EB8C93BD1E1873061A88D17B72
AC0C3CB73736C776752F3400980020472B9BE807F603FDA8377B2E378867FDC7
DA96A93E7A4F9BE78773CE49D4A2E65C5C76E64866DAA8744C37AA89671BE4DB
B06F7384841059280027AAD9485EB2CF5B5D27933F8D4EA980D035CA09D643A6
FB628A59736F55F07167ECFF809695A529FD8C246DAA407F5691FCA3BBFB5D62
9E2C15C350C768ACF062807C3A04C93A6DE07DE33B16FA803F51245F32E88ADA
48AC6EBA793F4A43FFACCE70BEAD545971E2C45B155BD33AFE3F73BA3A44D90B
895A5F2864303A0B064853B8E82023FEAADB6C215281B359AA6F3A52D7C4CAE2
5C550D48DFFCD752B6BED488642BB31CA4546074EEA9815B8CB580F90F163F85
FB789C4DF87312ECBD0B6802F159C1F87068F8C239B7CBC347C76351D2894E98
AD34A33791DC35371FFC2A196110F0B9EE162ACEF2754FFA867205BCAC04883A
4F8EC4B0B15DA01232D5C58EDDEB1CDF26F03E5FDB5532F3909323B89F3E9AEF
B7CD0EDA001DC7C6A1FD8D5A25B3F31F7DE2F8288BA3FB178ADBCE05EE8FA5CF
197FAFE566359A6D76E41E77219DD58F19CE1E4A08C20EA9B6249DA27250EF4E
408848372FDFE19389F2B09EDB959512A98253BDE3387ACEE93D3B6919C429A7
C19FCC2C61F1BB2A0EBD4E98D54785E69C19E1F598036EB3C46F4D3E46F52A21
741B9903FF68F3DD3C3CF26C6F56C9B91236BBCC4A2E9D09B5B457598B431F61
ECC87BD397BFAB1394992E0D118C79F45E9FB0A00E722326E83D36CFC9D90874
F36C328A161B912CDD6FB51E789F53C0A4728C1751C86C2AA185F3F24E45120A
DA4124A71966F92E2C799156A230E53B73B5A2DE53A7B7649615DB90966EB215
A8618FA27FB809287F8FB346F5897DBDC8FAFC99BF45D2BF8B15608415E616F5
9DD5ED6FAA054EB71E9E3E5868B7B4418591CB6650518FC333E8AA3364B79A21
1952F1C2C945F4396C6587238C313891DE27B6024996FE025EB9AA8AECD0E390
8CD2ABA1757D172D2C121E495B3011B2743CB2BF1290140CEF0750A222FF6478
7B72C2D383EE599C0EA6CB766DF008B20ED882E4D12054D774BD2942F0997A28
A96BEFC6F68B49390CF460CB860F687F9D2A3D41C16FA5B8B3DDDE8355ABDE81
565A889E2B9BF3508175C0C754F366BA0843220E79732C145DC3F261A8659414
BCC1C65CF1D90582748D7874158C28D232FE7C8F349AF7B41ADE94ED19AF2136
D73F04367C2C1EA4B38F60399AC16E1DF3DF1371EAAF9F34045A51AC58F2F381
00EEFA749EE99D0CB83E06CBBE47322088774DAE0FDC4742B0DFE87D70D72195
90637291DC750FA43ACF82E0D6376BB90306350388C7DDC0ED745B5F7294F9AD
9ECA039D08195D5A1274F1405669EF0F672013DB883219E5520D4C864E4F43FE
EC482BF896B2B552503CB8CBCBF633FB79D68A2811188D3684AD358750EDEEE8
0D8E419C9196990AFA9CDA8026AAB58946808883CC8C9184CC69BFB5341C358A
6CCFD060F80C76DE2320C15D44579FFCD65A52D3692CBA0E0A18244654367F0D
C0C8E22BFFCD83A88BB6D0BDC995F1B6B56005250FD4AE3863DC8EF12EC057AF
3CCF7DB8C5EE7371D91F88CEA2AE9D12AFB88C3DC375AEFC1952BDC526EC02EE
F837977817AA91FBDD6FCAB552CDAEE9FD0DCC44A638B1493E66A0DA72110EE2
4B2B4074D193726D7B785F83D239A71D2D66C749A278F6C47C6E7D3703EF4CAA
08199E27CDFB0A1BFB3D261D067B11F6EE7D549B8226EC02CA2821502EB0AC3A
107A1EC115F9C73BA22A93D02F90DB1AB973A49DF68FE4BFCA3333BE4EB02A61
3461F6E9E3645ED82ACDE7AB65B3D8527276B825C103C011E75D35F310938AAB
E579E11E98EE5ECCAAB084F34B9F40587887EA8E7834E7182A364D07770C2A89
38FA464C496B4B90CE1D8EBE6D7143EC4E88C6ABBEAFA69207EF2239170959A5
4C45A01725E1E3B31309ED077809455B7DD98FA502E750AF70D0FA5606111354
749E99367BE9F66E91EE1D7A6C260E3115508AE4AE8CD7ABD7807A20A9806117
AFD20C4157A5ACBBE35954F063C436A35BF7160F2D83ECF13696CA4C4FF07C19
D56491EF0ADC0750C59BF0CAD99C8BE2BCFA883A29690599D8AE26A9E36E5906
022C3D1B7B8B465CE98829763986EFED04146E8662689A0D5AF1EF3FA753EBDF
0D484F9E8C88546160AABEC04F75F3FED5DB2E60923C8E6CFE919D07E20E3901
0E8E849AD5D4A4699393F05CDA2F7C27FA3A13D4102FC0262218CB1162EF8F3F
BC84C80C30A54693915FA9E2C72A81DEA0462060484E3DF206C32433AA36CDA5
768483BFC647E50176CBF0990BE1F35D75645F37B688FF136274503CF91DC67D
54D6EBFA3DE96F19EA8236E67C7FCF5258CB1193C3EEE2D1B9EB5C6C6D919631
71A749F0D717B4A2C80BC4AB32D2CDB54D9D18395DEDB3E39D52D79AF9619DC0
346FFD93795596022C8B91A75B27AFADFDC278D6B3EC914FC1D3948C97ED1579
1D54958E2CE9A648905A62DBBDAB4141CD83910C097E1425C78D95631B33A3D6
0251D051C7F390ADB2D30E8109D3C58E91D7078F688504CCE0716AFB9C3395B7
4C527525D16C57FBE1CFDF8D2CD2BBCE8ED0DB4FA91B868B8456FEFEDCF7943E
4CD4EE6639B069D3EF1EF7C3A3CAD6103926BD42945BE01D8EDF875A95AF4CE5
DB8A4DF4B25E7D25C3BF4CE69C171D21972619EB8DFBCADBEAF4201D299AB3FC
79BE62A2E850F4FBCF04776398AA2769
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
dup 15 /bullet put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B15A0
657F5ED27D204449A841ED19E01432CFFE928E921321113780D036D34F2797DE
D4459CFD15BB117B5C9745EF3CD2B296D91FAD48C80B136D94476967E255F808
AD2B5D522ADEC64176833756510391815A1D4A8DA1D0AEE7CAD36A1D161889F2
3347D5B6BC503300FDDD48F594F391D5FB42C42113C538E707C16EE24A3F375E
7C506E8F49CE50FF9DEF3B4A4C1BEB3848EAA3477349833BA22D2A9012287D8B
A8C4CB4307A1188ACC0E6E9338E1559BE5FAFF381BD82A6C71C267409468B3C0
2C1A29F4281D565836EAE57F680490FEA4A952FF64C8CD11C377C294DCD1EC25
CEFB2B6DCE959D0208F85B6E32E9B44FD455F9B134A5306D95EA29F37BB8B86D
9E592159338E1293F449380E13C21AE42E6861DBBF4AE99A7469F871A3940835
FFBE7F316FA9BB834EAB18625F0960352C75105A92F175850289B1AE177E0FA4
9EB6B5DE6059A999AB70B918A79A5AA9A6D6CF9E33C008E37A79A3286CC86E9C
A94CD306B0B702B66CAAFC5F174572A911A5C54F6D308B628B06DBF8159FE82E
9574130D7CA2C68E118B2D7F8E68F1A93AEEAA05B56B516AE4E4BE943C0C149E
AF6A50D93A7CE87E0B97BC4AE4CA0A08C83B9023A0BF7F6427FFF10E35BFCCD2
BFA0B4FF843E0447D8629BA960CF220C540F10EFAE07B93444002129AF8C021C
DA93EFFA48BB8D7393030B3C37CB2A8F361207AA046D61E43B1E1787EBA438AD
1646E5190C000CC266697C337883204A7914720E92784C97ED3F67C67C0D7885
98F6718BECAADFA98A0456125EA11A40FE775B0644894FB19BE65F7D4D38FE5D
48DDE7D8BA672447638D4C1982EED07BAE16ED755026D025AA60682E5752B2C5
D831162F13840F51F92904145DF998A297B6D74C627A6D9E54B5A04742E943FB
1A51D95090953E1F1CC509
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFSS1095
%!FontType1-1.0: SFSS1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecss1095, tcss1095, lass1095, lbss1095, lcss1095, rxss1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Sans Serif) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFSS1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-201 -321 1477 898}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839D875E6595524AE250B4BBCAAF88358
42414E09F7CD675ABDF96AF981110B63C2828AE397AB0AA97C0D36B4316AD714
87FF55BDD36ABB42613BAD3FAE0694C475D86E9E070C777B8A0E30A11C2B2FF9
FC63CFF9DFFA41BE0B97B741567C8D094A56CADF2C0312D7AE73FD1B0A32825A
9D284B11D225DBDBF36B22B7259B2368188D94E48FDE06B9765F0506A3591930
7003FB93745CB604ECF641423E6914B22F4438B899518565AF7FB18ECD248A9A
498B1344691D3A1C3FFC21C48C65A08206F5DAE61C8A5DCFCDC426F0E568F431
092FA359E319B476053EA5F160FABCB987F2B5CB0A3BA1C715596D2AB9947C60
579B980B09DF6E0979FE9608723811E9AE0AFD659308EF2AC9042B9600CBD293
A37F84667E7F3DFEE4CFE9D1A676A5728CAE9FF2FD6AC2E3D46EF000EEE19E10
EAD13C12B347F0C8F656C352CE9E25FD1DB2F1FB9965818541F694C65ADA45EB
805911EC74CECA83AD07803D129189FB1A09532349290F3B994839E260B4F8D7
84169359C4206458E198125D6D90557EAB5F57DF90D3A0322435898FD833873B
18ECAEE64FE29364E8B4204C39EFE2051A24CBEEFE58DA480FD74FD1FD86932A
FC4B969E2A5090480D95036E13BEC4562CE21073D35DE0DEE2C8224EEDF6CE40
9DE86D56344250AD374E336AC4F81F679E8AF6631BC115EBC55EFE7C25E3162B
4B33E9787D1CB3B411DABB609F45DA86259BA0EF347D4422640906AF548EAF42
14EBF614679463A158EC66B2C5C1CE36719165A0B2DB63FE867F4BBE8F6FE730
D9D3D04CCD1AFBF6774E20EEE91DF8E2DC637CF03D6D1F58303DA522D91E9894
03CF6537CA712A2E0105AF1FA6DFA28201A0C41B725418ABC0AFD96FD007773C
A413F7F6AE61C6E4EE51CC51B68972F4EADCD12B85759243F245160E15A85141
05514962358A707613CC6955DD3E4D5C4323AB7991059EA439E03C9BDA3387A3
44BAAC095EF9356B3D4BABD27BC16F8330A3A461F426952FD893FA06C5085F0D
9BD8E5B602F5521087E6D698DCADB9DA45F31345899DBF8BC53392856BCBC87B
8FF6C47BF25B05C10BDD9C6A35A9B482D9192A65C0756F8382F9195E1D35C647
AD1CAB9A60F28F0E99C52335CC2989F73E732B3D73FD3EAFA0CEAC5FEB5380E8
3079F7821A44C2799DFF3F58C54633157CD36BC19A289A96A656D5CE4B680C58
252D1FF6D197C9BF57CBDAFA7F109DBB9C39657B11080A1EE1D83B5730CCBDDC
3B75A9E1106658A41BDE8E8272C4B9A21962EBD0E9D5EDA9F7DBCFB4D104F244
DFE7D9533A766C204FF95AD0EDA3C624591EC7BD683654D9D5B92C0BF9A82DE0
4EA32ABA3D359AA95D814F6387F3A24C8636763C6540955EF342DCAB7184F29E
9DDB4A99ADDE3C2F562910C5A29389D7AE8546A7630D1877AEE3BEEE81A4851C
EBFA35DA7FFE17B75C3640F29C61D1DEC399536386594E737F295BA32358F8C1
23D3E7E5403F304AD85449CF2CD2F277D1A76BDD781F814F68E0B1C636C40E4F
37AD463B9D81A24A80699AFDAB9839261F94F3172250DCE8436F01836831A6B3
AD5675DE5B6C8B578A254DFEBD7AD2CC21BA8EBA1D4B624136B6B102CCDBE81D
C37556D5D6E729DD4BFDE484641B2910067A52E1E24B6D8FEE8D46D3338315C9
18FC74F2E442E41290BFF86ECD79A17C4D92B28C0E734E9EF84C759F5F1B23D3
2F25667C3E23A4576A27C742DAC8630477C2B7C7D7823C452E23782A35C98A57
B5FDC0B70ED3D22D463614BE46673B0800049DE3A910F87F0E7745B6E7E37727
8A32D9E69922FD55A019FD804AA63AFB21559A3B85C0C672D65ADA70104826CC
10BC7D3D28B429CB5D524043AEFFCFBE7A89139AD4A9063044E2B90EAFA2C2BD
6014A6A1DFDB4F54C64271D309C7CF0C7C4FC9E3355628026C909BAEFF229A45
F7F805AB145812556DF98AF6146BDB01C7E9B70DEB860CF66BD6BB3493F3AAAA
5334C8A13DB0EB82A127F51F1104B9562222CA4DA3AA5C40608203A5C712FD30
BF50BAAF7C96C10B5854D9461C8C24DC45202A31A235CFC7DC87A4CDAF394450
7573EB3C45554F6B37D3739F5910527C9A2CEBA09A2C556B876D5949FBBB1E4A
A379732957AC35E61D1E43CF288B47CF93BD0040BBCEB108B10C8E95C309B6E0
D4CC330C8F87EFD358589E8BC97D736A3E996ED314ADCB50E909B4D1CEA44582
BA6209467B358FB2A01016AA9C2C134045C1F2905FE1E076B1E0D71D17D9C57D
98B07D6101E2D5CD21EFDDF91B4766FB91947CC743CD6633785280467D102CD9
8D08CB83BB3F1E10415EC8D77C109EA7FC04160F972CEB7C943A0A2F7F51CED6
568B384570B8A0A462AA238208A9D1B0F81D2979604965F01BB2E9AE89A65C8F
BDBCEE4B905F7283A53CF3DF24308F2A50591F19938EF202F32C021BE02C1A72
F3620436EB775D26263727C158E3B60B2B48F1EC9818FC85E9D7AD8EF308F2B4
FC667820E61ABFD4DAD8234E1BC69AD30D3A037DB040BCE5A4C9F4D3AB40950D
E8F214DB1ABF8B7A02AF03B42134373CF8A40C3D75B079C003C63252678C1574
AF8D676BB6CF6E1920664B33564C113B88BDA66704671E5006210A27F791AAE8
262ACC1B2036139853C955ACDF543AD8A9097D260AB9E6C45754AC75F8CA210A
788DA71A96F1A32E64DD34DF59A4C68A0FC20DDFA568EAFC2435D1E2A312DE33
08A3BD1B8C37098A98E3D8D12E98D4BC2114A4BE40B4F52E2921D55383E09405
2C8648A5470915CE06F1EA911595464747883CBB183FEF64AC38385699BD29FC
5A74A172F80111B460F8DB22C3F1483B482FB1B444BFD0AB264DFFDAA286398F
5B21626241291FD6769439F6B0CCE38CA0B2E551A4B142D72714570AA9B96069
B15AEC28F3B0C0AC5C50D39A54FFB9B1C486D4E80B65440001B903D378CB64C9
6061797568761CB1F51AA44EECFBDB8B9ACF11B6ADE903BC85B656EAA018CAC9
EC9CE64D66A306AF75BC1DEB158CFB707F08A181350D6EFA3758BB5B9CDBB5EB
BA9DFD89BA0DF0EE8150CAA554093C0A40FCFBA03FB3E434CFA49D7381D27B39
2892B3D7FAA44A86C50C08C5B5EE75323E025E2182AF73859A76AE02350D9107
31AEB3C87B0D1E080F61E1C13E92EE9A7F78CA2CE534576ECF6AD6CBF50617E0
19030AC0D98A422438DC426AE92432122BBFCCCE759A4B186761649DBD7B5DA1
A5FFD49F86D7386E20688189411B955C54B0A0B1EE05531834BFA8B62DCBEE6D
2906D2D20026CC8EF06577BFFDDD069085C6F770F2704FEDA818B81260A3A872
4BDD583F7E287815E6206F29BFA9DF232C6E842208AAB675F3CBBF4464D82C2A
D22AF9D006D1E04BC0D96CDBC99701486E68223FF5D3ADC5EE3D294E91B63786
8345AE4F72302A0026FB345BA077F06D0F86AD70D6D1B6F93C09FCA1FB4EA559
72BEE88BBC70D4662B8F434A80BAA2CEF97B4F65DA9AF688F6B58CB0E791657B
6DAB8CD211371E9DBA1EA348E24A55E261E03E7AFE2BCBBF54D363F8F6CF2EE9
7C10B85533BCBDBA1DFCBFB27AB3D54C79D8636F16FCE7C04A3D48A58DF05B5C
44439F53F727ABA4802F081D92445B89694C5194FC18F53154A16BD6BD56A1E8
927837F1F8DFC31AE31F8C52AA2DD14E175921F2A97CE4E6F05AB723A1B11EA6
33B3C4BBFE15B913A83809DADFF492D8E5C2E6709626889BF30985A53C7CB0DA
5547F98F508517F90B561E17180D4BBDA87B40362F7AA829A4CA5C9B07077BC1
8F608C07660592E4FD097412D58A79F25C60A0521D08A078E7BA57A99F431E78
24AD632A4F18190CDEE6AC380DBCB7C2B6B0B8E51404F1A7DC1E2E87DE443308
EB1391BB3DC023E99620DDB62D650763F5EF59E908C9F0047051AA4D8C272AF8
2C92BC692D09C89449D5F21B741042F311138E6969E75BF021B53603650971AA
39FBBE88FCB9BCD2AD4AC920BCFDA7C6E563AA126861616399CBF25E8F00AA79
BFC95B08EEFF57C4AE4F5A4FA25D6204A0803C4329F7679B963D21F327441F14
F42C1AB7897DDBA70762B57F8AAF2FC1C3C5AE86A4D3FBCB6A8C95F5BC442E92
501967985C88C2C7002C0A7D6D9CAAC52E648EF54A497AB027198935EEA88812
4D0BB0ADF4A0CDD8747C234E801BEDEB1BACA3685A06571DE7C485DBE6B0ABD7
E1CB7CB87B5EA8667CFEECD0232F9124DBBF37CA24322A5D9AD29CDB1E64E737
AF47A894EB4E85EE9E4E38C3482BA93F4527426997D63B0FF1E756DC1A61705E
E6D40DD4CAE2EA6209C5A48811F8F212957BCA9AB9528E8293BD7B8EE7825133
7FED0002DA888DE03EC7CA853F4D33758263D9CC3C107CCD13EB9764A2AA5ADD
EB0E853436435C79BA92C88D5C52282BCCD4BCE641F36355C62305904E0D3FC0
2FC612033F9A9949B69AC94FEC21562AECD4D52EF30E214961DF4B4C685585F1
5CBB0B8C8C8B4BA45E4B27AFEB8682CCC4C3C8E9DC579A88382610275D0131A6
74FB32E68F2E04EEB8C0ECE1688BBCADEFB117462DBDB8D300F44232A2AF75FA
EF29CB2AE2AF047D326D8E9CE647DF4C4C6CE306509A7F1371490BC7A73A76C3
0FA433DECCCB06CBCD8F468A565C6D5DF5818344B241B8E302F4573FD3B4B281
4E54905F25C936E3A0BD4084F3A3685AF0DBF56B95FDC6A0253E4318B7ECEF0F
A5FDB588D2612B020A5146B48D95B56A049C11FF103A055F53B0F6A70FEC8321
57F92C408123494D46E5473DFA3827E7831AB90F19EB7835FA1C6F1894DC83D1
DBEC62F3B1DCFC01BDDB016ADC90546B104A82DE463586E5F3D674ADAC9DF951
F2D60518EAC744062D4B25C77BFE28A9D1DFE68BADA1B3B0B645734348FF7099
78359000BE0903C9AB2A44E52D859C3B3F43B39AD632271199853F5FC7B85C89
B9300082EABF80388BD3F177CB73C7BDB04C18C0BF590F85CE86A6BFD43B4D08
4C9603CF0244DF6277B14ED66F8F8F6A1656BA90C1B2D8C342605941EFB5C5C8
813CB052EFFCE050804794A3CB0C283E511286D8C3D185B0530AA43A326265AF
308E03F68DB5577B741BE52F1EFCFD388B23F459222FC6572B9F7A370B503639
47BE61EF14D92C2A01010C6B8756C375627ACF840F4AF54C4613378FC306B3C0
7408C7AAE52BBA3269401CB6EE48D92095F3FFACEADE336F1994F8113057B42C
5C2D1ACBF7AA88E0740F8195CF13772560145B62BC636940F35C3636F99A29D7
16D06419AFA9CB8CC98986C54B7C3E27B288D0E10971B966F30BCCE77DEABEE9
D4CFA13DEF135C81A880B657D84846762E7D2125DF3FF1C665F02CE02C1E6190
79CD0A64960ACF6BAC636AE35750361D743D9E01FB10D4245B717F54412A3397
9B9FE7F13AB2F319F03EAC132F16894A704F192F550643730C25786DD2989631
0EB393022F20F977166065315D28F42CE61FCFFEAE4932732A401BABE1E5ACA8
69D0BC3099ABCB5678C0B3055B16A3E3B166D0BDD96C88817E93ADDC34209372
C2F87AB4B76D7E03B03B9EE38AED72C2AF3F39B9F44A9DE53E47A63C6DC5AE77
263B50340B51838A6B7AD79EAD00BDDF20993AFD7D2AF3ACC9A51E37B9393CF5
0158B0F0A5E2BCB827E917F17E5028513878C4F5C8E87765A9AD5648C12F4C94
6D4183312F60BC6167CAC651681C8A22DF23B0A63B86215A2E3D71E07C87C7C9
4E96D1E5EF6336A1F504604803DB623C98F7300E2DFE762D7D2CEFF02C32B8B9
1CC2359FCB7A2C9E8B589AFE944BD226D4263EED86E1EE232B1F2D551B141D9C
CFC489CCB5DBB1DF7A40109543A0E33F06DFB8454F8BA9B4031C003A526D8A6D
8355A3CDDBE6094A0553479859C17474B3D0C4B0F0FE41F12BB8BFA8DBC7EA37
F495833AE0B80655541BB4AB0C31A5C4DCA63644E536EC77A07FEA1CC8EFD84B
BCF7857081D2B571F1196CF5976A8B12EC64C77C15E7EBBFD886BCF57457488E
52F2FF97AE49DC99A22855EF746AAA90536A2DDF4348C7ABB0EF573AFFA92FDA
B92AD44A3D432A78DB2A09204AED28FACEDD744F393CA13D56C501F630BA5061
8BA2555DA8C93137CDC94E888AC8539B33765FDC952787AF955D358C2D3F4C69
964CD09E65BE8624A437B3E11A3AC76F86496B0A7B99015287DD4746C530F011
12306DDEB104F0F0C2E12033D8FA92AF58B3EDA5665441BD3B71CB6E61BE3B7A
CEDE3C2E017617FFE391BCB5C54357353D49C8ABE108C234AEE753BE4BA1FFB2
74DFC77687012BC32C93A581900487A2273887846354ED03FCC0328200ACC65E
E792DB624470CB700FB0667A80CA4B11F62A03F9E51B7289904446295C976BF4
0943BBC0D92F5BFC4D18B5C37A3798D63D85BF7B6D182050921B71B0547541BC
9BC90420FF4B8D6794B63DFA25147C38A63A77A753EF0DD13368B73EFD7489D5
06DA25F0B657C203BF162091C6A20594D080499A4022C1D3BEB7E4BB00B65CE2
3D13A97687CE6A6BB030714608EED7AF76DF1471B070E2014794E6215FBC5DDB
E622EC040BE56038AA5EC772CCFC1CEEB79B30B7EAF5437A7E94503ABCE9E192
C16A4D987AA623C6CE3148392ED777DE9FE229B09237024F286B9D6BBC01286F
0555C4D572874BA5E3889D599C9CDC41C82B5C6050F6B47D33260336A4F99231
87FCFB11AFE330708823AE82200A755992564F00A52A702114523BDFA01A3FA2
14F8951CAB0F6F464DAEC852871AF4C987D5DF50CA6230443B2C4619C63F45BE
C9689DDD739DE74ACD38F80790868E95FA66C90E365BF4E2FA13EC482825E2CA
9993A6DC7E0E3E7347E76013A50408B49979C506DB211C52FCA8F401BF4C0A47
4E8BBAB054ACA2A1A003BC3C555CEBB17EC2F497D11237B909D107A362F578F6
1019CEB30DA105952B12F9507C118E50AC08DBD590748D16C47467F3239922A6
58358D1827787E9369FCADDFD6FBBD60198AED733A209765DCA95164758CD8F7
5ED569C51B976B67A7A87520196AF5B11423A1E10906368672728715B97CCB69
D6D58C11107BAE368E4047AE29CF6A03E1123E9A83D05B349739C49F01500229
4214020437223B67AE17C669B1DE1E5987A99B42DB22478E8F2636E8C79C4F8B
05D820873650BF4F4B78440F83D5821774A3C5428A11CCECF364CBF8028CE040
816DC9BD5969C9E0E9CADBD4147722EB437629152D09D54E045D1B956F00191E
D4D227AEAD9C9BE8A3939456BD4DAD0B75FEE8125F06C2F8BE7D943EA922F1A6
1A23027598C2790C465DA776ABEF995FC644A0E873AC8A7BD821FD83594FF871
BD75576A1DE05E6CB62EE08473C4B53DEF1FE2D58DBE92CC4D3A9EA9E0662BF0
671888F9464C8CEC1F4ECF67531CE9B299C30FA5088DE96C7223985652A26B2D
7675BFEAFC648D8AA4073692E150C60B946B1B3C692D0D6132CCD04B83B2BB13
627C2928A37C220EC384EB45FA72AAC4E81E097220FB67344E8B7F6DBBE36B2D
D05711B35B77B539D42F0CAD5874564C656A4713E59DA6606C74EAE06C4C1F09
CC46671550FA8AD8B304BDA51E43A3BFBE4E09083567033381447BE8104ECC87
AC40E02AA31B887FD47A928A07C563EBEBA1427B610C47F030C9AE905AE4F7C9
E1BE22F9213D03881D70E34DB9452204D46E1E5958FCB75F5F5F0E06B7BF75BC
89C6DDA2F43D7945B28A8F9A2D7168FBF2401D248CE4884039DB0AA35316B229
CC020B6F7BF99C82E1CA42BFD1C926D170966C7F637E68E273CCAC5CCFBB0159
B7D70B2D38140A818D76D1D40EC8A4D933F9067849B69D1B9867B69E4938DB1C
66C574A4EED75B8E10A20EA1CAF5E7450E6377ECF0AAAABA07A669BA0E84BD3A
89ED4A05A6338D09B282D685E64958EC5A5019CCC2F15805D13087CFB03EBBB4
539E9005EF54FC462BC7381105C7BF4DA1B77E4BE7BEB2C325ADE49AFAECBD29
98FC83E5BADEC5F0FBB38A526CD1AAE4CFAB1ED8D676417852CC57EA42311F4C
0B6BF1FE6158B9D8B2E6CE507249164B4CBEFBED4D74339B925ACCC3508EC96A
A4B8C2D5DF10CC52F4725F1FA71204098A6E22AC52FA91B12D234E9A35E5A738
4F4BCCB60F76A5F9BECC12E80CB577D9A100D011FCF8A5DE4FABDA5C29F90F65
115107229AF1F13D4535EEEFD181D5F0D8446AB97378ED7545ECFF26AF215F8B
4D7EFE950D66A8C288BA2D1C2B130AF9E22DC9F1C594C2BEB85065A3BC71BB2A
6A65117F5CB70A7A05BBACAC0101084E90A0C60187464BD75F6B06B4D094CE98
D6FE16B48AD7421DF184170FB1CE0FB2EAB050938A869B193C070780491E97AD
70EC5AD85E2D53AD383E23B77A59563732AF3D42549ECFC97EB4D9E168B5ED9A
7FF0CB39A0C3D2CF898F8C9F8896C2F79A3C2761EF544CDA294FA525B5739C15
DBA82D1383B3A645850465FB9E71E936A16C680AB6E2FD62EE50D1C302570953
CEB65851C9D991C709CE6EE6E20FFC5E604ADE491886B431FC92387E765C0BBF
C4575EE376D1051B4B87A303C649EE178E268BB3E44324E033225FE79C22B266
57C3C95AF17879E002617273F9FC5D750BD5679CD9794B350B81A6017A26CB48
635339631083F0C1B22D2E9DFB8C7A6F5D86216BD0C8E060AF0D75CE24091415
C921B618DE5321958B1FF9FB12A3F7EB4CE1ECD0F9D9520B27DD937F70826CDB
2549A7ADE2F804B92525DE03465A30C4110CD6E27F29838B77679A08B69E8CFC
FAFC1D338D49E5802AEF1359D268C5317165CCBD9B6326EDC2CF7FA8D5D0E849
A777A69DD65962412ED7F8FC4FE8A22D5A113B074DDE9F20C43D9E05DE3C5F58
BB5B653D3658A32F487C2032D08402CB79C1FA33BB46C155A7C2ED680A86ECBE
C5D6EB3921BE89BAECB8B07CBE9BDEF0168A3B12D59697A06A414F682B4AEE4D
3DD446F4C7079BEACCF457608D78ABFC5320A25651800943A50EB02DDD7CDECD
7A09E10D6884E2ADBC3DBDC2DBDC7711E4D00BBDB69C9231F9DE6543412C4A49
83F525D831CC09D17C66C390FDC32DB43B150C5A33AAB0C41591EC898060C960
3DFB9B76955EE4E046906474FC5CAC40CD40CCC0D0627AED6EEFDD0F836B6284
4A0A8843FD50CCA141E6C14E12F92127AE795B421D321C7A22B713F2E951C634
B0067D447F9AB8FDD56860C3FB3ABF8F0B435B2D58B90A5048B20DCACEE34E73
F03945C3C9F39AD4A613B641D20E59CEBA8183231087263B65577EE6DD2CD70A
6418ADC741723E73EDEBD0B7B3F2A60C1297D4B19C6DD018CB88D9723BD08065
F625E241874A936D3F7ECE3D3B56C6FE7FD075C3D88E2EB0772174FF5C9AB6C9
F3EF739124D4D113A1785B915466E03A6BF31CE92E4EAAA6C8F59CCF32458982
0C39CB0999EA53F7D912CA0751E2A25D20ACAB13E815E5E317315DB2963E0CC3
260E41A7C875A8C5D898194972414804E467E28B4D2FACDE0FA9C9688626AE12
CE9F9793394C36CA05BB97360AA6FD2A7672AE7FB21A20A8D892204260CCA6D9
460666D5628C0DE737FDA7261560F5490C230D7E2E86296AD567815DA51A081F
15041A4F33A5D2FC8F47243AAE22C257A20DC44901F2728E8C48444E45EC32DC
8F65D98F14ADEA7C88F66973278781C61596514580E6BDA01231425373E8CBF7
FD88983E9654D48802F06E789E53B7DB55908AB1B687EBDA3E901B1C2893965F
DC0B664C988DE615472EB2DA4FB6104BBAD62A5674A9EA341523617218B8BCB7
83D25702489284AD48B177878957BD79E0980B9B1A79F3A253502AB40D616F32
69704AD245F99A36066918A9990076E53E69A783C1544D73AFF01ABEA88A5A29
5FBDBEF51CCF71AD902F7F4EBD8C8F2BE20446C9F24D4EBAF16ED0A23089A9F4
CF55D2B540E182E716F24B14FC6A4C22B599FCE0906F87A568C9ADA9DBC5043D
95AA96746581FD128B2BB480953CB199F5C7F2E4BED813411A655149BFA54FDE
87B8C87F58A2B5D7A9C93FDDE23E051B3FB72C5BDA4CF8BF39B93209EBB80DC0
216F1F387331BE3FD19816E9E7FFAB1748CABBD62CA2A0CA9C4C182E5C5CCF8A
DAF7C2A2C7BF44EB5DBE8B5EFB4B69060D32F5F4A2A4D007115BD1736483B7D8
894BD30A29E8C8830663C2CE4CF52859CA97A990A0683BF934B51F2FBFEF4E24
0DF79BF554AAEC9FFBB4E10ABD80F394720B3C2945260E360E56E1C567C49C5D
08BEE126F3F82E017A05F6448A37AA48A39DB2603F78EB43957E5523C7BBFC15
70EAB705B736F98A141F7CCB04E4BAC7154C7D428805042ABA8B1206E51EFD23
D6F34E8BB7606436180C916A1280078EE2777D13E933A68E23C9401D574071C8
22FC634A59EF31F91973B28115306AC8470ED27D5EEB8C3E161F81692C586D7A
758E96713D262D5220AFAF0D8985F508CA1CE5FFC5C675EAB30A06615741DC10
BE6E896315549CA58D765936E42F3EBEF185F5B223C4A5A3B6DD5995FAAC21F2
4386399D80E7BAC6A869B30C6B7A48F2048F253EF33C0D0EE6336F029D4B405A
41B96BCD7F734A43C10457279579C86EA536C6768923BEAC2C53C2D510313911
E8D471CC23C593FF5E27203A1FF9439F3395634B06DA1140C4E1F7462A7E5B84
D88C9B03054F674326BD1EC03E194EDF9DF5F195A05203C8A321A5F0446F7B59
8182FB6637F322E91E50EF1B6266228EB51BC550DDB9EA3D7F51BA7DA8979040
5562A7FCDA885B90D838E2D4492804589C309B597A026A64D89562214075D62F
3C05511BBA239E044EA98AFA9D16C37BED5611EE4870F3B0933C2070799CC5CF
2D30B57629D9B5F1F308EFD2A4A025AC63C49E95694690D0BBE37D0694F3BE2A
AC5839F8E20A798FDAA50E56EAE0E72E397AF0CAABEDDD89ABAAFB5637FEA68D
6A5AA9F05D1C9DAD57863D40A7726FCF542DF31E471377996E46F4FD10C188C2
56CEA62F4E69F943F250B21B1FDBE8E4FA8D3C4F7CFD496EB7928ADABB404852
73C66B6D5E9F25860E7C4AB54638FA73D39D0268D92F96469A83118D32FC4AEC
645E94FCE71A0BA35B9DD01F5CB50F72C21A9EF941BE8A2C7C6B0DCCAF53B226
E9EC4D7A3DEEED5685BADD7AB6452BD25B13708D3FBBA9AEE3F41392180C3F90
8166DE2E8BB19CBCFCCF4B23A99FCF408DA272CF57EE3358882D5C56F88F0D5B
AE6098C791F228D4F0E7057FD1B2D696B33857CE8497C5C1BE78062AC17E73AB
C878072F5F16305DEF448165ADD8B18EDE9FF3F45D9E67A1AD6F2E0C63C4DBEE
43919CD107AF8E567F25D099D52B62222924B1AB76CB85307EDB0C18CA51B7D1
0A8FE820EC095C0AA767B88A983B57218D77FA5F082063D7D510A952033A249B
33923246E60952DFC894150BC94C58AB09129E6DC7C2BE6932517A167670A6D4
78AA82E9408CBFA101F3597C9DA81CB54CCFA9D84DB2CCE8D043401DB28A4EA7
BF2B3D99B78AB0079201C17248CF07DC4A7FB042745452F2F269A88EB1AA5A3F
7896E72CCE43F26AE7216583332B6DBF9AF2F55126BB2A4270B7E440DD078DFC
8EA87935A511CD0EC73CD23EC0FB9290D26D7D099FE0399F2111BF4A8C58FFFA
F42ADC70BE64D2C18773B9EA826A4746D4A10F978361AC94DD9D1CE3B96BA328
A79A5094D8C34EFD2595F923BCBEC14A61EB3538B7BE9E15944A469E646A27C1
C8E73EA720887B8AD9ADB687D3761806F9CFCC1C96965858014FFD729A73CEF6
DF3E9B765FDB915B6365161E211A41C8A51572FCE6FE8145EAA89CCC50796840
A7DAA590C89CCE896815466298C6062F671D1D59C84C5215758FBAB616ACAF24
6A84AE6FBDF0F6593E64F95EC4FE0F84CFE7230EF6E0D46024849BC3E05EF548
3D420D22C1EB591E5C60806855A15A77E4738728F855F8AE334CA5E6285A5089
C7E11A3BBB86B3DF7C400E1C1017C2EB1A54D3C35471A391F7AE59877CD983B8
633036811C4AF5D66B6B787C71F4B4466AE284967B65C7BD3C3E469D21F38D20
D2067107D416A9665A0530FAD0A0F5C61691192B31D3B9676D590C15B62605FA
7F1E0E278D900923E77E7745ECE1A5C8C0B259658F46B10C67AD9EB48334D115
42E0550662B4FE32E59D9784E381024E81762E063B201200E672BDC2B7F8E420
518DE42E2A4100254A5A1562165EC43D4AA4EA3B125A9F2B180834E7E1DED3B9
9E3F4162
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFBX1095
%!FontType1-1.0: SFBX1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecbx1095, tcbx1095, labx1095, lbbx1095, lcbx1095, rxbx1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFBX1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-227 -316 1723 930}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA0E2F461BA16EADB32842B6D00C76F8A3359BAB9
9CCDA63EAB4501FF88DF4CE0D9DC9F071B528726352196D1D889EC0F0512EAF1
A6ED201F5B8FD2B90DA9585F5B2004EC8159EB426405D76A85AA0ED1D29596CE
FFD55DB52BF5C0325EB43E789D2128DE66E59F9A7C84CFF09969406DA529C87E
3410723FAC317F161388C55FBDC43B850230989AD991ADA95B1CDDC4D978E722
8BEB4E338C3EC48106B4274FD9FFC7CF03EF238D8160A515EA93C009A8F2D3B0
1CB8041F5EB86F1D975BF4EDDED8B7D2C81B665124CB1562B71114FA44449C6C
4DDCBBD36BC95B0E569A5A6EA9219B151426165BFEAA914437CA89EF4B0F5911
AC054509BA0102D462A183A29DFC304DF74A289A052531CF1C505EB94CAF245C
33DEF613E4F1B785DEC94402A2C46B2DD4FAE5DD176985E45A03D85E442D7D77
A7586ECE67CC2360820AC46A8CA0DE0852F2F3F7ABC9D4FDE78321A4B63ED2B0
AE51F2F1CBFAEB6FE8142B4877BBE69FE6D4FEFAB7E5A8A4B22803992910064A
F998A0573C898D6EFC101CAE6E1FBEB97001A62893B76CDA3996BB92B7C2B8D8
F5C16CD2FBB4F8D9DDF27E66377E9BBA95CDFFFE02D05938F97D05AB348A74B9
1D39CA72320F8788593D99FE7CBBC69BE81D60CF58A584C366D2F5874A3CA93E
3D630E60D2D74E3CB14ABB6B38E8B409E1CB6D99EA683AF6FA42BE1666E63AB9
B104CE56B5FC4A5B1E673B8A6170689DAE9052FD1EA5F3DC281940AB76AD024C
5011A40658EE9CA27A891DED23D009D23804AF902A7540CA0CBA130B924809EF
5F3894143BD93111D717EA48C0AD1FC443CF8C3D4204553F9C995738A25BF9B8
C78DAE2B9C375974F34D058E78A181EE7C62D1ED8EC21740B4134415BB8B1E0B
CD9C642E2FDFB5303979CE228AA64F05F37DEBFB17912D34199D983DEAE9C0B4
1D2E42177BB9D3460686BFD1BEC0A9D7EAED8FC6EF2A79A4B3FDEBA3BA851079
30B66DC486A1E1F78EE366105A477D109FCCD2B9B532A58983B7E7E456FC2DAA
795492B362E6BDC00ADA7C501FCFC5CF5B0FE0643FD413405937D44C90B62236
6C671E456510B2AA4A5F548D34CBE784BF7D6FA959014F0E9A6B7BD08DD57201
858F9245E0492887D0757DEB70754F96C4AFDD54CFEFF5DDAB936BACA903AB32
2E59EF82118F07B7C4CD0A9B3AA859D0375D1716F9DC509D70F701F0F0C2E120
33D8FA92AF58B3EDA5665454DE3CA49E26E79275D960BE4E232F5516349EC7A6
B72D81C1624D48749B78389AED8D56214814808CA607EB12F34283CF5E966FB5
3D24198F715A9CCAFCF4A303B913E0DF73571A10BF623F5E298696F4C84ECCB6
E989D587ABB9715C492893077C69F4DC7E03FD7A02F465D1AD4EB84FE0C12665
49168126AB66DFBB8C8B893460B078EAC63D6954D4FBB581F15C25003E4410E6
06C3EF5344AACC55D51C687CF7085D88C3EC1644AF31D851FB4F2BF5ED47E0CE
2CC5EEBE2617123196D10DF4186ED33AD656664632B6E41849E53CB1394F8B27
9992AA5CB2C343CA86587224D60727CB0CCB1AEC552DF07AE8D7347E0B8E916D
E3A14719AAF65CC7D6F91F8C1A4E120182EF2103606247E509FBD598909A1AF6
0044B1F011F0E9CFEC827C71015835DF90D00BFD9ACC174A587D6CA4FCCAFE45
00C90F57248881B94EB06389A776A4BB0F154C50D7DF18EBF95BC27BBD9AC2EC
7E9AD9674A651876998C4787B87C98B7DF8A58DA829987C0FB850CE406B8531B
16D3888CA8273EAE3B595A50DB09EE6F580BC58123F40DE32DBB4F2137965FD1
A2148730352AF582A0C1B66A356BD5B597C99D0D37D2E696E031ED64B60F7247
89FFAE7EF27586F8CD1118120C70A38EF77AF4F16BC6658BB55CD9499AB3449E
7002DF03B3835475F09F8232FD221B919032FEB5F66AA8A0584EB6D4D3B189F7
AB21EBE94E3B4FF2364E8BB01589F6876CAFEE1C07B8C2A6733B8BE21955627F
7978D75DABF4845AF991541CC9E03F8AD6236FBE589423B942DFF2F3D0F5E2C9
17F2458F858DC3C5D585CC861717997A857CEAF1BEC424C3BFC9563AB17B22F0
22D2333FDF501477E2C7EA94BA49A64CF9BBE2AF068B2AB05CEFC2E330A6BC6C
6665ADB4C7CF0424F681B1AD42B5D1C9160CB667D875B2913EC5123A393E03B9
D29D63ECF9402515775CD4B19ECF3F29277DFF09FF72AFBDA443AD8E31129030
F63BC8D138D9E07F23A37B983EBBDAFA4539A6438E26C04FD041E598FC33A962
E3385FEC36A2152868690DC4B87F52B0A2D0DFA1F9684E5EE17335B3257EA083
020901C718EE64297450FCDCEB3EF68E06A5F8B549CEC026BEA2E0DD954ABFE7
A41703B500F78AC95889979701A134B1C45BB95A079A43A17E768C81F1271800
1316F0F81CAB2851C28763E74DD3A6204981AFA27D42A1D7A0718F4355A7E250
B39337F598B85755F6F3A2EAC3B1809FC26C502E4BCF5829C4B6E72797084CCF
43188D40DD39B828BB81B0414A731B028784E1B8776C69FF4FCF3380BF611925
E1EA0B2B5B3D0AFFF908F085D02D4753F758128E2C348C065A39230434930F34
9F1448EAA3477348E559A27669C4B194B23B4E2DB99DAE981E86D99B69F6205D
0EABDF01663308AE95EDD64670B853E356DBD2697844E0F9DD855013453D420D
95CE0930C273EA5B8552B2F46C6ADD5125CDF74583DD9803A7880E21B530C3A1
3D9F59A6DD573EFB277F31C773DE4CFCBC17249F1878A8F4D16C6834CDAAD05A
6BCF9661AC586B9C409A6C7069C0FA5BE2CD4E02D80CDF993A13C30077651229
E66C594784DBA4ADF93D71AFDF7B66BE5BC5E242E4D404A6D028238760DFAB29
76D79620BDD8BF3ACE475F4DB27F6AF57197EC68898DBEDD53F8E257E4153A4A
FFDCEB24EF1297F035DEB406386DB8D659D26BB211E531663E230D0A9A64BA56
B8E46330EACFA60103BDF8726BC0115561B401D51A1DA51E48AE7E1110B8D371
A87B1604A8E04A142EF709DD54FA85997A1734872816EDE300A130546538B5DB
35DA29ED193B06DD3D9048DE550DE29B39508CD871395CCF41CA25DAF8D1A567
71567B3829023D8B93CFE8D939BDB99966ABFAD84C3C5F3AADB292AA71B0A134
42FA9048F993B882B61DFB52BB499070A16126FB998FB66EE39DB4C4D2D91268
C1EDD504BC54D97E2A034B7C501FB57B9B6410B9995F311E151D72660B05AD93
DCF19A62E23446F665B84A6DC1CDBAEE5087E077F35765297DCB17B36FE9333E
464EEA52BAC898EB233B21AA640A0D9AA762045E2324E540BF5D92413DBF78E5
799447F1A39CA9B7D3442EBE21BB6B249EDE4507A3C91CADB58322C6C1F42151
470EA4CE905BC8D40F10DEBE5AF4BF64FCB259A328B5FC96A86211C6D288042B
C0A13C7BE0FB41B9668CCB63F86582676C8C4998641D25CC2B519493C9E4FCF8
26C6F2A4B518B429A3B1203EEE4FCBCBEB7F807EFF53091804325ED323369B7A
3D38D7DF5B54AF239E5CB03812924DA9D987AEFD9774116C99F7A77BF6871C57
088B3C645105D5307832DF5D6D7DC27C1D6EA6FDEF871F3BD4C8379DF41619D1
5CCEC637AE16BC8D6EE13771DE3C3B148DBBBE4D1D60A3CA285454D782F0EFD9
E1C83616CD3A9C108698F3884E1E5FC50CBC4729DF40E4CFAAF4D2504B044DD3
5003460298061C181F0B9FB0B28D20F2493260D104247CBDC724B568EAF96E73
47326EF299409D5DA779F83BA7906736E891B9CDFB2BC02732C5EB8F7753DD2A
8F4657DC05D42CBFE18E6494E9A974BE5154888EEFA48D25AD6BD21C09B50EA2
E4C4E7A8C9E69684EB3FFD52113A07B4F1DD4E042B64AE115E029827964FF58B
2DAAE2BADB3C2F39C0BF871AA514A2E87897ABE6F28E8E7D60A84751D98AD007
56781CEB7B94FC6FB6EAAD53A7C4C3A9C35B4F1944B856AD10C05B1B4C880E7E
CC8A61D14B999234D302F8101C1A86BA0F98D879756410EE5FB2D28B8D0CF1E8
5A73A98F1E0C9BF26E913A5178682FE026BCE753BE1105F4CEF6A8D68267E730
6612F8F670436BDB461500B64835A5095A3232F360DE31BC26F05FD9DFDF05F7
5B4F163FCE3BE2292943A9A63F7AF293CADD105714004711C21CA72708A69416
DA43B66F32993AC4E9DC13B9B2FDF0C501C5944EBF45FDCC0C14EEC5BCBFBAFA
076EFB9DCF4564D35A0D12D798EF6D8D2C08E7A0EF4C4E7DD743418EBEF298CE
23D4183D1597E2D8058D478B07F0F2844F47300BBE27D01C820D7A4BD84EC3F3
C3506A63A818993856CCEEDCC832E6259448EF4C173A6360197D0A6995E959F4
D0F9A36A449609F8296CC1ECF1B999219FB9F7A4072285F822142BB141B6FAA5
1EF6C23E9B8999CB4C84910CC5A4D9F7A738766E78C1BC7CB91EC948B694AFDB
EA0F51D5810AD7FFF903401B6D1B0C3D748D074C0ADFDEDD1951A29C8C29BC96
8DE0B02811AC1E75F187D74B4D03D36B170067B51D063BAC98ED8F9E91F80124
F9E8D0EE2F70730254D11E66AFC6A4EA2CE4D7EC43C53CFB4426ECAD6B0AEAF3
64AE4C80E5607CEFC1FB1A2F993C43CB6C526E7D28BB600E7433F328F03B33D0
AC09237FCD7A4D9F18FE06A433C2D7D311E1734B2F2075AEF496466CE36C9A95
C90FD14DB51EEBF226D020096E6704FBB67F546C1D4B98BE2815F6DABBD022F9
59A93824DED4203A60F8B73656C41282394F946FA2C256F380F678A62ADC9A5A
0D937B450B67A984F6CE6F529A894801EF30415B9612453E5EF16C7733BF56AE
6BA3F09F07AD2DC2CB522A9433805C0DA1E12729DE1DDA9742155D2E0861D103
43C67ECDEFAEF4FE128E89184ED42F44893393ED481C66039DBE28E5B5249BCC
B096E3E1FB9E60C37248B37DBD943BDBF66C0928BB24934B9B5846B7B0C1D391
7E1290C3C0503D7CAB2563E10D50DFE31081117D7DA0594F47D77AE13EDF64AD
D7D9E3CBE808501FA61551D3270E576D84C6A9A2EDD9E1C83616CD3A9C108698
F3884E1E5ADBC5E1AF3E18E0FB09EFAFAD0869003D558C0797CED5DF95FC2241
F07D1C079E561B8F2094A3E6DAA15EA84E182A6A8999564B7E54D98B78E17BD3
9CD5588CAAD1E91F5641F3F0B6EC96755DCCED7E60484F461247C31D0B5A0B86
528E26DA7553F4558E6A2A2D2A5F90AE8B8E5DDE117680BEF31C99513242C2B0
630BBF196971D411430E0A4B59147BB373CD44D8FBCC759205C573C5CD0E7F23
904838D737A2FD464F0C01CA332631EB5D2ED00FDEFB1D9F407001949CF610AB
3704F8BB6091033D70F9796B6362466410CF6341D57D95E917B27A901AC8C5A8
889C1B3BDA157D238FE5AA87E9C20ABACA1AA2901E85D0AA5051384B8E746F82
00250CA3E06D42F19E9EBFE7E8AF1747AE4A940ABEBFBB64F34C4D4BB7ECF5DF
E24CC431F1494197951E4F5222DD5CFA2D4E334DA35153FD322F816ED010912C
53584318E725B2FB846C79E0A6793B8CD1E4C04A68FA8B26DAC13E567426DB04
D9E02ED93D0A39F78C3908048FF3BFEF5CDF1BC516C8A823D46A15B534C21954
172D2786284A2097251BAAA89CDC55235A9F912BC01221F7E35D21BCFDF55B86
7EC1F8BD652C64236A94AAFA1490F7B4C90965F4EECE5A774EE32A611E6A7315
1BD3DD30D3DAEF27125F0BD12D18CC78F0E5C6CDF3ED799819B4786D1D81DE3E
203B0FC1AE85179CB130E9F217E8AD3918F6D3A8F8BED50C5A1E70ACF40AB89A
DC72AC805E5F22E164939BF5C44F37487EE4CFE5D7C6187B119B867189D3E1C9
F85AC71B21757CA1C2C93E7433B94133FD59D273326237A8979519CC9B81E608
C0406CE3EC0FE5927569CB3E59275202739AD91C57FEB0012F8B440378167B93
4EC351A8FAFBCCDFF89925CFC5D85A28B616B9EDA1A9FD1515B142AFBCFD8B23
EA2AA1B3533B1E91CCB22472839A942CF84F49FFED241A566FEF87BA2C543649
CA55A50BDF572C18A10C575B9B4F194AB65AF70AA21888E25B6E21636A62F5B4
C956201F4A4BF83492D164DD9BABC0FCAB9914BC9BA40BD8BFD50CF2E09BB32D
DE38885072B38149BEC1A5CCE5C0C84ED1A48E951568924AB40F0519F04EEA07
F2C4935AB85A481DC6621C8FEF383480DE965A1C8A64C0107DB00ED420D35AAC
68E2C3C32B02C62C906E10075EA14B305C0C3E2577F5C2D65DF79D058B4C5C98
0843DD54E1784DF6429141E1E122354818845C5F638E434C0E7F651E7D6172EC
63B0420C58B0D93BE40A7292789867D1C64F9C1F12C5A8524B553B5A2A39617C
A09B5971E03E3B2CD6ADDC9BB1C1156CBCDAE0DFD3D284A557918F2CA4FB1CB6
8EF960D01A54E1BD31751BE86A570C97468D29E28C7A75E36E7B95C83844A337
AF2699F9C3B6B1397242A175803173922F119C0DA609DCF57EF4F53493935368
E4CE7B0444E459CEA88CCE5DD9CCBA0E8427A3921F8C0B68AC82C7B98BCAA681
BF6D2FF7901C567EE520C96C0E158D761D3BC1E7E5ADD5F25E5D8F5B0A8039CE
5D88E9B87E035EBD28B8F67585A22814DFE456C3AADD8ED8A443251DEE5EFECC
8A666C5C5D17FD96918F7DE387BD112CD05638BE7064293494B4E845E3316E25
73D907B52AF085E729BAA3282C78EE28FD1B2F56F1D61AAD390E42ECB58F2FDF
B8DF16CC6762B71D2B22607E1F31C019C17D22DB84B9715DC0E337818EAEB7D6
62C94468128D603D486CD06ECE36182D11B348C8E10FB7F1E8245104B2FE1C2A
FB62CC5A28234C71C5715DE583C485E6D495157CF551AAC93463C97CBA37B7B5
00DAD1B6BCE260A08980D70825D9BF2F3AAFA3C5DA972558EF18E943148DCB50
6E276782C992DB9F8143589E63B7F423C56584F4BBC57015D51030B695AE2354
1BEEAABAF185F4CB0E66A97DC3A56CEE8A5E53198522C434869A0C67906B55C0
12EA8F83FAB9E21184B1FAC4459124722939E4149C2ADA6B6D93D1E88439BBBA
D61173BA168CFDBE7618D2F3F392F2B1FCB71259C0FA33688B8A07A856417C03
535C3E4E865A1DF214DFCFFA88EED6706DD439CBD4066FC57D31CEA08D34BA32
6D8AC3C275EDF016F42F80B4D4151C6D51FB2891C65124D915C801A4412C38F4
949F89257B8BC397058883F8664FF2DFE16524FC2F4C014C16F7B4BCA8DD0FC4
0A837E17CA7A7AB68700D71628DE6F768B0B3A583DB75106DCE52DC65044CEC2
AA1CD2823D9C0B0D233256F28E751A5DECEC84D260AA0BA737E27EFD95B0A294
40902D0983B4EA885CD9DF1211028EA7DF99E14BCF76530FD861E3A8381E4A84
305BEC9F8C5D0B9F4724A6508B40890A693F9942C4174CE5ED92264213C0F028
2026A1715DF579FCB3A2AA4E1B7B86948DEEE6E7D47CCCD28C3C93C0F5C9580B
3E2E706F91530E60B0B1F92924F284CA9635BA972878DE155696C3D4E8F5546B
B41A5A210DC12D9583A9363A8F986B635CB63D98FF4B93F1248C3AD90CB4D35A
786903B801BE44546B040264D661760CF68440375C3B8972C54EF7D530874FC3
A9ADAA2069A157A031B1E6D7AF1225A2B81845872A81CEC34D986F189E7E9066
5633A83E7F9C5E2F6230385771F63AAE99B5BA3460F3B99FE53DDE41043AA487
14653753D6DF14A59159D28EE8261438EC71AB1D2FAC09019DAAF0AFF6D93413
AA30E81B533F8D0823D0958CB514C3E7939E47A3412D143248313120A19768AD
9F3655A4FD0226042FFBF4A18B49B704866DE532E354912F12EBE7BCF36B8FF2
89CC541F6556231FD83B4E1DC5471674E5EB3ACD2D23292E196FE12F995924BB
B52D5F3EA9324FC9EFC84868AD49E3E103D4CBFDD3DAFC6C6731BD6A3341101B
12315F712F74207B4DBBF01924BC2D7187CD112D3ACD5827EE5081C89F50D531
59763B2F82FEFEAE421B5ED1FFE6658F7427E023092555066FBF594ECEAF0800
5EEE39EB9899EB338C00D7D5536D49069FDD216819E3C86A6D4BC779FD2CD53E
4C58BE4551DDA39E0E690271F80E9245CEC5C803976A1FDD510EA6B70B285B61
2A5F8CC904BC33F23D4C65A18310255D6FB381AA8928962F64F44664D1AC524D
83C851F116294B1A74F066B7CE29E647D4E6EDCAD61976E7D3A90E401AB64F51
D8F1B1DF7D38127A0B66273A5CE047CDB62759F18BDC853F8C09273B4BFD002A
4BC3209C827FB84D6AB8483612F7CB94A0D0218BFC480C85A7CFF5E2D1F86434
479279EE160A5A38C6733F543E65090D06AA74CAC58C5AA92E6AB02C41DB634D
91B70BCCC4F83C2930CA813316722B2E7135968D66162ABD2391189AA35753AA
44C58100851CC85FB2C490DF3491B6FB6867602569BAC63044A9CC2C493C659C
9A92A95D3020EC756F18E6D8CD9BAC9D9DEF5AEE3C4BFC2CEC2A5A0590BB07A6
6C6B3FC432808B9EBAB6113E0F88467D79EF802A233EEF3A9C9682696B309044
E58EC31B946C41CF80911826F482DCABF5DEAFC0CDBBCAE98A99E20E1CFC04C4
2CA85607DA830C584CDA6AE851536CDDCB05AC11AE4FFB0A7C6442AD1DD294CC
46C96E0FF33D687F455A999F9DA100E0941B85F257F71D1B3204A73D053CD6CE
C48A28B87C2D9221A13865E896742215AE645B8BF2F5F14A24820E6DC28F4E73
E38C7AC82B43ABAA9D81DF82909FE635AABB7D3A3EDBE08B3AA90140A9F92815
DEC47CF5DEBCE73E80A130EE0855F97D58434C22E06A761A63510C422890A6E4
24B703A3B05D871D43A09FB1AC9BE9F18AC8D6E777689D316D3D37E4B3FC8B92
B37E736BBFA3E8112B67C5D0272C1B45554A1B05B70731889292851E82715DB2
A5443FAD6FBF8B442AC54E1C416FC9F624F0D1B247355F1B5B8159AE6E498EB9
9B20CA270D52DAA835C2F5AD4A686AD4C362D9780C7D8734A78055B6746E856E
DDAC0AB6A0F713679092FDAD4A040839172806808ED2D48AD3E74FD9811F7D05
D239E23613CCACEE7B7541F522908FC96F255C8CD17A890E205115D37978C4E0
30DBAA42C4E1DB27226931620828B99F77305B3AAA5532AA99C610D5739BED26
29572529A19B083034C12F6BD2687A3DE4528C9E61C9F6B4F7086827D2AD139D
86379613F0C6568FFF4F61B84A78ED825281E33CB03F19DC3775A3F0FE6B2018
4AB53E23BB95135E468F1B88FDF600D6D8FB2A5FB0D606BDFE812F0A4DD7F8FD
64F1118B62049798A7440207EE784422F06058B85C90ECB9505606DEDD1FB925
F84EA0EB9D79B69404B279337804138F0C4F57C71D65F0AC4EBF2F99A472956B
30366D1F1BFD940DE6B6FE3FE441A17728DE478EF9053116194E625020B56DA1
BEAB283F94AC2F5E9383C2E3874E553BFB219CA730634E70D438E2B5220360DD
CFA34381141D983EB31151B7E6444C2D71EEF218C64226ACB8EED0C80E4D4211
8BAE4628F7B3BF7384590C2A96513DEEA1B492D1CA53780C0FDF0332D57678EE
47A9562F2D44F8063313D0970DF3E73DC4874650CAA1C636B9432C434CEF9105
A1282D5C9AE201C72F1E57A781D03361EDF51CFCEC31CB4CE13C244058A295FD
A6D00141AD1D00660F383E0659CE3082E9A460512DCFEA19ED2A9D2D30B410FC
76D021C6770A3C4217727F2144C6E3E383E388D5464E813269C5691553694404
11EA2EE0E96A025E3838708EB224BA8797B33C58F7F7A0DF0A797150296B0B41
8B95856FDB5CC2FF32104D5CB91AE7D909E0540315BC34C21954EBC5029FAB9A
CB87B50100489C39508CD8DB77BC76E0908328E8169B33BC7F0548941BCFF409
5A1A876A023B66722DB25014F7C0EF51C36B43FAFDB1B307F36EFC28E1B3A463
18DB4A058B98CD0B6CD1B0560078BAF7E37B176D5AC145073247EF20256DD4E0
5169A0C68C7C49BAC87E77AF0B9E8644F315CF4E3BCBAF6CC5D3794CE0B930A9
C18FE7CEC0699BB12C33F00190A93F94B64458508E6BEC94FD87729A96F22674
3CD27E55F1BFC044367EFDEDEC15DDF6A5A0FD2C18FEAF1789725CFECEDCC285
33068555D035D92DDEAE6DC31CAB040128F2DDAA6C80418BFAA3AAD8D28FA0AC
AF0E02C9262BC51F45204FADC7E1A2C371F253F5944E440124BDFED978189A32
85E5F32F075924607D034D97299E671D9EF6A75F79E2818F7F76EC845171BAD9
1EF8473482A725464B44B08E27D100B6B2DA0E159619161D965783E5F483C658
7968A767404FD9F3BF692EC3441D1AD42312C32FAE78D27E9FEDA4BF69AD7F89
06566AD76F219F2E4C4D61424B94A0B72EF5E8DF9EA935CC617E1F76450EC7DA
18B2D65DA816B0D51001B1FB5A31819DF1DA3844E979EDF743F2C5F9C1115097
2CDEDA35124106687405490027FCC77E33356ABA5D2FCC4ACEA44C5BA8064DF7
B40AA57199681B46868F4967109CC309821BD66A3678B4928E8076FA883B2987
78E62BA8302BCA6FAB98C2BE49CDD56D1F1AB8289DF460183800170F935D7B9F
8760BB591CB6CC5103A3606AF4470F8DC9A477D822DC48BDA527A3A7EEF1C85E
335DFE0EA31AB5ED1FE943EDB18023F4B3644231B7E949632D0959DED9238F67
6A2E5FA08268676E5308B0B80C61E9B607CFA88C80D7972E625E5C3E24C6A3F1
CC8EB1F262505D445188EABBDCB7ADC4055A1361768EF8141D502D1CE8B5F184
C80F0A14D38DF7EF29A1B1A2CDB7B335923ADF5122E22208EDB45E76565EAB19
4767E00C463AEBE2BA17C0C7F2635268E54FC8278FAAD5254167A21F59CFEB16
3C653EE79C2F15794CB9F4EDD647B246DCA9F53DC075B9E34398695F32742C21
0505DCCB313584AB3A708D2BE2CA02A6992840559B84B4558336C1768E8E0A80
0CE12F0095466099079E88A67715A2F464FFD4BDB2158CE07717E98215C37D3E
B3C4D896751FC8A196672FAF4F23F9D40B1950393BE05AC8654FE123AEB4C6EB
B1AD2C0CEBCAD3A5A6EE68BE184143A92178834CC80E220663D0959A407015E5
56EB8CD2CCF0E97E0263D3265A7F1198DB490003F8E558C256ED4F7617D1565A
01F7BEC519652AFB0F013D3FC6B2EC5F07219F9110AE5BCA209EBE3191833C44
D31805A533AF4199D0A9129620AC07DC2CCE2F3A123C6E267745CBF902FA59CC
2BCD8F4A20AA53CF8009E774C2C2C394EB4E9F4FE8DF66D0E3DC993DC24C84A1
93864FCD014C17049A98F10329E5FAA14784E44E9B258B477F689BB1D919F613
FDB1A6479C325031D028E3369E3A3FA86715A51818AC249383118C278A8DE53E
78F80299E6CDC348638A814CE93C5A09A595967F79FA440D2EA527ADD604B3E7
6E22C92EB47E50EBD75A24F9B1D835A7CC092ADC772B69F8F20BE3A067DFDDD5
57102050E8BD18B431882627F9AE3E7E279FCECD3C4CD5D5503999EE5F37688D
23BAE0813944CF1EC281633A0832CCE4076F1D458B54630201AA942F18F90376
221E6053A3C983853A548D85CE6F9BE8F1E7842E0406D0770CAC5D0E8ACEDE71
08DA070AC5F9A9A995514280573D1151199B86640EEA8B49F80BC019CD15D54E
A695186B73412392E1CC7C2EE376C5427D1A4144463E839B7B61B0A7EB409073
B37B3344759AC5271457FEF67C6D1DFFA89CDB6995D419D86008FE63A6960D7F
4AB6D3F778A7D98C486D3882EA4A2A2641F5D00ACD02139B72551848051DD7BE
711EA82AD37A955F8005C5F64597929BD1F881E743A38D55AC6812980352F216
FCEC8EEA00C2250D9DA3C3B36FE8CF720F21CCC229EBCAA90237E25D1EDD0C05
4762580CF95FCAD8A24D276B5A3B363C8BB499753DEAE7A17F921001F8882281
6594A29E0E16FBAC963505BC4CF1ADAEEDD3EB2748D94F470F1C4DF890438C80
A4474CB7BD109420C689981B807898397002FD2409AB6C9FC244233F60B679AD
2A7058F23E6DEF767759375B9C50FF956E5992A748BA7E5F5352E91953DEEAA3
BCFDAC983CC68AA74CA233E2C2587DB2187287779143A2580CB20B7C7E7B7277
6D4F5C784E1A2BE386A518E8357808E8156E004651849511ACFF673559655878
CE5B769E6B6A7E15FD01219849B6497FA6D9E7A291FEC3699255C43C52F64B9B
2F3620660E17F399854B5ACB232CF1254FBAE5E22269F44EF0FBE4EFD9D12D03
A0D490FD73B012D82F74BF79F47CFCCFDA431712371A11AA76C03C179312D4FE
74C69835A3191173AD8B0DDCB92F3B96485C0E1245ADAD0D3B339C87D306150C
1C803E3733610842E1E13700847CC1B654146AFBC5585C31DA38C613350BA71E
A218C87D0EA52B066E5E52D6BC2A7C003C39331DC4E3A1BC2CC9ACF0A01C813B
06D1607CB9AC71B267AE282BD49866E12BDD2E8897CFE1D4D5A7443F9C92D9E3
4FCD7E5A2E66BB265F6AA43D0721DCAD60E499F79FE0D2B8482F675BE1904113
3CC627AF9293570B3DB7EE8C095DEABBD41E05DB2F574EB266C68434F5607E8B
F2934AA97CEBFCFAEC0A7568FCDE5E045EBD413FAE9881FE3B5117B32C326E4F
91B0FD0A8E095EE2CEC2909680E472B35BEA405E14009AFBA50C02BBC09D2A62
1C3256B1FD09AAB51962884A54DD7AD69271DEBF69A620DC900ABC2FAEB0B8D1
C26998BB871193FED983CAAA9DC7A08708A3D6B787C6A547E53FDABD00E67B10
180F026122D8E56594CDF0091B2399A929FD28B5750D66FC1CF808431E4F0115
F82E1773E48CCCC04B91FB7B05FFF1F5EC9A6197C411E3E4730CB0CB2988FFDA
6C425FFF6966BD9327BA1CF3822DD4A6D3C4644AFBCF51611488616699ED41F7
1ECFE3BF1A71DFECA66E03C179461FD6DA703C5A8D3384251854E2CC36E6CCE7
5E31A379E70A7EDD762D066732FF3488587B2B01C3654B195AE60787DB3B7394
D176DBFA05A85A5A004883D212135CFA98C2F559C7C2CA5E78CED41513B3EB2F
3B2591C6A20594D080499A4022C1D3BEB136903527C3814C61B14E6465DA6E5E
D754AFD51DDE45D99FFBBF6302611DF2F52991C211DBEA89AF36725E2784572E
A58FD6661200665F04BC364BC69D9EA37E6384A3EA5731BC7D42882AEFF30206
C0BC69997FA62B90E03D3F448FD58CEDBFCB451B9EFAAE8AAF211388190EB0C5
2D4999CCD6FD3691C5E3EC46EB9E8F92A52E6AAF677B6E0088B5786E7CA6DD48
A71944C0AD98B624B44418CBEF1D912FAA666B901230662096C93B61A938F7B1
D9220D9FE89FFD5E8D3031F622A6C374723DE2DE12E25445B5B0BA0C2848C919
2A8141362EF9D4B63F6E38DE5A8BBD0D017C460DF05B57120BB58A477E4C4E85
AAA0D8843738E8B6E3B581F41A3AB9867BFA5918375C93C258CC0A2783892A59
5AF02DE1AFD71FD9D91310F5C907F0C93C15A9024376CEEBA0DBADB82856D6DD
4C5C487A00CD29BDB07F49C4C74356DADEDC1B8FB3F8FA0596E96340C588B39E
C79A0112C84419356CCD4D3E7280D32632B2B0B608259CC88564C7A980F27517
D2B1F9341A4E6474BA273BC99A13E186589FE981A60E465827E8A0B4A161F044
04166720D36894AC46E901FA1CD0AAEE39FEEAAE7258986431E059A7CA7918F7
C9EB1B75E7689C16112ACB0A383AF28DED444A6A24195C7C472EAA5CBAE5285D
EDA291FEC3699255C43C52F64B9B2F36206C356835BAC1441F2396FEE1CB05A3
6BD3EF7B0C92402DD19703713F9A898B651D79AA5C4D73CA3186CA198CBACA20
DF47D2DD3CE35849CC4C685CBB70D2E2CE7BBCBB7CC5C9F9A3DAFE021BFEAD9A
F4759A563EF8C201EBD900D61616AEB00803488CF289792B9FF3BB81AF51DFC3
4A0C0551FD1140A0A9281F00E700B76A069E8F096905876A049C89A614E92B80
84842D9262E359A545DD0BFAB40895345FAEA6B669ACE727C3BED5FFFB895AB2
BE43926FEC1266786659050AC04184F9E66D917CE2CC46CE18C3988C8BE4829E
E74BF7BD4F25A109C34DD931F1B147F457833B9CF82083DB972445723D589683
1D2BDAB17C31C4CE7A17C95C439EE693751E05DE74ADEE20EF53751328E391BA
0D2EBA4DC63857D2DD62183473DD63A1BF343D9C04CD539A05F245A0BE699F0E
68263F6AD613BE6CC8203B205F24BFCA327803319CCF41A14E4509E64BACA83F
D131359AE0AABDE96080A8E0B3CCFC2C0E25583F6BC29762999FD63A3715056F
EAFA1106AA828D8C466CC0AB2A3BC87D9A6FC7CE63F70E6D79D75334BCEB97ED
71EB8F9D4836300C9A1EEFE1856100E8780973D9B3F6D10D1E9424B56A27E443
5BDB20678065B72A6863874F527F38DBF58D03761060D28A6A6B35BF7CA86A54
9D81B06F7786B7629CE3AB48507AB8AFC6A11E9E3FF3FA0198A97D7C29469E21
3EF1012B427B8583BDA02682126B82CB98FB5B5B4F9FB61730FAFFB5EB817C10
90636CEA94745736395AE80BB2B7410BB799ADFDF25709A8696D992ED6CD9929
D49BAE65EFAED723ADD7E587154C86C855AD23ACA4E0BB2704A635B81D00780F
879E2BE94C6A25EE9A60B370DFB93963A58E1A00348E7CB30A41540368BA9F7D
19D503ACAEC538481C2F3F2E6CB4FD94F7288B00AA79BFC95B08EEFF57C4AE4F
5A4B64314F982C1C374A22B7264B2BEFB1750E35E4472C488F18629CA7FDB4E7
2EDA18933D291B478C6CCEA7FFF811A4ED3579B13D9ABC2DD2380FBC4E38C0CB
C3F1CC174435E2847E42030D4826D85D884AA3747B7A4C9326EA27EAEB860653
3E497A6414355560B18A4C73CB15DB4AB762939817F355C5B8F6E96C60BCAA38
656AE2BE8BEB2B6E6001FDB2DCCD2E56FCD73D83E5230BF283B616ED78565C64
5357A86DAC70EFFB885218BFE6E8869048BEED634C66C57A25AEC60F544C390A
A962A5A5390E42EC31859D857544877E41DB82B1319187A06CBE094206DA8FCA
17ADD2E2D7DF17CD9B5842ECF717C9B105AAF1CA3CC2E2BDDBD804B415D39A76
A5B5D4FA8B057BF60DA549D031D555EA379E9B03FD09E393A23534EC94DD9067
051D8A78A9EC0D95BEC5C4DD2D35F47EE1FA1E0DF8B19280E98ACE2FC5FBAC0E
7268E15B652E20859CBF3D382D4D3E3C8071E29CBE07BFB4AA814CA0DD22B50B
053CC56D0CB4DFA3F95B6305892A6E3A0908CEFD6EA60B8C5AC1F6D46AAD7952
732F0F68594C5B565555CD66C43738F84205039540807A9AC2FA24EE9944678A
9B46383B63BA327AE1F46F91CDAB63282BC437C151CCD85BFBBBA94E6093310C
B0E76F4BC1E901E02CFCCA694DD7F174642CB032622A35530EBC3886D0F75EDE
B96045B1613113F89553753D44CA1453E7FF6B27E5C562A9B91A25CB177FA2DD
90858CA3A619BAF5F05593ABC771A38D9BEAECEB71A83D9CBB798B8BD7D821FE
51E67A59B6F30A79A86F64E067BBF8B8DAE62999615F358E7F80EE29B6524916
68214C9202F32BDBB44F3C4C45358148E5509F7D6399DF33A8E1101310211D99
2AC80EEDE74532E61F0A414824E7D487E4828413009BD7E36DAD065A6869DD7D
A172DFD2BF231B90B4181A5F7BA305C1A480B0CC23D6A18C4C47A0D447516DDF
20F18CFD471384E3BB231F9B2C9D026DBE27400716B6F51F0195BAFD781D1F59
6471B4009F97F659DD2E5AE71432D4D1E95460852865F417ED31FF2B2AB0FF25
6B88A7689F025754186BA78CA7DA4F2449719CDDCD7D8274F522C6056796933C
AFD211D88EBD0811B13F422B57337E6CFF328F0DC964B698DEA91BCEFDACE83E
32E61B8B7B45FBB213C35A255EFAE26E63A1998FD53CC14CA5187EB3C65D9BDA
57B5CB7A6FB37D103EBE887E424382B822ABC119AF3264D7D2083C6F864A38A9
F3726BBFDB3403736F02F04C2EEECDAD6FB8E55FD2CED15767DDE33F5DA728D7
37297D3BF8955BD2405D01D18D8A6359B9DF70E9E4E268C7A6EC50CE0C7C1B6A
18D111304A34AAAE285CEBD6ADE595BE95D8861D0B1DFF5FA599D67A4A3BAB2D
9FEB5089750A311B2C08222E8ACCCCB0D002802A87784652421FFCA871B30E22
B0EE3FA3991BCBC8A6C932A0A74F3F02C03CF5F9B7D7DB2405022D993E18D1E0
91A16B44FAC0BD393AD1591A9591C386845F3E4BDD817E495CA2874A0B18CF22
8083C4648EDE5C92F38C0A37AF15AC04D798DFF53D34F7731502DF31A0F17CAA
54AEA1E127825E799EEE57BFFE8DBF11858D2CEBEEB8B62B46EB0AC8079BE5A4
A667EE241AB05397B5C33BABD40B4ACA5A2C788223304D4166ACA1261BE1849F
00741D44BA3831C03CFFC8BC68B49ABDCC919A0BD621705A2CC299B323039CCC
575F3DE10A7C3F853B4F726251D4621D4E6BAC162B47298F51A5E06E4F7ADDAA
1E19DFE6676841E898EC30FF58508EBF6D7EE3752D2DA4B4F3E62A9517ED61D7
251446381F521532A56FE918330B310134C51983C9628290ECC6A44751CAAF5B
EDA536AB2216A6D889E13CE07CB709E3D0399338CB013CDF3BF14F323C798FA9
1E7215BC96C9716044481FEF51A98F338822ADEEC8F12D99E3021E9EAC269C99
E9CEA17B029A14ACC959B2B1835C550377A634F66CEAB30ABAC46ED49E6CD3C2
40F1AA5867DAF6EEF487DC9322CEC536921C36397A2A2907BE092D0E59443314
08AB2C536030F38E87CDF15B560989C7A89CE3BA5ADCBF48BEE0A8A8C53B3177
07A5D7E880C44EC9A7A754AD606FFD42B435D380A8F5B79B9C0732597186DCD5
42ADE10D067DB5A1D6149A676506E32BF73F83820258E869FF3B2A42284F8929
0BC979F03FA1FB2181998509EAD1506088E2F78708E4EC5F46FC229BC6F0A3FF
99B7E6A53F452D07A46F83FD094BBB23D4832124F21362FD196FC91B921FB8BF
62D789898DFA6D396697DE9CF67C8A86432F64C96A1F1C14918EE9CD88013469
85DF2F035181FC60070A5331356D31715D9046772C518E9FCDCECC79EEFA3D16
F0EF584652EDF5117DC71B511D48586E8E21972A0F86BB260A91073BA7906736
E896A255485B9529F2CFEEFCB775F209C53AF90E25BA5ADA0AF460C5467AFCC8
9C3C8F5F513EF69A67B78F100861E06DD0A441749C9790693B45253D3B19E5D4
C341BD9CD4B3D0DAC85E7EF3B5FC679BC13B7748AEF4EFB0E9706DC721C732FF
F8873691F0C28BC8E83B24AF6897483A285428DBF2FA6C7B4E22C9454A9C3C0A
6F7C4B78C3CE2E7CDB9142F800F50DCBB953164D0D78C30A0CE1F30EF2381838
257570A48D9E8AEB7719DCAEE5454D856508726CE31F8E040A1570F91DBF8F60
BC4A67849F13B9F872439F65D451B1FB3ABA1BF4FD664CF4A15B6E7BA80F1CFB
288BCD6C4AA81BB3AAA4ECE54B38EA0E3A8123D1FB96363CBF85DC3289F6154F
2FC6BEE967C6E2A65896C2ABE627621490E5EFDC83EBEE48D7E851D5B85AF543
14CE68974297EE14FA21C5185272737D42832D92CB66301FB6AC6B19D78FE079
B6DE217EE3A1584F22A5779F56A0902A7EBF4F8EC88A57C2DDAA57E868D04B6E
48EDAE2052019F55265E3BC0F48F53644B297A114C6F5D58FB6BFA67AA21384C
28631A43B722839B5D76C73B63A3E498A272328926E00054B156921AABFB3AFF
B25A5BD7228B1011BD591988E8C97EB784F693C40C886B82DB0465B88F98AD8C
D1397AE4BD490B4609E63E6477D258656BCEF6A52162E120C12DD85B4924B6C5
2FC6226DAFAD36D8E62219A03258A163E24A853DDBBAE0F2AF05E3CA60F1C4BA
3C851B26427793AEE557B5534C3B1B195C9887B925D2EE2F80206B5F48686E81
4DF88032861A62C28ACF3FD21F0D78DFEA264D0EE986AF3EC8E741C7B6A69653
2304616BFBEC50E1C3B26D29B415C34922E844D4D5857311A80ED2A640976D8D
7EABA8FA7F13A3F9664097B7AC15DCDA260E3D1A79B8CC02DBD2FA6CC7540BB4
8815A9DAB6A7FC0101F9AE0EBAEC861980C57F8F9497A77E8EC6E819C05083D2
49765296D30ACB6A0044B551292CDAF7B15093135D875114232C2B90A79C48C7
572290D708C17AE3AFC8DC8B630FD0812F52B4504E22C1D273C9794C33CD6EBF
E612EB64C4DC165BD6C64C44F44FB15F46064C35F79AADC6A0A1D1822D1FA89C
3AC1FB9A0E66AE0B7DB5DD62758A3E5A6EDE351C5645D04DB49D76906E068C3F
B06DBFC648CA0793F7B4F906A88362C0605EF2F8B40B8DE1925C5AB9D2F451D7
DB8F7D97ACC3F4C543659D3072FF2D8C381C0B8F7B4E91AC700A11A37EAA0995
AD285AF451C2FE0B6A27E4FF79B83ED766137917B813F8FF22ABE427FD1A437D
ACE358715C99065876A181D60FB2164AA3649D1CFF6CE289119BD2A373232689
0E4E220FC7B143D9A42E3DA857DC230261809E2D8057FA8BADA1514D103A9C4E
7A13EFF1F82680439CE442C0136EB7CFAF1B243B7AD04E3637599F95BA93774C
A7F39894DBDF68C44513124545E28322F9E77A57BA9C9E6ACA54144F811B6171
20ECE5A3997AC78B7303E876B729C9D84BBB6361D5378232BD7341449DBCD6EE
569C6800389CBF12C7B6662E7F9AC7B46CD38403480EAB1BDC36EBE4D45A8BB1
6DA3E011FA2B757F02EF6272945F1965A04EB6CEB7390252A98957C41433D048
A71944C0AD98B624B44418CBEF1F76B30AB90ED83B457E335FD53C0B24133D59
480ABDCA18A2D8A844B5D92E1CA5018B31B60DB87E22F72D8E6F486F8D21E6DA
E6DA6C794790D0D31E53549635BB6E9431F3BF018E3EC6B36D2B28C06E984381
54B602387A9CFFE21ECA53806157DA378B4444C68252B1FD09AAB51962884A54
DD7AD69273BEDCF8FAAB8AA3FE78ED4CFD67FCBF929EC970B90C4E617871F118
6E5FF62BBE155A8769CA153D9EC6B5E7C71C69E8210153046AE9CACADC0AB17F
8E36A873EE3837CEE39E51EEA777735D537130031EED670768E237BECB9355EA
7E49ACBEED919F4F11B8EC75988652490A31EFB184F781387785659E05DB31F1
3C5B69D0E77A6170E268F1D4B0C1FA63F08C212DE36E78B8C99D13E74F1E8085
D4775A064259788D78796DD33BF106B5B420A748E0CDD0C0F80E6AE4E251F1FB
71C5E9C72C65E6F1E3C7CCD144507CFCBBB41F593BBE7A0BBE3F1109BEFC0162
3750481879F4519224018E884060FF89BA2A9913F4E9D5467235D898447A9A1B
32D93163FA766B2190F30E2EEDECE8D09B9A6A98345645FE73948428EE2605EB
377F7EBD25E0D925C9DC7FB5C19BF9571771DC8C76A8F38D18B7CED20499E342
BC499DD7AF69B2FA855A95497A6B90CF666A7BF81F55C845D4E5D8C1F46648AD
356E4CAF42C67D21461B57B41E069A12E88586E25F128ED3E30000E7DD93FDFE
7A9F3108DEC9436208F85461D4294D496084F71B59C28E917935F900BCBFED96
215E0AD9F9D5BD03404C1C5076FE80D86281F6F7F3B4657562ECFA247153856D
528693796D5C8051B385F1AEDF7C9253446A2F38E81FE57EA3DDA4B3CCB0149C
E0FE75C292B4FB5440CD229F47B1BD06E569132A61650E1EF805AA5A8605DEC5
A6772EB4A8A920CA26BA1118B4861C9900C092C4F1282355F8A95C9DC1A64A67
611D113809CDA6FF474D085B2998FB3D507E214728D08DDD7400FD122FF74D2E
71C3140A47D9049B8213C8978A4992001ACBBB713AF206244857F3C816FD512B
6C2E55BD82B6261861A36B680640026138EF5E50C3C4E0BC60FFFD2592C25D3B
F6095A3C774B986A9D687B628951255907BAF0F811DFB6301EA5F806E1D0A741
433360C355698E3072A336B24148ABC2CDFA340C41990C4DA8823AA43AE8CE08
EF151FA9F299C80FDAF09E163740F1B80C50FB33E6C92D86370D59FF76655E5A
A2AFDCD8F04364633EDC41FF02B1B99B06AD03B1CB79DC3DE6C212FBDF625564
3A2EF56BB692F6094A8A71F70C895094055A9B44EF7FCCA20E96281BF8389903
ADC9469135DAB945E2144AF4BA7A0E2D7388BAE2A3BA4222F95FC6CC61391A79
25D67023DCAABAFB88D94DAD409EDE30894F75F81497BC899EB66D7E1BECFA19
640B3FFFCF4489F37EB2DA2472E8F30CD11600254650AE01681241C468988701
EAF0C4B0F61DFE6F39368ABAF0EACA657A7ECBD02772F61C590A82742236D46D
AE56DA99BAAA556E0B313B90AC46ABBD8D5CF0D71FAF511946BB0240F44B0007
B2B75AB5B810F297F4FD1C087564AC985F141E91D31B272746A957036BF27C1E
C987E760E6EAB586DCE9E820C676AD5977D75182DAE1FDC15A43243CD258A301
6BF249836FDB5CC2FF32104D5CB91AE7D909E4ABF4D619A49399D391E7DD2A15
F01E915C1846A8C0FFF4F844ACCE2F48E70A97A4658089E85E712BACF68B27E3
C3E853E2FEAEBE06A3CEB90CA329858F8493E5CB7EAFF9B99372003FB9749398
69E6DA7BF32FD8BB0E211C03FCF12A54523CDC1DE27CD3D6BC3B9AE90A05729F
A64B31BE491D9180129F925DC394C50151A1AABE8BDFAAE3DE5DBBF94EA8A698
A0C79A6CAD41E3F0BAF1BD29755B4C2E70793E24907BA11CC10EC4FE5559041A
099B6A9D687B62FD6511BB04DE8D2A1288CD55A47BA4C86FAC67BAB355252EAE
06FE76B75699931B079673E37A96BA46DB7CE834363AD17ED9AFC3ACEF3AC489
0DEF5150662BD48402C1ED32AD0840F56FD4635D5E0A83689564F011878B6645
4AC75984BAB2DA260AAC00BCE3DA1232D3415A4B10EA0724F65053A7ABA8D0FF
2FA9ECE2EBC4AD5B083D1CBA7BEC6B850198848DDD0D5648CBE820C79CB44124
6292852FFDD86F0E7DBD90AE656E28C802A8F5F3B582D83648B2F0FC092CF694
644AB40B4DF5FFCECF203CE27B1D97EFC053394AE29BA575F88F01341CF48CAA
F7CEC8FAC6191DB6B982DA14ACAED323D8FB44C01DC8F6C9B42A3BA587F3F4A7
41EA28F84E139DAAD1AC10B7349186CDC274F36D78234DC00128D43E06D63710
C2C99050CE2047EDBB894405800BD35BD2EB58AE5A468B68BD94A57FDB523EBD
0DD0B22A8A99E67646A6B8AD50926DAFE1F3D2C8BBE193F25404CF1532EDE800
8C8D4D62F21B06D7ABEA67259058625F9BE81B7731917FA7EE6FD539C8535C49
5E6CDA6EE36A72F6DACC3146345F86B498E23B5617895ECF970ED7349DF7576B
2DA46570BECF832774076538200DDDF125E9DF1C22D1E4EEA49333C38CA93AE6
1C54392AA062A730D2A7448E5449198223F7B544986C15BEFDD993E2E37FBF1F
1E65FF2067BA679F0E23FF87BD47EE88BA3232213C22BB6445F9671EDA402DCE
5E45107FF3133C6D422A783DB1B1E4902B45A1CC9A9CF385AD06AE33ACAD32B0
0D620E929FE7696EA51A97C577234F081053517F3348A94380C39AB210921D0E
92778BFCEB2F0CB4BE4CEFAD429E5805EFEBE75E6E94AB7A83B1FD734D4869F9
36095FD062D11B7B0CEDF18C25E0ECB2109FB41BEEDBAE649C686B13C8880EF6
1F0D3F7404F60E30369D4E2A96080CCEA10144D652CC41BD57B8F11E6114B025
CA5D7B055F8AFD18F532DD3841BF3A8B013892BC8C57D086FD59AEF4C10740AD
F636A96640539CAA1E9160BE566B015C3DA35CF6E1AFC945D61BAAEF44057BB1
513B35426515EF069367F0EBCCE0296FEC2D89321402D72D75FDCD596EBFB97B
90B56765ACD02A788EDB10196819F72E3EFF1B86BD4C981B3109A19FC1BF749E
6932874D8CC38497B3D0F0A77E12FE9052E7737190DA539CACB70D4C06637C2C
15EEBA51983F90F6B8D7DF35035E4B78228917DD8B7F26F881C130F766695B76
43A676AA87C3113E3C54D6863D939EA711699B354D4320A1D9D9D8F3EFEB4A6C
06AD5F9B8253DD47059EB6D2D73C7132137A314F93D2405F950A19149A04E4EC
AC6EABDE9E20899BD3F364DBE539F7BC5ED468E6CDB5F91BF9933B7B5DE581A8
8A7A218BFBCC8D9D4FF34BB7EB44F9552C7775672B3C002C51C91F4B455984FB
02169213214E89E026B7BD89CCE7478BA71BAE752A259BC950CE13E52A3839DD
09671C791CEA67F5A9C6A77C4A66AA9EE009B340F669190010DE80FA5FFA2E5B
13387FBB4DC2822D61D9FD8AF12350DBECB87D00C037FF9FEFD6FDFA76A0EC14
0CAD9CB81920FA34C959CBFB2869B1B14EC9F14BFD854A3D0015C40DE66DC5E8
D7736436806FBC041D068F2BC46B30A03C5FB1FBAACEB70ACCABCFBCA1CA9D76
5A889FE995944BE41BD94D742D213707958226F1194D1B1500E4B31421FA46F0
00E330D50C0F2313CF10172A9762979DFE862B2AD43DDDC8119014149A54F4FC
6144D250E35432AFAB778A86A3AE486811702A85311C7206883B6ED678C8D1EE
68876D1140D4C0B88920C9DEB76C265EE87BF0C78BD17C233B32EFE5013D3D4D
EBF3377F906BA2ACDC471BD7FE50D102CE5B0E1FF8897A261017122E06CC766B
4F414BB07026D33B1E67AF4C7124729E66763644E14615E05BF6E98C9FEBF318
3FCEE44277F23B0D68A83505F65D29E35A6CC3EAB277063CE08BB890C650C3D0
DC463DE9D30C60E702F76CEAFCD1246138A5FEA9C9E884D0ED35A71F00119286
F7A2FED7C10CA3F0FC7D2BD758833A4EFA21063486B336E55FE6AF667737F3CC
150D1DA72FDD7685FEC66BC5A81CF894930AA631AD60C68B319D25C1885DE971
7E289BAA7AA4B6AED352BEF58C560E44F27B9FCC33DE99313D9F996263736D79
A3C2B91C78AB2E320E510C2A01C4A90CC6834BEB8741396C5F9D6449FD5BDB05
7D05D16150E4A8F79EFBCC0FE8CCAEB80505F8A28C81AF5AA200D9DF39D89641
1D284071D290F35E9B5A80FB64EDE32B55B02AB53D4497937C92121D77B86D32
B177EAC39E3881138AD5B484ABCB8EF55B54B26FAF66074797CCCA4FE1AE635B
3F321192903A4F9FB2A08B48360A23E1ABD9520F86CABFE102F0047B3476CFBC
68E48B7B3CD1836A37DC44EDA5CBB91252946BAB1E075F05480E132C50D3C11D
D571BAA2942F18F90376221E6053A3C983853619F2AD00FD2399295680D789E7
E8106F1E55018CE8E79A42DED1B447602A97D3DED13882C5207C8127480BD8B8
588BB2746015003489E47BAAF00EE934737F41CD6C5D51665507045AFC5DCF25
88057C403B5E2708D381C853761E94BB55BFA09A780CE75C127D861B995E2408
15E2A866A4A74D6EAE3610D561A56F1882CE75D5E9ACCDF2C02B28DA60138A88
8FADF1A359F1E7A8B1EA147AE3D538FE9400C351D86CDB7C52B728791F1C5A3A
4A5E85B4F3946B003BAC419B07302250217D38DFD17B38A71E20F6891A4FF044
23DC033451BD6A6A518777CF2E2BFA26692E7AE22DD1DF45CC5E67170675CB21
F8552402A73D02684CAAB5338FAA0D71F81DE250E942D28806B3432C169BDFD6
C700D2E82BE80CA020C75234FD6C574117146FEF5323FA87D82F6F90C04BF543
C1929141EF8AA259E4694D7484E62FEAC06AB90DF17844B329EBD2EE9D8723A6
E28DF04768CC069E2E9DB8FF256B880F0157C7A82E60F8B9849FCC13B8405464
4B46521F4EAA2AB5E12C2408B78B19D91669C52BD49B98E5E0C9EB3536917362
7C261A141D432524FF9BF7A9690C6D6E20D7716E09B8B8C5CE3985BD69E3E2D0
E8AD712C4A5307E63244D5DED0DA2741D8F088B8FAF6DB1EAFDC2EC726DF5311
8764EC9A462218A1C447A4008486104EFF80E48EB1B2D5A30D974A7E9B24DE19
4E20653E3661F2D550F6C64367252678357378D72BB9058DBC0C1FFEB58F8B14
0D4C45809575A8ADDCC969EDA57C2391CAC0A12580FF5ABFCFEE4E14BCB31B99
B392E75C49253727C158E3B60B2B48F1EC9818FC8AD5EE67E9568E3C962B7214
7F8C338AA7C6BCB0FAB03F71564EE9A1211D5EF596474159C9A8277F8273826F
0492B5DD0B068D6578F8CCE6DDA284C297FEE1246ED0E1CADC3BD61DABC0CE01
5B4F0E4F0D51AF810547C6C98241AA34BC2EA51C11C5E7C0AE5E2F454445F43C
0831A312803D2B0D2F53BAC868414D0EB13B50361FEC8C077445CDB87430EE67
E909CB1D5F114EF54C9BCB476AD390BF421F654A29ECAC9EAF045EA686214612
D03F4C45081B4C6C0D03C61205659AB26176B81300414DD105E8402AFA7A9CFC
EEF1FF714B9F1EC4A515F99028E3B140CA28D34875E17BFA9563DD08C137E45A
5A679944E54D3D57E3B979EFC7CF2554AF326DD20D503A4D1622A50F3EC4587F
197C1A3A16DED4BB60453CB608761536F52AB3DA27613164D0585524BB6EC7CE
7A697C6B1C89CDA5AFE5F29AEFD86F8BA0AF59030780CCE2C03DC42BADD94419
5E01409C220B8A664C4FF2F9B57D691A2726C40644832623960451819FC0CCA1
E61B866072B0FC05B94A2CFF2A7349199F886E27EE9B8CF61A1FE314D99A2486
FA693D8EA3E5017C451B03920F4F327DFCB93D264DF3D42A61DA683013381CBD
B8BFCDF9657C416A2FBC84FDECDC8E6AF96D8FCB8368B3228DDD6CFCD9CF65A2
73AA9B1C2274D5C4E09D5EF58E253DC0F488325D52260FCFCC0539870281C7CD
4FB6C3D7405D11A27B7B8C4389AB4B0FD9F3E080DA2056BA20BEC7B949EF559D
32A315510222FBFE65D8E117FB75434FD3280C187EB2EAC43B4C28AE2E026604
32E97BB6887544339EDA59B171E43DB3EF7E846906ABDBB9639483AA1A8E41FF
54B5247AA85BBCED0785B87CE63A1021B0A1895306C8D08B03A7197C59E59874
497DAF3F41E352111EB85ED7E9A9FF494FE85C80808FDF8DF56A8CDDFDF6EFBD
0A20A820B9A1F603DB446FFD3ED864A2B5BA44E7333B50CFEC582370DDC2EDC4
68D67481A68829A8C530D25FB7969B18E0116C342F852AE4F0E096C8A45D7768
38704A1EAAAF6E9D46910539801393CF4F82A3E84451F583A144B980D5334A52
31ABF4C602A80BF9C4885A3EDD1B17A8E6A4629910B3CAA4AEC4B05A378904EE
EBCC2C0AF5A9451EA11D2BE04F348FB6DD459C4EF4ED2CBF3C343E4813483604
D0896F1A61F8D2E6783D348800422F754CBC581869AA35CCF5B643B78E141E23
6D265F815F8E644E3E98968032E4C9DEC8C0BED602BF78BC4727A37A173434E1
58162D2C07BC086905563F115F832D6BDAB2A74B7DB07ADDE07E6D95AF31D844
7E651DFCED5CFF852770ACDBDDFCEA7D97445C1DC9386DEBD1987274DA969446
834D001BFCAB1CFA961EE73F5F740F8E88BAF92FA8C78C6FE730D9D3D0462783
D95FB6604F9EE6E9DE30894F75F81A4F293F0C6477B0728FCC1BF0180333B6D2
93468FA4BBA47550DA22F7BA8148EA7FEA014D79EC9D3065564661C26A8152A3
1197608AC183CAC5CB5712621DF88B223896E48A065988AC44FEF4946A1C8EA4
40CD6718F75C1401BCFFF25DFD57142227A754C1EBB80F341DD85046D8C199CC
C38215CE32426CDBF483ADFB06D12CB475C422FF30204231E5BD4BA971851B15
2DC603F1534FB3773D993C5F6BEAE37CF92680AE196EB39272E404DFB4AEF240
0A7411F1D9BF7699B199C20474ABC95B7ACAB6C7E4203622C72903F1539F169E
B250BCCED39EDF754B713A6737BB14D5A231A09979BB0513AE174DEA41C0E77D
6A86D7BD053A5C813004BA89D16793936449FD5BDB057D05D16150E4A8F79FAB
2C075A9A2D5D6F7008365E52796975C7A6393BF9D3A84A8A4BA542E760F0D0CC
FC24CC67BFF9E8E106CEE6E12FF3C51F0E029418CD846B025A3282017CFE598D
2D1EBB896608C260FF67C25B50FD6D2FC22656F2C4AC347814569A857F21811B
7495C1BC9382F66F7905DB2E021A1ADD96CF2AD3F92417FF7EF97D83ED64042D
69D9077600B0355820226198EFD9989D152E9A2D96030C8D9EFA318A60EB09C5
4E5C70F81CF5256D7A4176AA553BC5694CAB36A71F730CEA3CFD99D2DAA4932A
0D76C7C99D07D16C3B6E8A9EA9552BE11DCFB672D8450F834C207BC777C0E2D9
538663E6ACE25686F4EC045CFA2199207BB438598265DFE3111E1D1826EB09F2
6CC40B0F6553A7311DEB0F561005C7B7543D13D6B410F8EE60F889B407CFA865
79AACE7BA7EBECC4E9DB22A015221EBEFC34442196278532E36D0490827DEAB8
405F852786D35B0AD499488A2A0FFB07DE6B0A28EBB4D94115A80F331A7955A7
1AF0BF03911D07F6B939DF4E71403DBEECA6CEAEA4DCF6FD0E2F2F6125859100
452AAE088442A5E9AFF1D7BE6D8D2650ACAF539AA945A179F357843F338F5469
806CE5C55FBC81D4E7C9F76AF00FD9FC75BB5851DBABCF75B0AE568A8052AF67
3A7E68055997DD487BCCCF20C9DC7FB5C19BF9571771DC8C76A8FCC265E8CC5E
E30FEF149E35637257BFB4D2964C81E8497E12D436978E30D10F40F27D34A158
8BB2761DDAD9737F5C7CB519B755FF411F959FCEBBC8A06C85EA568EC57FB501
F80B3EE28DDD9B321D244386844FA4F16633E36E139A7090FBEE0FC555A7BA87
DBDBD1B23DFCA0C17CFC605B82B2D44AC5A113346C200EE4D7C6653CC2F169B7
85AB33B237795267C696F659C7210C4157985AE8818B0BE99690C625575B7BBA
37FA44CE1FC1A1B090304751BD1862B9DE31D5DED2086AFE43EA8A069C187AE0
0E881BED0FCC03C452361CF3ABC730BDD3538214C7B4A5688183D01BCE3BDED3
357DBECB0A2AB94D011BE02C1ACA70A657F014A89131151D8B5EF9746B9FFB4C
DB641F97EF4E4637467053E9D4C981F25382108D67BDB6EB68729CA4DDA39648
0E4931CD17BCABBDB6AA8F22196F108D3107FA9D56C5C9792D81E2DBF87D5FD4
30B71B5CE909BC6CB6214813D9DF8463A91BA4DC2EA6D7200F445DD75E437D96
966A632EA5356D0ED8F56E89F50854A7A5C33469220B85E96A10ABBDB8F0DF0A
2C5FDEB3C5DAFB89B80140A02ECA65254BBD4672D80B9ACFCEF6B3034496F6AE
C72154AE7AA46E8AEA7F62CE1609B86AA4EFF8F7DD669B142CB29AC9C67152B4
D9A91D929925BD4404D7DB144A28D798C58EBADB75D435C5FD11C5F188280E40
FA9A890C0806FD6879131BE06B3FF78B0F280AD968DD6552B9BBC6FD8B9BA96C
6A613F1C168AF077B03A9F03B31FD58EB9F1635B5B1CFA9F949492D5343C736D
C3A8DBDB3D232ED6E96A968E391E8FA4E5041BFC14448AE1FAF90C2D7A251D9D
921723E2A146F6A09F0633987DF64790FC717170632CCA2D2EAC907F76A73A83
72F508EFBFAD796E3F889886E32FF44222751C9DF2CB8B952D6085FDD09A5CF1
36EDED68E1CB1FB9D7FDDBA8D6E67495743A7898D6DA6CF130C2422293F8FFD2
A578476EF99D6014FD3A80E7FB055CAB33A4F5D9D1FA7849E8F2AE8181269DF7
5AD4571D845229C7C6F370C970D567248285CE2BDC81FE4E6D36A3264887972B
5330DB1F150647EBE43E9B4662AD0236545E412CF53A5BC1FE08D7CB8AE32A2D
3287D4EDB12BEBCD0F11416B39F91C441FECE694091E385CB191FB774B478DD0
AA3680F0D617D62D32525FA34AE6738A500B04ED113A7B008FAFCF7397F4270B
54751F7CA37E326E3A4BA32A0844CFF53EDA96E72FDD61A5660B98E8E04A0C8B
842759482425442B9F6817CB8A60D578C1DFE221A630429F09D5DD43B0AF3DF3
3C5383EFA44EB93688A84C1C0F21C96669943F78B168A50AE4AD2D02A038D39A
75E00DC755FA1F63DE0E803D040D66AD15EF29F531004D6CA54D46FC35624433
8DFC82421803CA67170A3AB9E3579975BA38BC35B2FC652FDD8636A1A731CC68
F1E1E8D140B64FCE404691A58AF31DD216BB80F1F1C7497C3213C3600AB995D8
FBBB0677B3C066EF5428474882389FF3BF85079932EB57D8F657220217656BA7
33869446BB8030AB1B27C17ABC97B728B487897DAB554BBFA650AD987A7350AE
DE772CA2DA3245C7A4AC265B72F2AAA1F247A3B240DCE1FD161BB0BD8B22F5BE
21B37F1CFD087AFCE3E05CF06B3E65D2D7A91F8B17BD73C58369F239B608C7ED
E1E3F404715D500D254199FC81FBD909BED42B65C3505FC2417FDEFD9CAD7AE5
B8FFBA187C8CCF8EA768696D4DA76D12D7EC904F00DF54EF6AAB764574A77366
21AB3386E2301F9446E0ABBDAF680A9EC014CCD4355697F677ED829FF5DCDDC3
BEAEE202C81C78D46F45AEACE3AEB913D4A1E68F6C573F2F66EF80F0DBDB9062
40353A235A8DB01CB04BC72CF3B26EEF4B5109FA909EF1110C8941905C1854F5
74616FD74943778B92855E80F8616C00EB5DAA6CB2684DF8AEF64B09C1D6926B
662AD921A23EC3CF7E4673E24BBF63FB055261C39DEF6D5BD4C2F10E22746DDE
5D8442C381061F0349121C7FDB09B6A14589E61D6E782CEEEFC647CFCCB193B4
ABE370C03570107BE560E0C63B6A99663F964E5EE6BFAB1B118E67A9C2B6C751
D5C87211CDC265CEC819EF779971BBB02637A7B04DB91FD3A2D464CC492597AC
D867FD691A3CA4E9D33658DBC5BA9A4F33669BBD2A240FDADE9DA45A6958DB28
43A396A30BEB09B061F0C4039EB462618986106E76439326C832431EBCD21CF0
03D413CB1A0D98754BDCD6A7F52845FC89DFB9612E6771730EC852A3FFBA94EB
B41F96C4A6104B936E7DA0667AA1DBCCDC9816FAEB54D16D5213102731977D9F
EFC41D448BD12E477F0F4100C6DF1FDF65A024954D5E887A8B771ECCD81DE43A
9AA66AF2B44BDE506C6352ABA07B3E31A4CFDB9510CF83931587A295245A9F6E
464D309DC07E3B248D0241962778D46416840E240D0CE78B36712E3B2C2F5674
5A3AA7BCB3017419F8DE6353FF439D7731D88BEB53E7AB47EA499FBAEFF77970
872F05D9F9F7756A341E0A4BCB515FAA5A5478F730D6787E725E5CD3F13EC8F3
E7CCDDBC066161427DB84738022F590F9B95E46D579F64D3B8E6C53013BF4B94
C41E340F333ABE38800C59D1FFB5D240A0E5B16525F6432C7CF32BC4E4B397E9
910CD57B92257DC545709D2E1F7043AEBCC3BED570F3016043E318E666916029
391D0709B998D4BD9FF754D978C8EC35A9F4494250ED77E8F663FD7608F2FB85
9B29214D4462315880C70977189030DE9C7AA3C074486B86400701C81E95C9FB
0F00B8E88B70D89545FB96BF4F4C66C5000FD6F2E4F4CCE093C0EF93792630C8
B691102E0573FF3B57D145DE7598FBDFF7DDE516038485B0EC6553A2057A71CA
2DB2095D8F1BC8B8D47500EB753030BEC63A1F8AB0FEC7B862A3D03EF217A951
BB1E75D1DF176848CBA5804231EC5E300EDCA5060A68CE58306D6E5B3029F7F9
01A1C2421E3AC74D9BBCB4EB3F39A1CFCF418BC3F0CE81AE32FFA78601724E5D
B60C34696EF2B49AF6FF5E5BC81D6980C0A50D9E07C907CE5FB3F79A28F7A380
B8739F4EA869A09B0EB63F83133CDD71C0529B95380477B7688CDBD23EA2C330
E79EE096A83D1976ECB447936E5596055C1564B5EBB51181E44EA5316957AD8B
382DCDB0EE1BDF781D5BF710C1DEF855DD1E56759789223A005B0BE0A32158CE
9AA6BC13F9D7EE1E98E68D61D38C1B480CA5B000093AD58DF4E559CC9731F430
E1719EC50E158058C0632553A96A2B74E09D59378864E288A0C7F7FBB3D24981
BDF2CCA96AC127B9451E8D80260DA482020F46327BB6BE8991209B221B4526A7
47FA56B072D737E5A99924EA51FFE684DE1EB1CBF9E26223A56D15AE6E8EEBB5
5EFFB1ACFA59015A126B2554E1C26C3BA059619BC417E8BF5234301F0EDFFAD4
F20153CE5C1204E03651311D6EA847CF2305D89D356A8FC66C431D00F3D9E273
0C5B63489714D0508A3FB8B5230D0AE8DE23D28C61CB6DD0C362E6AA5645A141
4ABC251D9E5061F649AA0726548F021E3C1B83D13EA044D86668342C9A2269DF
76D2A4DA5F0891DE6464C65FB3F637C76A2668C6FE05BA30DD13FD6629170283
E20BA8BCE60DF533E3239C06C813B20ACD45EE144538C7322E12C624598DA4A7
ED084848FA3410627B567011C635E56F44B7B635E9AB03AF564B8DD3D3FAA6DC
758C9931B3699E103683D0C8E1E1A5290B744E326DBA0B451477B3DF6A4E7FCF
BB15380F9D27CB846E7D5A36F8F950EBBDB7F7B5873018C859504EAFDB49A0BB
749818BBFDFD9C7B2D2FA15AF52EE81A83BFB5477EF64C9E57CFBFF1FFCA000B
98430005157E228946C07F9C3B5B96625B91F157018B77451A71B42B65F0E1C6
5C5C897AAF63329C2ED81C7939B34A4A17084AF7A4EF2B6FB42CF31CC82D78C8
11B5EA5B227DD3009C8A30CB2FF6DCBF21F4EA50CB934C9C844D5FC81C69201E
58ABB88C174CC390605EF1C69FCE62651F5532F1BC5ABF4E70FC8925BEFD18A7
F9B480A8587A0DE3DABAC6D0CB915918C91E4915EE7A2D02B3445725C415AF7F
133F40FC0BE98E007C1D12BD528ABD8AF1C9A74B8C197003475572862DB573B1
849EFCB64F6E02C1F869F85B30FC2D739B54C163A377483373009EB73F70411C
E5735C68D2B809468B9B4EEB3BB9A80F83D81D5C4D46AE79E60CCEE71C2717A5
5B6255FF9997B4F4B5036C63158F777AF5C39C5F7E19D364AC013AB0566B4EA7
AC6F9EB20CCC558AAFFED0DF5DE325788D6F5A3BF194DE99135FDA49229C3F11
E8D48A34C71937C338A267B32FBA168CF181819E5CA1BBF78212E207938B44CB
24D8A253D241B967945908CF2AE8128D869FB3DD72A1D1C7BF1A4EC4471CA67B
BFE65DFA325A0F6CB1C2606D9DA9FD16E3E85F6DD42D7BB58A6EAFC58C2B51D8
3638E577B9D6972F3F7AD181FD458CDCA40FA41FCE6FDB5037392CAC5FB61EDF
A09054F8282658BE3DD2A3CC9B746BEA27CBF510B3B9FAA8BAB08A101CB54868
8C2E550318A9ADE050A4882C085FB10149CEA3E949108DE62486945A0F75419E
1B975EC252C17A0C86EDF11A3C0AD201EE29DC66B3B61073F86CE49A9A75225E
E572640A57582A6218E15542DB84000A19C6CEA124B98047B76413AC96A9D381
EDAED94B49CCEFFAC87C1FA20FF820A54E4434320C2A2657760E50E79667AF85
6AF4BC38DE949E140797E2A4AD24B95C9987F6529450E2EBFB3C63CEE2B00A3C
B920AFF50989D2645F79C99EA49568302A50243FB5186144A0DA68A7D35F1476
E45BF1800845B2B19819C57E4F82B17052A9D9816C2618EB90EA0F1F6A586C74
FCB5868B8E4C7DDBA002D55D80DD7C691B8D6038422F37018168CBFBF97E2A36
56BC12A04DB1C28F96012FB166AB9E0F925676B489E91A068DF943ABFE5CC875
25F7AFB9C8D591C98B161A0640382C73FCDF6505AF414B89C141C29316B0FE44
A5CAE26915C1334EBF9986B92E7DB1F65A3FC3517EC3AA298A0070F2C1741276
510524CA297B218EFA20FD3F4D4F09280E1448D8F8CCED1FD8F5227E2F3B2EDC
2FB02BF34E36AA8A99FDE2FCF6332EA3066EF2A3D2B2B237D221B82CC0497592
4548EE9C2327E8DDB6F9BB678EE80EE4FDC0DF7EEE43CF4A452F0CA3BEC4331B
11FD120DF1EA8DD41333504DE45CD9BCCBC5F7D5D54DD78E5C794319E30EA84D
6EE8D9FD9360568A3BD57B498A6327021C1725F536FBE92329B248316C20CFFD
19D590D432240C31A740932EB2A7810B223E397481127AC3E563245B3AC7FBDC
E5BB8A75E0E784A69562C5817E6D856EC4A2F183F803BFFC75B38795C45B449F
75AABA5D56D8016C89254331292D6B55977F99EE16AF06A60844D14CCAE790A7
EE66D6BDF4E0471FA5720AFA2316E48F3934213A81D13FA4595F8A1E5D3970AB
D1F162DB7B863FF3121AAE62AD64D4F9F3FA2B793A2E37EF47BB0F6F01FEC30B
FD717D0BA1075E9A781E56A52975E1EFA5B0EC3041D48BB2902E84E5C8987F3E
1A95EA9124D3DCDCB3AC3F1757AB8A5CEB7567DB19DCD61025D0953B5FF6273B
C87EE4911A6C77CD1EE50ADFE4EB969ED90BFCB6DFE25EA07D31C9553E6C065D
56E0A682B06816523E9BF46441A1DCB5BF1E9581B8C68A5FAB87E6D4348FBC7B
4F4100164011D42B0487A600FDF47B0D3D2CD01510D04279DB1F98C29BE5ECB8
821DF3779DF1573A3118F7268FE728F141896BA734324C7ADD47EF23AA835780
37BA2AEB472939A88BAF77989779F1FEFDF1163421550166113DB3BFD3A6B0D0
0833156B77DEEEDF0E68A9413A40884914027EE5F7F80DD1C7D4A611972E038B
B92928E7231B17301CC05C10B85100D7ACFB10B677C2338CCEDD8782C2604326
755DC3DA84440BA2D07068B0AB87563168EDFEB52DFD81C35ED39E7FEBB3CE93
1AA65513768A52E399A3277ABF2E478959E20D8D8B88786FE16786EAB72F5E2D
7644853ABBECF297514706AD7EDF5E1E9B238BB797834E7E503E6089D08B0009
771AC7EE464C8E29C8C6F6A9A29D5EC032D178ABC6EB3EEED402B7A876C34F17
D90C72D76A81C157C5F28C8EEA403AC76DB8C39BC5A493AC108585F203187FF2
B556F0D8E1F89B52FED6575C9E01E8FE646BEC8181C7AAA45B5603498CDFB758
EBAE488580F7299981ACA302EA9C2590E8E62FF6466364FF4BB527F94FA37962
56F00E2C6FEB122C2728DAE0CE42D8AE873A74D736CD6763FF0058A79B48693F
9641459C319D32068A7D2044177588199AC1551957427594E124F384EFE3C346
EC01135EFBE1B47BE213A9DEB5D7DBAF3A7B48C8EC4A762188D3B4D3AC06BAC9
B5CA234090243FE119FD9BFCFC455B11F7AF2D0DE04E40F703224A3EC19E56CC
E761EFC602D56D69AFBB17906BF8CD27D8E125C749519093CF1A19B5964223AB
F44E3B975C5393274899B75BF0FA4B1613335E4397837A89AFA18287C40A3484
258ACF6F91277ED452D36A37388E7A6E20DFD273866207CFD289C1E1684F74B3
AE7F08044D300440D049FBA1E1C355FF157DB22DD7696680E3023BB15CD088A5
6368102A9DD5AA06CEAB53C834210F02EAA22C42D74AF2CC26348645FB20C21F
818E79EE5E8A83535A8A172C0351DF7F368C70F8FA7D524B2D262C79737ED369
0CF7D71FD0238A557C699B8421B6293512A1679E3514C167E2284FB44370D30F
8E2F91CB638A22DDC9F30F7F4998BCBBC4246A1712060E78BD56EB344E66B05A
C6E7C218F0B9F87354E4D19EC8A5EC15B1CC4ACC894B0EE2C2573B1D46316D2B
6FE3B90DC23C37CDCDC3733410A9AF25BD6B9D6E3F13147F462E2A8075CA60CF
DF6F31F6DF430B738C7ACA6F7BFB4C990685A77CFC47F0E5DED36DADF7E53B8F
470F26C65908B80A461199A622827C24DB56A18C49F68E1C88333056750F8838
2635FB4260EEDCE5069062348018E68E951F72F23D79B363C0F7C7A36E9E5D52
CFA45F8F83AD664432BF7B66D01752A6E8DB450A10EA29F6EDAE1808BB062693
060B8B84696FDD3F3FC73DD0FC1EBF4E7B79E7B97BC3BF367FB9C75B35430CB7
B06299652278A17A2E4B585F591B842666CDFBCD1F15345D327679B7A51A5537
9125097781F832DC2917CF01F7D3C1D6AE59968CB9DEF46A0AD596B7E50C25AF
F90856649C741D19DF609B448C320F78F9D540F5FD6D781D1ABF90BDAC725213
8E99661C9AB081557C5505F36E8B3413EE924034B09A540FE0F4435919D09108
A3BB15C9B5E528C5B5F0AF7E1E4A46A461299CB27E2AC46D2A60590827E88711
CA9DB306FAFE6EA26F1BCA5289C1DBAA72CC47F3AF84FC63EE1F2297DE8A5240
67D5F74824CA7492544FC987EEC8217C122BA4DECE33631354519AC7E743BF88
4FBC334BB13E34087A2696FCCA015B40F3998687B117BB453DD287374BEA5084
8D7F88C8E58ECCB5BAEF22D4D65DAB48A645FCD8DD9EAD388B903EB48EBAC171
A9955816EE8DC92DE0E87CF01CF325EE9E96677C00154B5B1A5D8A2D04C8D93A
6C705A555D35B2120017665AC70A439C53AC9897B3787EAB18FBAD71F6390F65
4D9D7F89C368DF7B51915993D758FBE2A5D73A2355107A875DC4A5809DC7A944
5495253C477C8E445624705260BACE63E20C7B674E94C594EA0D0A35D57D6409
75106CC53EE44D3D7C10066A04C9A9FDAED9CCA226021BC7653DE775802811C6
ABCE64F1E445261BA385C54217E562E618A75A449186091C396B9E889827F39D
080A436F5F547D4A85E42FBB9EFCC1B903EC8DE9AF891E1A40F5549DE694142E
E3D8A8B84EA0FA353266829448AEFD33942C373220FDA2AE6C639F22030D95E0
5BE4C2659E4B7CEAF4FF7A7B873CDBF11F948D168BB02AF13B53F2AFF4C399D8
D70D347F566B49AF29C794B31CD1991686D9D987D8F4395F66991EA4A1AE9A5B
5759F2419AADC33BC0336303A9DA1F976537F471CFA0EB68E5B3BD1186E71BC7
554909D04A5B8AF40660BE2A532D197245398A245A6031F76579E3EA501A2391
15E0195377E99754C63FFCF2B00C620CFC295597865BF589892D1856BA41A5EE
C65ADBC4F9C91CDA2F08EE5863F6C294F963F9B0A767E8951A0A482E278C5D35
CF0FDC136AAFB9920BAB8D001CA8A8189ED86B200F7F0248C4ABA0B2FCD34A76
2E7EB87C424DB7A737B25DF61791E77DD64850D81C3B83CD75C548A37D977E31
9587CFEFB810F2D29842DC2F7F92F5EF4E82DEDEB5917512932ABAE778DEDB18
084732E47E1BC1736F1D6C0858735C3D2BBDE663CC30443359B6CA5A0464AC1C
97F76BCFC3F9F031C4D2D29939191125DB222BF0BFA03249EA0723E10A46DBAC
3790E581C16731F3270DE80E829438E4FD61751A82DCEEBC9399D608A7ACFA5A
CA774FF1B01C78A3754CC8BE8FDDA62461742F1808403F192F3908361844E5A1
F0DF272087D643A31329D26523DDB937BF1ADEB0C8393EF7AF509E8033887567
2B811A2848E34F595CD075CB4D111D68905ED81AE1C0B91D61518C807CF1A788
9E2B841634134A2521FEAC9ECF0E55186ECA0F44CFDD54193D2A1F998AAEEAE8
D3CB878A294F225FF7CDEEEEE24BCFFD93C2BEC0A173CDF927ED7919EB493034
38425DC951021155C11DB3FF4146D3641907615F2959C3AAF66AAA97CA8A17F5
5FA4AE50E8769A2A7AAB8EA9164D7C0F50EB76F2C08AEEBA306D689DF85C666D
BB2EC4F2361E63114F45AF6E3901F2CA2D11A03CD0EDF6638F6254D398C9984A
5B97B6F630A9A1D19E717A74837365ABA49E56BE333EEFCBE2064C6BEE6D3D2D
417242EA6ED9AD0C4098D56F046B87E3E353C31175D4962061F80D8E977BD450
06D8E3F5AB95318624EE63BDF1BF155CEC6AC1AA3968BE41E431F69A643FDA7F
AB105D0C9BCC634DF48E37D93201F64D6D7DF2C1BAE0EB6BB66CAB8A52F8F726
4077323050D7F3AFFA62CA61D83DC12E281DB96246E6CC75E3D83DF0F1ADA97D
72EEA1BC58CDFB5C0B1106BD28412805A2A72CFFE098D74447D843075B7C0B40
22AC73A284CE5411D19576C5B4602A1EA6FB35B4567AC213C7FD9E203E716ED0
00D7DB37E41850261C24BF8CB76BC3785488E4C30C9FF82E179FC92705022613
8B6E7B325AB3B7E21087D0CA312E993AF9C681A0478E8F458EF91C6540F8B7D7
CD81D370EAC07A2841BBD07ED18285D67E4E0B590DDB7E2AA73F4B92E694B393
F2B8F38C281F8DB14DEC35EEB4B922E696B22D778CBEBCC452CF574E5495EE5C
90D72A0BFFA34AFA0DD5534A419C15F203EB301E54C2E14BAFDA8997AB0F92F8
ABE4D87D24BD3085FC15F10E676F2630FDE51B6DCF4CE9F063DEFAAA064A2E93
EC27E5211C85E4B93194C43F2D80CEFD63E8F699EE689638F14054C86DB6672B
C94AFA086E6199285E3DE0C2B8D93FBAFD43E646BF0FB72B0D787E9969B8E876
E601BBD12DD8F7994DC10507088CE3B703FDF25886858024D747650DDF4E3041
7F866A3C9DEC8F6C8EF5DEFB99DDBCC8360BDBB08F73E1D343BD10136D9D3269
63323B4E06A1675E2B6D75EB2940C492A1DD7980AA129F094669363C2F723E50
D39B3A3082E39098CB27FD303C54E539BB841A67737F8FE8A0EBF2E81A7E86D1
1BE31ECA271F5268D95B64BCFDB1C316C4320F1F98CFD6FE3953F7243A28C0C8
90544FC0FAB3D142FACA7C834DBD8DCE1F17CC400FCDF693EDFAE08CCC00386D
2BB96314B1EFB457073C83357E2DF62F2F6A32AA21A17CA8E91B550676662FC6
1B55F6AAC43144FFC2B15C3E6FCA0CF1E51C7C602AFC2EB7117B5466BB8DA9C3
0A6CA6D590154EE5F4F7DC1DC91822402A5A2F4F28FEEEBB1139FBA00EDC9639
65D8A6C06B3FBCCE1ED29D725584FD0F543AAC3B4775DA68B032ED44D97E6016
182FD1FDAD09822038DC431180D4703BC254F93BA15BB1FAD01A7B16E79CD30F
E2B593AFA644161ECD230CE4B72FD657731D54C50CCFAE6C1E817A1D943F7ADE
664A14E48003C4FBDCBC0FF1ABCDE68A30040C8C4A832C5C9F46C339283B38FD
0A4C68CFDB7EE56DE1EEC7380A1BF7A6BA4FE80CECED0FF5CF76FD2635E16E0C
5D8C1A1137EB2A0CECBD86719FB507B92AA39AFFF6DF92802CA4F830B056BCA8
49202A0E4F3E339C16D67A88EAD6695DA0C81EA1D2CCBF3765F93DB567195AC4
E052B5288E942BCBC7122AB3DA7327D5633AE8EAA1798C7E42BF839C4D5B2249
4E8E176F89A7E67FBA390C6332D38EE4629A95E6D74A6D8179A4B07D2198462E
6E0F7EAC5FCA2BDD9E5FBE10598781DD3FE096C48C7E12E17CB81B5EC6DEDF92
7A8737B58DE9C802D81D31AF709B0243E0550B01D9D446ECFB0251F89F27FA24
8F7093103C103FD549A74FBD719B50B3E7C307049E504BE8413F0048FEC052B3
637DD5CCE2DADF81F93EC93C7E78140DBF2C8662D13BE54B97144D0E83FF6E23
6144EAED7E2CE7BC4EF6201051BF933E7115D297B290FCD593838853C031BA67
B855B0FD88433565FD41C278C49561F8F91299BC1416EDAE5BAD708AA952A275
608066F165BA123AA116329A1215846C58C2B1BD7997AF49A4EEDDE84069F07E
808856D99A9DA256C2E5BD57A6178CF89DEC7F2B9CCEC127BA466BD15FCAB38D
C6F2A071398A98CD4A0D9E3C1B039D2FDE9C9FCD60106BD0F3689647A149D7CE
0542B39145A921C1EC923ECCC05BE32E2BCD2EE4DF8FB15E8FB5F74F47E741AE
4B76F00B376D5451A8742106C666225A9B3F4361BEFC943E47AAAB4B69A100C8
091C54E6E8DABE20C0F1CBD4436D56FF84D9FC7FA09D15CB9A7100B58D686C6B
E9A8CF4D6815B70C369EC5FBE9064D5B624EFCC4C91714D4BD65C70CEBCE94C8
E4108971DF07337002E01E71A206B18568FA9CB8B395FE64750E1F04D9342CC8
FBC0B1DFB8450F494CFC21E73C5FCACD4D0C563168481A5D6202F4687E24205B
D43E4928DAE9BFB6E9D221062B1C19DB8C78758FB15CB446B27B834D402D08DC
2D4CFEFD7094CAE35373FCB3028F0977416BEFDE115A8720B9A49895E88F35BA
09AA65A545E3F9473434BFF27B8EA4547B52CBC56B88326E0C4808BC7AD58C2E
23458EE787EDAB2861369939F6194AB59724F272570E3E5031D36F55D0BBF067
2144CF82498469CDDCDBD14D97BEA1A1CB511A77A21059AFA8961C9DB6B89742
7A8825BDDD7FA06D7FA886D81ABB7767B0B7B19359E594DE583F76118F972BB5
86B5E1AFC54B8E5D60437E719098CB24E537BA9D82ED8073931E52EA8CA5A008
77ABD45C06EAA9E9AEA54C89FA2C9FD44833002F1282B05D5207189E4E17751A
44FB5995B04C6F717537471D35DF28BDBEE13631FEA06B33283373150D046127
30BCAF6F2991B1F9A8656D075514F0B24882B2737FA79FF4D7224EBBA7333E91
D544B055FBFDC0BAF50A366DEC8876DB82AA4FFF73DC33C593C118A79B6E9D26
16B54DFE902D925C38BE5E5D80D23E9F3E5A2A2F090970F991AFFFAE5CD9D4B9
C5DD2BCA02744A4FCA8F27F7CD720AFC49EC374D5726C637B66B7E2C8BBF36F6
E7251F525F53F553CEF4DDE22662B21F74662E12723A78515283E0055051423F
2F7E13383B110C1903226E33F7BD2098074CBD8F2C685543CCB03C2AADFFF553
79FC2DB1C81D3844BE05B3686A733A69E4F0AEE09DA73377E74D6251520405EE
63E7CABA4AD606E2AA9862A7357CFD1431AD63722034575D46F6611A0FB18864
F4F352BBBD3041BAF5DB9B2CEF798D5490DE83BA05B544E0D9703FF1D5BEAE93
1F2447AC11035270D86D6ECDEB5F7FA7B1FAF788A1EFF4963188456DD5BFC4C4
7C43D0B6A6CBAE999CD901589916092D06B5F05BA5305C28E07C3DE60FED7426
247FBC37EC216C48824F4391ED865C6DDC14B6CB8694239D0112B5A1BED2EACA
6CD2CCF0051C7DFFAF47938FF3585459D978C7308416227816731C0A45450540
215FAA5EE3F2C814068E087AE76EBCD0908A46DC28F0AD8952E842ECA8922D6C
1C0C829E87C0C8E1738796143CADFB704777C6AC95A8D7A90AC40C5E0AEC8629
FA18CB206079E16A90ED65B22181AF325C8119343797E7A3CC3BFBFDE4FACE87
7B82E0B5AFCC6DC37F6FA2C9DE42ACB990DC1D357FCE1DC20A52AE1CD98A8600
377969DFDDE69692D95A34145CEBD0938EC4B0436C3EF9092FBF7BFC94B94625
AF383D5E474B4BA4A9FA6BB93555B4A6A0A83E8E8043D84E3ADD602CCCDEB0B8
A028E997DA58080CB8A7FB0DB650B07C8A7930B1FD0958D09E12270362FDFFF4
5007600AC8282B64EEFCB95D50BBE98CEB22165009571075B326904AAD42EEE4
97B7C61A78833AAE634413D147589D6DFBE39C8B912D54C0930B2A27AE4052C6
C93DE9CCB84F4D2C57321AED3F1339B83549B21A259F4D95A461AAA5192C88C7
AF7E8FB60F25DE35FC277BE524FB269CF106E621D35187029AB8C74EBE8FB16F
B7E353C6589F73B5552C81E633D676B5076CE447C5C66A34D115F3CFA2FBB3EE
D72E003849B2EA2B44D11C958E142BE2A663EAB527347A96A47C42D7C99A4182
40F0C4F075BCB3953A97D2A742A1CA92F769A6EFE4002652CAC06DFD37D06A13
1C4A9C954B47DE815E1659DD0D7E51F50B8319982011BEE342E78D2EF7386BFE
6A91E0BA476A2216DCCD55D19523CC1171D252A2D0F076F5E4F877958643B804
1F5F20D57DFEA94FB1C974162ED2FBE21C3E5037CBD55F93A165C0E0014BB538
4FDFD214A2EBCB25C0E5BD4C853605EB02A6B87DD1502B09624B77956717EBB4
AB13FF0B3DDD96718B18F2EF89A8CF86B99F948BCC2780D2FEA0A2059A923A2E
12F0331E76F2F2A2E75BF1B166B74FB40B75C5911C74FBF0F26F7DD58BA147B3
931F3DF63264BE1A079066AAF22EF7F10D4F20FB076677F923DFFDCFE5FE21F0
33D80785D8038760FC196038B2AA8D56C37A7E395C1553A53EA53AAA8DA6FEF6
87284235B88B3BE1C5F4CDA9C737E91931E852A17E12297E9DA5D4F346C074F8
1AC481D4C05FA40404BDA5B155E3EC6BFDED7EC31F73222E80A3CA2E59D90146
E670B7831E806A41933B3D763E173BFA0D3A4C67BEC4A9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1095
%!FontType1-1.0: SFRM1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1095, tcrm1095, larm1095, lbrm1095, lcrm1095, rxrm1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-188 -320 1445 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF0482493852D12053A7904
BF6E144B9488970F220C299E80886366662C1276120E72472BF84082B9EEC729
F7007ECDC5A850C88810EA679DABE81714004E65D938DA9ABDF29C949A52EF02
EDA8451563235D51286E9133FFC7A27067DF0332ED614AC2D4FAB88EC84E6CB9
FAB41C933E84B88097BA8742BC30A81416D1CAA3545F08E2554B28362B99B79E
FC42281922B94604AABAF5F7A9B8E2D9A4358F38F2382EF9544B859D098DF243
034CC475CEDEBF0EDD0A60C907127BB32F7D85A62A44E90B4056D9B4B2FF3A49
786032C6B25794E2C0003C7852C6B0688351FBFC43300FB0B72880BB7B58BB61
3D1064E7D4DDB128A9B38EF7510B7E5F82BDE39489E2D1DF08816781B13836E4
89390F84577F31776FE43A5F94F817A4AA4A698AA4AE84B178FCB65F1B5A5CE1
334417595F6E40849041565BAA497F6E4B8F4305D849128C9A26A98B909EABE9
8F2659189ED27C588ADC7C744712B4D9AD0C5DD25D1233E979DE7F53C5F1C47C
E9DF254086E5EC70EBC6B7E080060BA72F15E6BB75C75011B15B7ABB6BF761DD
428FF1BD688938C75BEABA7DEE2AF49364D2E198FDC7F8FA2313BBE598ED3703
7ECAAA4670BE3A85C693ACA829A5936778BCDCDB38A5981D4CAC8994E2B2F086
26D8793AC1393D49A8F2FE391F0EF8899A7720697B908266F619EAB1AE084905
36AD29AC3992BD3D77682CA8EEC0A297C9D4F167F3D6FE94EE31C80742E74DB2
0331C9E1C649D036DA3B081DEEF6D171EFCA22A3A0D668EE3121032D3A55BDD0
2AEB87D439107FB3778AB0EC59689768D3EC943D49A8EADC779F610C3087689C
19E649571778AF3905B73C16EAED4E185C873186862E2B848A6F7FF06FD50FB9
A3250B8A6B0782FF750829F55C0655D4D6FC707E24F5CE10B99E14ACD4566001
6B380CE26B9807513FDD928653CBC3FF333C089C557483220716BECF3B38AA5D
0433AFF5A5CF19043C6EC4A49FAAAB10ECDA541E143ACCD729EE49779466D11D
A94FAB52C297569731F5BF3AD2FB94AFFB60B4E1CCB4595B2318D48BCFA55780
E205ED971C0B1BEC306E18139ADBC5AEDC2AF74042342682277EB1B742E28AD9
B0FB51CD6B4FE3335061CE19C71F2DB1522B4416AA366749D499C12682855A9F
9578800DACC9F47162A8E34FEF7DE05B2BDE24EA45C5521A5C45F278AAF56607
E60872B457F2CEDFD642D6219188350856B1F6E45AB8FE20E1807771A2C8C78E
E350D342AEA003CAE47966EE4B6A33DC92C67D9A78529F835ED70B702152DC52
D908138FFEC4801C85C09FDED112B93EF7E68F06BDCC9711D7D6033B728F9136
95F1A2F4DAF08E7CEBCC6FDC810CB54204E22C49F0317379E6B45FAF5ED8A878
735E97A895F9E3481F20137FAA0B7567E02484E7635EBF14C12720025A582564
C9931DB46E01BDC256801F25694819EA9FDB956CACD1C1D18C1B6137CF5B6869
90B9D2D6E80D8D0C3C799CA40AC41C3C5F811C274F42A9F8CC178C0EF4F2964C
F5715B61599E93DFD7C12716E8C9F9526133FFB284ED0F0B6DC0ED0C743C70EA
2AE33E791BFB54C61ACC54F273399DD819E013A3D943F55A6424FD038BFD50A4
21B796CB75AFCF6E99EDA8946B78E05E891195361D05DD7726AC8204E2C98C9F
658F1C765E754609D7266EE4E6568B22D805B0186E12B9BB75AFFBEEB315F719
5F1E1FFFB8B1FE4CEBE7C9F250F58B07189B323083B4A20D995CC1D43CC2A8CB
1B958DA526DB2AE050183B69F77A375F56488A9621814FE131604F34AC303669
653C6823FBD4D1517A9A36ACE7B2E2E2213C0C65EED4B73DA07FBD5774AAFB20
AC43C596E74B0F52B7C9720E9ED02B5C5C087AE4BE33F428F3231E4491254E60
B1A29B3D1612CCAE572B540B3D0A89652067A4EAC0BBB5432B32EED6A0425C6C
FD94B09A7A018A70BC3E35C62F5FA085F3158D7F16A563705D4D9324C5DCA1C1
0321DDCA88B03E179D01C3B303C6856735D904397FA5BA912510AC23802A803D
37EA5AB43AD5580EAE6F3FD0145DD75587C6ECAE796448BE5F0F0CE29AD1F7AC
75BA998117B9086A9D333D0ABD28289B40162534E82750938543066F7E02555C
B05210953D6F2D725214730B3AB6349BE5D19D19471AF79EC319718D7CF681E4
0CD1DB3082EF431ED9C5F63ADF55F4C8A7A7827720E30CA9B8F7D1A0A924060A
0D47AED3DEC92D0BB80AE4457D52E3FB1EA13798F2968534BD1420C1205E39E0
BDC5A72B77FC1B21223919B8F9CC6DA169D1A82B924DFBC85A7553E1ECC0A913
28AA9983695545D9056D98F884C5701EB670B46CD7200BA014041491934DABC5
C78CAE6B73476F123B3201C887915CC5EB99AC223ED5F7E7086802ED5CF0320A
A4EFB0E0E24C73234D17EB238BDB291EE126BE1B3B3DDF50DB540EE350FEB664
EC48DA42DC9A03102BB867AEA67F08288DEC08D1E49D2DF3AA901217BEFF0F70
BFEAAF3DD20E4145DC751788DFB9EE0411D25018A13A0EDEBD4C62C19E602D5D
5E7D0D0B625A3B1DB4CF994FFA731579E62A8BC5C213F2FC4146521EDF5CFADB
42D373B734D879D654E796192F554EF484F9359079EA871C7348B10C568A9614
E7705663A86C71CD5984EB34FF385AC2B99EC0A0649025A5A1D2152FB367649F
4A3BBC329BBAABAFF288240D55D109ADB818FB6F24BF8640EF573C930B71AAEC
79DCC3E0768D2DEA2F88EB40D5771AE5B8DE566393DAE1FDC15AB12D40A8EE78
384AEA69D88372E74A8C3085D6402C4D5759E2B167BB03952C823C0DED9C312C
D8EE5A583B4E98B9DC2F8C0F265C634765716DC06A04E3DCB3086CB84AC01B91
2C8F4F551E5A649B1A4C795905B30ED67F597EF4F02839CBAD948585FD65C8CC
17A2884DAD18E0EB09FFF006E7EBF4CE82ED6318CD3342AFA8C2997AA96D8399
D29D37137311D23479A3581D47752FE7FE13167E2181C9DC6678342172764C52
592909478B62A06012B241EBCFC2B9E6AA26C6AC580EE5745FE8EF4D556670EC
81A5E16C84B5354DAF3705CE174581AAA81AE1E1F727C30B163834BE704EC8BC
E9CC075148C96C95080D2AA11374718AD1FD1859110612CAC388A0C945E19436
021ADD090710A388E84018449B29BECA1E66C9860CB5CC2DD64BDF0D32D2E454
40BDCEE405A0138FB4F7E2F3E4E67A82CE6C2C4B87C4B93B734C1CACEFEC0DDE
35C1C2D5B7F7EBE4C9A81AC93B375A7F598004D9967BB5A52F96956A256EC000
852A744AADC8BA2C0BDB76755AA577985784E49CFF9FC281422BD2BCB5EA01A5
94702C88D1CC26E18DCFEE5AF93EDB35C346E2B875C69FEDB4D61E0ACE19A9BB
736DC0DDF1CE250F72D21E779B88D7C8E40BE6C4C35DAEA5041C6DC552DE3EED
3C9B1CF54831588D2E791A9C7E27CD36DF8783DEFF1591B5AFBF1ED50824B1AB
191FED403A678E4104B3C243068DEA04409727F10F770AC2A5A668E456DA3432
ECDADDCE4C6E984FBD287BB71EE344228CEA870D6CFFBA5296FFC4B5CF61805B
B2B14A3AE9350EF157BD7A2560375835946A2C43BFA0F166A34B9CBD184F0E5C
238068E9290CC1CDDBEFB58C017E21EEF186188FA49F437ECFB3C2F2DC09A4C4
8C7DCAB3F580E98F80017A32DCF5C29CFCB650858D06B6B2E6E7EB596B089E15
2FA14B531D52283BF076633463AFC0B513DEE4A480541D5F23ACBD0178F3BAD4
06BFB74203567EA6218B2C7F80A484027FCEA20C7C0D49C2C9CDD947E4B627BC
E943157603B9ECA213FC7A23BD5EF8EE9CF32D7B01270C09C6E587BE0410174D
514A9C457C224567392AECBD0B990D4A94887DC1F9043AEBB45F9001E9673911
110EB25E120C6146C8C49D0BE8BDDBC47FDD75488BD6D6FB5CDCC43504E5DF43
FA5C8AF351C91197AB9A061E7525EEF4860182E848E6112C2684986338F795A2
F0E294F324C9D1D083F2627AE0E6BBD9E9873B028DE788724EE04A8DF06040C7
F1876C7DF7A04515916CB24C1F7598F4B58AF0C4594CB8C59DB05CDC09666090
7A6B3FB59E36D639D56AA2AD38423A0811FCBCD1CEA44528E0F7F708CFB613B6
AAAE378E6186EE90FEA1FE95693AD4BAF8ABFB25E932ECB2F52ADCA5D985370D
D9D0FFF250F01EC5C7DB333F3A182E15F75B08A1EB4A0AEF51873DCBFA0D6C27
2C4B489ACF395C7D74262FF0E0072F36EF1236742F16DC0A74717A3038F694FB
2648B846AF8AD9FA61A7329E1F292E2496525F9ECE659CAAB8FD905C3A53613B
BEC81EB08888E6F5169B6B0160FFA5A9FE4D321CB9BA00A66B5F6EB8B5DDBB7D
B711ABF395F5D65048B505DD5FA646836A2EC1CF0B1FF7C76EC67815D2793266
5C892B5CC6571C4B97F0363061CA3AD4080E1F1738CFAF41795A2D0D7D90DB34
32BE1C6AD04870C95B3EFB6445B4E57E8BB9788E26B0BA47484188FC01B0349E
0457B2BC583F7A07C0F3FE4F8D0E071416F35F0241092312A90EBAA2187E3E5A
F46542857BD4F762787194DE48E6BACD02A7FBF89A218D7D358460EC9951BB0D
319DE62226F9DB3B233D88444728ED3E1239D377C60853F0C50A85A934727675
E6B1E55298253B0EF8F90794157B541A1EDF5BC57E563C368ADB29210331F122
86E22596CA9C3864176B410E1FD757E529BBBE887F0E83B5BE5A1F60F3FFFB80
9FCE3CC664E3B1F0444393903FE70C88D904D1EA21F7E1B262EF495FE04754B1
0AC95256F1DB74AEE90AF8E242A3BD1FB35B4112162E1FA09CD8D54D76AA179C
B516D72E15C2E75FF3362241A995ECDC489D5F2342C9AAD1DDAFE62E527B1591
F4DBCD3A2F9F3B4C4F139C46B6BCA884454B2963742963DF8C53AC76DC1E6689
F05347880DC9D6F83F009B68B378E88E66FE3EA0DD5382793956F5CC493AF5BE
F8A307841826D8B89CC6D575CA2A9B790591D15DDE7AE487F8CE703C527604AC
BE3FDB3D803A8FB019A777FBD21CDD63ACB5AC29593F93D4857290DC100F4D98
14F9D8FE7991B9DA7BFD060EE619102B5CCECB3794B3CCB05625CE02513B4C81
23CC71F9D632A9E06A5372F1879084A8CD5C648BA3F86A0F8FA6BF2414B32F45
5F5090BF6281395723CD500D0AE2888F9BBAEC329A3DB6A7CF6DD8E17B38D266
0C916939CCD80529F68317AA489BE91B6970068800E859B6DD516B21CDB809FD
C2F5950DEA2FAF9D84656CAFE18BEE3E70E404787A27D07EB7C0AA632EBD3B5B
E81A1140AB19923A496E1D5AE0F672BEC79FB715917727B4D51249CE322EFC48
770BC94B30182A0D5055564EDB2173F7C66FAD47CBF5B643B78E141E236D265F
815F8E6CC75A0EDCEA4F6B3CF63A79A37EC8F5AC96BA6F065A282A4AA2F81787
07D80087D9E690B795B11BBB3AF894DA5EB1DB3B7EE4140192E3D8D12E98D4BC
2114A4BE40B4F52743867B4C01658E4E2822748AEAE48E2D6E7A2E6BCEFA868C
78F575E03571D1011B0AF22CACBBA649C23507129FA6DC7FAF8C20668426D9FE
3D0A47E0C2F5C8B747F604766F5CC9532876F34DED1DE9CBF812D3F5220E8714
A6D5D52D97BDE6F0919A12B63D705E5511004A1F099385CAF3E5AC0E7921BB35
2B5AF9440C63D352AC97BA6C33C080FAFB7D010819684DACF8B6075996F8CD29
074D6D8D9662DF732D709DDC52E527C49A28451CC4154F728A9FB16983682A41
B1161ACD5A7C108A688749134752680446F888A046948B0960C2BB667FFD6267
14F5D76BB49E36ACB32F415F7459CB44876CE406261E6AC657F58AFE1596883A
A307D2F736B37835DE5CDE379CFAA434168464FB37E8F70BE0BFF89A7F008665
43D6266FF881EF3CF0C2BD1DF7515CA570A1BEF3DDF1175E3276C62B0FA1A703
18E63BF984F1AFB3A1F7C9A7330973ED5734C4C3906250C3B0C3EC189868F5AB
E124A2C413B04766693591F60998783D28B429CB5D524043AEFFCFBE7A8CA94C
0F83213E52BCC8A1DA627BC3064CE25ECB2B1B339E713B3EAB6065D8E32F73D2
0A78F27ADFBDC0D2A5152262616DE49979CD16DDC435F172BA8309054535D4C1
0F45F34C4B5901DD5F0A7C80CEF22DC62C985C4B42E92D9DF52CB8D692D6C8ED
3EF4D4B29210FD538A9C7A8785AD02D9E467BA41B14FB1F2886D4EC7C937AD7D
D73CF5EEA565725C81FEA89AADFBAF707BAB5F1B0A2DBAC6E1A4CB7EF71F78AC
63153F1C4D22C0FB10EC6C9FEB3CE0F5A910A0CE339CB2A61146E79650607FF0
3F1320C0B73A3C9B5FBDA6FDE0CD71A7D5D51EB5688187B3AA4BB856E6780763
BD089B0D57068B43EF2DEC578E1327B3A7A94BE6DBD964ACE56F31BE56728A70
844D7188AAF4111AF68AEFEF88DAB8911AD1567D691D5710C1E17BF86E72691C
7C8768A74278258D004859EDB9D667F811C1B30364D11FE035549EF1A5BF2546
182A452B6500E43258B9BD161B4F8868FE10E17D991F9B803766200E577D4DED
551FED5D6AEDE0726E092EBC29A30A2AB3DA276B277E1E16C68A2F08EFF72318
05F36844D82D472E993DA7E61C1D5C8ACF1E84500A5BAE1BE74A9725CF120916
8E68C0A6B5EFE43CF04D3267111E7FDD0FB74374EA6B2CC9D289D8CCFDD23B31
2FA1B580CB3BC380F8A49A76DC0DD4ECD3DD33EE75B3284271780C61595B21D4
07E149F9741689406DE2CE2D32C3902F0EA39A679D879FCEE3756BC5A6634F8E
00670B60B2D051C6CBCC1EE0BF85A365B9C7C841D52370A2F51B663AA365FC04
BFE25722391619E5EABBC815C3DB96114FC62EE7FF8C9C1647573FD98125E92A
E28E9FDD5E5E11FCB4A83206037F698465B6656B3C60F7D0C9CBEFFDD23E7D47
43E0E2666A94CA1013269AE4DD65209606EDBB97FA0A7523E6B1CB111CF9E464
49525A4A5E6CA2ABDBC4A1E40FF9E6585BD427A742AC0F50B0BEFD744FBD8C2F
DDBEED7FD8F75E5DFBA55DB8D7050D67EA83DAA0E0C0049FEBA0DDE45DAFD813
BC5D248569054F4636F9A47DCF8DC829927255ACEA830AB446843C1F1747CB60
C340BD338ACD573F96BEDCBD8A27345B1409738DCFB5CB7A371353E769A5D6DF
420120F10414695EED42E02F7B860778AD2BF151A8AF269ED67B09A101A9AF29
B59CA1F4C216ECE1DEEF5C791A335F9372EEB307064A57639B44D01CD4CF27D7
FE78B79C136835FB80A1A1D0AEE7CAD24FF936D55D8783F1032B9ED4E72B0377
98649F5B54AC89A06067B37516886C28EF3BF345B36A46F425647A8163105C8F
95567F480A38D2E38AE2AA30098526561478FEF584222873375A989DD0879DA8
DC28B930C2363D2EE94A90590C86B70758B295832B4E68395D3C71B5681C2905
90306254CB2452929C1566A678954C549E7F2F0E53AD0E8B1845F0E9DC5EE9EF
DF42911B660010CC6B3AD89C9CB0EA74E2E9D9A705604EFD0DBBFC49937FA5A1
07D4CC930EA733E735A5EDE150B2D70BEB1655A0F0EE1E85600DCB71F4D60129
E5C06469D73E708BCCCC03EA0A2721E102034B5EA9FD024F57E82DD0F8301E2A
891A505BA717875648C0FBC114419C8D3133CFBCEC9A2D13D426B95F0EF50223
025ADDF1E423A158CCAA96429D4882427F113D87AEC95E407DC63640E04FEC25
7589BB22F5BC839AAB88BC160C473D6FAEBE719C4E001D7575DE9D7B6D9337BA
75E6159F4393DBA616387C68BCE6F7F90937F82307078DC307E704AC1DF8EE0E
6CE35B7CF75A8B2C599D8707AEE1D3FBC520301DC50C2CCE2475606A8841A89E
78630A6C7B80ECAA68CE91DF797A26F5E1C3DA809F9529595B82BDF53AAFFDD0
AA9C81F8AF7B046D11F541907E25E5C2E11B8754D3B2B88609E8821A540D106B
D0A1F0E113EA7408DE17270E0B173FA6BEF7618082763CE6FDE99BD7C7E6BD54
62A516F74E79A2396E4C040D7FFCD27438A0DC7551BDEB6830166E3EDBD89612
D688341CA51BFA6753A26C3186826954FE521639DCA89F516CFC27CC18C1C11B
95C0CB8A7204078742E146CA8985E1FE9D35CB2BEBBE5C51EE6F2D1A1E6A162F
A0CE693C34081CEFD92A4B1A267D02F07E88656BE69A6BB0CAFA629EE9683652
DAB14D19C615DA693A2B1A655E9CD6C5EE5714245B96CA4225F3D65B1E3D3AEE
511D4C2FC727316166BFE612EB64C4DC165BD6C64C44F44B7150E01E15F16DE6
4139CBDFCA3E9A354F49D7FB8ECDC8970598E6AB0E385830AFA3D9CA47E24BF1
AE8A34C9DBA89EB8D38653A590FB6276FA464BE0B269A23E831BFC839810B733
FE357BC2F3016A9EF18DA2237CDA9C2E84213F1EDC5D10725514567FEB018B88
935827C0F89C97586C37F06CE4252500F453942063C0A66F4AE09DE0EB684D4F
DFAD6FD9D83F7EEE6DA22C28C373D3448E06D6B7A533AFD690A5EA2C36FC3CD9
E2FC3C5076052D3219A6AABCD6BDDA40CDB4ECFEC0C6A9C596F7B4D62166D3C1
1D0D92D1EF77FBD2274998431706DEA70C000FC01B5D59620413798E38D03AE2
B38F253DB2EEF2FD450C7F4CEC31566DEA32218410359939446E558CCA7810B8
22AF7359BA3562E3D52FADC76F7B530281DBE0C1BC769ADAA43923003A87B6A6
EFFBA4DF336E2521A054B091016DD03AB31BB7105133F454316DD86F837FEA14
D6BEAD2A9B22FB6BEF2419CD5503C4FE857793BBE642D71C83E14DFB06CEB1A9
39E1FB405D3B523314368C4447A3D38D128E44580B837BB32C7662F9E7F4A915
979A3DAE4B8D2A0F63A77F07ABEA1BAEB14AF1C06586C3B97C3F296FFBE0D143
67B07CA81E0987475496FDFD3E01433F2F6E811DCFDAF8E39BF35DED0B12D414
5F5C6AF383A4C18F2675684F3F870E7440A2520B5CC7BEC8405A8286CEBFCDD7
F4D8AEF1266CF39968C28314C8500C7EDDA0E5FD83842B1C050D535CF640EC7F
8B22A10690EA36BC87B4D2CD669AB3C23B6A920FC83D7F8F6F349DB1C94389DF
02CAC58C1BEF50462F0B76B37AB2F0C9B4F8B1DF9D565A6412B04CB05D088CAB
A8D7F062204B651E83B1CC68CB112189AFA7C2C8CAE186DB9A103627CBD7FF4F
9086F239DDE63EAB225F2857D6385D716B5C96C78B5A0F8AA439F193E4F02FAA
83578807AD854346A7D6BC657911886BCECA83B7FE6C91E10FA717CCEC0D2F8E
27E2840D6D16B06EC3A091C3C78EF0034ECD2EBAC4D42C211E996FA7D9C0E865
3A84755CAFC0AC5BEF9CF39C2353552D5D6A0C72158DA9060B18397F5C14D237
D9D42CB2283416D42097BA495C5D0272CFD9691201B73CE97CA9643D7EEE4365
D5C807298D6451B233E8C6BD7DADF7458C3610C2764987A17DB454B4368D1FD4
A8780629204632C638624DD664CEE2D979748067DF9ADFAE72B016958EA8848E
FDBAD1E0155CDC51FEFC6AB9608737DE5042A594AF6889EB98763AFE8C7977BA
7ABB371B30CC350A005E4C58B4C4A37558DB64D6F694994DEAF0039BF9589E5F
12B6186491BCB6775B4C626C81862D7835AE49BB242B553D6971972FD93DBAAC
71593EF8AF91E71430702F73A1F6DF7F866E9BF3B0FF9F1BACAB3201A0271DA6
6C1BC9DDD5543AD95E10CE656EA312767596D622B88F243CD48E934085E655FE
17716A54386253EAF0BD4CF05075622499F26C0930D9FF481C293E7DC27A1534
8F53736896BC4756B32593C2A9DD645198858503F7B4F12A4DF8A598E79A0A1E
17B7FC544C630CA6B176D9865350C7693C1C2EA55BBB16EB5FCCF76DA8A4CC4A
4207A8DE2FF1F9AAE0B6D4C2B03AA915CE26FCE2419E22848162CA35B9E3DCE9
AF9D6ACE96BC6BA8BF0A917294767DFCD4B4BA66A5E2DFC2A6B3B71EDE0B5BDE
EB50A58FAE9BFE9136A0B369674D42FDF9176F8C1A5DCC2D0757B047D81B2AC9
275E9FF8F9EF7296EF22C1454CBE8794DBD58E87A9DCBAD0605DB16920B94336
8920B4645301F453206258ED0D3BE8A237C13F6E77CEF898C10347F6BEC5CF0D
588658BDA5CC344376A5394AAA7C2CB50BCF338D2AD813624414EBEEC2A70F11
669B51163B6C0DF736C833BB3B575A26F7631C8EFEC879D428C2A28D4D03193D
5AA93BC85766623A43F572B4A314B0B0B4C07ACE01B115A6D2822209DDAC5E76
8B052C70474F1D9C675285BD33F9B00FD3874C98BB95D07FB2D6AA97F0FADDC6
71CA4C3A7C703D76BE95FCF865C8DDCF50F0EFFF5B138A0D009516C7668D7117
DCFD4885449C74AC0FF8061AAE3EE0E692946A0ECCDDC6DCCD5B41AACE2C46EB
FCBB5797845E4B34F9C7393ED6939058EB1808DE82D269C67B6E0BE069B033E9
47302946316432A9C52A86F391E61A4F6B14FBC50E1DF382C634DB5A4EC176A8
A622039DCF4FFAC0375F35E83F0D28BFCFE5096766260A3C12F300700FD18930
2E539451E29875F2898237ED7F32F9EF2A2DDD855147890AB956014A804BCAB7
DBCE1CB77CEB251EA812D386BB275AA6D6D56784B104A6BA4126C06C7B1F3B6A
EBEE1DE05CEA3487967126A4D505B68B8ACBACD4CAF629F7F5EDB2F4CE5A6CB3
4369AD260BA146E7A52741B5C0BFB234D4A62CF533D42B3794C91245D3E0E878
E219191DEA9BD6BF4050AA2FA8E3635ADC47BE51F911D017A266B6FEAACD1CE8
DBF69138A2087B61FD6B5E05955898E74AE6DB67AD57D31056B9B6611CC027F4
EF22BE7104F3A7381C5F099A78F5F24584E62034C4DA961E33C4F153BF984153
00F5C91F25A275F18D5D97E9EFF2F4CC8C28E8A01926CFB13B4EF23956B13DFD
AE3E7934AB8E09F6E413D028AEB7212D5D6A8113EDEE007C357491BFBA0CAB50
52FAF67CA679CF55088ABBF7D469C92C458EB38713EB756E0F6A404F10C953D2
598481E728F4F4BBB7CDC021620E25A0732B430A78D3D5F2ECA92F53611145CE
AEE80B1BD4AE6095103F14487BE34E9EF519FB385560A344912858B901456855
C9C93474AFDFF2E72C5CCF4D5858D6836EB69CAD543DA05B2C571E00E865016E
D8B7510097FA31399CD29F06B199C28ED9C017E0305A0836C5C6905B676837AC
DE00894CF022CDD8965A3A0D5D15ABC597708D96BBA7E06C768C73F29A6A50EA
AF93ECA369DC289F7B6380597FD97A7885BC767254377F7AEBCF09E56387D1DD
A151201C9120AEA3A55701EC10BF0293EABF51983015F064B1FFABD53A405012
12E7D19A3AC5B57C5EF59318F155CF537C74DFD2FE6F8911CC1809E9BC2F0A06
8C75C4D1FCEA7D97445C1DC9386DEBD1987279C26CAC7789A24E2E273455E189
047C61C20024DD7CB9C7085DC4EA7AA5B753DCDC255E29D8112BA229C30190F6
C75933CF06BE104877C86574BADAF9C4C58030FE6B21D7F24B18ABC3AE6BF13A
9650ACE8CA49A14DE2F54A554547A97A70A700AAFF7C1EF5675314350A32DF82
A23F0A1A479E7D64EEB73028FA831CEF0158AE8E4FEA94F930201A2DED4A5DFD
E1239479CB408285E4B468DE084D9970690254F648420C6B8ECADB543F44D783
4D9CF2E0E4B3DA5641A8435066123D6A0C6CEDACF572324DAB9A7B6FA299812E
5F0D12F04EEE67A5DA48AAE4250DD639217A49406A878C78201A23393FE2CC6D
20538E9EE20E2089FD84EBC9330062A9E9DA68DF11570C24D2A0C36363A3B14E
0B3ABD68E12A9A50627AA65BDDD1B3233B9397ED49C4AB8D03C17050A4FC0936
2F20F481B1CDFA750764D49AECF0C1B9B9D8755ED030FDB9A9840B9B9CC2987B
BC73557BD09FD12814596CD17FB2C06ED7C3954094802CF06CB5D8B738F24A5A
E59CD940B46F5F8E9746619532930BE8532BFEDE11891BFC28EACBA6DE9FE668
4A87B1385918FD5062BD5D1AE93383E27860E706B9C3A591DE54E3B5CD34EB07
D98F1092A1D0009CDF9C014B7E2F1B6809B55EA3655640BF0E74657D53A8AE8D
B1CA36B056AE3A07E71883B5A6F17EC05EB9182E8CE99774A4EADC7BF089EB62
FAAAFEBFCCBFE37AEBF3DA03429794035506719D2B65F3EE7B618426AA721BC9
292745C5BA211FE10DB2ACA21D1442706F04D0E68D704039DAFC5F9A9E1AEC26
60CE1334505A748ACAD80168DBC7D4323CB97617B6DFCD0A5FE74E64938ABE98
B11972948F45EB35CC471B55FD850FAD409507C046E30548DE1276B0F2BA201F
AC17027002AA99A88921716A714D867655FC6AFEF4BE176838DA1C9B515D6FE7
977F3C51BF1E965594E0332483DD1B58A1A7C65F977A9349B24481320F785AB7
CD72332A9486768CF52B113BC0E8D6E3E12DF15E9CC37D1F3BCDCE4994A2EFC5
324EECCE65D924334E25B6EAD4D7F5EB46265AA5ED4ADBBBA727E389F59BBDE3
BC4B083F270378D817BFA2D218556CF567225330470C2BD400CB75CBBE285504
66BAD261CC9D3F24F365EDBEE2982608B89733A4FEF814318E3609B398ADB0F0
3692A2014708F37913DD908928FA612A52F26EE8952559FB1200241A2BC8C51F
C407B5E0E1B08E8A7DA189F7F96B93E9F2C13FB9B40D07D4969FB8BDE33DA8E7
246E0C88BF7702BE41B458C45A915B41C1E67CDE33D8F1363D880CC0381ADF48
E1B61FDBFF5D7F868BB458B8734B633C98261532DCE93061A34A70C274C3CD49
2EE4D974A2DC69A039315605BFB7CD72332A948677B8CA071A2DEC18D9C37FD5
EB646DA09E4ADC25A9CE9BD58E005FB62CBF006EB1A9ACC5F02B868CB14DAA08
6D116DCAA1B0E7DF3158853C6C29F9020494683E5B4A389A0F4C04E513A9FAFE
2DA6F7509A63B41DE47BEC4918A9EF1BCD0BAEC62B51C8F2971EAABF3F40F6D4
5BFB25A92942B5CF2C2AAA611BF4E002ADD3EC484AE662E06B4FA2EF5A6E47DF
0967A2E0D894C2668BB221AF512C235A30D2F960A27CC284946E38EB5CDF1E32
C806C11B4924382B0C84B72B2E6BC0EA232F8C4BEBFF62D234300613AD3A9FBC
AF96AAF53CE42E16DB66BE62755118547250B1F2217FCE7098B5402576CBDF6F
0AFD10D79C837E8EE64EA3D8E295AEC15D14BA997AD819C05F66EC673994EA14
2AA56D16145404BF88B725C405389D46C775E8B0DA828F903A1E8CF2FF04137C
706B0CC542C8D91893ABB326EB4592215533641C06DAA9AF979E544F00DD5551
A98F338822AC3E427F109FBA54FCD9B48E80876034CF4B9DEB141E3D49A7439B
23E2238AB55D3DEE59C0B53936070A34DA0B41A2173F9F02D1A684A712809EAA
A2FB8ABA2768E85BA6505C445BBE4685A27C279D48E877067E652F4C3D861FD1
207D06346EC0D1CC253F732C3045A69FB8A49BB082707B2B03BA1DCEE1A932F2
B581572D98F18CEEDED8D34B062E1435B0BA36639F0C60AE2F9DC10A735232D6
CF29D59695A2DBC1CF0A053222DC506BA03FF5F4EB75E671AD1D4058A9D04649
D1A83F4B69CBD26B5A0FD680DDA3F26EC1BEBD7201AE53BDA2D503B7F278017B
ED66B6539FFBDFBEE83F705D4DE8588EC54C8FA15821607EAC6AE893A4157550
F4787E254EB33EB0FAE01E615B51864B341DFB2CFB4F20C4F19866AA097C42A6
ED10B021F33AC33853D5B73E21ECAB6BF03B49E427FEB32E20E833C49DB629D4
6494A56D28E23C61C99C251F4C61166C1564EF88E75A46C7050358B172C0447B
268F49487216D17FE83127C51C9AABB563C0D11A36DF260E9B7444C882473860
8192947FA453D0E827DC1DC2DC924DA4AD92096160F3B8F2684BD8E10CE69700
C1190086F26070E8E4AF624D90B106ED36CCBEF8D09021E4A0527BAA724F1106
7D003515FF3252972F028E73F49F7178309881B2701538F8154BD64483774769
556C13952D6B15483ACC4016405B09726EA634A6A383EBC37BF9AF7B51FD03EE
5C15DA64649D14C608BCB0B4FFB4CF70518637C12F6BD2687A3DE4528C9E61C9
F6B3CEAB9FB97E706A249CECBBD5FCA212B2D21AE3F3D87EFD38424F0589D7B8
35E31AF66A9562E8193055D48BE8BDC839ADAB953AC73133859A3C1FD188FBFB
305FBE672BB959F9270F7B181AB8289DF460183800170F935D7B9F81B05F3ED9
C725B93755E8315784661CDD3BC6694CFCD5941E1ADF112E98F0AB2D166D482E
0BE7CB9A8D3EA5B74C3DD37541E345F7B5EF5DDDEC750F2C235D47F459F299D8
2571873BDE97692C56704A91E34EC130AF8927266C47DE3DC6B596D3DC87AB03
5DEA8CF4DC24026B9C443166F99050D64014F58D47A8C0FFF4F844ACCE2F48E7
0A97A4677F26F368BCC59222F7B3A97AF495A7F2B7834809F37D9FD41D647ECC
5F14021486C029564E8117144127C2B660C4377562BCF82B05181A86C465945D
3670D967A08A9C8FD8718BF69CDA7D7FBF73371514C2799C569C29EBECA7D5F9
A4F997A5668F4C3E84535F52D80D33EDE9B91F834DF72C3299698C8589C79714
C09925C4BE3E37C01834253652E489420E2BBB9BE7FA3200585BC1FD245BFF5A
E4B9DBF9AB7AAACCBF369C20CBB5449D14432A637D836ECCD5FDF8ED6F6BE934
C223F5AC70EF2678436BE8664A3255962B9E54D588F1D32BA3F55B754A3DB461
16D8E8ABA527A3C0D1DA8955D44EDC4C4D95FD69978FC444AE410092EAEA7CB5
4131FE8466EB82A4C815997A3E97A1F7A38ACCC9AEA3A4BF8B33B47EC4BEEA43
1CF03FEFDD72D3BBEA3741E6B69E6AB1DD9DCDBF4552F0A0399B7E019EE8FC12
9BB8E583E50DDC83CC2D39784BEF828A51B4B846AAFAE37C21263D6D9807D720
243DF1CE290E172C8AC420BD0DA240FDB4B1999DED038D91A3E30C0E21790CBE
FF60640B126199A283E72839A9806A70E8ED74EE7E52E2E09579642B5A8FD71C
6B6362466410CB2846547B2F83078A77AEAA234F730A1D2A37B4F92685589F36
F15BA84639C5C1AAB1685ECA4F7C008105C677BAF1DF07C5ABA84141681378D3
8F50AC6B514AE2153E761DD2027BC7092F2F612576715CDDCFC6E5E630E56D05
8F6996E51AE70C94832B1BA5E8AC2D79EC244189048DB94E49C1A2556F524573
9B96F343EB69FD636A4A1D0AE6D7DC8AF9FA6DE97B43C368E8A51E7FC73C13D2
AAC24B5C38E0BCCFFA46DE0D683969B037B9277FF12A7B5305E89240363C374A
E089115305AFA5269D4359C647B412CE0CD8E1AE3513A858BCB6ACF33413AB2C
EF66527B528AD5F2F8521C29166297207CB79E980C2A6B24F8EB5CC90E33A4BD
D017718DAB72E8DA89DBCA388B71082E5D903313697FDA85250BDDE99E77670F
EA839C7E91994C1D1D0F45197C7C3BD368E08922EA30D1DD0EE6B51A1675D2B4
72AC58D1CFFC2C97CA1EBAB94D20A58730C8851609789EFD9DE72D1436D9D508
8F303928A47DB3F7AFB2992E6CB41957431FF7DB604607A124319499E41D9341
3B74C6BA3221B9EB73E0CC0E9CBDBDACC98378D91357ED1C68D8A287A2BD7CA2
2D3FF00B6F75DE1A287F1CEB7B94FC6FB294E745D67A5003724102738BE1F833
609717034C893DCA2CE534576ECB15C1E42F76E1BFF9453A5C1D54B5ECD8532E
CBD66491FDD0C11221AA202B12ACB6AF904B25E81DEA3ADE2A130043D96B9281
5A20EF5FAB0B14CB428D3B01E4731B66292A528DF0167174D65AF973D985C1D2
A4053E33813DEC4423F93A3D170218D2C94BC253873C49330A934C372E4C019A
9AE870396F59341AD378049CA544672A85190AA62B86B1D1B9D4A5E81200717B
C337E588ED45DD66343583618D56D7C07D7F20DBE4AAFC2060BCE904FE482A78
ECD7476116269A80BA671A099468EA7612D077F1D7F6CF68121E2985F31A70A9
C60A8285F18EA65084D885ECEA22BF43938B806958D3CC6C0FA5F7284EA6940C
9B6C404D4932479E48E7EF3BC7AE9AD9EDF128A76236561EA185C51BD50DF33C
35C96248BAE3402E69531BCE091B39F14404C0F61C45703F9A5FB3EDF2240BFD
37CCB4665867E93D296CAAB4BF0454A2D0F13E6DF6F48B29D161A061F6AB3B21
17D0831A541F5D7F41686757E74C403960395026E0241E46DF12506036570AB4
4C04173063DFF5CF02E964AF37894ED40ADB4FDC00A1E58D58C893F70A9C81E0
192803655BC68A25D6EF259737F27B34EEEB1009601A220C7FD24E03637B459D
2D5CC1DA0E3B70F3E1C4BE3D8E28FC591EAE65AB1D51BC79F5989026401145AD
FAC3E87E69EDC3C3A9108BE9A86888F724105E96580F66F8B14C146845BAAFEF
BFE4CF32967B7851BDD2A6CF3898D3DE82CADE349095C022A83DCDF832A5CCB6
7E898219842A157CDB178FE0B0A2DC35B5B7DF7107BE112E2184692B631B3DCB
FF5FDAC2A3FD2C4D33487157C274D9BC1BB87989937753F78A8EA76FD7E028EB
1A9F30FBCEF78D51D420035CB75820F3FB208ED2259395F9FCF7BB18D2A94B5E
843B6DFCC4CA57D4BF8A3034EFA2DC39D0B2409D955512FC3101D7CDE90E8B89
8A02FCD01C0841E6D3AF64ADF60F580BC1EBAE7BE17AB7C7E54F1CE6097793FD
FD7020FEEC2DD70FC9DDDFC11F715B1E728CC497B6EF47D9D699348ED5924C3D
F63D65B6DC971647302B71EABAC5F95038A79D64D961F4563361804549AAF7CB
FDADA6A7A617E4DC545FC28B00328B21EEE33F6BD9FC0289F46D1CFBCDD49402
1C4A5A134535E3C00A8F8333936534045EE54E9B97CDE5FD21D5A043B8F2104F
5C410574219353816B83F3F123332393EF825552418BA6FF077024B33DE798E9
4C773EB7DE1C923C928C3152D8F88DD49AA3DCE81C8CF706813C8B6C47526489
7D47E6E05BF943280E532A934832474DFE6A54C049C1770116172CD80C078EA3
689D75A85C5FDBEBB59F1BD0D806479791A77D5F71B78D3CFAD6F8EEE3FBF9F7
4627F363ADCFC8B6EAA0C576A63539CC96BD4FFCF1E22BF09D2FFE2721B88C11
EF4365478D26C2C8A9093B092C99D92F3A527DDC93BDAEF8478B02ACD2D20EA5
1B10F10AA65D3DCA2090A775BCEE8C3C999A312AAE01FEC82EBCD33374BCEE8C
3C999A312AAE01FEC82EBCD3337727B8D8C2233BF7BB30EB70BC1215DA703CDA
7D3C835ACC804C4588F963BB0D72A63BCCD7BF26D25FC8EA265B95068488565D
F269307C29847DDB0956546A8A3A0BD1E03CE9CF16CAF6AD6988F4912AD08CC1
58D9CD959BFF93244F75EE386A097AAC9BD0D894E7966963A974630F7FA9EDE1
682E02B9BE092A097C01DBFF818A21BB7A2850BC7E95C58776D48FE16596E1C0
D87C54CE16566531D0B189A533857BBB1E94EE6C58729EAA086AB80689C2C00E
C7226DF86483BA98F4BF6676A55D03179AA09D95FBB46A14E9FB76642570DE4C
2FD5F63D4F16AE2506A387B4EF12581BA1C3AFBC3096F164D60BF68BD7A79B50
B73111CF491A652F2344911223F2BC85C2E56045DF95ADEED8929F678C032C37
351A04B0A2F95A47E96D18D1E832A3E528F1FEB29551BD89557FB4E93ABB0C69
9B8E17B8ECF398DF335F66E7F073AE5F129EAED22B2352A731D34333CA08BD3E
E7DCF3C61779DE2D857FFF9BA6167EEFC6B1D745A26A73BFEAE49F753B28EAA7
45D0176F4D06397DDE2F384FD189E5136ECE4720172AE1635C0596F5E6DA8E4C
5280F439709761E7627CF8FDCFC0DD2265160BEB37EA18DD9526A224303D8C50
4DCC3DF5328B9BC00F1C5DE9D0FFA7FE80F879C3B5E9D52A16B9B755ED7F034F
99A7A86D70CF9AF3F6E824F849D5B16C48FDBFFB4A0185E382CC381CB2E6FAC4
E47AE7F7F8350951EBBB1B67AEE1391C89B1E6960B0587E8F3721B50962CE161
1496A1AB0176B6689904D57396B26D3569EDDEAD6097746DB7CB534D1FE6E853
90B11A92EB66C3B7E95C4C14180B49CEBDEC077373FB39C1AFC85DEA0EFAB36E
C760B2E47F1E4817F631B0628FA575A209349A1F9ABFABD57EB4677ED06EBFC5
FE0F30BA0B49EE279E7BBA235CE8DF21D442DAA1CAD3C42B7F1F6CEC103F4D58
409B694AFAB93EAE4897DE4AE830FEC7280100B424EDF8433C4DDBEE19D33F14
CCED8FF73DCD01DBFB54EF400467FAFAE29DB8D4E2E77888077B661662FF2163
F242E2782FED492EE0015CB0206A1CF8EFF1BB9BAF9477423ADFEB4CBF11AB5F
2DB99DF238F7A3840AD7D41AABC16103F0CDA040B3AE8446D1F8EB366BC93B37
86CC224FCB412B3369336F98B0D406819099D4BDA21D558DD0ABF07E67EA2C0E
0284A88C7E5B825D53523C335E864DB69D8D30C28D6CB931F454BD990120AE02
9DD0EB0D0D318C6A726DE5D8F2B1B79EE11B6B52206DF89B127FABEF6FD03DEA
23D25CDE379CFAA434168464FB37E8F70C9337D9D0A83C03E5176879B63866E5
52FFEC6305905B96130EF6E1B37C8C30323C79FA635BC31AD512EEECFEC5D1E4
B54ABC07E85F636151688C19C690B20B6B83225584DDB43DE2BF9F6FBBAA87A6
27F32BBBB40CBF9936EC80F2EA98312A5C98E09AD26088AB954208D32EEA00FC
F173033D885B728E866E50E6F3C6CD88EE5CE7F6CADA6A6B79E846C9226468A0
3C34460B4DA59750A1461C8C0E677A6914390FBF6311C5FE4243E34784079905
4BAFB9A41F708E9E60F5222A26C4F3C0D6A582933F1B0D12657DB21DB06AC05C
DA7BF3D23E4F9C070F3684CC2E38D2CDCC0754F3CA8F1A515320E678DF666D3F
0B6FF32FF4EA9CFD117AC42C40E13EAA90258AAC438905581FCD322693F94BD5
B0C27912730C8E5B7CACD356944BBF51C1E57AD03CEA37754832EDEA7351D066
28004C1873363CA0D6A6D1BC7020E199660202304EFD49790C7C063BE99B8CB9
7AC70BB33C4471455596BB13E7F33A2ADBB5236240497529538D3AD9C10DF31A
371D49C8AE59C432B6521116B1DE07BBF962B7E47D99AEC905A855FD03B84B01
C485C9DFD480060647EA0EE9360CBE5C45E88E39A228FD61787C168225CBD20F
2E121BBA772AAB3A5D2418EAB7B2A671FEC87CCEDAE7659CF658275938C130B0
B7656970C072E18682D353D82AC7FD782CB2FEE7659A89404DD91A86D8B7FB26
FBF707034CC5D3CECCC4F978B79C136835FB80A1A1D0AEE7CAD68D083A40A28C
1A5AF92BAF2C5EA9C2281455A41471D434A1F621C31C6F2FCDBFE45CD1BB66C4
0FF3E62111B4D48F2782919CC97699F61D1C178F0DB338CE2EE3B71C15AE8C75
9DDDA068E597DBBE42FC930B429910D5EF7B041BE1AD132864876086D2C2D958
C8AC8E1C849DF7C9017FD007C2E6FB4A93E85718BD73028971521F4725696F1F
258AF3A57CF0E24B717844DD74DFBBA6644F29FCE128090977412EE849DD187C
AFE86D73957819DA978BD81C70A3AAE8EE3833066D88CBE5FD12690C731C9A04
E963884857FEE2C11E141ACDAFB8604341863043BF912E1D3DA14C8681C86FE2
982BEC2D2227875FEF92ADCA392023518678C1914968CF6BB44C1567209D55C6
417662500E7A6E7E9F44F9E87E5572838472E5A2B2B8707D2D67225618673C08
CA48778D8F9B2D07150A3B8E69AF9FBCF455D5478D959435695013524D33E4D2
3857F5F1870D4DE4289E37ADFD6A4CE5F69E073C15B235AF6E0FC617BE6F552E
D06BE85A4FAEC545A2B085B8BC0E3D9C465947EFE73E1580EA4F0DB9EAC60D9A
3B5FC487B167E04025A8BA7BA56A2C96C174D56436FAC746BFD2A7E583E4BB71
55869F7C6A38BF3977A0C40D884B5CA1EAD4AB2F31DE9458E35838FE55368B23
E5B54C7597B778E55A18B17D0D1774E8BF2B0D69DB2686DD7F48B85C66CDA7DA
D62135CA596E463E4DD00C352B440921D59ECC4F89FE6EFF26E69FC33B0324F6
C88D3ACFFDFD20EAC79AF0DB40D88C672112A1467415266DF5961F327C022D5C
47087472060F5D45821EBB14F1D82FCF1245BFB34180E768AE3591F276C5B48D
C95057B41A5DE219C4EAEF947E92A36515D3C7F9CAB5F7A4F527AA6CD0F393EC
EC7E621B87EFBBDC9E2642F0282B467C9C80115A380040E929D9FD2C4A9FAA90
DC310954F686B88A783CB7A5E833185259302D804F9324C18AA9BCDFB313DB43
9E0B271B93269AC92A63D89781AFB2AC5D80BE5AF16FE23018C432049F227E28
24FB827C76AA0BCB247CB371CC80C30EC2696C5DEF63A5B7A0E1E9374D0C592E
978F2F77A627D2B48B30978DD86B4A85CB320B6E0EA9CD45176E6EC070E3A157
D629B9C92ED74B12E5F70E978618A5B41EA6187A0CED5CBE910169D0BACEEAE8
8905BF51DE34BBF3AE7B6AA21B2F3BD95075FDD4D753D4385C3FABE390AAD837
E4E2F3452E7C10928B272F13B65A72C6EB1C18F1BD1D6D7345BEBA6F155F73E2
163FC84F91B3AA480FC4BCC94F7A0BC5339A0707238FF21CED3471D972470DA7
3C364E2395E795AF79EC9D0D9FEC2189C5E54DFC25E1CEF556E7CF96DF7A340F
EFFB1D43CA72FF0C9A0576F3D3C80E8A79F71AB2E193300040294C4DD15D4DE2
9A9B44A4DD7A1315CA620CE3255543B9BEE85E36985470CA85C6DECE367EB9D9
DB040654EC72510B42D98B4AF85DA53FC847396A54D07EAD9F86C7D120E37EB9
45028C0EF8B1DA22DFA75F6DF565A5CD49213D44510E02339445B3B2C68134FB
4AB5BF19A42A2F39FBD40CEDF8C24F5CC9A4F06F33754F32D16A9089C291EC0D
E21FF1DD4315B1F22B22A9F917FB3A932F69FCFFD5B2B0A446AE32BA868FC8A7
DE593CE32A62BB9140C071C80D02F5D0AB6DD535B1CEAE27D4C7AC296118D768
357E13C2D18B39FE7FC3B7800F246372FE7D7B003D1329019EF17FFA6BD82BD4
B3FA118C382BB9F4AC5D99792236A599DE44FCEEB02F13A72FB64270A1517445
D55A783D8B2B941F9E13A0B9CB00AFF540FD526ED4761397C045EB419FC3BF04
074FD4C5F2468BAC922E838048852D03C1B76B8F5D2310AAD16662E704779B83
560930E0FA1D1958554DC55D5A7AB8CDE92B85979399E511217968897964473C
CAE1AD69BA945ABAAA5745E7A795B419A6879A56A98AB6C384149C822FBAB42C
12C81E6795F36ED4D825CC16A833E7B79FF7AD86B495FF5401C1935FA1059C12
E5C13003944FD1BFC07296B548B0214DA2C1377A047FD48CFCE4C372FA4A5873
6E07D89A649DEE116FAD1817207B6A0902DB40961713DA8FF039294B02667D79
F18CDA527B84D0342577E21876079B6052DCC160B9C33ABF336357A62F3B4153
10771D081FB59F8A829EDE7065A70A6B8B7EDEFF01816DA5538F7D6242165793
2069C0B574F009F0892DD0CD02FB06658FE228B2F4E2CCAAF2F671C6B3891E0F
A5292F89008A06F0D4402F42E38451FB9A71C19C82441B599D1C5381F298437C
D5BD3C68BBBDB342581A45612A00801510D3146423DEBA6860AB8C49DF84B361
F76E4F6CB67A98EFD99823CE3A9FB641D7DB2F1F961E47E5D6DA7D8747BDE7BF
D6D77CEF1E809A486BFEB993384A598D64228F74360E1C8573BD2E777ADA5E36
D44B1D2C0EE8A3B98C7F74A46A7BD159CCF7253F98A205AB2658DA8FFBBA012A
C63E0F3041D9BEE45A803E969ADFF01BB47A402DEC0F8E7EEA54A876BB53315A
89881BC0DCAF8980456BE248DA83F3D217D53DAF99C2663B82CD182D8BDF61D9
BFB91113926160A1F79E4C7118272D96599B0193C3EFA1560993DE4AAB8BF849
AD2279B8DB78348FA987E809AF0A89924B6B114B04025CF78AFE86EA921EA01E
68CCA1E334D8FA42BF638DCEB589064A17CEFE9F9A9721F6B463E43E649DF189
64FE3623A5DD222504E7A29F488AB313B39D5E64298831794B9DD529BC503B9F
03A8244526EDA5E8848C3F18995F3934BB3669BF704109105F0493D45ACA8B6F
5AD8F3724AC84C6BB647E4AA269D242E4AE913B9CB469A306A862D3279D9FE97
3F75C85DDCEE8DA11EF2225EBDD00F8FB5CB9F3C333E45C68F2DF8C59CE96D18
FF180501FED88CB120BC45999442A966446071D276CCA163C016DAB74642D84E
ED59DB70D26439291C0E7133A0042677FDF9C4B29D5D7EA294A5299A21167621
5569A890C2398E5FA0DC6D6AC7F9A0315B5E473250F7B15CC5A0182608C47F75
D69CFDBDF7A6C3FCA9D28AD954CA3E83CCD3841CA793E188F59ABA0E57788FAA
ECFB19870AB2046D1A13C6E8B4F93B3C6B95ABD19DDBCC1BF76F32B00F55F210
923D99195382573C2DF937816DB29845BC233205B780788BF0B015390EED825F
6231088E66557922F43A38CA12B17BB588428A345DAB962628F020DF9997E978
BCAA4EA9F3D2E281BC56A2829960947545DCDB845D1211331DC9572C01C53EA7
1470CD92DD052B51A97BB8F4C165810C4A94BB2D75C69B349D8533B85DBA45CE
B20D7D3143169E848420FBD60A15B52119C0A9D0C24AC46C44E1AE8BB50D939A
2B9FED6E6844BEC52469C037D48519A5359DF7F89299600F87745A515534C753
77411C0FC6DC8FD65FB261F1D9F3B1EEB0A98749376D888B5F8DF5B1CF9A43D6
54101F60DCB96035572E55D7994EDE0E9E07FEB927A926D30C210ACF0D62A635
C0B9AEB6405A206F853E9552359757CE49C012E9EA631D215730334767D4AD44
A607F1F8406E58FD7716CC98AB9C2F57EBC1EDA92F4B949C57AA4B01E29279CF
8BB6D4AB472D686176B1385C6569FE69647EB5186DA2CBBD8B9461BB658CED18
38FC983F75A38E232C307B1C49C13D47185986F3EF5355039ADEB22F5F6D0801
C12D5CCD0143A7EA38B3839A904E153B9B2D9EF70F65CDA1085B1B7B951B8E73
A4D2E1482161DE2A953EA43DF3426C94383F884A7E883F32F70622E363ECA3A3
9A2AF90DCB2449D66C8C57C3BB1F2267EFFF42CD9F910C684BF410ABF7AE36CA
6DBBB7E98502AF0D2EF2E76270A3F117F3982B1F0730607840671EA7A8B0FE40
AD0E30ED6538951222326ADB72A7C33EA22531FC2CC8C376B1A85BAD76A43744
727AD95B24F353E8B89B5A3E053FE32D707A2B75DD0F49B9E6A356A2FADAB546
494DE80538B0D55AC40C4D15490711DD9EBE0419E722EF64DF103C554FD7504D
CDBF5531625214871BB092B8314028CBCC35755B8CDE713D19D0C85AC68D3B91
680B5DC6F0FA0BE0C3E5A4105D97083D261125337405B99C8C1EF7BB020FEE4A
6168FCC863EC33DCB171D00554FF7C4495F762C883263BA89D70343A2194D9E6
63E62123D81D9CAD2869C59318619C7FAA9CF16ACDB42C6D27126B10D1BE1E4E
22B8E8BEA8B712F6239A3C7A9C2AB7DA5867BB9C77BD4FBA9B901F2A3D828B0E
5DEAE0D01AB5C50B94F0193960F8D543D7A3D3F55BF168148FF3FEE398239008
02CD6174DBB52AFC319165F1AEFDA882AD9EA88A1D035F9FD7120FBB76F6CCF7
7B514951A55218AE3BED388923C9644436CE8E167A85849325B6BEF7C2775E1B
747C6EC15B3A622FF8D21CC5D5A68ECF8B3EEAE3172590D064A7C4D5D5E63EA1
1AEB415D22A5D2CF85D977F11A14450FF1C78925D4EA57E63ECF07F02BFF06E0
B809C80D0FB0C30E01BA82C502F973A1622162A037F35753622F578F98FB0E6D
9258DBDA4B137D5885A805F9B2AC5DCD7E2D97A8ED7358085FBD3F44C9FBDBB0
C072C117A6ADAB42BA3FD4B86766A5BFA670E0661C01ED1427D8039675D486E6
AE29EF944B1706F66384CE9EF26B859C3A9368A720C37B06487AA424E8433A0D
9DC7DAAFC23902C273453255D635AC8D30854BC0792064194A41D7762864B2E9
ECA4C50C92C9DF8CB5E303793908C8A9B3223AD021A23B6DEC2322E086FFEF3D
2E6FD9324CC31661B812C42F4F1CEC5AB65FF8985E6FE4D9C0DA8F91A9F2F7D3
7C6F33C8793346C53B08EB3E7DFCE774BCDC4598FB126B0C70B78EDBA1BD4911
E23E84F470E0EFAECFEF80BA1148F069393B1241C0B415E82BB0A1E94FB58D0E
18FD5D3EDBF2178A85DFB5AE1BEBC9B707F498841F9E136089CF53251556F407
624E0248EE04929311F09C02A40A58D9D9DE7889E942A98B7B4271D65177E733
639BE7E735460F9DBFA99E342DD0BA9C85754801BB6FD15634AE95BFA13BF02F
55DA3638AC52B549299EE91C8E37E9C7212B11C731B539D02776879F13840243
58CC7C67231DFC960A9F5A2BB30FE0524A361A73B73AA9D6C0686315A8DA4408
0EA18B0AAF7B1EE00F504D3881E2615E04E37936A7F294A20127804A9CB34A4F
D8A0C711374B5E562DE3F8884F487D1BD53DE924E7DB77CEFD43F709860E52FE
A84D85E2CFD89911D63645F5B4C896ABC21D01668C1B8DAEE637D80A0AED5554
5AC766CF7EC69DC6F144B639852339AA3A5C725C8AC706114CE9BBDB5F382772
2A770A185875AE4BCDF724AEC7DD9EE4CD05024BACE182D262C8AAC29451D240
A2DDDEE472D3AE7FFE10565615A931EFBB173DE1F8EE04C5860F2F12C4A14771
B8DDE46B0A3979635C48D070CE46B2BB934C5CF20AC3472041F7F2938420C5EF
ED78439B3A55CCCC9677DF64CD507A29883C49E64C30369DDAF4B6D4D9B1A3F4
7C943D7579AF51711D499BEAFEEA055876683CF0E7EB2FFBF3573F9C2CBC59B7
59767BC4E38C891D68707D40E4F839AFE0354DA519F61E613F5601875C2A7CA3
83642BE113566E0FF4ED54D9CC73ED0F6414F104AC58C05408F6EC0719FAC8DC
A8ADC4256A52C7A16FB487543883C9066BB346E8E88E4C595000A3DBAD703312
FC2948954AABEA2F73850C8AB563C515D1FD9F4D20810AF8EE6E1CD686E28B9B
5C67B1AD307B3C58DDAFC89CC7671748E6229ABCC4497042FB63CA8DB10951DD
BD634C7CBBC1C3F1BC524685AACAFC6239183E1FA3B3C2FBEB65FDAD37125FA1
EA9053741689A9AE4F3D853D3F76DCC614ADEC4B6163AB4D1BF1537B2EE87ECD
7A5B08F1A8B332238D2563E84220A23D0D78DA2B0935DA15E0E331674D2ACE6B
0A25937769A6DA57573F43139282620FBB22C60A282E03D5DD4F93F261499AF3
3029E1EA445E7A003122F932722401894A51113255B91C3905C3E9CDC737FA71
2A0D137265A31CD8C5B3C27389D108AD304B5B313206CF283400B7689C759E6F
51D28E0FB06995FE87C1D8F55FFBC646DDE39B9E3A1D64F73C9A83B60B361A8A
08B0BE182C7D9C4EBAED770BE9311B576C9B6618B44AC7EC11DBFBA9858A71FB
3E0212DB0E88A94A08B61559152ABCFCD2B58E662FED0C4202B491D404382FF8
20C453EE3CCF7D9073153F8A14A9A9E671E12219149E0C57FA091678135B5A67
9EC386B05DBDB98B1954FDF62AA7A5C8136DCA606D720D7529E795C1D958D1E1
22C5AA2341F7C4B9F8B1F75F4534E565B02B400927B822D98FC7EC83E59A7A6D
BDFED0C4D593F9387A685D56281088E6C11215265D2968483659F0D41E05A6BA
4E4F00D3E00AD6B6D1267A853616A332A9D54CC5606DAAEBEA8D88C3C40C39EF
DCBFCF66FAD5CF37E785B136453F823CA85A13D6366A4B72996877D922DC0124
DD9D9EFBD1F19C0E99E6AD20459A433373D525169735D563E43D9177BB1EC6B1
7D82C557D99EA1754C8B830B7F4C25F0271F0301BBCCE2D6D5E2A6EF9271654B
75FB3672769963541022BD2771AD168E7C22E9882A2B337435FDB7714605361B
08249787EE8959184E1199995E685F86A3B3AA74F1C9AECF256A187ABEFDE480
528C22BB86EFDC266754F8115A5BFBC3AC5454600E471C58B65DD41CC9202910
41B0EE2E4253436A09CCA09D087FBCCCEE8E43B99C3934F926CD7F57386A6C75
2B973882D6A9B1690B03C8C3D7CC42F3960DBD05CFD99AF55598C2DDABDE988D
4623F9CB1E3CE9235E7F9326824FC88DF105A1B944FDA75828E854BFFD52EBDC
17FB8EF079CFD54F4D5A63F06CDBB276FCD8412756982EE595A84153BBD7EA07
C5B3E9B826719621209CEBF194EADD3CA56BBA1370A65F096C2B2ABBE5E93680
193C8B54DE3B15B86AE129BB253E6E6B0AF87FA313FCEE72F7F3D3FE74E7408C
EBFBD51328C9143DD3929F688BCDCDC4C6F190850979B374CF06D7E628BFB219
03EF9B19D17A56363781CDAD6AA05329BD6CA959B679D5E46B725FC729760FFA
C2C88F5A1B64327864D92B49E401A407342FC649C69893E87C7F2568B4EACD8B
83ADDFDA59C7699153072F0196EF5F364698E20688CAE044A51E893EDE46CB21
4A1D2F496E4C46AEA21804D646706F622F8F5953EA898288A71A242426B33756
42DF9148AAF5894899B7257A3EA32366AC3AF4BD6FB5899C65DB2E63B7E4BBF5
0F54D02CA06E3AE1257CC23AF7CFB8C177BA40493E2C1BC2A7484795770E85F4
A63E3E34141437DEC85C793F8B09E5E69ADDC66318ABD5DB866049AC70DE03FB
34D9924E4342A41FA31F882F156D837FC6A3B79EAD6E29E403DE55549A41102A
D473515635526951655AB8317421758BEBE5DF8A7BBD78134855D354DBF171E7
220C5F2080ACDE4F32D78B10F653BE532E70170AC1BB682104B0F3ABBA463F86
E4965D9642232573E4FBB6CE7FF63E1DC3B441D9A70C4363C2F2D4EEDC45AC24
302312B3EEE7FE7D8848F285F201C07101A66A43FF5D104FB035203EC6E7646C
9AF381210655C5A2C02AB11477028FC5B53C5BB87DDC80EBC01F7F4DE187C144
9A03B9FB4E6A0180A72DDCCFFA23BE7A8B99CEDBEE5997940D180CADF5A1D578
A1F89D1E107D0FB645AFA49A8BE59D33023039B613A32BC527401849CEE1D819
34CF4510B061D093409446DE3E220C9F7ABD3B8C3CCE3852D018FCBFEFA5496E
555FC541120600855FFE740EC4C8ACBF79231F6FE3E998300F952870121717BE
0691BC47A05036D31C81D19AA3A02271337CCB36F9639AD3522F990B3E9A35A8
C7E0AF5466E7FC05A0699880D8C27E7591A0CB6B0AFE5AB737B5C91BC0516D7F
7CC443E1CC2A226F2F5E3FBC84788EC9D982CBB59677B3D1D8545BF70C9AE0AE
ED46EBD34C2A9DEAD6FA85E41BED926CA40CF4A55F5E970DBDE008EA34870B12
E2AB8114789A4049925E734464559015AD9CB5BD570C94D42487196228DA4FEF
42F19BDA3995D2A0F9DD80B7D6CE63868D78D72A7609EF9BA4CFE019D227D166
B0AA0CC1C8CD9D35FABB64E7CCE603F531075EA3369CEC7B702309F0785D1D2A
2211302BB1508FA6B197A97D4BE68FCB90508B647012B11DB422764895A0F472
BD325817DB367F6086F42191FE2B92D316839813BF162B640A1EEDBDBBC5C798
2063DE26B4E22F14D69119C0ADC480D6E673246ED683E330543FB2542C330088
2395B3E4EF422009F44973B8F22F62816F4998681C95A2C3600BA970AA6617D1
6B46407C6AAD3941627BBFEB0AF0909A1C93AEDC9E060A6147CBF5A99B0A8CBF
47B27B14FE7BC388A8517B595737E0449B34FD3841C6FF5FF06835DEBDF6AFC8
00050459830C4364A77287F32853C101CA189698115577567A992ADCE7FA42EE
012016E59CC4C69956FCCEC35181220C23C17C4718FD4125ABF0AFFC67476571
6D6384C0AC805C06DD4EDB83E6862B3B83102DC9B06576AC79FE75F45C3DB7DD
14C2892475219005A28B6BA5E9DB6CE79066F4989BAF01A69B000248AAFFD283
975707A8C04FDADE240EBB0DF9FC5B3446720E171BDDBD74D8F22D34DE4762E2
A300CCE5E739628C7ACF70A08F0631066CD31139C0E16B172C4BB599C46AE6B0
4B4264977DDC736E7A71AF5C054544480CF568640898761B36D39B7F63BEF259
302DCDF5B7657B9D967CE378D550E6CEF0BB945260B06EA14498D3103E49DB4F
97F68264F7AEF47F284AD10DD1526A2347994B7E2EE6FABAF93D70C9F83D041F
4C6FB32FBD996C0E99E88211CBDA1F9435EF487A1A22116F2B03999E51AB7639
F6B313E4DAE15647818912755860656BB4CB54CF268172710746C4F94DC5CE80
B35594553B1D9F439E1EA0F74C4367900B2460F7F2685DBB6F25836A7A2041B9
07D7A108812D52F67843D792800C42CED2CDD0AB9020E8B16609F80194B40D79
209D5CBE3B3DE4E3D6B0BB00CBC073123A513B39EA5EC0A29AD2648002E6B3D9
C25E183043CA266C5DCE3D8F095704E1CC5ED9A506A31D08C9DC4AE63341061F
5EB075ABF37730D2C8C535402DEB84B931AC1471EBC59ABE2314913AAB47204F
7C6E2076DAD258B84D2CBFCF68F48DCA96D450F957CC8D92788EE08F417EE0D5
D2FE9B94F9EAB84AAB22A48A348D1D0A4F442D2F278B047FAD487594D85922F8
392AED4A93E67F1FC901CC329E5663F77E4AFB2B00BBEE5995FCBB77911CD402
9D7C9A40C89EBCF4EEE2BC235049A16052562FD408DC999AB7FA62636B387D0B
F2D0E04CCF2975A0BA4FD11D54CE9348F0EDA94022A3D7D6B91D7E7D5676F5E0
FEF18AD1BBB93A31E362D4E89A68A507B595DB2D9E778F0F0AFBBE988540CD17
EA8B8A231941993B12A941AB62B37144D2BF6635FE1965CB207B2BA6D1DCF5F6
330FD2E3DB595661CFE2BCC755A56462498D7372E2AE88EF426969C0BBBC87A7
EC00BFBE103447213FB639121476AF6479B273EBB5B00A0FF016A36923946E95
21BB08408A528C8B66C329EE52E7879C6F729337FDE0C81F32673F20AAD5ECE6
806B9011B675CD125C5EE2A0468133D48856C26DEDF0E7FBBEE9EA89B52571ED
7BF574E908448678E925AE42E1AFEAF8D7138CA282512ECEB57701AF51C36AFD
9207BB54E8CFFA5339F295C50BE893E558F90129AE5D9DE7517F0141A67E0BF8
C636724498A07368FD98E35E2955B01C8BF6F681C68338C7A82C8DD42A5AC80F
EA4EDAA2FDBEB2C159D9FC510BC3E949E858123CB11F3F65BDABBBC8ADF1B334
13545BE24D6702C71A0905CF9D2EB8125C3AD66C029C279E56CB857E759DC259
CD69D5BEA8EAC4F3C9F7BCA0C9AEBCC46CCD67CE853F0206A544641BC4E1D4A4
879F64C21DF6DFFFD4D7199F5496D443E22F4A91A5031D284E972CD9819C2D67
C86B53A94F34152175F7312D3865255A700916485AACB42D485BB53FA58C8962
498B70A12130355C92E7FB2226C00B38D34D8A9AE73BF61234686A98FE39C091
9D0BDC0D905706603115A157CA62AA3B4FF1DC8AEA461E40DD8DCF2D68928393
F62893E05043584CCFD57E9D6F62190510DCBFCB63237DE914BB0B4B6C85BED5
B94802F628FC110FC3C50F17138C82E459A5A03C3B24F82D7C81B4B5E6904565
F7B76579C33E6E7CBB636B3F23464BD56687B38E370E445EA4AADB7CAC8D5E4F
7C3283EF3F4E6F3518084BD31207FA36130E4583B597390309E989F187FF5C87
2D06D1FE2C766F1E41173D886E565E6B7C5CF24AC5C8F3D038B1538402673E6A
11942A9B0E861EF95AF325713E7DB08BD6FCA1E4C5F4D7837CF5A415BBD42D72
856A072E927ED8DABDB46148B001989D98CFDC893844278D930B4A9FAD324033
136F810224A369C84E2BB3DBBFCCFC3F2EB4C654ABFED7C56A81D7BA63637763
1D83E87514D74AFBC46D63CBFBFA1D326A7FD998D77495880A0272BAE2E65706
C101B2DABBB81458E04DC1896302722692ACB0D7955B89C7D9356852458861C1
772B11EB148D3739DDB002CFDF3210DCDB2B9DDE68731F93240A613032425667
4236261AAF4D9E994A198873DBADA20E149A0AE85367C9945480C456C5A767A7
F74903A866C12989E9DBBA36491FFEC4D4271E2CE5DD8393DD54BFCE50535296
C6A3E2DE4A1E86CF75D648131194DD6767ADCA3B987A8497D00421C4A946EF75
CE17D7228C6CBF3A8BDAFB4E35FAE4F07BCE5E136B2D9EA2EDF3FE0833ACE28A
B7D2DE9BAB91C9459C319D30E577310F4E72FC13A542AFBE287A32FDA5E559D7
4487A45BF4AE66AFBB8A3ED4F0473281706B8B6C4F268F6E1D3109B1BFA00DCB
07421BD15B2D305D33F077EE5207870912FE4F83F5E03062693E6864A8ADE9DE
B957EE940A94FC65A9EB799B2EF967A857789D37ABE79ADAB8201F9C1B048F69
635CC9AD9144D709A011E6237D6BCA76650C10D8882D498C5449B59F20174EF1
5E0E6A60BDC1A23757EE3D52A4DCD1BA98CAC7E3AE2601DE0240D104A40757C5
F03E74461E70DC053AED24F5072E4530F3D7C783D2580B2D863A8701FBFE824A
4EDC8AD3E905C7E4C3B90CC5457BF92C2EEB94C690317C3CCA7E8B751B0AA01D
99C2CDA7A7CFFB107475310C2CEC5804FC3AA089B68B662FAE39BD1A85F7A65B
7C11C994120D521E9644D2834FB5AF2D19BAD80852B6399C7DF6C4F54ADE9B97
938BFDA6355B17F7871C902F4DE64F441A6D2263789DD1FA2AAA61CAE83CE3D8
D00A40C9E5A591564C7091C7FBBAD54C831A85D091F2A4308A85FC4AB76E87AC
AFD3416E0BC648836BE146BEEFBCF4495706079232991C1CEC886BEAFF04AC41
FC2370BFF8CE1DB50F38ABF4A960DC9585F0C43D165B32A1E218FBCFC9132A07
1F4D03B584400B8DB75F95C3C210C404898CC1075427C0E6E22031106C8018D7
831A44661518733476CD2CF12591FF2FCA88BCE8F2D3D712171881728D352C4F
49CE82349F6A94CAF42A37D99EF5D96DEF752F46C7F8BA06D674231C9814237D
6DF82816F345BE723722E127F4364C2A3729F3786920E9AEF9EDAD2159CCD963
6149C376070A06EEBC5FF4E55A17FBBF8A4DB362DBDF66493B249EA4451ED49C
F9874BE91AD272D02BA52E1A91178FEDD117DF5BF60B6A5CDF0173C3AE2B40A5
94511B948AD05B898EFF0FE70E11D0746101CA0390E1741CBF727A1151762415
5883B3FC66715F4B5552D7BFA98428089897E9E3E9C9FB7E522CCFFB7847485F
FE70B6275AD12A5CF621315E7A57F055309C879AB8FA8045BC5E0A6E9F3E8DBB
A6F3689653F2898168F8D10B9E37F8DC11EDF0176E53E63EB8C8AE5232D0F778
A117DC94284B0906C12E8B51BA62552EC5FBDA72F939436E7FF8E51E8A5AB668
77E5A74DDD581EE2E181EE0089EB07DEBA57E52C04B683A490F8B25D6FB59AA5
386A70935D3F09194D0EA1186DBC2DC6B46E0DCC846DBDBA1ECAC4E2F1FF38F2
E580178FB32C03D859EB7C2332E7EEB4F1BA2094402B8B2241175CE389BEC1E4
6E70A58A3736C7C616BA7FC03B09ADDEDB7C56CFC9381223486A75DC8AACDF6E
049D7C472EA427C09820CC20D03C826CE7ED8CCA53FB7B5400945F47D088CF99
E9C46757B32D13B710C044F545A324911756578C710F46B181EC120DD2C22E14
5122422B6B840A14851E948073AAD36619ACE42791D015130FFEC6501B695A4B
597BF2EE0589A7971ADE0B6DB066D3F644681DE7558A75061078F6B58EB91CD6
A1271EB50BEB24192C6720757B18E468EF834063C8720E5524CBFDD0DF0C3E4F
5BEDBAD087FAB36D64907708E4B6CD50C8737E80E75BD086D7CD085A00B5E5FC
AC9918AEBA5B0DE180C0CF6D06A2A89B15508FAA753A81AFA6E831C17CC6B2F4
00507A36FDF94B769E2A6AF1CDC5B3FBDEE9E175EE2E23DC31EF1D27CC5ED41E
51A26570C85F74DDA889078E4FA5A7EEEBC8FF48202A19444C1A96245A0F67E0
5A9BAFD93649411074C14A00A04D3A1501E6057F296A77DB45F26796B782DD47
46487C02A919F28D5785A07DDFF2AFC4BDF15A25FCE42B01313321DE24592508
3090B02D650FE4E5FC34E8600E06222332A4757DEECB5ABD1C58A4BAC3D6049E
DF02DB6C8198815BD7B00B2E22AF594475F44BD79F7479AD8D8C980E8B01FB7A
E313901748D7689E8193A36D0483098841B41760D829618DBC0796864FCD01EB
E3E277A5C2F0217160022CE969ECF5D04A35C2221C955E16C185D8AA0AF99574
01AA0E110B346FD2B43F0F9E3AD94A07548ED3A3D377D3159E42785600AEADA3
8BAE07895D3D4947EA30FD98C3B2B0CEF3191E9EB130EBF1F32B113E2BA66492
091F175B75CEBD2D10E31AA6212919D1E383D245B0125FFF8D967F1F67743A3C
A2AE1DA0DF757F15226E40E2EB4396658E85FFCF2785069F730744C5E15F43B9
45B4A1392B6D9BD16A7DD4BA7E0D5EAE11474EA0A7D3AA7C7FDB0E5518EB63BD
9385F597D9B54CBC871B72B54DBF4844234BF22429CCBE832193045BD8CD0D6B
AE91F164F5BBE0567BE3D0709B76D9E6DF07F015570E0D1E1799D8CA5065D492
BC507134CC954F54586F5E606E517A8DFFE2A382876428E0AA9A730F718DB65F
D3E7F57140A8E12E48D78FE44A47807A97170815FDE162AD105593B632604A3E
C971FADC79D331AB614E1112F6674765716D7F086AB57A5B1F1E339917ADBDFC
E679B3F8BF4D29E0BD5168C39BD7AF44889E96055829C824C988BFFAAFFF4DCE
5DDE62E4D6EB7847316BEAC2D83FC3A689B3BC95CD021679ACF92451EB33FCB6
1C1FF517B053894AD511D3E2C6FCFFBC15EE1865B065B5C27F9C67CDFA2EFC9A
6F589CCEA4DEC3B875DF94A3D5AC9B4F722BC2132014C886DA7A14548829C135
AEC4A944DE5F0DC766FA27A0578AE22A2D800D95765FCD542609DAAA1A76096A
9FCD7B0A6C86B1C84A838CB04B54E54A50F6CE318C552786FF6124511C697BE6
EF738012D15960E03F2AD7B4645DB0C7F8FA5C2FE3E9D868894759A0397C816F
876CDAD5C9EB2FC7309DA4DC818E87F9DB2720A98E23FCAC430F0DD31A6447C9
3A29C30E00CDE913DA0064CA3C984AD961929CF2B7D26926EA14743B36124552
184FA26DE8FED7A3802D8602977C5707139284C6F0B4B4CA5A7E0B8B470D4217
E45ECF3B6816F3E64DA3686B2C0F8D4CC89B887735EF1760365A1CE7877AB110
F91B8B7FD46BCAA87FB83BB5B8EAF1FCF1CA1A583364DC336E1E36E6057EC723
8DF95089E8CD94FB70D559C9D88B1C3B241EAAE8D0F31518B60762D5FC389347
6C12B3387EC8CA8A91B47A027FC161F8DCED9643F2A02308B51AC40CBB0B6DA4
CCFFF155DC1B0D1626207D04DE9A48C90D8F932DDE6B0C69D6C4372FD0B076D6
FD1C773BB5847FA3B15C65857A379750127A280E04F78FDC419008C2239B9904
E8324B8DDD0025675DB8E5856105B060AB81CBC13D6582C87D61936690524302
B9DB6D835C5BAC86B747240A8421736E170FF05EAAAE4A17E04093919C2EA7DE
3535D7A8875F8BA3D55484260157717D35B2BCA686F6793EE800DAD51280EBD6
DABAAC5EB916D34165097A8F97AE2AE776D29FA7AF5A5EDED406BBC6EAAB7870
B647C7D379E4AA225B3F5B831D0717ABA373E305230671AC294B4C852257BDB2
E0F375BE53DE4DD2A1C3AC1F58E6D77A5C5E7F667FB184E043CF1175BBDC30E1
A3238DD4C238687BB66B08996A344F7DEE12A941526A812513FCDBBEBF94744B
4E8A73573F955C033453FCD6BAB901759240E7245F5C563BCEB7427442676165
745AFDBE931D69FECBDBE3EDC7602D34F1E70DF8305CDE585C613010AD55DD2B
80FD1E6715B353CB0D99C1E414BF96E920B93274DE4C37AAA62528679F3B0FD3
9320FB2872915E5A4FD7217D3FF003FF8709A03A344BCAE7D2818E05E13B8056
7F24B67EC9C1871437ECA0F9590F7BB77859A9520D0C85FF9BC08C30C436F547
88DA673CAB8F6515EA286D1497591EF732D0E785D12D0925B22437FC9F148E16
ACC2D0538C3FFE98D0001F46E78B894E23CF7533CBC35E2EF34C2D899B750384
FDC2094317D5DFF7432F32720F94E2F7DA250215E2C5A9CF86F01F75B6090E02
62D2E4D96915F2E058C4D6353E1FF8C2DF93AF0568ACA2001263E3BE14A1B79A
5866E3FE4BFA23D23B7E03101D1EE2F36B1A9736E5C0474921B03AD2F4041777
0395C36B22AC77C5F43B3FA7A6C906F26A8BEA77965E31E543D2B258181F5C19
62F9CA166034F76718D6B0FF4B2F1AC1AEF21534DDB36F639E80D814AEB37DC6
94ABA5255EDFB87B389F7B1C4F92E03F9E38AE494D1702821229188E85BD954A
897CCE7E52A468932FCA7E2C7E2809AAA0408E75C0C55D28599BF42933AD5676
AC0AC9F4AFB1FEB8285BE94E4F8F64CB88278154AB298B536B3C67AE276996C4
DACE4E32CF4CCA4D1BD35AF2820E905BE21FA0DA2A3C7BB1F5169D317BB2699E
A3F3393FC3988202C43C94BD86ECF6296BA51724BC405575CB5FDAD168132593
05FD1890E1C444AE8CD4BAE10B8952A4C694A9A2AA8DBBC6427186251D46542B
918BF249C9458E2A9081A71F2ADF14D1FBE131EA316E959270DC1A879B64CB67
EC6C013B9BC9D03C056F877CB828E82D96B639C01BAFA47EFAFADFF812397E76
BA4B76F43E4683A34C4D9185C5437613B5F39F31B36EC33B4E6AECD56908040E
C1BA0DAE1A36DC81D0456DA4E6D7AA13D8E6A7DF8F8CF8E91A34357236E3B008
0E4D61329E7E0ECB9C8D349EE694F38FC230B7CE791FFCD0866C2B891EA5BFEA
FB59EE6666B10CA7431A3F2A041702BB1D5B141D2578444D7A1E6716D6C1BD8A
3FA7B0701A18DC7E76873FA5BA40E0FFBD02BB77B14D4B488F5D2B3902E4BDA2
C34D3C42C35AC196F35E871097DA79441B9F46A570E2F8B510243765082C3F06
53E84C7191DD5724510D112FDF01B80FED98D98F463C25F34B89BE8EC5D0C207
167542D51A7B1E5B28F36546CAF4C9A4EF027D1B4D0457E50AE9F47360515EFF
E61828BCFA7D53986686C25D10A3AF8141EEA654B51012FDB0925789425268D8
C9E34A92C01D376DD5E3235C03F551BF4AAF0BA273D85D55D3A5D7457363FE08
074F5D4E87E56968AF04F7FA7D9B923C1E4C1A32D2B79D3D0968C42D3420B38B
BC41EAAE0ACF27854CAE423129C02BCF34F36BCE55402E364B923A4753EE0C88
4ADAAA183DEEAA2A16A8C8ACC8A85AB49A5118059F990E97CD78B6A0BC5C8482
5D6DE3EE2B3F452B3E5CF5ED1052A93D93704DC3D9A8FD4AC779385E5DB68236
759D7FD0248CE9DC7854448018D6A3154AEFC773B05A7F95E76BCBCB5AE8147C
29590B54BE5B3D6197CAB52E4C5AB25410C26309DB4477C03036BE73935B6D8C
E7CD4F04A8E6832E43FEBFE7A56A2BFD789AF9EF4842FE95672C9CE455D668F2
0038332F9E312382F232C735072F9945542348166EA9333FABECD59A312F6915
453C993CE2065EAB0E57F33221B12199CAF4569C52203395EE43B9A1119D777D
9B56A5C2904F97E58163C459B76B548CBC335915E87A388D1ACB1F6FE3D5F532
5A9498777ADCC19FE271C2796853F2FA5F3891BAF403E84EF5F88816F96ADF6A
8255F508AAE89582512BFF8A64AE90FE63BCA5CCEC7F52C44898471D2D5FB634
1BC937177885AE0CC5F4A11B56DA966841164738C30389C8212AAB25DEBF596C
DAA40B034540FF9C81812F8803E333020379A2FE47347AB3FDC20A8E0EA3C08E
2FDBB3889D854088B12DCA9A4700C26D36FDB4972A44E9B4709E80551C70028B
E77FA9273A9792534C7BEA7641F84999B5F0B64EFA5148E290E66CB0C8AD9827
8C1F959D7B7354BF37B741B99C2782643EDB00FC9404130157606BBB3FA9D16A
25AF8D790CDC78FBB3C89F2D655F9C53CDC70A6E21572218BB515038B8F5398D
B6E58671B4D9D27FC9E4FCF53E312CCA8C66321B4EB91DD85C93986349EF4CE3
F582E83D1378721FF0693590EC379CD63EB179BF3D2D9E5D5E186B35B224101B
F21EB3321C829E6E9EAB0CB7582494E9AF4A6070D67362DEAD438A4C0CF6D1FF
DC2A0AD74246B1CB3B0C3F498E39ADAE0CC9DEEA6585A00A2A5135C6CB5CE9F6
9D33B0B07677C6BD89EE4489BE1EFBCF679D91C46FA6FBBC9D98972CBD316C85
CB981167E22ACB58F04DFEDC9273F7F9F4970734A7C0AE02611713B7A87B9E32
A686E3DC8F07C3F35A0278EC1F79A82CE6A1C475F9F5A1FE8843B97E1E2FAF9A
D7EF5D7996044F3C27F592B8ABA314911D82422CB7643276A32BC120AF03CF36
A80EB6B017C38B2E1D8F448732E50782ADFC959A9F5E72AD5B671ADBF50C8A1D
C771CD562EDE039D39F2B9B9F69BB4FE8622A49A8AF269CB5CF409030CF49B8E
05EC9C56E87CD0CCC8EB49E25EEFFC4ACB8D98334B573080203F37197E81647B
8B48656FD84AE824E4E9BF7C6B180399F033AFC39F71C63FE9B6B1F6A0F4DC30
D922A22BEAF06EA62B642CD9BD9F2F1CD37BE233CFA105BA32E4ACCD4FECD256
27138556A33F7BA340098E3802BC12C4519F7199145FC7AA490B6BA0278ED1EE
6C5D2816EA97A8710BA8F874A2B5D4EC812989A7FCD13D3A7D8BDE0CB72A9400
05D933D9301BC6E8CBD37E040659355C7B06180C1BFE30E3B74D31A7DAF2640D
8207478033995449473EC578C1B0A6505E434515626CDB1AEA6D95C89960D65A
D4F74F66017E7C567B6AA27D13CA63725929C73223ED10E18FE83E1609EFD7CD
31DA4FB87C8266B5AC4B692751CB21184818CA51C61AABAD43BB96A4405565CC
5E8A91EA0EFCD313431D79625D3D78E20C4FE5A28EF3BA7C4415B0E646484CCE
216CB8E9A171C6007FBD050D44C1D7B8010327B1D3767DE4A7255B7064ED744C
30F76E5C5C55D28C454267DBD8FEB5E03579332D94CC22042013E02F0AA9F4D3
849F66A2CACD334575D907A915FED0F90B8B6047F736098425E1ACA1AF152571
8C46D105CBC4ACA323C97B7EDA5FE8605C46C44BC584809E1FCA932035D66336
785436A9D6A51FFB00072C8BAD9822157512776180DD5AAF680F0A9DA2358201
36D86A87A7E90611961050B5EC47866DB37E5F2C2D4D1D60DF66FE5330DDAA57
C075C01138FDE94861F90338395AFB3391625FF0DC2D0DEC79CE0FAA08CD5472
AF4C3A22655F1A5FF98F235E24B5579B3EFA4F5CA773DAD0227C46D6A5D5A032
8922712235A6C9E56CA2760A388BBD3A1ECDF1425D9C2480DD3340DB4A124B3F
697F85D074526D641208BCE889D3AC18FBF43F5700F729049B607BEFC7D4CA35
D98C8EC996DCBDADD278C57C694E18D85FCA3569223A96F6C2AC5AEB258125D6
182B4799847D34E882258DB68C6032E111ED4D1F660BA9F68BCEAD8FD2C8EC77
E775A9AAC9C28D5218A2841923288FA48D2F0597AF929254F9FC75F7AC0FB00D
780494E5B338514023E8AB45DA7DFBEDCAA8C5B4915128A75D82335EB191CEF7
E7D54B331D429A857B27CFFE03598BDBB242663485166680EA9034D18C63984C
CE68C1CDB3B819D55B2157B2D0649F260418413579930764DB85E619B6235856
1DC93875CCDA3E48F151565CEF18C5D3C0F47838EF78255937AB886B764718C7
13BA9CC2DF538B6230B21E758A0D5C48563FEBF91C14DE479BC1B27A7EC37FEE
3AE3665EBB72264A031EAD0A7CC0F791734A2BE2C55572060E88E9B0CD4AD3B3
91D6AEB1DD505AEE5F3BC8E30B7244844CF920F6225FB87A55724DF00CFD9341
B0E756D661298DDD520D98FF625A58308DAD8014B120286068D248AB8294B6A9
35FB49D1B882B221B62D67571A9C61E23C55A8800254DF5000C25D7190FA89B5
0F51A8655841FF11717FAFF8F0215EFED1C38B358B9BEA83A4C56DEA021D0DDF
8D5D0E06D64BF426D416B9E0934663C51E71A5B8162E7F5A0B1A5EA9E66D49ED
138D610795235591B8ADCF7FFAFBD3A8B34C9D238B9306392D2E6E5488329540
0F872FDE1CCC5D197B344B573BC2520F327064E1A2062300959C252E2D6FD795
76358D45CDD995A557B85D0991800FE8BFF9B4B977BB9A8D73B2155E0E40C523
B5F0D6EBB6036EDE9E9DB708328EB6F29684E3B8803D27A427106B45FD06CD62
B7CC05E36180B2A66FB9EAF6A2EB4B1AB3063F46ADB257342AE8382024050B54
5E48A0A431752A5B505991D92A6D34B8EE52FBE4BA3A39AD74ED331CAC41B020
C8C780AAA5186AA936DA072A82FC91404D90997FCB52689F3BDC2E6E9F748527
0037174DF8F61521D616F3342419952B9C6015B81EF5081BA94D950CEBA7BB56
2903A8F4BED297F306A7411915289F512C439A560EE48C6F3287DA50F75E5BA4
08BA183EB40190F3AF241B3F729FF0DAB7E125767D242331C488D706B2FA100B
9D729806C707752369CEDEA9040A8E59D1C49368DD83C85632EE2F01877D3447
71D3262F534A80E30D85FFFFAE21B97E59DC5CE4FF860A12E5677F89A8F23173
83B93E3CC2F8DF1C60B3EFACD4D7837E6CD932A81590FFD053F766F49DC059F8
8CC3FD0BA333D37DF15F5A0DA779B5EE1BC191803ACFE15552FF99FEABCD0D6F
EBCA22C15A5034397BC31B57392FA6834554864C0E66B0A5C6DC8A1A9461707F
8A369998D7273259E10760BBF937B3202FB80DC3B9E76197232A79BE53258C72
039AB98697B27343939CC1F0A84020C9C974563A1E571CE357FE945ED2E2B843
C20A4E0593B011E6A77AF6137F099E985E2FD45E520320BCD816E5E0132F1CEA
C86B455562ABCB3ECBEE5D5EDAD6C5BC510E4D265ECE9B31E5953CA6E881BA4F
C665B93183DF39501A4B5548CEE240D04AB8F2AC05BBCF2AB066F44D9BE5CCF7
C53EBD3AAA628CE3707BEEE23C59BD1E432758529CA86C548E285F841678187C
F80768BB539E4DEC4F2F86AA8DA7A83C021684649BBED5B35EF64D02A41FD761
E3BE1E7F7B4D3C79EF1DB69821D06D17E2BBEEBC9124A4163FC6FD7C9E95B713
742F27611C21D24D14F53A4BE93EC88900BDC482B7FFB868CAE95736F49C9F48
C9C1632044B25591EB2408A858A180AAF2A962A88834CC98E3F9C6B566C56031
59865684609EA631F7099756E4E9A2282BBD19EBC7C8EBDA096FD9B7616A7B1D
ACDE7EA2D7A11DE0F3123320979B8106C0FB56E47A88CF1E86C86FDACE7128A2
AF5B86319E202BC2BDCF43073749D0B7FF6012DC765E235802191748F8E68FBC
93E169DCE73E85A216A582FB95409AF51659AFBF3168D67FD3D4394D49D24EEE
9F2979AA054B652F7B02C22D534C8378D88579A3D3A312488D183561F9B08D15
31146FD03923769110FF3E18908F62F1CCE3E8B72AC5EF73069C4DA4034C9BBB
D639F98C014CB3BAAF16C33E51E6D94E6FFB6AA89141C8EBB969942FEE04FEAB
48672B7829B1C9E221525748781A697ACCC41664F58C92A447B5A71AC471A778
2ECC8AA704630708AFAF432DDF06E16644DCAD60448F715A5FF4FCE090132C26
E6DE0A3BA6D9986AE6BDAD7D52F1E649AC906D45B06A7F2BD057CD36ED510CB5
BA8EEF99735A838E55D277F844262E95DCDD167D9144671F72BAF298476473C6
DE1939750E305326419A5BD449F14A96C7EFAAF9F348997DC6EC2A65EE8F2B37
C465C53A0E2EDB25AE175E292631EBD5B43F47CA222680BB39D84CD352E13E6E
3BB64CE2A33FF098CA4BFB0C1FABA69372F332A3AB0A8A5E2A2C711DA3F71117
AE835FB40FA00A1C7D3934A82D0A176503B8CF11535AFA063AE2B07663D07494
D1E144AB3FD68EEAB9F01E2F37E4DA7D284A3F6DB720074D9598568884FE9AE5
D4BD88079177019BBD024B1721C3633EA0C3AB9BA39F57D1F574F464B3B0EB0B
7F54DF80076745F7F1C63DAE9454F4802D7E54AEA6FF26D31CE245AAA515C5A8
59D420ED18008B194778C1548C39B4EDB6BDA6CF2312AF111E3F8539FB884A30
6D90B91884CA303EF3B05A15D741558CDCD3DCCA74AF8BC41F10B534E614CD48
F763E2653222AC455590C3C550C45240B6F7B992F3A9BFF547AC43A5083DB37E
EEAAA3F9E5C356FBF768CD3C42E5C021EC90880C4C87CE7A6A5E4F09131E28A2
FE44
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1200
%!FontType1-1.0: SFRM1200 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1200, tcrm1200, larm1200, lbrm1200, lcrm1200, rxrm1200.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1200 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-185 -320 1420 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF049F26DBA77FA20B6513D
285BE588908C3BAD6A1BF20F213E587F1372774EF31D66B237AD60712D60BCFA
83574CC5F88A6B4676356ABC2DCCBA498F4272476923789659CA8836F2FDA94D
38271FA2CA8B77D7099705602FEB41085F6674B7AA0DC588C9ABCCBD9115601F
CDFBCD7A8E3CFC8B1E718E576254F5F05FAB25DC253CB561EC3604749243AED5
76898EC99BDB1760B0CA75CEAE3FE6FFF1700F64F585BE9267ACBD5F155F3122
732792E17022F23B1F46FEFB0696E5C2B78DE0479F09B6512035B9C488042B62
98525003ACCAB6C8F36BBDDBF6E82F5CFCCB418706BBEC1D4E42086E70847405
3ADD1383ADD34574F2C6C64907B0561F107A259A649BB525F0B74CC3B1F42412
C4F81A7ACDC6A3F37DE7FC06DEF21B9821DD39D75432AE3881E431569A012092
38FCECF1BE90B0B199DC4D56EE18658B2818B69FB6836486BA302CE7F6EB18CD
7AC5AC6648097F65C8AB851E9BD1696B9703230711F68FD82E1DF92936A4B1A2
CCE51645573EB0E762D68A417AB6C0A2EC8756FC9BFE5972DFC4C794E948A970
918BBB1BD7B31F9B1B323EB2AF8D41A153CB1B1511F43560825DB6ECE30C16E4
902BFD1EFF59F06984F36F284553AB3F2C7901B37ECE058F5E477EC9C629847E
1C7A3628DB7C47C099A0DF53F05ABEF94A760232985AEDEEB7AA05C95273179F
8A1AEA30BE626653D22F7725C28498D776493AF6DEBC59D44A2F6F26E5DA1A77
7B9EB9D897130FB3F6017F80AF21E4FDB73CD96834152BA948E1EC4765B253A6
565F51A1ED2AC8374CF4DB767E7F3FAF13F0A1198110F554CB6735D3C2DABCF4
0C0A431D263F22D091D0F560ABF5968868126430A293C6E8A6A87593E580B110
E15A84AE30E4846980EC5C1FB6D4037D7E1DE8CF57B6A60DD4DDF422075F85BB
0B1411164E99A03A3591915372454A70C8CC75EEE08AF87D35032DFBFD61A4E9
F968D1F514A69D62B30B89F47FCD45A41B423664A7862A1246B6D7C5E2B352E3
D5428D2B6677D38729C5752DF835EAA366A11F6C7564C80EB1E0A3EE9990ED0F
520EB2AC073E63DD9C935504D14BAB14A4305B3D64638B6D952333CFB7CC93CA
D84B6DE80B35AC82623BE64BB6C1DF9165E00D29054A5911CEBE09A2054EB39A
7894F49184B672F4AA1143A2633647BCF502A77F12506C02F1A78AE9061F1497
CABDF651CF5ECC83877724A90D67D660CD4C54EFB79F9A6C1DC8EBDB66E8D709
D4C0A81E7C7EDB6CF1E266B753AF6BD100261A6CDA280902D3F0D15EF4042F54
5586901E870F2A99727E9B64147EC20330C3E54FE01AEA9875DFAEC86A0B6F39
D89E035185C3A6B25CBE093FA5C7BDCF99E5C68A9EBBABB3D61A6AB4F30B4D7F
94F4B4DD1AAB6C22FC9A18BF46B81CB362B87BB87E9552402C35490285FB83C5
EA4825225DCC23DF406DC5CE8E67FFB64DAFA43E89D6C65BA6C0F41AA44EECFB
DB8B9ACF11B6ADE903B6EB177A00E2B22593F7EDADA3A7DD72A3BE1D488E5BEA
BB9327D8B0187CC87BFD35F4591D3F63B87490338692E1E8CBC869CA13C68761
6276CF2A654946B67B1885F915E2D53E923D1A7B9D373539E8AD0C47731B05B1
7E627B68C4C1C9FBEDD4234643720D3A7EE90502081339CDBD455004D38302E0
FA91517F04289EEB213EA283590D0EEA039CA3BA5694C0DB35F68EDDE43F0CC9
DE58D2EFEF8E3D81853BFAA0BFB73296E70ABAEB606ADCCEFE9AC3EC7736215C
B144B249E1FCF4A66590502254335D9505C9A962FF3A7D45FF770DB07AB439DA
BBF81F0F47330560107A6101A5C76F54C285DDAD4E7817C6B93392DF83CF924E
00DCD4DD8BEF1136AFB87E24A20883FF87DD69789556A974B8807C5F8030CA58
5301124D8A96D5B23FFD181D66140874153114B81A52D69164014ABE126D1E47
6752720C0CEDC0AAE2EAE314CF25CA05C3D569CE8871B49AAF2F371CE632A913
4E4735863644E0B7B8CCDD82F1709F81DBA6440AD57B94A928E1F15D948C7EA4
105A252E3AFCEB539773BDCC8FE919D55E1351579EC5C3EBD311A8EE9A9373EF
934E4C61DED60F0FB051231ACAE4E12B03013D7B9BFE305B9AA54B0AEC8BDADA
C3FBFD3A4ABFA43D98F2991894B0E1EA7FCEA4843CB86FC4DABEE41F24ADD548
82C163617B77D65D423C565647491E885469725CF356762F01753FE97CA9643D
7EEE4365D5C807298D61C1250921C4F14BDBF39D08F3896967A5C9BF25113779
7C1909EAD87BF0D60C43F1AE79FFB1A23620EF2C324D5E6F6D00CBB22BE70E0B
AF849544750046F6031B872CEA4F6843BC35E05C73313978F2D74A52F2D52095
25947CFBD1D90A82EEFAF5750631A17DB096B594B6C033ADC43EB9328B5366C0
A8B7DAA7048C0028AFD0E17D3A435C530ADF039B402213DF9BB13372632469D8
568F819DF9554C1930B7B3C6FAC84650AD5454E5C0DBDF10DAF451A8D99640A3
00550839FB6356827BBB65B73F31051792CDE85D8598F0825CDC92D89562EBB6
3D04C54C092ECAB357393ED723FC5A6D1DBDDF3F50B971424D86CCFCD48D1863
19203064B3AEF2A6D34072C886C476A6CB62DD34E1AAD2CE5675D07333E621D6
EE839411233A6D4DCA10FC7B48B77C8EBFC881ADB273A945015758F52B031D8B
7F9C0DC26ACA42874179022391224EC4A6B774F684E5FECE76A8B51894935637
F6D5E46DF0A70DB5F9D88AD477606B412ABEC73919BA7F5D54BB399F7AD87556
AC4B2DF51B1FEBDF3F1F385260358504330449BA38D3A321708D8AFDF862B406
A8E54515DF5EF578F48063C9AE8909DA3826875F295B05535BA52047B5ABF9E1
5825F5733A2A2D0A940C042549085D9B10FDAF9ECC35E7C196F25448616EBFF6
F4AA214E1D930796AE78307B41CD2873A023AD8A50E4ADBEFA28C1FF6D04ED4A
B2CFDED64E75111084019DE1FAD264E2B59878B431917D70C429840F03D3FBB2
04C6D59657C9377F8C83F710909D4545C8448B549AD235F5AEC7BFB1B3601705
90305561BF0F6E6F0B69FBCAD18682119E8EEFA5E24EA4B3414BECE1467958FA
51A5339C10FDC960B3D708E5211033D3425821DAAAB8FF7FD1E75A80ED6520C2
8B0A332C61623FA9A58CC91E4F9D187D5EE2D03A7785D88C5E6DA4FEA2E9D592
5FED05D60D85375C53B82BBC4972E2A2F9968F971DD9484629533CCB3A9F9BAB
012966720269F5EA83BF870A9689329659C3AC03CFA2D6EC4244035427CFC3C4
2D9C5B255193924BE58E0D11066D7E1C70005D3A54F04B4D344F2B8EDE6C88E3
DF55B68CC2F145A06CE1818F6F1CA1D5C42D5561419A69A09C309DD963F1B334
01B8899D2611D50C6825685DEA5BCA663660078DC36AAF162BB34333C807DDC7
F0A4610C18EC28A96CC8CE2A27D097080BF26C6996DBA6C9E83ACA017EED251F
A8EDFCF13F428992A9921DED654114143E04FDCDE5743C8ADF8B7C28796CF3B4
3FFF4ECC07C449FFCFF87E51F1CC702797D010E0FCA4EFE6997970064E752B9E
5C612529C9B9A1CB52CAFC02FCDF8C522620013E0C3F20960FED5CF68D1A1A57
F64A4489AA77C19171B22C5CFF30ACFC51E8831B909BF79C0F2F5E5FF7BBAABB
0CEC157CB536593F2CD762413EB0A287D9EF8C85CB92B439E39270C3A6F63B2D
63E941BBFCF53AA379D1E6137E641588EFACD3D76D92EFBE1245508A91B883DF
2B75A5EAC1EB51261B2AD4C243D76451DCBC3A76BBF57EE1FA1EFEABD2AFE642
F6F31526BE0C8C5E3E2B1EC87E54E2B1DD43A458C60B071382E0124B12C41742
B699C5237969461260B501406238ECDB963E3E020F367B982C4EB04A126C2BA2
487ED8E6E56B49B86C1D57F7F1DC2F3F8FB20B3809BDA31E4ADC0F1E2275A164
2C7AA6688C4F7859645F5C6202DCCAB0A939482D896AC7A396537569491A97D9
32FB94D9C5E8A65FBE05FB1736474E23A4A6559DEAEDF62B45083BC57D631BB3
6852FA54BEFDF6EBE5ADF45853B83145C882306E6F0B83F3DE4BFF9AA2FDB3D9
BF3E1DB3F4CF471A6812EBFA51F69413DB4651DAEEF3AAD4731C3B6B72835086
93B343ACDBB62E8E09315A077A53626EC56A8CAEAF354B04CF1A0ACE74175839
4F23AF360E2F435075E58A59A73CB383E4249E0402287B62ADF97805C76A83F3
A493AE61BD2D493C659C9A92A95D3020EC756F18E5253F269CD714AD94C4F728
2495CBAA9D2E22B134711D83A764234659630741BC6EBAACB8B684F5969E36F0
DA34B787A38CD24922C39929D49BAE65EFAED723ADD7E587117076E59C1D51AB
CBADD6B7366B109921E2AC74946A495413E20B4CCF58F0043AD5D0E255127A03
424E2AD58E924F94D9F38EE7F67DB140DBAB955C25FEA9827479170AE0F050A3
5191227FCD198B217097785D120CA868E3E2FDC7ED934D189DDC905D2BEB7A64
E2C3C32B02C62C906E10075EA14B305C006D8E434C0E7F651E7D6172EC63B042
0C547847A698F014DA6A898E9A42AFE6A237BA8AE9B8AAFECF0396E9ABBFB1ED
2F719ABECFE42D2E1F7EA56F4BC449DACCBABF37717B69EA0A619B8EED89BB20
D5A39B23385D5C88E9B87E035EBD28B8F67585A228176CDBADD21E7A2828E58E
303012486BCBE2B9E05FB74E4849AB6CC49600EC3F76BC5EC654CA100D2552D1
3BCE5F7336180EEAD553B8CC5A6A80FC2809A6905631E1797592F589AF88B635
91D81401072CA100D46D3A3E96B99E415473B4BEB3114F7C6C1C8CA4DC5E488D
4E5E6E3346000AC8A3AD9D1820E3934F0535BA6E591A90FE37A7CF0FDCCEF3D2
433F228FEFF0FA22F2D6A48279097533CEE0F128E1BE0EA805B8BE04D971C721
A76BCA14C9654E868C5C562E643F42D81DC6A3482F0096354B4C70E911AA2924
EBADAE1501E4F42510852274E5195EA582B58AFE10DA379A035A33AEFCB5F468
223E890CFEC8B19B59CED0C3C74C8D0C05A9672D280E559B5E88A710E9756248
B17D898289FA1B7927B8D8C2233BF7BB30EB70BC1215DD9BBE53B8E6ABA7C054
1A16FBDEDFC1AE71504D6D963FECC2A75A5BE456F4FDA49C656085BC6A419915
208A174972F5DCE57516D79CCDBA07C8D595F8661644BD83E2EC42D7F61EAE39
0DFB4C36C3CAA12B1CF5E83C51E2BEA4604CA5D57FE824C46B93419B9A629B1B
C7A9A81BFC1B722A9A239E9C090F900CB4364702511AAE614F190DC57F6E7289
A15B6D4315AF193EB08FFB2407FB95EF0D9938879324FE9289BF3BAB92EBE58A
45CC51A1BB082D922B646EBE0C2BA8F9DFCCB26CD0268E78E65B170F49C08827
A12F0448CDAA7E81E8A25A16DCFD325D6FAAC3C1EA83605626FEA0BF44CF8564
FA539BEB4E1DF1307357F153D860191F771F86276E6F030E93A241EDD719DA62
853EF535C7209631305279F984C53A58D9DE4629B486D43121AAD8798E48920B
6FD8EBD6094DD7117D10642A04E228EA3E501A11DBBF70DD3497AC593AB0FAAE
162A96E0ED5AF1FB203F7A2EAC0D070F67AFB364021E5DC1E5F9C8320CC2DECE
E34D4E8F317E90F263A412B690A3B665EA5A71E2048548074BDC4EB26DF1F161
A0559CFBF0634F027DCB0F552D820FB6079B6DF00C90AAEFD8C121444EE372BA
50D4665D560F4DF82CACED851E91B9C528E4BE8669293AABEC94BD6D06CFABC4
1D185BB1AC68A1029BD6C7598FE2A2577774BA6E41A99D22AD65B7BF32BD714A
8F491E2E3732FFD0A0CADE1F1C8C092162B0A68F3609764778DA94221F86D0AC
744EDA3374CAA609A2A529AB3BB927B9ECDA178687006551AF22150686742A06
722096264722C4B7C25703460298061C181F0B9FB0B28D20F19BBA023FC3D28A
BC0F5538E62D234EA992AF5BA4E8434D73AC36C62ACB4B0848DA6D4391680590
BF576A5A9FBEDAE7C12F2BCF6475EB737B792AAED625AA5CDC3399DDD8CC045C
66815E5EC7DD96CBBED1D13E534C46DB09A077839FA7EE598772B76C72F09F65
C53031F135200C4609C02BF71E56683F9CC3B612BFE5D590A4692BF4B95CA0B0
1C0801B8279A16E5786CF498EB271C57922CFC4B6D9B2FFDAF477682E404199E
DC1EA5E1C828B8D7FEFC4C645040540CD85D2F9AD995E54262CE91CA43A2E45D
019ED38B0A6947C04E5C0C540C8006AB22A632641B24EED911825E99124389F6
5E0DBF66CDB2684FBAB11D00350FC8ED47A84B487004DD8E5FE3CCB35F92C8E0
EE172A83360F2D3627A71CB85A17FD4BFD11FF528738C6C6322E9596D921C9DC
E98A6FF1EF251DD02D57D0CE131F1FB1917797263CE32BE970E6C4DCCEFFC13F
0A220054E262C4EAA12D2FB81BCF3FB6EF1174C71CA6A2C446C0BD15A804DA3F
D07EE0F8F893E28F178DB62C4BC7FC8AD8E73ECEE5C370A97A78A6DFDC872742
4BEAAAA8D1C34E1104948A8E94139A3CBE3D22FFBDF163D5A5E4758A6AC0A17A
FEF780FE63231A835770286A922E2757402F9449A00258F333545B8BB4028B41
609794047E3D303CF159B9C50700C19A7C4447E7E9B062C0F916F43427238A33
D70B1ACBEE3C516643BA82B0932590806475C91E5D83A6B883AB906D231830CA
93BF85EED01AD966A188E7800AC7D469562C77C69E5A25A664579F72EEB30706
4A57639B44D01CD4CF27D7F8A2F4F5E5CBE0BD533CAFD211D88EBAE71F8609B0
604B27C67293E78A4B3D18061016B6A27B445F83F39366C83113CD8629E43149
57CBC183CFCDA48B841A58D7F3BEC1EFD0DFE7EC346B7ABC9E54972132E57DBA
29B1804A26DC4F938627B3E553438CE493AD3C42254FA97F8BFB87466B784377
0F5BF4441331AC8FB5A128AC8277D947D083CCC7C9DAFCA752E9A824CF3E1150
A0FF4221AD123D9AF19B0F9A55B876E6A12533FA216CFC6765E644F6B52E1926
65661FBD6971ECEB154634263AC88A5391E866841764AE98EE3605A4A1743D35
462D110EE04B8C0DEAECEE9D3629475DDF9CF1A646DAF4C19A56A7FD5D79C29A
DD75445609670203136EDFC54E0BD8EAE26F07F2496A308467D38A491D5A31B7
5764567D4B68699442FA89551F8A9561F4DAFEBE8C2F2E0762A9360CD2420DFC
A7C766EF8114F30272752554A77F87D583639404959D17AB881FD7BC3A7D630C
3C90EE2B8557D90E7C5A0581920769FC84DC3C58C4C5A7891C25B844B73E5867
EEE39AFAF476B100EF0997855F6102028A5037AD7B37082C90504DF07E552A5B
E1B81E3B03339019DE292B384503D8020CD26041EEDADB97AA82213083EAF69B
D096ED66B7DDD83F138FD8B9B60041F594E5D19383BDE59F97F0175819F780F4
E7789EF9899EE25A08CA4B6D06E1487873D5649526F934AEC4533A4E16FEE207
4B3F9D6B531996A1748E27320801C1CDFD62D00D04CA55D141B08E9EE38F2B3E
7C6B6D81D18E9C3289A0FC87CDD4B8D323578F80BA1F68DBB0644DB76BAA25F9
B710F7C2A4895CD8FBC5B1A24F0174DD43406687EC5A69E450C3BDAECB48C3FC
0971D780D99C00F7BFD88AF285A2BA802E521AEE801993C5D2C6ECA90BD63C2E
EAA0088A2C39ACF544FB8306BB0A102C90B064F3437AC57469BC42FC201FE269
C4423C3EF619576A29B00ED5C55AD867DA9BC3DD80B8F938F2C8E60B6162FDB3
B1963A9B0B916A4B9DB1C5D1ACB88F98AD8CD13DBAE19F95B8BF5EBD8A35C72A
1C95BF082F21D6155E3F2F04EFA42029A4E4D84599E5269A0E9B78FF583B35C8
F097D8DCDA6E118E3539C57059DC1F13253AAFD66EA16F96A547A104CD72610A
7056AADE2E1CF84842D109B60F558AF4C9729EC1672902C0442B23EF015DE467
CBB9A2A60A9EDD6833F4E71EBCC8314DECA894C6AC618011E948916CC947E477
48285E3A0FBE7F650228C5A193602F7BC3A49DA955CD7A16AD079A9D6269E8C4
4B0EB3639202FAEACBB5C8C949F05FDFD297B70DF6AE8B509D9652FFD7F2132E
C633BB67F92B2BC1FA7D1536894DBD4666CDE1C5F9C53746F6B6AF22D6CB619D
D55CF8D81B82FD19C81CDAD3AB1DD6EDDB2FE3BFC900398534B47160DB99A579
EC88E8BA17F87277CC7CBCEDBAC34D608BA5AAEA3A7962783D4C2E72DFCFB57F
CB0D9C6CAE3C75A168BB3DA8E55145305ECFB83AE2AF646E2F77B2EC3A1498D0
D742BD9403CE3C4BF98B8230F1E78D0A4CC4489CFCC81026160F7C6DD9D9039D
5770ACDC4D4049A6FC4CD06DEF34BF3D75D8D239FF7CE6505D1BE25ECE617DA4
5FE14104337B3818F678B2412767960B50FF51E76747D6A3C3F88209097EEA1F
F7507BE4D608D72543F7692E2DB22B2B3EE3F3C306DAD1C4CCD417E875D90706
6E5B635D7259E25B5B8DB111947A740B16F1AB6478BB067D864869FE6360BBFE
E76D18849DF7C981F959D38E14CE894817DB43192BD3BB374956D581BA443D1D
90B145FE3129DD89B25E7EE404C3168D1E09793B63726DE5D8F2B1B2921DE322
FFA3082A2207ADADE56F84C54FF59E9E4927BB4A249102BCB1F9A12B73D66795
377A493370A17E383B1363F2A5F9ECF95A660EFFDD159C9DC5D33FF7B1FEEEC9
E818B7CF53983E67EC77FC4E639C8A348EF6D1B5512C356610B624CB77248292
0510B79AA1C29582AF92BD37364DC9D967DBF6AFB298B098FFE8F63B146B0362
656BF7227D9EB1D70CCF6BD5C958579A801E9D4CCCC1398D0EDEE4E5AEF187E4
B79C3A3C57BBA6BE3DE57734CD286BA704AEC2B7534AE6B80DAF02333E47B17D
D23405B567E197212B36D18DD46E7FDBA288DFAA294C00718AF600BCB5CF72B3
75FEB43E9B33AC9E7356440C26418B07FFA30D4B3BEA9FD601A8A051C7732241
B78FBD2A36C83DEA5FB04E10AC42E4C72FC5160A99D7A4B7009B1D9390AB22DF
B0F30A16B89CDE9F96724448C275B0E30781EFE6C2C6913DF9E020790534D4D6
B1967AD9B019417A876EDE63682A24C2C12FCEF5F61F3E9D26EBEF8A778BB8A4
7DBAC4BDEFFFE0A19F4FB9E46B2A9DE768B9B474D99039326CE8FBA82343EB98
B9B2377B51D025D8595656ACDAFA94C60B1DC71F07C80C0BCBA7AB6733626404
329268F4403498077C69F4DC7E03FD7A02F465D1AD4F7BED8AECF14F6E981D85
1B9888E6847DF1FBB1E4AE81A07DB02423B21EFA106ECFBE738A6D254B65771B
72A53A74C1813C234AB9F2C3D4CC02C988E91FB39541B87578764BDBF7346D51
4E95715B872017C34B7860D61907270A8CAE2B29FEA41A6AFFF82C0ADCA2472A
FBF90157DB17817F3007FFC23144D1EE7F6D6077DA150B110E65E361E7FE7176
645F560765892B70588D75F7AA1470530D807EC279319B671F56691BD2930ABE
BFBB64F34C4D4BB7ECF5DFE24EBA1F9E7E43A3301702D774DE3F53F1CEA180AA
9FD69DE4513ADB9FE0041E7E81C909A001600E104D8398E10A7FF982B67F7B76
0506D48F56C5F47567CB8A4EE6607CA156E20C6138F9C2D4D9DAF5644A1F42A8
444E5E8F1A0B67645FBFD305605B527ABF1AA3FACAD15323AEB2CD5A6D97FC54
6E899C8969FB0F4AA976C8806796E308BB2A159905FE331B8D2DDEB16FE86964
B6D218EE5A936869F74F2243CC44022AB91C8A9ACF420E7D0997ACE0B3D05AE6
8D9877C5D9CA00A88A263D6895E2831719E406925AD428839A8168455F92ABAC
8F13A3E3F8CECF07A591318DDF3C569C8BCFC0F8BC5E075CD64CD7E89595D937
9BFBBD7840EFB8F43907261D000351DCC72887DD58D3D39B4020A256C7685763
7EA68A9FF992607FF78C6F639F516174B6DBB65B43DB328ADAC6BE4FDBCB66B2
87131C0EAFCED360A9270BF7C049F5766D89AA017F2ECCC26A80223DAE6F2B4E
6347A925F6C3C9BCDF11B5B83876B8DC19F32A7428C209097E7DF20DBEAE1F05
30A70502E90AE9B41D6EAC86AA520C0AEFFEEE1DBF4F4781C6C71DDB89479044
F83D588EBF0F94E60A3003ACF66F2F7828F5BBAD0E01F044C38A64B6EE36A737
B626481618409957888BFB38EFFF214BDB5726A3656FEC57456870BD7E64EC78
841AEBBD583D2BAE64057FFCE317F53A065B46ADF698C3080DD4C17124ED6C46
82EBBEB749BCF608988975AC2DE0528548562725CFDCE97D24C28244CDBEE9EF
F00404DD01E3AC439771701C9FE183D0A9A11D8B4AF26977DFC55219895CC982
DF737EBFAA0FDB586D7D0F8C91EC8298A7FA7F3479625296D4895EBBFBAB7F5A
3704D373CEB3AF5B49ECFE8298CE6525F5AFB65A37506BC273F2AC5E9ACB7875
4120C767307CCE056DC98C2451076B259A086FD97C48146B5F31ED87C0D0C498
63DDD54C0282E8BBDD90AB81EE8250CFE2687882D304CFE1A4269E5E4187EFC2
E07D23C39ADEF64D071868A4CE38C3F2B4BE4F03735DA41A94409CA6FA9B2CFE
9848E9FFFC8F7DD8D3A9EA1A862537B0FD4FE25FF7A7020278175E7DAD1E967D
559AA75432D5EAA6105B198F24E59A8110793024B82066502C527BA239BB8149
6BCCDCC1B559FD00D9106B0D8CAD7723AA6213ACE85E407463C1BEC4185C3ADB
1255CB254F42158379CA35CE04B2CA47EAFA203ACF95F237686734CEF19C227D
503B6481CF7F0CD1F559090FBA65CE6E9AD08A7F035020F045A768E88713C167
3A10D58B5D411933144E7DFBBEF712E604BBFB2A1C147FB5FC1089A2D87D4A14
7C8F7C56591BA554EF5D7449187DB065F20CA9ABEED321A07D23CA43C8995CB1
5D115F632C7B8A056E9B898869BA911898DECB8205C7F9F15728751331D96949
5E782356A94820B642421543DC7753C22A4567392AECBD0B990D4A94887DC1FC
91B9D57FD1FB32F6A3569044D41BD71F82214F2F5E4D6D0578D958AC590D680C
5E9C65CD992750337419FD7B9D80DC2074E44D0C8BCD06D21B381162DAB73034
0EAD8530876F03FB06C48F46A055FE8ADDB131FA23096E5A07D8049D5A17102D
7DB84C824594E519184C585BD4DAB46056E08A8BF8FD8253056FBA3CDAF73131
F54E6002A22434012F989F670CEA6AFF3330B151C5BB297C6F11A2A1B74DA8B2
D1322AF0C9804C8A28006E86D54012FCFE6D72B9D4452D2A96E8ECBE0E8E0F4D
EBA482090FAFC229BF04D617C8AF5BEDA5B22C02F0E15DFECF3FAC1238EF7755
EAC847AC38FFA7D512A5ACD286AB61AB535883FC887EF5576EDAEB54B635F45B
5596BCBC1DBFBE1077AA2122398EFCA839E2DF940F9A074440DBA4375893FB54
00175A979EE79B92037815A4F479FD5F6CB13242FAC1D95AD2032B88C6B0C64D
6F381A5B0ED73CA45312D48515410BD8C476EB6F7B6AB68FB5C1200A3EB249AD
29281A239B39E03D1CA9AD392AD246789FA2F37D703906DCA38E522495CBE1B6
1928EF6140F91F1C12BD6A4EC1DA2ED68FC894A1527C8EC4A3DF9B65BD59EB91
43365584B054A5E8A4D1EFBCD41DBF4A7E2FC8823E86D2D04B58ECDE94F18E7C
5E64EA9F87278769BB6B82C2DB3E90F28DA2622ED86245B0AEF9EE7825CA3DBF
9397E0AFB7F8F252EC70527FD691D9F37EFE1C44890174772B5A3C8FE3256500
09C908F5CB913B88A92FD6301227E0F680FA2F19181821F9EE7E7939D336852C
E1EA8A8B7E6558BCBF3034AE9B4CB1FC56BBA0151D424206734017DB0ADBFA60
0C17257C1BF291985A236F48DB9C739D62C204557E4ECC6E933E21F0F75AFF8C
87C5EDFD5C043A6A93E254921B8C3FA32B3D758C2E7D2FB99E6B03BB06E197AD
32E03D1CA9AD392AD246789FA2F37D703F220FA5632C0FFEF90A864DFC8050FA
55CF4B5C5E1A0D41DF2815F189AF38C49D8E2D4DBCDAE45C2EDF2523B33A163C
87B83FEFF28C38D477CBD45DA326E365DDE5767753A1B7FB80FEC1583A626178
91054C2BA28AC48CF9543DDB2697B15151088234AA837638AACAACF809AE9FA7
ADC01A9C046453ADC65A246A1B7BB9D48F75DC33368DFCD082DBDF5CFA079EB5
7BC97A6CDDC866CD6F0509DE2B67BE5B206883CC78434B7BE9CA4E853B83886F
115E57BCF79A3120411A87D392E6BAE3C8F55321E3626CA59318C014586001D2
5076D02FD409FABA5247D7A2545E852D7621680EC064191CD6CA8C29A27E116C
ED1008C9573009A0848C8843A60DC46D368FF291CF91CABE77C55ED01005A999
2010D54EA695186B73412392E1CC7C2EE371DA6D4236326E6DC3A046FF00D80D
3B976D489203DBE118846B47836D425FD2DDFA10C5C2BC214D920E0FD64145F0
06BF7BECDA2FE11E14ECB5D75B5A0154B072450D206975AFEFA311AEEE0C6F70
D5653C091F908198D4D76C7684004D99F15017B2ABA6EAF8E587BEE894323D0E
3ACB8DF8DFDCA5849AC498CC038B3F745E070077E0E26F3A57DB85F0A0C1B2EF
3FAD989DF67305D3A257892F11F42E4327DA0FBA34901D53F6E6B3DE68851CD7
4D3CB86AA7045DD4BB32D03BD14F31C5CF079017B3E55D9BC5709E9534FEBCC0
06B66DA03FCBB052CF5DE8374831544350BF1C719FE1388647CE1F7871296788
77175D3B653FC3DBDF760C0D2608EF38A79F4693800FE8BF5E1F9EE72760EFF2
24D845E2F0A525DF314293EBCA56302BF10AEA5F0624A5AD8CD5760527EB0B19
75C9719C445601286712B4D3E7201D5FE90A001BD6C32335108E582913D7D22C
B03DE9CF832E27C2A0CEC348D5C39D11FF43BD4DC965BB52A0F3F3BED706293B
A47BCDB2EB6E4E14E6EF00DBE09FABABED3AEF44A4C713189F6AD4E09752795C
EC38065790887B7DF82A871585C76B0C7A821BE2B6EFA6CD054422E68644E292
63F1D44E0332588C5AA6C02D5E20A0D4CC2D8E08B0E6E1DC020E577FAD84ADB2
ADE8FAB00EB7DB84D22F4AEA4D016E8A37D3DEBAFAF68DAAEA19A2D965A521E0
F18821EFC3824480793BF893C527301FFE7E49B7385EE2E22A73C2580EF426EC
113EFCBC7193A93F3AEDB8343A57474BC8EA3C8FF291CF91CABE77C55ED01005
A9992F0CE719040952D77B2B805E4424AAD00AD85004A340883AA1399A9A55DB
AE33483C1394DF34DF0A02223BB64A0EA942EE4C02AA9B32136B82785136C06A
D19614EB0F5E6D3D989BFDAA1FB31A98D0887D850F2AA31199019E16FCCB4D41
85A3D58A974363A761B6AD449A81B0392F0FE5A76C320DDC353099E15755139B
F189431A21B18B28C4C9EEABC3CDDE7C0DBDAFBF8433523145302BBB9B6CB1D0
5B8FCF077134862F2450FBA4E7907843F4803F632C83276E624A4BC906011BC4
05EEB6D4E44EED283E41976CB28D0EE23632371F4B616B9DE4C47D3CB98289F5
B36AAA2A3A464490D31490CF0DD01A3C68AB42C79121F0A0FF05BD0369D043EA
C8F82E9EE3930D80ABD8FB7F11AC4C6C4B7606F532D617A8CFA83F38E1049FE8
BA97C6FBD1CD1F597D26D15893C62738C502A4832E4CB743A084759316430203
C14ABE7EB759336F683A1785550EAE0B56FCF8002DD3A0AE477133294A467647
AD0FC40810C8AE35226E5240B126836CD429520A1FFAF7A18DD17FC4B6653231
AD75BA5BB28C9B1C5C2B667A254092057FBB4DBDBE877292BD8D611A701C54D9
F26B68767422A8D274DD80A07DFD2DF36372D3037F7EA3793BF08148B1E08C47
AEAD9BA2914D46FBD3DDA74C3D0517B5CE826519D777E8D0A3C4718BB8DB9432
F3BEC83D068758405E9174515157ABD73292D53B4269EF12E2D6B7B8E8B3580E
44F113BF9D1D0F0FEFC718273CC8C76E308DDC8A645869D3AFAA779283E95E62
A8E7D5AEC3F2157426CBFB1DA7323A622D250DC3118166ECE019AC24B4E157EC
7370570160FB37AB109156A38BAE7AE6E1DB96132E5EF8657CA969F66C5D02FF
E803FA7A34552EC85905E70537443A1459CA2527E21F79A43C82810372D7080F
2CAD003F64E3166C437490D82F8B07D25AED7A1392C79E25D5A7BA36C44270E4
66ED63FEB2038633FC9B336500D1FD52E65B8DD57365D04311DF3698E1B04BEF
8B8A3C1BBFA4172F6AFF9B8DBFE4D016BCDB5E2A71B293DA3A91944C23E089C2
262CFF37FF04E75DF655BE9D24BE9F7FE421B18B103A068C238B9286FDF80B64
3B8FB6C96595A81C56A2D4D7F8DB1567F27C51CE0E7A2FA759BBB32E572E695C
4ADF750AF3544C90C6B39BA9BF656A9DE14BCF76EE67E7F180705B8CE16D64A4
D648C9F7020AEE39EE9F9BFD625BDCBF01BA0F44C02EFE743C1BF12559885FA1
775B1B04CEE29EDC46BE4F2DC10B8DDFCE31CEC6348ED3641DE826BB6C5ABF64
6F84EA5162135A20C7D92C924EDFE4A74682224F815CD40CD17C840E8550623B
AA232173E55CAC65C412095E915239982825BB6CA738BC3F84417069D32DAB6E
1FEA758FFD1C7254C71EAE8E3B227A0FF03E8EF5E945DFFF5ED04C6E1E617F0F
61FFB6C2E56A4629422D8C0DAE02A7004AD3D62A53AA55E1F31734EA4756B86A
13B0E94CA3F360D3A88A3697CFDF0011EFCE813A7B92DED1B72756E6F452DD78
BEDE43FE321CA418F1F0FA4D4BFE7BC5AB4515D3C5A93F7A2D4EAB0C109CC6E8
B19C6D6C95C5D6B50E6A64C63FE1328AC7739896F300212353C533F134881317
4E98B349412D8EE3362E48563A023B353DF93B2E142145A6E4D7F7ABD0B5B7B1
D96C2783DE93145979AB8F6EDEF96C7FB9403167F5478035A997421FAAD0C4F6
212AEA7BD1CF56F5D5519DFD153E3590F30E51328CE1986017D492F14A2B2F31
7096D4BD09A7B75928D8E8A531E44E428496898FB0B152DA90827755C9F07CD8
355267E47B52CFFEB058A4A1A6DBF3C28EDDBF9887C9D8875E63757D0508EDBA
F75828EF4BD02A87C94DF4E605F32DADE97DD8E5E6454FDF3899446FB467BE1A
DE352F6E1CFB01D9A81CADDD687BB2C5E65424F3A2997AD4D23A396FB29B42BA
AFF1914BB73D0F0B256836856A88828ED1A79685C440826B56E0C9B60E763888
C011DCBFB6DB2AC1B79C426F04C92B6238FB3B9E978253BF6B9D16E54503802F
1CC739C1D68889D68777C4C39E033329828FFF28B6D1352FB6B71EC6A012C815
2FFA01907797DA09EEE67E6766D025D3FAB3080D329A3D58152B1C1EDC679592
8ECCDEBBDF300FD21ABE6AC8393A1463738DC4CCAB77F019BFCB115CC4CFAEAD
8C089388E021A2F66883E64672DDB28B4A3CF60109A15543B7AE034C36AD2C79
4456A101621C6ED24139EC137F185B49DC33EC8E7CB9CEA943443B3F2B9C1BD9
F85B6BFB141C4D9FF8A3E67627DFB3C4A3410000C7A11EF03DD02BE5A920893D
DD926AF5B10438925C493C2A12A27C028BAEAC24326CFEBF9730C494A26841E8
2BB2309FBB20FC015E78B6773F9D9A11962B27616CA27B0FC1352D3E1C3F732C
FCC2F62DC64587C71E488B03E22E738065CF918F15C9311C48F026601B2B2BB3
2F95E976E939CBFA49BB931C7F5EDE0864CD0FA2036B0E352746D6125252AF00
03D89001734BBDAEB1389B7F4AA4372C2969DED9F2E343FA84D8452F16CD7012
9F6D490EC9C0658419BFA9FED83F46FD7A37BAF36490563037F38FA502B62650
C5522FA173ED2E3DCA06ADC73A5B4E9B173D3639AB39631FA98F6B79FBF2BFBD
6F9F869D9F1B7B6035987D6D6E2F78D37ADD377904C5796A527CFDE4B96694D0
E15CDCAE2348598161682B0994978E5348861031D808CB43967E54825F001F83
CB5728C789B0AC30704EF75096A86A82913D4E2C46480A4E41981AD21340504C
BE5BCDE7171499D5681D850309FCDD22103AEE4AEE47E0B9C157E46F177593A7
470AB260970B2E7EDE1318A5A5713684A468CBA93A8972F4F6D73BF750ACD944
343F912CFC059306087BEE48D2EF94B61693605F1C97A3ACF9D7DC768AF14E0A
DF09A32561E55E3F0F2C5C776980984F621A5F65D9E65AC35CA2B2F568AC3EA9
8B508E279C409C0B645A0A9DBC903114B000B989337A1067226DA2FFF310AB50
FEBE4E5A1F6C120A7CEA8D5E82C3DB89A62B22EC9D0CFCF54866C5EE27BD15CA
E0CD3B3998F0EC6185001F3FE04AB6951CB088FEBB62D3609BBDC4A9BC799EF3
DAF551342A29198DB1A55CFAA65310F698EC9C4022FC69691192DC32BA14F5FB
71478A7D72A9ED4D76C3B2BACFB7E0E68886A13940A431683F126236316C44BD
26E25B50EDE7E128889D185FD98834A68F5FDB5E220EF06126B357554264BAA4
DEA47280025C412AD8BAD2A60ED0BFBAAFD3539D913905427BA08B2954F15F88
62B5A8043E0C1196844BBC708F05EEC62A383FAD678BF1A6CAA35FF8A4E97313
07DB852052C08AEAAA4E168F6C69FAF7DD2476D3F5A4ADB050A8183FE258CDD5
6F0543AC139C48112D4F6B49EF2258B4F77A34DC7B0FB8D2C958169659D3B0CD
C3F134C5A9BDE851EE21F236F805123396D871405ACBC80D8288F0B0EEC5FD2C
9F3DC4866C9295B1C9EA73CD3756522ED12163F1055AF0DF9ADEE07ACFB29CEA
20632A1CCD4645BF04BF722A5CB2B69CF333063259DE8F79A0573CA2DA0BEB9F
27F06F73FF4BA7C0950A6DC848D6AA93629672BA8844F9BD0AD419F1D67AAFF5
B4FB6EA67F7B37588DA15C156DFF6E2BB7217FA6228F7DE64ED6A8397B443844
F00D4CEC90A2D9F340F5080AA24CB6DA548F1796057F74C1BB9F3151BBDC93BB
92B9F0356EC861C53A195F32059AB25C7AB92FD47D7C0C06C06A59547ADE99DF
9ED7DF0C9F1F82F31A25961DAC876981AC9C4EE30E40E2100DC2A039DA1B4029
F64DDB14C0E5DD5DD21E5049B720D45D5A30450276B5B0E551A47320211110D7
AD1C82B127517B7233B3199608EA03AE629D314D9F2BA73F45014BBA6254F966
99464F59613FE78DE50C4CFCAC40CBBB803B6BD5DDA336CE63D4A26321AF368C
D9510863518E75547D0760C5FED77C01C5EA12FB227477820A172778C87EEE7E
3C4648652DC03676DD141D826127FB56D065A20A216838306084A1E7B997A411
8237A46952BE6A493D7D9135ABF487B2122ACAFE82A70A5EC09BE8E8D68DF730
5ABC36E21124DE3CDAC210240CACBA77D2759F10AE94DE15A68109CA9D0A6F37
A4C8F7C8C14EBB709B55FBDE7C45E45AE7901176487CC2F48CA9FB940293988B
2BC168CCA410333F0515AA45597C9B0DF75886844C721F732F0BDFD6223B48F2
B6AD15C701544EB773FB1988A8E39C33844920A3463A21CDE280B20120EAD95B
43A544474589110DEEC2E4A107A0C56D2CDB9A001C41506E5EC83A00EAD0E45C
19851EB0615A8EC571C0F73B7A5EF0271F4F497B53DC48D51E1EEC3E5FBDDE33
FFCF2F26E6B6BBDB84395DF3D61ED8DA0729EB1E6A818AF53C772FC22AB1EAE9
634DCD0B94F3588C510F21D898345DD88037641AB5335C766642208828BF0A43
79459A9375AB895557D2309B67E5B86F05080AE9FD13FE035A37DD9EC83D7B92
3FEDF3EDC504712AC6D618991D52B9B20069DD694DFC94A1F3FE3FEE0601A2F9
860EED620A88BF0940BE5A982A8E3899578565680BF82F1CDF3428A412021403
41C30A2883D6E5474C1243F22BADAEF4674770CB872EEE896C2226FB7F62E91B
EE75A5758D92B9CEE7C6C5A4D612706F88862C15136AB06C0B6F62B8C697937D
FD836BF3212FF9F1A701258352246098863C4474F784FD6D4BDA5520BE31151E
61FC2AC1D42B324C0AAB921347FBA23A99C94EBBB38BD18026D475C047404B02
6C2B0C2875499B8536FE0F8C1C8B83EC196DE38DA7EEFA7EE16CDCFC5D789F63
C28937732B15C422448D6ED01489568244DAEE094DFD830F9D1AF1BD4DADEE60
A173C921847BBAA1AA124AA6816B9A117F86CC3EB7EAEAB964EBB1F704FC6D94
043A57A45AB4D52105FE82908025FCA08237E32DE2A12B5C0C9AF4785DE41194
C4F2776F9BF4B8D08FFC49EE83CE21C7F023A35EA899178338D85172B64B4888
247BAA75A4437905FA81F78A3D494704D72B379C14FE97248B8F52A58EC29232
C816D418C14110B782FD6480171BD447DA08E272DADDA122C056910E483DF295
B34057C483270ED1FA0EED48E14A38E1514E40C92E4077C53D297598E48ADB1B
2CB83BFB44F78D2A393842D64F36989426C5BC12C25DC7269714A703D5E994C6
FC97FD8A65067BC0E18A43372A68ED6818382EC02CD7B8D4D246827EBC02BF10
000E2070FBDCFC7EFBF20FBBB7100363957A60C3209945C58CF98120D8D77795
2571FBD4877939D0AE8943858ABC9BB35423A276D9B81D2567AFF7EA0159DA09
8DE17C0EC61E54822DC61E21CD6C3B2888845D2D5B9FDD69B4E286057FF4FB13
DE7FCBB39308FFCE847E031454EF646ACE123A288B44FACCD8AE77C8FB4049AC
5A01D3380C80D13F10E08E01ABD16EFB66889021ED89
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1728
%!FontType1-1.0: SFRM1728 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1728, tcrm1728, larm1728, lbrm1728, lcrm1728, rxrm1728.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1728 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-174 -318 1347 949}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA4DC69A02016AD2E6C71441AF87012AB28D4F0F6
05A1B80B954FBE39F81BCEE3BB01BA5C5E565B5AA6FC97C7B6B67E84357BA44C
2937AA743FB277BB74912DA3E25E67CB130405792F93CE2E46116C19329DE8BA
EE04B792CB05588004C5CE06F43DA6B4B7A32927F2C6F890A67FF20BB1365D06
3253F39A8AE19D733468E9F5471E11AC6CCD6414D32B064FC8EBD4AF9566E2A6
EEDC38EC94CBA2D168CF68A2446460BEE734A3DBA42E9E603A42A39D56C31B65
CB46AFB15FB6173722CBB1A11340FD4D60C9C1E5FE87804590AFD4CFC5BE2708
DDBCEADB09C259533E430B4969688B9ECFF89E492D13C71C38F5CA9ADD1FF1EA
5616C0A52C7FC2599A22FA881C576B2EEBC0E178815E97DB82FC6C2CEEB0019C
4294AB22B62F31451ED2310FF7D31077065FA4DA0C578E84DC5B45EBE5910053
4705EA0BCD13654FDD9853F9B32E4256CE9281C2A01C858D43FCD28C34BAD1DD
A9438AC1802E3A2F18A13FE940B948290D3423E7E8BB8914B605290D931A5921
2BC316BA868C0A90877010683689700681E32A9F65839CD7E737EAB2B87C9A48
BC2DCD592E530EAD50C8F49FBDDB3E4720A71674E5FC179BC0D407B00919537E
67FB521FF5A4B32317C44EDC5EEB3159FB0E6EDC040841978A5D3210CCB067E4
75A43DF2B7106A8423E4C5FF6A84003A11F256F69141C43E029888C890589B5A
DA21FF1D07AB9749BABC3B0A0ED7E8773E2E6DA850F1FFEDCBDA8CA3C21F4ED5
9728B40593A1A0EBF41BCA660EE2945426250A128C278A8DE53E7F4DBD278CF6
045E6AF1E76361AA9C9111D43C8383A8BF8A771D93499719D63A75CDA613683C
63003EE063DD10F24A57A879783F7C6E9CEF59C241A0DF069387E4F9B921592E
176D562AFB1FFBF5C98321566CC561016B6BD2DB08E8471A5D0B8E3F48D4314F
D9EFABBB7D77A882858460295C7DBF4D1EE1A4F7E280B79C9BEA6DFA27233511
3319E08DF13BDC325E59258474EFF956C63ECF36DCF9F08447487435D7D06BDC
FBC55F756808F49784BF518403134F42A259F0DBBA4409162011B6D67AE8B863
082FDC66486CB43C17840243C8DA1ED5F1E5F0E3740E009C051B311CE63E0D94
A75D85AE1BEA97194F1C622A11E5561B3B27A8DAB963F521314F4215B619E659
937256CBAA92E1751BEFDE94F18E7C5E64EA9F87278769BB6D7FE0E73CAD5C2C
B0FFC129F4BF34093323A1248B9B7A84E5AE76314344E385D9907739916112B3
B6048641097090DDB8ACFD1D174E18A7009C0CDFF03D5CF382E274185562C97E
6B6BB98845B8788B6B950CF4312389FD49B2F73B15AA06EF3C53836570BAB341
66E738B8AC793C2C3E1B7C88F31E6C01614B1BDF8352F46110C8A07362320FB6
E64530DEA1DB2820B79CA4A52763CBB550451EC80B1DCD77F111DDC66C9BE91A
9EAF866C3EFEBAACF760365BC1C0623597CDA93BEE469B0810B73316A49218DA
DAA7435FC2D898DF5DC1550E1FCBC44D4206170B5FE4F667273EA48998CD6AFB
CB532920513461CCA38F1A08AFCECA8B89D0582A2C89212833F6385CB51FAA97
35E707BBC255BC6296B4A4EF0427C4011E8958B23CB8650C71D835E1CE76FBFC
ADBA5E92AC7023CCCF336BC949275E376FBFF3DD2C978561D95B5D031A9F8F86
3212F1D8DB22470CC37302969D7174D41606DD9B1E97754341DF2339CCCE549E
4A7C653BC317F89A8CD0710530924A3A76AB4A53AA62D8B63FE91C1512BD651F
9AA2808A80B7AF6402D4EB2E9F205401983606559569A0122CBC07A6B92E5D6D
2F1E63F35625C5F6E2536D7C8E3850373B811A70C4E6AD8D4F81B8AC291EAE01
A43483ABEA8C80E084858A46D6738271275F2B06705E64A21BF32CB7D1CF25D1
9918894AA3C6F4E4AA55881B85E359A65F981841EE4F938CF486F463FC8417AB
9E75B05C6F070D7E877935AE49BB242B553D6971972FD93DBC092DFCF12A09BE
6814A2F3A209EC712F71845B449D6355EBC41FBDC0E2A514CAAF5607684530F2
5001444418493C3E06BA60397BBA0772D6B60C7A140B2DE647C5E8B626A4A41E
B7C208DA09F845947B80933C7F2F997E9925C2AEA605AF5FD21EC996DECB3771
48ACE4BC2D3D65765C293366F1A023D9B329A2EE8212CD772625692B98E89333
C9B7804FA07FE94A6432114E979B80BDFC13A1628B63E54426B136ADB3E15446
392CF6F541FDF9E828013651E26DD3C0AD445193BD160D36A3FC3F8022CA713F
D0F7ABD9B60FDA61671A733A75D1F1662445F4DE5B12B9A5F00DCC529403C38B
892385BDA8AA56199825FB652CB9EB1A015AB87B8D7CF1CC962BD5DAF340E7AA
BF085C30E80325846007026FC200178A197211AC1F69CBA2E21424B0866C69E4
568C4DB3967F17E6F318841F2A8E7789333EB11AA76F6555F6E1B523E6BF7C91
D74BFFA2F17A20F78ECE0BA086B77EBC61E05061D415EA0F8A7195870F17B34E
09C285B36394CED45E9C059A4B8CC353E83E7E81CD098B460C2EECB95A9E95A8
672CC9FCAECB2BF1D3A81A2C88C88B3080AC1E32B499D29E2B3B259C581BA648
42BA7B65B1FEFF5C2478175BF6B5FD497380AAD11857FA517F990F0E0662DA18
3B41614B4CE144E244A685A96C920B73E76CAA5A8080E6C7F427BFB14A0D5004
585BA8C591C0AFE53259A59D1A8AD7A499EE56C6687BCDAAB09A794D56CB1D3C
E2BF87AEE96E083550961C350E4223F95829E4D6E0807850D693B8066611E825
CFA873C84B50C1493EF4471D7C36A5F5DF9EE3D6C98F7EAC7EC430F171CEDF58
D0E6EDB523816AF97366B5A7293D16EF0BA86E331F530B0E3525331E1EB834A4
27A797B0EACEF6A10597697BF8FDA08DA2F0EAE1579C2F9A1469146A3C441680
71B1A52A9B9EAB728B4BA7DE1A4D9AED9CF8950208946A111BAEAAE364A245AC
B2DBCCF31C46977A6F4DB0CCE03E79C5F66B028B916060DB24B09343E5214B1D
B31644F62D6896CC3CF92325AE30D3DB781594A5AC92B1F969C6C6C6A6D304CF
03E2BBFA24AD3F98461B0C6FFA95DF0C81A15F934CAF307AE63F9A4AF3B8D3A8
C04547ED052B69553091F43C14D68DC73751FA8BC982A3BE69E0AB8301445CB5
01E4D66FD5D082D6AADD199CA2A13A397D8414F855F2DDA0BA85569A24E59393
AD739A045C99BF0C0745596B205F77D5656765B3144C096A5DB69EAA92D02CFE
8CD37325509F797AA898CE14BA319181D8E383EB4E25FAAC2FEF7DBD0365FED0
A2B5FA15E1AE83F5C01D3DF51ECB22501A17EAA13D05CF302FB497B8FBE86322
530AE8F8F3B13105EBCD7A41D06A6CD3B1AC61DB453A7A499FFFA2D24045919C
301D6E81B9CDEC6C66B348245BBB3F5B4370F5D3AD6B9D8DFD654D73B633D488
A94F6B13EF5E803BB8BA3D9BAD37552EC0C71A361A0F63FF24A82ED2D0D30FEB
A9737928830677AA039F45EE034EB297F8C1FA804D945037B1D9B3F8C3F8721C
613E2205F204D09EFEE0BEDEE007B4476AA61D57DDBBC1F2FE5F7BBAC7472FE5
D0963C66E77038A745A3EB9CFB21A9AF570391C77F4E8C02FB8BF7B3B6185765
CACCCC5CD5CB305524AB18FA6E6FC6A2856B38192A82B87D85BF44044EE1C630
646BA2F7A41966D51268204061E763AA6B08A0DF8759F308865406A13FC8D470
5567E6DC38EC9F67FD82191A074F42F005F0CD5019E2213B9386FBD315832A88
82E3C0367DF8D9A3F866C5FBEACB0FD4FA44B976CA7E55A0183EC0C12A917805
A4F852FC22B997B520AC68ED12B2D4B0CB76AE74C86317B14C1F98F4FF703267
B12EE1DFCA8EB0217087C84A14AA0A00C6B35152E12ADA2F31A8ED10CA0013D8
DCDE97AB0563A2BC9C4227C71E63DA784783C0BEC2B5016D20CAA1FD8FC96F36
14D9E8F0D744FEAB75273B85A8C33C819A9A3D6A89463528697BF2DF4AAAEA96
16FD6DC313EC1E02023387BF15F88B605186E4E3DBDF9A6B6001BE448FE1F60F
6403F45AD489152AA567EA2643CF070FF00DAE78B622493013837CD0F1759B28
52BBBE5B0531F52C2C4B7744323DB65FDCB085585EB223FB5384AE38FCF42022
8EC4EDE34BE878E40DB52E64EEEB0C04DAAD51962D8FEA79F39845826F44F6D9
482B8FAC7BC1B69281ACA66F33F2E89417ABE3DC4AF994FABF6BE50BBC2404DB
1A578A56A2763EBFD688508C5B545028A6E2A62754FE085EA13352CE8130D3E1
EB0B1DC14DC621ADA38C84D8C58AF8777FDA69B83E3B582199213352843C7B2A
AA351861332457DF467BFD0DF87CF38A45CC9E9BCD327655084D287AAE410E41
7C95B7D9E8EEA153547B140E5808B93EE0184EE6279A97BC2FB3D80BABE04438
552BE0126386413E114CE3724500A5CDFCC7A7B84A3CC989F9CF2257CCACA1D8
6EC399B1C60AEC7751C379C29B94DDBD548D3A7861712F6F815F1FC4CE2BDCBC
7146FF0B1B6B078C2E25A5F84AF7028FCAA20681737A29AEEAC913A66E41E9C3
5D71D638532D6260F980E4AC3057EE90C1502A075C955DE7DFD2E74102077FF6
BA0B7544C8D1AA6B8268086EDE3E22067B870D63E0FD6F6404895CF74A2F1F33
5A6E85DBFD143A0AB860B42DD2D1A8A0C98B4FDE1D48EC68014EC4F9BEAE04C6
29109242BB783845F1B511D533667EF13182B5FC0FE0634F002703C873CD37FF
EA19DAA429ED60A43A93A4AD1EF591CF6B1226E88FEA455A7285828DD8885971
899613CC3EC75CDAEE54675FFF7A1A0DEAAF818D11071C98CD7118A95D053218
E07C19598AB93159D0B2740BE5BB41AA1B2F19A8DA2A632B4FF175EE678E3C32
D2D667CE131CB0D6CC5E94AB86BA7F8A91B7A0E11F189AF60A59775C14BBB174
D10AE0BC485147D527B78C29B33B56E667DAA7EC41F3278EB44EF62300CB2602
1288887893109542DA6EC2C203156A17FE403EAB154A00D5BDCA469DCEAF58EF
915614D039AE6067E3891D87690E69AE82DB7EC8CFA2062145F4FDEDCD42D42C
18F6DE9F5B77597C6385CAD35426A2DAA4E3045FD19604911A3EFBB637F24323
4C452763299871F5B396E81F0F5B9397
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (article.xml.dvi)
@start /Fa 145[43 110[{}1 66.4176 /CMMI8 rf /Fb 205[35
35 49[{}2 66.4176 /CMR8 rf /Fc 135[40 40 1[40 40 40 40
1[40 40 40 40 40 40 1[40 40 40 40 40 40 40 1[40 11[40
2[40 5[40 29[40 46[{ TeXBase1Encoding ReEncodeFont }24
66.4179 /BeraSansMono-Oblique rf /Fd 145[55 8[42 41[25
59[{}3 90.9091 /CMMI10 rf /Fe 201[45 45 1[45 1[45 45
48[{}5 90.9091 /CMR10 rf /Ff 130[36 36 36 1[36 36 36
36 36 36 36 36 36 36 36 36 36 36 36 1[36 36 36 36 36
36 36 36 36 1[36 6[36 2[36 36 36 2[36 2[36 36 1[36 2[36
36 36 36 36 36 1[36 36 36 36 36 36 36 36 36 36 36 36
36 36 36 36 36 36 36 36 3[36 36 36 36 2[36 36 34[{
 TeXBase1Encoding ReEncodeFont }68 59.7761 /BeraSansMono-Roman
rf /Fg 134[44 41 60 41 48 30 37 38 1[46 46 51 74 23 2[28
46 41 28 41 46 41 41 46 11[67 1[51 66 4[81 57 10[67 19[32
16[51 28[{ T1Encoding ReEncodeFont }30 90.9091 /SFTI1095
rf /Fh 134[40 40 2[40 40 40 40 1[40 40 40 40 40 40 1[40
1[40 1[40 1[40 40 40 19[40 14[40 40 40 40 40 10[40 1[40
6[40 3[40 40 33[{ TeXBase1Encoding ReEncodeFont }29 66.4179
/BeraSansMono-Bold rf /Fi 192[71 63[{}1 90.9091 /MSBM10
rf /Fj 135[46 8[50 1[79 3[24 16[66 3[68 56 5[87 54 3[71
6[66 12[50 2[50 50 1[28 46[{ T1Encoding ReEncodeFont }15
90.9091 /SFSX1095 rf /Fk 129[40 40 40 40 40 40 40 40
40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40
40 40 40 40 3[40 1[40 1[40 40 40 40 40 40 40 40 40 40
40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40
40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40
40 40 40 40 40 40 40 40 40 40 40 33[{ TeXBase1Encoding ReEncodeFont }89
66.4179 /BeraSansMono-Roman rf /Fl 136[44 3[44 44 1[44
44 44 44 44 44 2[44 2[44 1[44 1[44 3[44 1[44 6[44 15[44
44 1[44 2[44 1[44 26[44 33[{ TeXBase1Encoding ReEncodeFont }22
72.7275 /BeraSansMono-Bold rf /Fm 138[44 44 44 44 1[44
44 44 1[44 2[44 1[44 1[44 44 44 1[44 97[{
 TeXBase1Encoding ReEncodeFont }14 72.7275 /BeraSansMono-Oblique
rf /Fn 14[44 115[44 44 44 44 44 44 44 44 44 44 44 44
44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 1[44
1[44 44 44 1[44 44 1[44 44 44 44 44 44 44 44 44 44 44
44 1[44 44 1[44 44 44 44 44 44 44 44 44 44 44 44 44 44
44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44 44
44 1[44 44 44 44 33[{ TeXBase1Encoding ReEncodeFont }87
72.7275 /BeraSansMono-Roman rf /Fo 240[45 11[45 3[{}2
90.9091 /CMSY10 rf /Fp 134[41 41 1[41 46 33 35 31 1[46
45 46 72 21 2[21 46 2[40 46 40 1[43 8[60 3[62 50 2[58
2[79 49 1[42 25 63 2[54 65 58 1[60 60 5[25 11[25 46[{
 T1Encoding ReEncodeFont }34 90.9091 /SFSS1095 rf /Fq
133[46 55 55 75 55 58 40 41 43 55 58 52 58 87 29 55 32
29 58 52 32 47 58 46 58 50 8[78 107 78 80 72 58 78 1[71
78 81 98 62 2[39 81 82 65 68 80 75 1[78 6[29 10[52 29
35 29 2[40 40 11[58 6[52 21[{ T1Encoding ReEncodeFont }55
90.9091 /SFBX1095 rf /Fr 133[40 48 48 65 48 50 35 36
35 48 50 45 50 75 25 48 28 25 50 45 28 40 50 40 50 45
3[25 1[25 1[68 68 93 68 68 65 50 67 1[61 70 68 83 56
1[46 33 68 71 59 61 69 65 64 68 1[43 3[25 25 45 45 45
45 45 45 45 45 45 45 45 25 30 25 2[35 35 25 1[75 2[45
25 2[75 50 50 53 4[90 4[30 30 16[{ T1Encoding ReEncodeFont }81
90.9091 /SFRM1095 rf /Fs 139[38 38 38 2[49 54 2[51 1[27
54 2[43 54 43 54 49 14[72 2[76 11[70 10[49 4[49 49 49
49 48[{ T1Encoding ReEncodeFont }21 99.6264 /SFRM1200
rf /Ft 145[75 9[75 2[67 8[101 3[97 75 5[124 84 76[{
 T1Encoding ReEncodeFont }8 143.462 /SFRM1728 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1462 936 a Ft(XML)44 b(and)h(XSL)-11
b(T)1445 1188 y Fs(Christian)33 b(Rinderknec)m(h)m(t)1592
1391 y(31)f(Octob)s(er)g(2008)p 0 TeXcolorgray 1920 5225
a Fr(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 448 573 a Fq(XML)589 686 y Fr(The)40 b(acron)m(ym)g
Fp(XML)e Fr(stands)h(for)g Fq(eXtensible)45 b(Markup)g(Language)p
Fr(.)67 b(It)38 b(is)448 799 y(a)f(language)h(for)f(de\034ning)h
(unrank)m(ed)g(trees)f(with)g(plain)h(text,)g(suc)m(h)g(that)f(the)g
(syn-)448 912 y(tax)d(is)f(easy)g(to)h(learn,)h(write)g(and)f
(understand,)i(b)s(oth)d(for)h(h)m(umans)g(and)h(computer)448
1024 y(programs.)589 1237 y(These)c(trees)g(are)f(used)h(to)f(mo)s(del)
h Fq(structured)j(text)i(do)s(cumen)m(ts)p Fr(.)589 1450
y(T)-8 b(o)27 b(understand)f(what)g Fp(XML)f Fr(is)f(and)i(ho)m(w)g
(this)g(mo)s(delling)g(w)m(orks,)h(it)e(is)g(probably)448
1562 y(easier)31 b(to)f(start)h(with)g(a)f(small)h(example.)589
1775 y(Consider)38 b(an)e(e-mail.)60 b(What)37 b(are)g(the)f
(di\033eren)m(t)i Fq(elemen)m(ts)g Fr(and)e(what)i(is)e(the)448
1888 y Fq(structure)p Fr(,)30 b(that)h(is,)f(ho)m(w)i(are)e(the)h
(elemen)m(ts)h(related)f(to)g(eac)m(h)g(other?)448 2128
y Fq(XML/Example)589 2241 y Fr(As)f(far)g(as)g(the)h(elemen)m(ts)g(are)
g(concerned,)h(an)f(e-mail)g(con)m(tains)g(at)g(least)p
0 TeXcolorgray 585 2429 a Fo(\017)p 0 TeXcolorgray 46
w Fr(the)f(recipien)m(t's)i(address,)p 0 TeXcolorgray
585 2616 a Fo(\017)p 0 TeXcolorgray 46 w Fr(a)e(sub)5
b(ject,)p 0 TeXcolorgray 585 2804 a Fo(\017)p 0 TeXcolorgray
46 w Fr(the)30 b(sender's)h(address,)p 0 TeXcolorgray
585 2991 a Fo(\017)p 0 TeXcolorgray 46 w Fr(a)f(b)s(o)s(dy)f(of)h
(plain)h(text.)448 3179 y(The)h(elemen)m(ts)g(corresp)s(ond)g(to)f(the)
g(tree)h(no)s(des)f(and)g(the)g(structure)h(is)f(mo)s(deled)h(b)m(y)448
3292 y(the)f(shap)s(e)f(of)g(the)h(tree)g(itself.)448
3532 y Fq(XML/Example)36 b(\(con)m(t\))589 3645 y Fr(F)-8
b(or)31 b(example:)p 448 3858 2989 5 v 0 TeXcolorgray
0 TeXcolorgray 448 4045 a Fn(From:)43 b(Me)448 4158 y(Subject:)f
(Homeworks)448 4271 y(To:)h(You)536 4497 y(A)g Fm(deadline)f
Fn(is)i(a)f(due)h(date)e(for)i(your)e Fl(homework)p Fn(.)p
448 4684 V 0 TeXcolorgray 1920 5225 a Fr(2)p 0 TeXcolorgray
eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 448 573 a Fq(XML/Example)36 b(\(con)m(t\))589
686 y Fr(This)31 b(e-mail)g(can)g(b)s(e)f(mo)s(deled)h(b)m(y)f(a)h
(tree)g(as)f(follo)m(ws:)p 0 TeXcolorgray 0 TeXcolorgray
634 1578 a @beginspecial 71 @llx 624 @lly 385 @urx 721
@ury 3140 @rwi @setspecial
%%BeginDocument: mail.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.994 Copyright 2014 Radical Eye Software
%%Title: mail.dvi
%%CreationDate: Wed Feb  4 15:57:07 2015
%%BoundingBox: 71 623 390 721
%%DocumentFonts: CMR10 CMTT10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E -o mail.ps mail.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2015.02.04:1557
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/05/15
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  0 0 moveto 1 0 rmoveto  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.06, 2014/05/19
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 876 2014-01-28 15:03:13Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMTT10
%!PS-AdobeFont-1.0: CMTT10 003.002
%%Title: CMTT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT10 known{/CMTT10 findfont dup/UniqueID known{dup
/UniqueID get 5000832 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT10 def
/FontBBox {-4 -233 537 696 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT10.) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 65 /A put
dup 72 /H put
dup 77 /M put
dup 89 /Y put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 117 /u put
dup 119 /w put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E5ECEBA191DB82B3
7A69521B0C4D40495B5D9CE7A3AF33D17EE69979B82B715BAD8A5904C5DE0260
6C15950CCF6E188A0CDF841EB68E5A2F88253E382140F87C87E55C9EA93B8C89
14A36CDF630D6BE7CD36DBDCE22B21778E8648B97B7EC6742EB5114BDF0454B0
0EA7B1FE236C84C0E5308C871F67B973892890557AA12E00B2C20C71F516C397
3F3BBD14A1D0149CA064391056E45E9470FC7F6F556ABC82653B3C8049AB5CF4
BA83C8F2158C236B2FFD4208846013BAF4165E8BB8D334C8FF2E8D74AF5DAB2F
D44788869B08399421AAA900ECC6A2D594641C121660D4B5F512938994C18DD0
FCD9B008F68F0351D21ED735B2740CB1E0C1CCD25EB548C35B844601D98828DB
556F71D07E081A593FF12DAF83676492A0FFE16E95717A07082B43A966C1EE8F
8A59E1255E1705C43A23CF29A5E4A6547C93F1680A870EE7BAD8CF74D838CD5E
F806911D8FE4262ED8E7F5BC58B92C9C6D74F8AD45FBB021EC7E97393018B9DB
B1B84E7B243ADB05ADD3F1DB3692ADC5D47FEC7DF93080669E63281F1576B673
125EDF08016664BE73364F65389F7C3B66623AD1754ECBEF9E5CE6948D933787
A5674279ACB2EBECD3B4E6361419AB32028A27670C9F3E18B746A10B00AF6D77
4EC00E3BE521C02A99AE5BAA98F793EB1228952BE67934B91472E01AF7B816BC
56D7F19F631A1927846D800C107B1E9CBFF9D2DD513B4A8CE2E0DFD77B1ED178
E43FA7052765E9FAF89989D490D8FEF6C536EC0D4AE27A74F474B98DA9E6B92F
15E063DB260571979A5DE2423920CE1F59F56EB11E00E3BB9D466A8263E1E385
2014BEFDA8D1EA3EDA04BE32AEE6CD15C5C010A1DF7F705A2C0C18E87C8DCCE9
05D9163181CBA56C0FAC8C06A2990554C8E759D076B01BBEADE3B5FB8B551390
6C8E4A2A1C6E7D9C708614626F3770C0AB7DD2027469C77975C27576065862AD
04E5E50CEBE907E3E991FA0C627302C0E207B4D5992BEBAB5853AD1C0D271728
C76F40A79392ACCA7358F948AC65DC823CFDA59E1FF69CEBB6B7EC3CF21669E4
70D999508F9C49E2D9F8818CA53C977D93E15FBBBAF75B1E84F0BA62BCC4BAFA
4EEC82D804C8A8C0210F3E5E258BB1F6921AF02BA9861BAD5C3D5FC8CEFABA8A
A607E547B802096F7AEB09FBA99C83C9A494B94408DD607CA6561A6E6660C473
62CF8D35F31D052F6C6C8138A8E1430CBA7EA6973D6D510C1A06B3FBD79D9364
240C1A00272DA44B89A9FE8D5BF36DC1B5EBB4A78ADBE9C5EDB485F093D9517D
69E1AC9A8E6C9D7C324E3797CFEAD9A18E82E03F69B2CED7D5DDCD1A218BF2E2
ED2293AE999FE2A4B5213A10083EE0407BCF8007670B8C737EAB30311C868D84
121149ACB4A27F3ED6C0C181C98AAAF51B105F264B5672D7F745131ABAB5BEA4
0C9B43C0DD9116D6DC61F90BE72018F290D26D5E9D341055CAF09C9F45333CDB
D45B7954271767F638EEC499F7B53C2CC5774EA7A7F024C4CABFB93D9CB1856A
0C671A4ECA7C62EA5242648A84E7F3AFB9547A0AFC29593CFCE6D8B873A78157
D337CABD291431C0A2CE1F37E0CD7340567AC206FF98E4B5A6410F70F750451C
550EFB54AA259A1B236CA9CB730D2CEF125EC65D959441F7CC9768F777B44844
CC9842A307C72B740680ACBBF6AA35FA7A94825069BF7696ED81A371A9E5475A
9D997F2DFAD339AADF797F7E03E654234455AC3D17702A420EE0A597BA31BDE4
FEB8DBA7C61D311CC90441A620164DC22DC2D373973EF84CC553453AB1B3337F
7B39983B8DFFB3A9425F119B45C1CD37A76F905777B3154CA6200792F1759D06
E017890F4041A385F2238E3C48B6C8EE6F5258463FDBFF7AC762F6C4363926D6
50F004D473B7B7F73CA686B559C2885F1AA761653C727A77D73431E9D110E76A
2E55C68CD50F43997C9B2FC4710F8C8540909829E215678E63BB8363C4B8AF05
9986102BB36580D9CA95CD216B7C321822CB41B2E0422CD077F3B55E0246FDB2
44D5976F67296B5B0BE4B06F6E43535C21164E6C5089C3E9BA2D6B30888C57DE
49DC8D9D46C0D5EDC47ACF2C03B72DE3B69512508539019B759280BABEA12BC9
385308A0395C4CD33182A10A5A229743379C2075D82D8BFCE4A66E1AA087A091
8F5372684FA5037D1B92D50CD9CB4F50AD4F8EE7D51F1C9E63C721CB5B9BD011
6F0A8DD4FDCD2B008F223A1036D90F0F3B252487DE7898F9AFBB3A9D9CD49E0C
EF4ADAD5155A98D2125ED5A3D3907F67301649519419F33CD942E8DDEAC1BDA0
E90C431B198F646766A8FA9F8D1561B57E126EF604838C0C1966655CF31FB7EB
C8CCC434FC1C96046D38203E1791EC824A3D7AED85C029288D4608CA7668A2BE
484C99639F121845B22EEFCE0A3B808261921AA042AE19E641769E91277BEC29
4594082CCB3058F90FAC4A700A8A827ACA00FCF574ABC8EB7DBCECD97F2B22C0
0AA19E8739B81AF8C6F621D69B8E6F29BAE233FBA655A0AF5BDFD7F5C6B9167C
6BC7AB693D45EF2AD999F5DA3CEFA39BA48A17EE6D9F2C4DAB91AE3F0044DC3F
5D5506CE4675AA928B0092D6F173644F91295216D8BBB14CDDE0AD524A4D545C
1B5E284A3BF0396664081CFB4F186A84A0D24D61E82F4767C1E55A0642720CF3
909FA1AB8EAB78030B59BEA067DEDBD2F1D0340E790AB2777DB18248521934A8
BB38A58B7F633DEA4291B0D5D13E9A882C974697CC6D3B49E030C94EA29B5506
CC29C44D01B4751B453A46A9F6BF3BF135AE87A4CE232AF57B66578310DE41E0
2A6AC422117F1963C4D7CC306BD25A6E724E51921779F22F029733122E23E2F0
CB340008813ABB104380C80A492B3FC6D0BB07CB8D8409E9576891EF6E5C9D08
EB8320DFA31BAFFBD336D0C2BBC3D3B2D30368B9860768FC080D30569C7F7811
0EBEDA2962476113625EEB555490B8CE4C5F99D74ED10F738C61854CFF8B41C6
9402E56BE8856144A1A05D0B05F4CB7EF728B2F4F5A439F18C3B68CEFA41E59A
D8308ADC92EC1289DC84CF48D2CDEFF509A145BF945E1E00D552D329EBD2A7C4
21D58082CC8FA790E981F4AC8EAB99950678FD3A7DA3DF13778681B208DD71A0
7C3CBD0664B37C9EDC6B601D79A2C51FB54DAEE849F93209793849104E722D3F
52DFAF7047EEEDDFE744787A5801E4AC2C3D58EC5DDC15FCEE03990C53B0C57A
FC54F125A04C8E4A0ADAA725808C587E7DAFB9F784FA2875689979D316DC22BD
AA36B306A1ABCF907B63C6476737B746099973CAEA8C1E2C5C41F27E0F7DE8D7
F0D942E34E92F43FE902653D4D2EBB6F3B9F7928B1550A82AF234D45D028F429
067652BD3D391BF423AE72B9CB1E8D91E898161BE3A7849D456A861A2046711E
E934DC59442AE7D81661CE8EF727D8D7DDC0270E937E40F896AEAE6171661431
C1025C53172F9D366834BA0054FBFD84503FBAE328B6FDEA180F8EA35B1DA937
5CC3B8F00C206908C2FFFFA6A7AC6915D15EA44BDCF29E2BFCFD4A849535F19B
0D307C696BE8205C7D84B9C77F02EF27D911056EDBB4080E4D3ED72788666CAD
CD91B0ECE27A177DB23320A7FA9C31408B4D02D2A4B1CC6DDE1A6CAC3D8EC1EC
2226EC98E51046D1EC26FA20EE62D24747D83CF4941DCE5CCEEC0DBE387149CD
E05B19FFCAFC0D117F9A3E60DCD4C815228D98EF95EB559AD0ACC0D50FFDF714
56C3C812EA5ADBB013BBD956A7C4CC0ED7D3E25D5C9AF5E626F18297F75D4957
F5B0B33379114B903FE98BCF35C3FF76FEE1D9AEB711F2962276531F7380EE3F
E368720E0292A170A15C5539B1FC7BB954EE2624B504CB8C805B8D31AC38307F
0513606F09211AE64DAC447693B2A0AD15E9A64C34F5A911ECD0ABCA90E9791D
67C6BD202B0858EF96E7722305B8AC02B01AB1706CC6AE875A8DDD15EE349046
EAA65005E7866B506EDFB7A5A2AFD5C9E9DCC821A79EE9C1EA2C7BBA32A40BC7
CEC26DB1AC473C8C3960ACEC581B37D6569E8C8C42950BAB7930B65E1570E3F8
9A7FA719F1DCFDA45A3BF2AAB32C9A93BA3552608A61C623DE59BCB346E87EF5
9CF025A87803161221C5C1C6F6B3403712C76E9D755C7BD68D7F2DC03C14CDF0
C1BBED1D648B905B4B17037B7263C1EA7A7F06FAAC4E09E08483A8D714C19861
327CD9C32DDF850302DD6DDE24912D00C22ECDF3CDFB18FA831A41A7488EC203
F564CFE30D506F0829A96D35A7E09C3DCD107D589B627A15B55C5D6649126BEC
60B88C55ECCBB4E680265D9EAB4CE22965D3B1AF759B01ACB0D0E6C92B6B4EFD
A81E6A648708979487FC591CF09631310D46891423F4EC159A73E30D8DD147A4
B0EACF6D45D18CD16CEB8176F03ABCB41F2234747B9733C8FAF34AE5D43D3BA5
0CE0FACFC9B087F84FB6C68678BC6E76022B1526D6E5B3A48EC1A110BD75F45F
1C4DC6D39F254976453F57DF873B7D635C80C42026DE020E5BAFE0DA0D54D1E1
DC634D2621BA184347E5252F645A6A1DB7657C48124186F0E4C644077457C24D
55753C651A9A7B6349867641464B515B821349C795A645420508673B93750D0C
7A3B33EB1F09782033742AE8F3A23FC02284E6C03818FADD1731361542E3FA3E
75B8D52B668C3E18A4AE967D0FC3157083D952AFB8144D549E69EAAC51C279C5
E5D88A0D9D53013DFFB4352A1598FF84DCDE6FA32FC377306B9B92C0F96EE149
8CD55E7B2445B86CCA7A547FA732D52D59025129FD8C6333AC0DF4F0CFF6287E
F2036D5DBBB3B91B92F12FEBE0B61A313A4DB5A9CF0BB3DDB781A56FEBFFACCB
8CB9D1D3DBDBC4CB6AAE6769E470582403CB920630221B68BCB625CD4605FA8F
D3D5B7A1A28D15E44B38E92E906C138E72C15B86F64C38E23BF0440052A8C914
54397F49DBED99D0AF7CEA3B0A05FF37C2D7EAE1412567E6776333237C31E3C0
49949EC8BFD6E0F6446CE2D4DCD2C1524A288818CC5D159BF8463A847AE4A2B9
CC8C58F822804B81B13BF4F2DEB6229C4F51F093075581791D02C36A13B855A0
34900AA7CD4F1A797652656FE3A8425A38F421C4CC0ACA1CDD44FA6B31219276
1CDE1CD63D6A58CE705CB56CCA1260F9B86E989019071563A9B4C274A87558CA
6EF1660D574EDA276801F0057740E2C3B80D253D697736484D892CE1AB128B8A
DECD69712F5E70E895FBAA927E8194D792A04AB6CE205E04E38A433BBB793FB4
E8BBC4279D58A223C6673D909D6AFECD246E66A52F4CB35E5931D24C828489BD
4ECAF621A220D8ECF702BEB01C4FC7510197D3F6D15321EC87175ADBA6434ECD
2B5A306E91375CAD22CD94301763E4A8B981472890422C5488FCD523C9CB17DC
ED22FBF12D5F7525D0D6BCFE8CE85B0DFB1D6F989C267FFBA0A996D309E4A934
3DB54A9D29C88B9D55D7300DA3D46419256C5A07A2A529A8DE8BD1727281F5FE
97033D861E0531B14E811378EC1AF1CC7EE9BA2B07D935843D3053F673979F8C
FAFD59D555B56CE338F606747238B22BD62C42BB7238FEA335678D474A643570
A9E7B4970E8C541CE9DBC7BF70ED7BA33639D6744A18379455029E934C95E2EF
639C4848CE9A0879B51649FAB023A71782444B451F92A34CB8A124270CCF86D4
D18EEF5C1D2B2A29012613851C49F50702D63BACF95EE2AB4D72B375E0A62615
E0991E130A67ECBA9E05329B740708F1CB148724C3A6E5E3AEC1F88EBCA398D2
1CA8827C977D72734310233176D1AE26C55CF2CEACA62223315C28FCF6305C7E
A22414D4739A059F552F1F9372CCCA5FED4F9AC987942848EB498900269511F3
F408CBEA0659B954F5F1B18AE4FB270213646F9B28AE4439D2BA2D3E0AAAA780
5E530E4EFC8A060EB979E12191044509DA0C14397AFF949E12DC970658D5EAF5
4EA963F5BC1407A32F3837CA6A24B7F3D60EB8E6222B702E25ED903F9D21AE50
664A095009BDEAF4B78DAF94E5A55D48366CABF07791A1684B2F54EA69070844
4F031AF8DF416C2D3679F8BA038B0DC9DD0400CA6B34667BCBBC07E62C1668A8
35A8C57C9048A7227E672E89681B54D662079A189A9E96A3CA96D8DD10189B04
1DA49BA2729F1CA585B1BD5C467295285D52E47CA904235A1A3E48EFAE9EB6F6
01374125CE89D53C276858668CF45D2F092DDCAA52418E0BB94C2B8266B4D88A
5D911507BB1DDA3D8F6E7C14A91CA11AE799EC42E993098E18CADA70BD2A1D82
2C39326C6E3F9E84CD9758B9AE43D79BF99E6A0CD713E95B3D9B7DB90D127DE0
DAFEBF850CAAACBD860B5DEF2082F1ADA64B44B193C4A1417BE221FDCA36456C
BE5934C8CE3ED55AE3A11697C2D682B7D0F72D48976451D205783BE25DBD2507
39C14FFB4BB828DFD187104F38A7F11D5F0698C11E8C1D4F107CACE573FDC4B1
C56FDAE47024D6FD16A2FEABB434CA320300FC4B6C1B6CA08F76C60B7C08A665
99F404DBA8A2A1EB18EF6750E4EC186E31561A3F080BA6562967546715859481
7BA782940F5C5D06626D6F6A412CA7C13820EC7C1DF23E15E5829F698CF617BE
D940523E4EE4ADECEC48C24297DBAD528BA1DCE7AC335A1D15D55415B108EFC8
6D45030D27B3EA63B2B4CD771DBE66AE0218ABB1153D4B7482289D1313CEF184
5C960B1E3C3C953912CC6F4521D1E15636C1545EEE457EFB87B88C9E43CC2F38
6BC4BC96969F4FF28ABB06F4454C01CEF1B6DC538F1E832FC1666D977E5A881B
F72F1B4C7DD4BE167A5535F1163A0706F9A0B26400178DF8A128FB5EBE6A7B81
E478AD183EC06622B591337B9F1872AAEA356F4FC67EE767B34CB5A4D90702D9
39FB846947F4096FB3DCF16EC81455164783BA0B5D723060DAFF411B68307E81
7BEA1D9A47A5AA3D648E618C83C60F060029E6EC4D46B045FA7415BAB2AD0AA5
ED9C729C24136F6AF61E6409C0B5CA760B16225641E268A68CFB8260BBEAFC77
6626EBD97195E77CAB425CFB0096D805D9EE699E41680D095AE9FA10122A7882
2F00F495C9EB2102DF0D3E61833BC0A2E468C5CF7AB430FDB7C0BE3DF2C0D230
1580BAA25D65F599378D873165482A1FBB224AEA89C6BCCFBDBA42AE1C5DCF41
06969F585CD3B737D1388D6359F5468D88FCD2279BDB270F6A858FB7D2ABDEFE
5EE8FB79FA437F8F50237B92C307B73B0DCB808D07A9C3255CB9B3B17039CE5A
288103D05D132863FB522A02CEE3839EF9AF7F07D99732F0B8B384745369FB3E
7901166478F4A16076A1504C5E98D17408494E270BBF4470ED12B4332422679F
759F1D93984D7E506D16950DB6C2682FE1379EFFA6F6C95DD71F6E55BE3EF6AF
E0CB25388EEB436E6527806FC75484133F6E561DEB979D5C1FFEFDAF2A6D964E
03BAE0BD593C2992AD84569C81050F7A793C5263E50C2F50B98C4CC703EAE17A
6AEDAACE312DAFAF5278D125B6EFC5587484F61DAFF46B87B7C9B1EEDECA4859
314A9A9E2248467DE1E54D90DD671660B9040B3E0DD982260822177EFD757266
74A16C83A7FB168016A320D3DF3BD7726F1F4EC90EE5DFE810C96B099FD4368D
906AE4699049EFD37E8EF058D4B97BF71106445AADD4FC6E90615A0066823A36
673B8DE32322BBE861AE251226B4385AB28702831270DBD25D666FBB0AD7B96E
A44E891EA1EAF0F87013AFC982E33D67A28E96E0C9CB99B9E4192536830D9901
931A8CAFA41289633B20BA3BD7AA3414B6DA8D57CCF2FBE39920CC06361F075B
CC40335DB9A0071CFF77F6B7BB47F3100DBDC9C4A58C2B81EC99E8E966AF3390
E3FBCC28BA1D79961C8A1584266454DF772FBA99664D74D4A89FC82FFEDFCFE1
4C9E4A04291E803D142E37E7ACA66AB279378F2F192FFB2B5BBAD18B95F03136
2CB594A3D6D3F8576B90A6C4DAD6D6C8EE07AF682F925F01D0B26CBA347C03BE
F3B0585CF4539FDC66915E22117078CC94D621F31DCB3E021998A5D6EE94CA4B
E214D07517283D56973D8E4367392BF6C1150DEBF459D141AE0941C1C8C5CFBE
E735D796E365A1B0F60BB4CF2801EAFE4889EE5F338D3C4885368281B3C95CCE
251C28A90D318A8A0384439B38D63B94757252062EA44E88509FDD2E75FAAB71
7329622828B2785C1A8B26351BC7448C1719C88FE99BCB73F7DEA427FBFCDF4F
00EE079B0C712F7D2C8DF98D4830A9D8C8B70A8C5D54BC1DF3171135278BED55
DA1CF0E696B12935EB59B606AA3C0CC50C7A259AF32F4C81D9B39470D9993CBC
8644403D2833B34AF40511654F96BCE0064860F39849DC65622EDFA8E6EDE9A4
7DA62658B43CBCBC5E8F53D4FAE6BD0253C0C81E6C53CF5C3A9E3FCCD9AE773C
FFEB7E81904730359D72FB1F64E3B041A69B2440F63606F42819D52B47DCCCE8
D129A4C05778EA6E4945DA28411430C42A3D1366F57F0124EE7C8370B7AE6C36
2D739A53C137AF4C79060AFDAFA10DAAB8ED7D0BA6781213329980CFCFB18CF7
CBE6C7FA3C27329935F378698BB17CB6118EFDFA622B219121677E28A7F1D775
51B8EFD72B485F950B8B4C0F5E25DA3D226FEC96545945C5EBA0E4FD6B949B54
6AD49D1BB161EDE033C4CB22B633B70F38D563819330DD52912F3D10E9E2D516
B08001738F1EC4FC0B848E039F7297787377D75C8A0D05AD493E6BAB4100D265
D42EBDD432F204616D034B3F80AD2AD5D4E1DAE678029CC028DB4D2D9EC04E63
E90381E3A52638877B18EC6582059C02BE39FD0EFD694DC5204A247B081D9AF5
108E518512572179FE6218E090422F74FD548341A957DDD557CFE2A3E9479F0C
48140B475573873B2FA48758B7E84B69D33EEE87547541F53976C86DC1EF079B
38B2870748DD8BBD767AD3EFBE479ECA5B7529BAE86B985D6E793E013429A238
307E3A46BFD486834A752E5C0D52423EA2457F56703B271F766E4E8E3E36F9D8
4B8B5C77884128E64FE8F3F50A50BA8D036F18CFF8D23E9C0213658AE1922920
9F815677C752A689E9F3205F3B2C633A4FF49133F1A1C995703393F96AB10B55
F7D007E4E7EA49AABA75AEEE4BC60222661084C5F8CE09B039B6BB66D32E2A77
0432D63B1C903E50A6A59DF06B021F85A111019D507A3C8ACBD7FE39F283383A
5CF1546572770BBA3CB09E41AB8CD211371B773B062D54870AC37B86DA814B3C
3BA845F0022C19ADBEA417703F48FD79BB8BCA69D42290F62CFE0219761E52FE
74F0D0781CDCDD31BBE3590E7805A3103605402ABC8E2F8C72654E12385D1EC2
1D1F9245B054F4F1357F07BC9C4E894307828CEAC703088A2781BB126FFE6BE2
3910E7F181D048F238829D40A04F1E0AEF033234F6BD0B4A6DD861B68FB2BC20
1AC686E524E97EAB1C4A8ECD0B107CB61E6217FBD4B7B1450CF9149C46ADC069
0E0DA50823A34E37CA9CF858338F263B2DE22DD4B4E3B22C2F0B84531D5B7072
A70AEDFC73D7697FD45E3E6750EF6A2BEC069187F54D15342F45D4F7750EDD2E
7B3DFAF3BFF453FE60FAC91C8F8A4EB363A151A7200EE4D8AAF05B680C8E9ACF
E6DABCC6E16691D0C0C85493A7DEB7DA08B301AA174C00F5E23DC35C4512B3D1
4A1095D5F10A9046288D9C33E40165CA4925A44135D556625B52F59C00DD9206
F894206680357CC72529867C70854183F1587877D6D54FCD6D373246804B2563
8F27DF59CEFF01C6957734D0CD3D2EF768BD776EEE1A613D41A3E8AADCDB4D18
753287AF757E77D486D1579202FC88AC0C591F66241ECA8269A34B5441CC0CFB
8B290BAC6B75992D4B60F1CF298AD22364BBFAA57FCECCFB60354C50CFD8C05D
DC3040E389BD22FA894F8F52F0A87021F7F3078AEEE1047F1D7C7911F3169280
5C18B57418C07E23BB280EC1EBB7B869C08B929591DCAE59B558520EF94ABF01
ACCB12E4F190162BE716A84D6131AD022DB9ED66F92F3918E329A71C3CD3634A
36BA11160898905719B9A1CF9577C010788C68362413DF88FA9735C944C0CB10
5F06D5F6ADDED982D2D834531CB424FE607348DAA1C036F202446A550A868D0C
17E508FF29D22FD5DF3A0173D3864C01FE28EEA482A28A5F2C62836EFAA8E50F
91A710D45BB0452D7895FED4BB91EB89560A971E20D13D14FBDC71D6F64905DB
B304B08A5E8337C11F993732744FF16AF39C0D740BB8024B3DCFC470C2144706
4B4D0F2EF4BF8C2A22BD64092A55571C6198152070AA3A421603EC601A46A2AF
9C65F9C37B3882DF88D9F84BFAAAD91B5093B9246BB2D4C01DF63E3767748D34
A05AEE7D7D79FB0481C9B4353D247472F71D16AF8CFE9373FBF31C8E6ACFAB56
609A6CC81E83BF705C6E0EE6A07FA40B01EBEA544FAFC0C3726112DAD8BEBC69
2D09C892EDD0090BD9A658969B3BA995F1D6868BFE9F953BF6E59011EFC6C24D
FDBA3074D2F4A7CABCC9377DFDB31B256CC709A0A2B6C9EA94B8929E2E6681D6
FE09337FCDF3900C538D6A0AFA8C68390749386FB13857BBD355505776D91560
9835D98CE3007FF16569740E27154A9793148C0847F92B7E4F5DC32190602344
8A0702ED31E76D7EA8FFE254975EEE14044962F0B42663C4603DB1AAD19720F3
F3987D8C70877DB5578732614771B51FEF34AC8B5872580E379881BEAF92DA52
AA2A0A3B9D2F34A20EE32445DE5541050634715F55DA3703F75B9CB6E3EBF732
4007BD408579D806F411719E6310D2B95C01AEF65DC0607F9D5AF3C525CECF7C
2A2571E196DF72E37B4C541CC3EB27EFAA3B33684EF5D523F8811F93EC4F0EC7
BECA91B6A645F305569B0ABBD26FC0E7BC26EF5CADCDD4EB58927452BCC5886B
3D4BAF8A48AF141F890DBBE8CC601D174B847954671C97E092BB8F0A4315B0F3
F91FE844F0E89D8326ABE60C601F6D94D8B8B8DB77FC96A7FC586EA394501859
E6E8DB6A0180199BB818AE302D06AD644B33F013AAFB6BE9E034F68309FF555A
9F9427A9287557546C16C6066B5D21C24D46BC2CB2ED417CEAD3C690E9AB0432
CA8C38BCA87E487B90A0D854FA33559D709982E6753CCB6A3CDF16FE4454D166
239A2495A03AD057312AE10ED261F6EF9C8D1A1CAE567E71CA824B117CD99334
62F782556A1584D37E4B39D2754C9BC34D1F0F25C1705374115BECD0DE1DA535
E43B7B7D948A719CFD75B1F66848BE5D901E535E42C189EE5D81AFE55B772CB9
57F33447EEFEB6ABB7FA1DE66D3779B1DB3DA2F9B1AB45585CDBDF74E46937D9
A23C8354B40D22AD84C6A63BF1DC67BB010E71DC23886A89A3F5C65B7ECB86F7
16B54C44A1D159F81F62398A966B1BB19AAE812CC82F1E6565A78D6DBCAFA9D5
DE2BC113A1C65221FF387BC1AA6F311200DC21926E3A9118392A92F3A26EF5E2
2F63CD69865AF20153A9C10B9168A70B5CB335CFAF7FCA9ECEF6573B16FB08DE
D23EE99AD90FCF13A5036A854DA0DC44876D91B185BF35AE1579B9BC8DF4A120
7964A2B5D72C339574A81BAB8965DE4120318E0E47F293425DAB88E8CF448039
839D99F5629E122C666126CFB6229ACFF69DB8B2FC8AFA28630114E6DA8EE42C
CA1D4AD99BE07BF9AD842EC825E6397EBD0CB55FECBDA4BB89EDFA1E3EF256CA
752809F898436B8201C8236617F80B21AB26B299B6054E959AA767A55CBF6A25
EAE1870D75A51EC7AED41D694DD88401EC126EF5D556EA28144BF9965985FEF8
824E5FF56AC89F5A8B03284181DE09AE05D5A401EDAFBE8A3F9F386842DA8E52
4B8B2AE9C2F7D2FB98C9E3FF134708DEA63556773B115908FCBEA8FBD73C5736
CCB3C6FA76F9E53EB0D37ACE9AF7D0C84C3645D24CE2A21DEC744EDFF4288263
8A6A574B7AD560CA26EA8970DCA4F39582298850D122D79B5AA3EA9F3D2E32E4
293FF63077C37B40F514A02E09210BC0A79C8AFB448CA37F7660C4941D3140D2
E75B1979B574F51D647FDE3F46DEB89AFE5AB4350C7C27762B2EEC762701FA97
0A511180F6F13FC533B52731C59773E52DB588C02B1985215618D35C9D140EC9
5B76573E4F4758AF51768496C1226255FDBD15CA8CA9184E15FB83A35C05C9F3
97BFF8A468DCB6B437B048F04954ABBB0CDE9BAD88266E9B0F5718F51E196180
5C28360564242EF27F1F8C425C3DFBF8F95ABF2B21C14CD14BCC66BE0DBCD7EB
E2563038AADE657633C17E54458F7683DD066A667FD54F7D1349D46AE4978CBD
199CB57B076473C1F63376180B8B4A9E5BD5C4D5E0F43DD141383BDBFB1F32E9
B245D5966FCFDE160FB0C6D19FAEB2A68C8A932B6A16153FCB4754E23669767F
011145A7D1170C4C5822B39FAF68AF3BE1B1DFE506137C7B3D9A35264803576F
037E7E263045CF3BC7698C98E1ED6DD4A5C30A9E2764EE4722CC024637F7054C
C59B0FDA179F9E428C90FB2C7A387666DDFA716D01520267DDD8A33C2FA4C041
A3D2B114C7DF815E4A8B84792EF7D0C4E2A81C315798C8005867B97773BA148C
C3F2759E060D8268DB1E2B5BEEAE842754C6132EE2E0C98767577E945B275E0C
A34C78CC253123FF256DDF6B15A21018E06C543464394A3E698491385539C9FE
24886A4C0AE9735585F28C3D643911AB04487B7091C4E4CDC5F9EE9BEB8982E4
3B383CF9E0ED685999D768722156784017A123F9CFCD5CDF3FE8D5E484C5D891
E7DADC353EF52CCCCE8863DAECFDB831444B96EA27F6E7661A06DB2DDEFE1B79
2F6D68C48119FC6E0E8060340A37C59759C57E4EFB0CA2AEEFC361A69AC6D0FF
01B08094A6F3A74CC5DB6D733272F54AA6F8508DD71186901E7D5AC9C9846484
CF63BD56987B535AD114358C8804E1F170BC3FF24815E334C57AA89C1014F5C8
6630A20680E19CDBA5EB72994DA5AD364493DCA9B2608B570F0E2B8832E078FC
62330038BD7C589F85745560757A55AA6901200929616387D48758A815AD4BD7
CE04016EBA2DD686168B6CD687698FEB06B69D795DB3D6A4D72D2ED9CC1CACCB
CC0C5926FA5C1C6BA43AB10A2A0E1534B28DD346139B2D1F68364825CC5335B5
9442F90C05F5968328C423853E8788B6FE660B0F53C4374039FD55223E7B60A4
FE39A4330207B273C58EB9335DF6EDCF2412B0A938A1EBFF198BED22B1CEF282
BC9E9989F4246B6E6ACD97F3235CA250E91EE271164104C86F391114FB4E188D
242C66B5DCD8B7FB43FDCF093104BA61DAEA4B7C75AF200A154B1E689A61BBD0
021C1A8B9BBFFEEC92E46340748B9DBC73C7D024F2149A0BFCF8820E1CA79237
9C421BD31410F4F42F2D31F526D234F65F6C5339A4831DE4EE67481AFA8C024C
108847768646E25E10D8D07F91DCF297F7523729FE19F47015BF1228AD623A2B
55599039529B386361EE6D09B687A7BAA768B7681B8B55EE294C3D06052E643E
83180D67B2EC48C003D3B128A233ED4C9C8F771EE36E100F5FFB9BFABB279AE5
0809B9D7C3A060C80DCD59FEE897B74069E4DD426DEC78C3381BEA1A14A46E03
7049E5B8DE6495295DED7C70AFD45A379211BCBE187B7F4CEFE4DC51FB36B676
A9CFC10C2CA668470D0CC3052643EB609056D497439A24E9665E119D5DEED487
5C65587993FFAF933CFA9B00BBC1AB5837C03362BDEAFD4211AA12443370576F
7F048F195FD742D85D94EC3EE00723F7F14AA477320BD9464F9DFA7B114229EE
C99077DD2BFE4BA8217086FF54DC9EFA4509D63E908DCC0744C37B6E2F45082C
3CD86E28AEC8D19C6B8BA081AE8D910D3C49E93383323F940169CF0783D2BC89
EDC54DDBE9E6851E99B88FAE5CCFD447F5F5FAD4FD4DF9FDACBA19C9AF96D3E8
91EC024AFAD7A622D203A56FE5CF729DFD2AABC0CB05A8EE09F7C56100F2B513
A81DE4B3A0FE92EFDDBC67CC9998127401691C0425A75BAFEECDB74D81804C56
54E661D5DF2708FDFD95240D6A54768A512E22FC9F5138904E4384C74B53367F
C8E29F5BF925E7C6F18EC4E0F4C31D9777EE5A9E5A0BEB984640A0488161FEB9
A3CA1B0C478AC4E5AC841A4821B34F21E93696F4AA77495196F38CDAD704FF89
02CD545E985917256B197063069032682F5816BC14177CAC5E6F3581A3C1CF28
EFD85AC693108422415173D1842C32A42F782CC4BA2C6CCC8F8AFC1F340A5020
764E9A5DBE640CA919782966172B447152B918F45D925840DD7194A769B9EA61
4E8DBFEDFA59C3C1FB451272CB2C5138798FD59556A4863F53BE0D6038AEB9A4
AF7E68D2861AA9A4E4C633C4957E469E1BF488A5FEC2DAB9DC477B3E2C559138
3418C2E8431A8D1F8E5BF1C59901DADC86F5211648684A48EC3C88C786DB9728
43139998C520F77AA5030DB55ED5BD3315E808A08356AA25195936CBC47449A0
E0DADB876229E44D92BF9F05C71693A4673B2A37664BD8C4F3A3DDBAA5B53C1E
E22CF8A281EC4E6F40792A5014D33EBAA1FB2BF39E0294A3C7069A9AD40BAA96
2FBE476C2498348E2191FFE066A039BCC3166F23E3E1E34A049EDBCFC80888A7
24724D424A7622FDC1535873A90D567C21C778F01E493081D20D0DED19BA1039
D4FD0FBFEF80FCC64CFE4D57A24735DDB161996761142A1D6E2005FCD98193C7
30114A8A39963C06602BF6EB6FDCD74B2FD1FC83ACCAFB11CB78E5FA0A80D90D
A363678EDD20FFA85431A3B73C5A5B1470B167E551787B21CBD0371B8CA32C14
F34F13CB4D9D52766A25EC9AA7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F43F9A1290E91C463895BD12E8A831DAD661EF23CB9AD2C26CFB26
71B72D15270CD8CB1D59CA2D9DE884C96BB923B1EC8208BD7DCEAB0FC2293629
2AA1F72C6B470701C381E335C2364CFCEBACDD20CA36182CA7E70AFF5B14B02B
75CBD0738E35DAD8E60CB3DA4DDED557FF9ED386DA52D10615E700751C842FBC
85D89C0E713F556814E051C6CEFE7E83C2F379B88A801DDA565BE73013DD56D9
44D97798564787AE6D5A6A9FB777EEB850C7481B4A353EB9279731512C9B95D3
2ACA3A0D44585E55AFD968135F6492A9381FA2D126CF50373AB7D47B509AE6F5
C4B100BE8334ABE2268DAFB7983BF339540A8D8280F3576CDCD4F21408AA7D95
D50A7C1599E62D4FCAB001D5F9DA84FA530B88F2FE36B36F9968B5CF9FDBFA11
DCA0E08D087C4C5F4D744BFBA60FC22E964CE10AF512C228F4CFC3DB21E38CFE
AC11748F9B23F33426BC4AE3F026AA8178364704446D3A12157DE158671515E8
FA0324852EFF0888FD90913D77B6417FEE8C039C12D8CCF516AA5E9AE60CDF64
8F9677A2701944FEE0E51FD5BEB501509F73CE26568F78981B480F688646A5C8
C563B8FAACF6D61C1D0A16CA68A4AF96E6F89370958884EE230DCBAB3E90B348
F1657F327D698A8A222DE58623B2B82E6F39A572823382D6DBF390F03121A932
BFA4FA7A2247EE3C628F9A334F62DF98CEC11E91273A1462E6E80A7B58F0B3A7
1010CE8BC3CBC4698763770EDBD721E66C5852C838BC3BDB4D669E857C728060
5EDB2F5960CAD59B4B3B349146BE16B93600F1254FBAE5E548E490AD28B1CC9A
B2133D79D6F030D91F1C967EB2D468C50DF812D8CF9F07F4648192A7EF6EFE72
6C526DE1A99350025F131D697CC0ACDE8CCD15659B544BBB3612697568EA0D83
DDD7E1D83FAE2FDECFF5AFC95518DF8CEE4B9E59CE2420515A0042EF7592DEE5
2E10D424859429DCB4ECEC7DD282636A3D07044AF41C0A3FC132DB99C17A6E74
7D024BC3297C403B5E2704963ADF87B75E8CDE74E37C9AB7F35D50296B0B418C
5D08CF057ECDBAD28147DAC67EB875748BAE25E19474B782F24BF7ED544AE148
467180DC2293FA812D804F479EEF9C03F89E026963830B08E9BED0FDF83EDA2A
CD3D3B279ED66EB955E260AF1DCB0E8959857A5B2FDF4AD90CAAF7A0B9449559
4710F7BB631D9C72C9D1037A698BEC695D0E254EE44384CDBF724CDF871CE1B9
5B1A738E62B64B42242C18F5BCEF3BBC0BBCDFF50A96C971445D731DF9B83A7A
1136A9CE8747794446CB7232023DFC1D7D4C4FAF55E151C39FEF8B47E45C5AA5
F99198A39BE62AF7CFBAB277B8A66C8413AF5F059D8D3F20870038B6EA3C5E41
A3E6E6EAE70E64E165C15797687C7632A189CF44A025208FBB7013739A349082
F6530C501595FEE183738BEF36982B7B69468B12590B6EEA0E1A19CD13962231
7F5DFD2EFBDF0C204AD90CAAF7A0B94495594710F7BB631D9C72C82FC752771E
B050A697558AC6062ACD9C0C1E624A4E47978D228C684452513CBFC52EA63C63
19DEB18F99421D5845A65F73AED95051BDBD5B304D90B664CE6B192C1FB3F7B5
290C219E9172B0107883EE596FEF286C526C0195133CAE87C919D97B0DD0851E
10A21034A28CC98941257FBC1D848962774285A0E73867601A1637CF348B0D6B
F5D5EF773DE3E6DEC83053CD18E028C0F89777FC5FD2466683B7E3A8F532477B
7D1D800310CC42F926DD71C9A3B8E838C9B7BFAEE46118DD59B27327C7D9DCE2
C7380B706D44E4C7424CD243B89EEF73565F3D0D2AF2B6219C1C4348C3109D06
711E6F18A59DECC5DAF70CFDCF546A43DFB3EB225B835DBFF1DB368811996293
AC70AE9037BAF2779E53CB175B441E72A562BFC01E47C3589D5639AED890E8CD
6EF325DCAA0A494133FDAF30EA27983A2552A41312355854E496E7E895CE001E
7987E49142FAF0C1B27E139CE1D555010ECCF674025C8D120F68B4A4EA587B4D
B14C661609E63275574A35561EF664C3D906427BCFDF2A554BC1C56AED7E3E83
B7EC2C8FBD317A0B0313EBAC805E6FB565DD7E38A2676BA81D5448A78FE2C8F5
6E6967470985AC22D70CC45ECA5A89B19DAC7684763FE52DDBB447C01662003A
FC9EC243CA4D5B6F39E58816C7A84839C069CFBB069C10AF00376173B3F25A32
DA0A44303697F620329AC04682962E7A48844F6A0B5C8448D0420E009617C2A6
55DD4393A30FE88C40692800C51F9FC7B77057F44D87127A627C3FE5D8F06257
3FD7157C14C92F66470CEF28C539D7A141529B10FDAF908720C544600B28E6DE
6DD563F75F9C4FC9B9771F85136B44AFF12A198A87CC2D6A5C3EE7C7DECCD1A3
95E7BA296EF8A861492F2D6D5F591653828C054D9A6AF0080C0A94775FC9DAAB
1757A02E3CC329C7ABD9B75D399345E2229815549E0A5D45A035FF25F0D25229
09D25B70BA79836C15C3F98FEAA5378501DF9DF82D49C4D40BC74F3E14C9239E
2F220C517A3CE6A86B2C5553688AD476ECA15CDEEEC5D09AA10EC8952365517D
173E8A833359F485F05CB16AB6A797120BA17717A5D56ACDB80ADBAB2BFB7CE1
4AE2F0BCB483D222394299B2639AA6FD42A9B69C124AEB6E14B30E0A208BFC47
0AB52A37C07C643276435792033AB924D68EB23DE14EEBD5691440F5430EA415
B76E4D2C4BB848D07EDE0C1B23F116D757388E7C54C8C90C1EBBA523198941F5
64AF8E021203F56C1291D6A1B56DCCA040C9F833ABF0BAD1DDA4836E4CA03976
B5D7D2B2ADA203EF37C5F84CE7C6842F37CFD0C4C526F0EB6929BF56986703BB
58C780C73C09D36274C99FF22720BB1F02070DD18E6436BE09624DFBA69D2845
837AA89EFC824212282BB7BDFC5534A16FA3749F5AA262043699F4AEFF647F8E
221462479F2EF629D4A6C41C860B70833B92401728DC8A090F286371CD3FFAF2
82D3BC5E89C0FD5D7B72F367FF7E276AAE0A4B270E830E2FD44CA8547088CC12
97B48F69CFC6932DF0E2362CCDFCFEF217752A873B5EB6DC81FB51FFE7585EC1
BDFD20D817EBB696A33D1B4C852865F417E0B4B4B1BC085676EADB90FCF67136
BBF7FD9218032C4534B399FA422E0419506D9E406F2DE58EA2C6778463735B05
E0FA606348288CB8E605872515E08504F525DF166B4F587AE41977105175EF7B
FD3374D73E25E8B728E94E9984F1524A15FD6DA78BDB70F04B1479D489B8F6CE
AB4D39CCFDB8D3D17A2D90F5BF412A88AA659E803B0547A84574F6B8938CAABB
CA8A9966116485590B169A10F6494A8422751FBBFA8906F26383C9327396ABC8
A8AB2EBF1AF41F699A99BB37F49D7B9A7192A22754951974A5DEBC78F81C2CA7
87FE2A5605F7CA70A27D41378C65412E3A118C7EA13A23466BD772F7A64AE56A
38A592742F5FE8D6B677CE496826831E9AAD3ED8F1D818814B49D0EC4DDE1F8B
FB5724EA4468506521BD15E02CB2F4E5B602F552181D005AE13EE53F5EB857A8
6531126605817A80979D8B044C8FBFAF76772C2631727CC6A53E94FDA12E86C0
AC64F9F960EE62E049E6D9BC9858A3ED3CAA1D77C3E0EF1A77DFF0D1E5B9EF8C
1406A58B14B39841492F2357428D0E9DA501524CD28C00303A6879F7154DAD1D
3A26AF2CEB9E359BD9E5E92EC8F6A19066B51C2D0BA037705EC370725C45D5CA
A5527CDC64B306DA66762D0B4F8CD014C74D74DD8FD08C356DB9F6AA62B2F5EF
A37BDCD84532C7E8C0FA3CBD007F456DEAD907353844BEB4B6D29887108E1511
5CF8FDDD9069BEA6501185E83688EDDBC721C3E15AAF4335BA708145A1FCCBE1
9B19D99A7987325709BBAA367BDFFDAC48CC9704F2DDA7CF3C16C74DAE61F799
4A1EED402BAF8FF96F766858116600B380D7A54DD3EBFA465DC5AA2A7F1873EB
A4306C76C168F0178F70D9495C76B7E26351FDBCA3969C0D3090511D98C772B5
5BB4844F79B4763C183C5D46B6A2CABAB84F16B049564C073A30D337DB806A33
AE5BE9F2F18AB4F1A429EAC5DD19DB3DD4EB3BCC147B05E417BBCFF718745693
A5749B8673EAE37E36FC0BDA5869D32FE02E99745B074EEF728A561EFB61DFDB
A44629D2FC15613CBC65CEDB4889C72876BE07B819D00B823EBBC83C8C051565
DB7D3A81A34C0C63378FEB9CE3B835B252BED046D1210EA3982080FC17010F84
20D02EB431B327EF8CFF7C7AB079E1BD662F34DCAE6309809DD0B54DAAA9A6CB
DCE23B4A4ECEC32F7DC5B99801F57EF11A11F95D4AB68A8D431276A9CA803E8D
80ED1FE6311F9D088AD233A60B14C262B29228C625D6AB822AEBE4EC1A65025C
ED658FD4E0D504498D8EF871C6A256CBC5BC84F2B22D1407268A55CF87706034
18D54EA3773264F0EF5C55DD6923D475727C9C599A7CDDEBEB00524F2A260E27
08C62622390D27D3ED78A79A18D5B85A212874393413E1E2BB47532ED20D82E5
5F6C6FC59717B99514E254DF3503952D29FDC679F7BD0B6DB67D14084051F22C
1BE49650E96601D8E05B6C4B53B64177AF04AB6CD87ABEFE7345BC1BD2B6619F
595F6C3E4EFDDFFCEBA83DA75FCEB982E72677DCB3D0C9CF697CD26D45DDFFF6
F735FB5C5808675B3EFEAA27241350593A637E055EFB1650934F368B2705B01C
63032BC6AE1DB869798090AF474ED3B7C793B3D540A244909B4E5FAA1D5CBF88
DE38574494D31EE67673A7513C9C8596957EB0D3FBCD78DB125BDD3FF84DA352
7A79917B3DF604DCF7DCECDDD94D73CCCDB3CE51BF299EFC1F88A595B3190C2B
239000C45B8A3BECF570C8EDF0185B129BCC3AB1FEA7F4A57BF7A199A9081D3A
3E8494BA5B1F897598289B4172EAB58CF158E0E31AFF26A948FDC0161AF887CF
41F19B0DF1F4615FA0F3BB35CF894BBF453BC2E576BE4D420089020B87E01D66
510574EE203D0230B2AF1F10C7573E39AD16E88293CD43BF969F715C65C69E0B
27729C56DDE82A1F9A87830EAAB359F7DD9F7912D64474ED2F2940EC165FB5D9
D4664A2EAD9B9E7AEBDAC87D5E2515ABAF851516DFAC20E17149F502C09EC985
FC28C0F860DDE03580D6AED4E2ABF7634A3852CBE25EB632B0BB3CBBC6DEAED2
E30B9E321DA7A2CCB95BDF7514EEB8A32E38A92C6D088DBB894F4B7AF6DC8410
58454E91E77E72F0FF0F594B4F99AA343733647F41976503F41B33A02784434E
5545FF91A2791251BC32535C2F940B5723D1B8EABAB50DF1A918B5785AE02F33
BC4F46CBB219DEDAB4A55B1C61EF9A5B5A573B6BC342CE722C06E605327B09B8
5620F36A0C5A4C0A1FF675DE64224BD62D0776490CCACC9B96AAD46CC747D344
A243F69C0EC8CBFB8D34F628CCB19DF0480E40A676B145365F0980046A9793FE
344C1ED6149EC7D2B0F423EA26EB2244CB67C67DED9E1330B92AA36BD5FB36C9
0EEE9FC064236B9C825FE30671A93BC36DFBE6023FA4C17FF4B06C1CC84FF37B
C8D739C76121B6EF023AED534811FA07D811AC5484C290616F48725AA384FD9D
F7069EDAF4F3F4B7F65C206CAE0B47DD5477E237828A375F7484D8B7CDF13997
42F2FDD61E1B427468B55D6FDBC901A051D33A340D4352AD30E6274D21692ECE
B42DA4A02FA53F6689A5BEBF3FB517A6F27E70245684A60FAF17D76458EC4E5E
89F9F0CD43CF5EBFEB28FAE7B42FCFB0ABD3D273EC0CEDF46C746FCC4F3E0FB7
BA315D6707004545E27E3803538CD1E3803F860F92E850B5DF554FD3BE87DF75
0A63C5FD918FC60843D1751D778A470765334181C4121686A7DA94EC39CC4815
CD5FEA98602FCA118111EC8AF9664548FB61E1B51DCAD2F469F25D32FCD879D4
505C4BA5C2B8C70A052AF46778ADB468B28821E4CF131DCE017865362A4F7A58
AB4A0C48921212B3A783A8EF2AC87D3411C936BEE5CC8CDA339EDF7DDCF9F516
E302320B8F266748DC031729839B55AC1F1EA99C91F9AE9D6FFB2CE5C0B5F289
DCEA59F16A3600280328962D5B42CE8BC49C7D285E06F90A0DA2475AB29FF198
019C04F2B5043BE50CF2587E05ECF8FD95E2604D2C53C7D0A038B6BA98B6072C
CD70D614B32006CB3E69C703CA60A7433D90A73FD03F1DB73F6421CD8AB904A8
9F90888CB2DDC87B14635CD4A7DA378AE71F1E689004F27D09DB5C010B429F74
47B11F6929B05926923AD1050EECF8EB0C8F785FE4FE1705D5AD58D3F96A0D8A
B76537B58044C2D76E44CCACA196810A3D746010346D5AE01C5F7A0A6C3D575C
B2311106958CA7E31F1C44C73B744576A3D5D141EAB55269DF36993949F973D8
3F4B09818733C9D8B25F4B7E194F8F1EF4DA1814C3C28D48DA74F337A9003891
707FC7AF1650C3C08AA81AEC35B61C4F4C4894CB977DE3716094FE8D8E996F37
2C49187B3F5B689629C337FF1B72712216361C5E74B3BE923E3EEB1D612580DB
651255E46F02A6911B3C04548756ECBC2234CB4184308A5FA09E60448B75445A
0099EA0646CCDCA4575590557EFB6E0F644EB84D1B99729B2F5ACBA2F0A6C660
F111F4C43D0B9E75105398060A1F2C89EA643F6478B97A65CF135764521EA24A
9F8BE6A8E297165B5328BA23043541D3789401DFDB77536C60250FC9D711D3C5
22333DE01A58BFD9F64D26D86C464937CA73466C133E5FE441DE450CA28D328D
4E3F94665621526310521CC54E82F9FE02D708AD62D58227108CA09E520F8EC2
47F34D393B147B01C1E59B54E2516F3CB1C2E39527609EEBC4CF2BBB75DF9773
51C4578D06AD8C929CABF128FE25117326AEE65412026A6AD283657CC7EEEB5D
08BD49120A9ABA12C6D544BFB9DEBD518FBC84A8F7A192DE0C483E3BC6C25E90
89832190A920EB5301834FEBCA20897036A7E0266DB355B01A0C0B566B7E70EA
92CCCDFDDF006E5DDAA68A84D0A771979C7FEED118A62DF9CB1E2B664D195038
631DF3BF40FCE0620E1C7AADF88792F0F137E33EB9D40D0D129CCD8E3F470BFA
006415CE178CA40A1BFB572B6B2065FD96DB47E831A5F815ED55F9E372377611
E0DF60D447D80BD7A8C9B0369B1BC18FA045BBAA77F4140402BF84F92AFFF4C1
FE94B611E3647179ECCB2C7D07FD0459793E9831E7AD948B39A1003BF5860A0F
D4FE3EB61B2A46B8CD19D238BFFAC8895C6B8CAAD81F90EDA24AD742A575F71E
99FCDFAF4B8CB01F4ACDF284696B158CC415C0A647BC19B6468658CB54C2F323
EBED5FED957103ED90C5349F494200A88F768E585111E1BE4576C0C31851756A
4D2FD5A9536041D7266ECE7145D8BA2B19950F732B1347BCF12475CA5BB8D77B
6CEC8E83E6366F64171C135EBF000987DE9540A311EF479C4FA84BAD90796030
6096E0B15E4C5C72AA29C12170738A8D4ED82BA48DE8EB00E02D7FAEB0AB5E1F
23E524791C47B05D381EC4E5B6C3D1C9F2C5D6A282F5CC891F91B81031AFC9C3
10644F79B499CA0BDB2442E31F4D770CBF394509C295FC80E8B6FC8D8096C37E
4B72912654BD15D7E25FF3158C156EE73AB93AA7D3FDE2F73EF85333C06BDA3D
5197070B1069B520DE13EB3FF5EFE03E9D6017C971115F9E309E9ADFFD8FA102
D92F55C2AD967EEE7F9CF3FD704B3C6E9F0722941B343B50768045422EFABFA2
984522A07646663E8DB641FDAF6C5A9DF7C877D824F91AA4280386D38FC1BDFF
7765C768CF795678949D7D9077911EF97298921AD3F75E7ED066D91FAF082F86
301940B6F9169A33E753BCE14B66C9F9C1A3BAC534E091A7FEB8F88D5AA2FAD8
B8D610FDE7E6A3F1CDCD53B81C745381031A1B9B69D876E95894CB72B219C598
4EDDDEF7B4964BD57B648FB7BAEF40D526C10AB20CDCEC7C52F9F78EF09E89E7
8CBF1F2CD3C39E7377679FD3ACCF124255564EABACD50B17254E6D298CF22188
30D13857DB181663ADD96EF7A7AD63067C9B6D6569E7F6955F5032E6C2F1D99B
3DD877FFB65476F873F4056CC4F666894087A229007E5C4A2AC7287606CFC51D
FF4902D5240D485030279C9EE54612C1B7E05D177FDF0568F480883A6B807DD9
B2E8D3E620718FB4C587CE78D1AD72CFC2A4785F93EA2DA85F1F930922772DCC
66470B609BCB45BBA78D5189CCD74676F4E42DC9C5D2128EE1F109D069D6242F
F96FB436D1BEAF0085D529AD691121FDAA46349979CF6DEEDD6B19EA301F8732
3FE61BF6ACEAE1DB4B0B84B0B77A81186B3B04ED7A56EEAABDA2742378881FF5
6D858A7FDB85C4C892F9912C517A3836C29EBE9AA47D3CAF6B431DBE72B0D1D6
6A39C8DD20A1424CA187A1A8B64A44DA841FB53308C225A65C4CD26A1D659C14
603DEAA9650C2A8FECE724F2F122FA2DC686CB509203FF4AAA1DDB996BD80A3E
48C57DE475CF89F5ED0EB6FB8E7EC5DD3ABD64ACDD255E0D0AC0EFB11A89FE7B
D0E402B80BA6CCCD4B93734CF515EE1A48B1AE615AF46A36CDC1F78F48F01E4B
120C2CD31DADEBF2B3F76561680FB21E05352EE4798B7C4DE783FA2EDADAEF70
E3013A848BC638
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (mail.dvi)
@start /Fa 136[44 1[44 1[44 44 2[44 44 44 44 44 1[44
44 2[44 44 2[44 3[44 1[44 1[44 11[44 4[44 6[44 18[44
46[{}21 83.022 /CMTT10 rf /Fb 134[44 3[46 32 33 33 1[46
42 46 69 23 1[25 23 46 1[25 37 46 37 46 42 84[46 12[{}20
83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 0 29 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 29 a 0 29 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 29 a 0 29
a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 29 a 0 TeXcolorgray 0 29 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 29 a 0 29 a
tx@Dict begin gsave CM STV CP newpath moveto 3.0 neg 0 rmoveto clip
setmatrix end
 0 29 a 0
798 2640 799 v 2640 29 a
currentpoint grestore moveto
 2640 29 a 880 58 a
tx@Dict begin  tx@NodeDict begin {6.94444 0.0 18.88895 9.44447 3.47221
} false /N@T-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 880 58 a
Fb(mail)0 294 y
tx@Dict begin  tx@NodeDict begin {6.94444 0.0 20.30562 10.1528 3.47221
} false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 0 294 a Fb(from)84 265 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-0 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 84 265 a 9 530
a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 18.09991 9.04996 3.5 } false
/N@T-0-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 9 530 a 32 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 14.29991 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial
Fa(Me)84 501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-0 /N@T-0-0-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 84 501 a 323 286 a
tx@Dict begin  tx@NodeDict begin {6.94444 1.94444 31.44449 15.72224
2.5 } false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode end
 end
 323 286 a Fb(sub)5
b(ject)454 265 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-1 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 454 265 a 226 530 a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 54.8496 27.42479 3.5 } false
/N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 226 530 a 31 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 51.04959 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial Fa(Homeworks)454 501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-1 /N@T-0-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 454 501
a 808 291 a
tx@Dict begin  tx@NodeDict begin {6.15079 0.0 8.88892 4.44446 3.0754
} false /N@T-0-2 16 {InitRnode } /NodeScale {} def NewNode end  end
 808 291 a Fb(to)845 265 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-2 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 845 265 a 748 530
a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 23.34987 11.67493 3.5 }
false /N@T-0-2-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 748 530 a 31 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 19.54987 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial
Fa(You)845 501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-2 /N@T-0-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 845 501 a 1741 286 a
tx@Dict begin  tx@NodeDict begin {6.94444 1.94444 21.94453 10.97226
2.5 } false /N@T-0-3 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1741 286 a Fb(b)r(o)r(dy)1832
265 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-3 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1832 265 a 1008 530 a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 23.34987 11.67493 3.5 }
false /N@T-0-3-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 1008 530 a 31 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 19.54987 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial 88 w Fa(A)1105 501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-3 /N@T-0-3-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1105 501
a 1268 530 a
tx@Dict begin  tx@NodeDict begin {6.94444 0.0 41.11122 20.5556 3.47221
} false /N@T-0-3-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 1268 530 a Fb(de\014nition)1439 501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-3 /N@T-0-3-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1439
501 a 1233 767 a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 49.59964 24.79982 3.5 }
false /N@T-0-3-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 1233 767 a 31 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 45.79964 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end


@endspecial Fa(deadline)1439 737 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-3-1 /N@T-0-3-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1439 737 a 1676 527
a
tx@Dict begin  tx@NodeDict begin {10.8 4.6333 44.34969 22.17484 3.08334
} false /N@T-0-3-2 16 {InitRnode } /NodeScale {} def NewNode end  end
 1676 527 a 31 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 4.6333 neg 40.54968 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial
Fa(is[...])1860 501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-3 /N@T-0-3-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1860 501 a 2111 522 a
tx@Dict begin  tx@NodeDict begin {6.94444 1.94444 39.55563 19.77782
2.5 } false /N@T-0-3-3 16 {InitRnode } /NodeScale {} def NewNode end
 end
 2111 522
a Fb(emphasis)2275 501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-3 /N@T-0-3-3
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 2275 501 a 2069 767 a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 49.59964 24.79982 3.5 }
false /N@T-0-3-3-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2069 767
a 31 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 45.79964 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial Fa(homework)2275
737 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-3-3 /N@T-0-3-3-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 2275 737 a 2505 530 a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 12.84996 6.42497 3.5 } false
/N@T-0-3-4 16 {InitRnode } /NodeScale {} def NewNode end  end
 2505 530 a 32 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 9.04996 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial Fa(.)2559 501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-3 /N@T-0-3-4
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 2559 501 a eop
end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 448 1749 a(Notice)f(that)h(the)f(\(b)s(o)m(xed\))g(lea)m
(v)m(es)g(con)m(tain)i(text)d(whereas)i(the)f(inner)g(no)s(des)f(con)m
(tain)448 1862 y(information)k Fq(ab)s(out)e Fr(their)h(subtrees,)g(in)
f(particular)i(the)f(lea)m(v)m(es.)448 2099 y Fq(XML/Example)36
b(\(con)m(t\))589 2198 y Fr(Since)31 b(the)e(information)i(of)e(the)h
(inner)g(no)s(des)f(describ)s(es)h(the)f(information)i(actu-)448
2298 y(ally)38 b(laid)g(out,)i(it)e(is)f(called)h Fq(meta-data)h
Fr(or)f Fq(mark-up)p Fr(.)60 b(The)38 b(w)m(a)m(y)h(to)f(write)g(this)
448 2397 y(do)s(cumen)m(t)32 b(in)f Fp(XML)e Fr(is)h(as)g(follo)m(ws.)p
0 TeXcolorgray 0 TeXcolorgray 448 2555 a Fk(<mail>)528
2655 y(<from>Me</from>)528 2754 y(<subject>Homeworks</subject>)528
2854 y(<to>You</to>)528 2953 y(<body>)528 3053 y(A)40
b(<definition>deadline</definition>)g(is)g(a)g(due)g(date)f(for)h(your)
448 3153 y(<emphasis>homework</emphasis>.)528 3252 y(</body>)448
3352 y(</mail>)448 3589 y Fq(XML/T)-9 b(ags)589 3702
y Fr(Eac)m(h)37 b(subtree)f(is)f(denoted)h(b)m(y)g(an)f(op)s(ening)h
(and)g(a)f(closing)i Fq(tag)p Fr(.)56 b(An)35 b(op)s(ening)448
3815 y(tag)g(is)g(a)g(name)g(enclosed)h(b)s(et)m(w)m(een)g
Fn(<)f Fr(and)g Fn(>)p Fr(.)54 b(A)34 b(closing)h(tag)g(is)g(a)g(name)g
(enclosed)448 3928 y(b)s(et)m(w)m(een)d Fn(</)e Fr(and)h
Fn(>)p Fr(.)589 4127 y(The)e Fq(tag)34 b(name)28 b Fr(is)h(not)g(part)g
(of)f(the)h(text,)g(it)g(is)f(meta-data,)i(so)f(it)f(suggests)h(the)448
4240 y(meaning)j(of)e(the)h(data)f(con)m(tained)j(in)d(the)h(subtree.)
589 4439 y(F)-8 b(or)35 b(example,)g(the)f(whole)h Fp(XML)e
Fr(do)s(cumen)m(t)i(is)e(enclosed)i(in)e(tags)h(whose)g(name)448
4551 y(is)c(\020)8 b Fn(mail)p Fr(\021)37 b(b)s(ecause)30
b(the)h(do)s(cumen)m(t)h(describ)s(es)e(a)g(mail.)589
4751 y(Note)44 b(the)g(tag)g(names)f(\020)8 b Fn(body)p
Fr(\021,)46 b(\020)8 b Fn(definition)p Fr(\021)49 b(and)43
b(\020)8 b Fn(emphasis)p Fr(\021:)65 b(this)44 b(is)f(the)448
4863 y(w)m(a)m(y)i(w)m(e)f(in)m(terpreted)h(the)f(red)g(colour)g(and)g
(the)g(italics)g(in)f(the)h(mail,)j(but)d(other)448 4976
y(in)m(terpretations)33 b(are)e(p)s(ossible:)40 b(suc)m(h)31
b(in)m(terpretations)i(are)d Fq(not)g Fr(de\034ned)i(in)e
Fp(XML)p Fr(.)p 0 TeXcolorgray 1920 5225 a(3)p 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 448 573 a Fq(XML/Elemen)m(ts,)37 b(no)s(des)d(and)g
(declaration)589 686 y Fr(An)g Fp(XML)e Fr(tree)i(is)f(called)i(an)f
Fq(elemen)m(t)g Fr(in)g Fp(XML)e Fr(parlance.)51 b(In)34
b(particular,)i(the)448 799 y(elemen)m(t)25 b(including)f(all)f(the)g
(others)g(is)f(called)i(the)f Fq(ro)s(ot)i(elemen)m(t)f
Fr(\(here,)h(it)e(is)f(named)448 912 y(\020)8 b Fn(mail)p
Fr(\021\).)589 1124 y(A)27 b(no)s(de)f(in)h(the)g Fp(XML)e
Fr(tree)i(corresp)s(onds,)h(for)e(no)m(w,)j(to)d(the)h(op)s(ening)g
(and)g(closing)448 1237 y(tags)k(only)-8 b(.)41 b(The)30
b(no)s(des)h(ha)m(v)m(e)g(the)g(same)f(order)h(as)f(the)h(elemen)m(ts.)
589 1450 y(The)25 b(data)f(\(as)g(opp)s(osed)g(to)g(the)g(meta-data\))i
(is)d(alw)m(a)m(ys)i(con)m(tained)h(in)e(the)g(lea)m(v)m(es,)448
1562 y(and)31 b(is)f(alw)m(a)m(ys)h(text.)589 1775 y(Our)42
b(example)g(is)e(not)i(exactly)f(a)g(correct)h Fp(XML)e
Fr(do)s(cumen)m(t)i(b)s(ecause)g(it)f(lac)m(ks)448 1888
y(a)35 b(sp)s(ecial)f(elemen)m(t)i(whic)m(h)g(sa)m(ys)e(that)h(the)f
(do)s(cumen)m(t)i(is)e(indeed)i Fp(XML)p Fr(,)d(and,)j(more)448
2001 y(precisely)-8 b(,)32 b(what)f(is)e(the)i(v)m(ersion)g(of)37
b Fp(XML)29 b Fr(used)h(here,)h(e.g.,)p 0 TeXcolorgray
0 TeXcolorgray 448 2188 a Fn(<?xml)43 b(version="1.0"?>)448
2429 y Fq(XML/Declaration)37 b(and)d(empt)m(y)h(elemen)m(ts)589
2541 y Fr(This)h(sp)s(ecial)g(elemen)m(t)h(is)e(actually)i(not)f(an)g
(elemen)m(t,)i(as)e(the)g(sp)s(ecial)f(mark)m(ers)448
2654 y Fn(<?)51 b Fr(and)35 b Fn(?>)e Fr(tend)i(to)f(sho)m(w.)53
b(It)33 b(is)h(more)h(a)f(declaration,)j(some)d(information)i(ab)s(out)
448 2767 y(the)26 b(curren)m(t)h(\034le,)h(to)d(destination)i(of)e(the)
h(reader,)i(whether)f(it)f(is)f(a)g(parsing)i(soft)m(w)m(are,)448
2880 y(usually)k(called)g(an)f Fj(XML)36 b Fq(pro)s(cessor)p
Fr(,)29 b(or)i(a)f(h)m(uman.)589 3093 y(Consider)i(no)m(w)f(the)g
(follo)m(wing)g(elemen)m(t:)p 0 TeXcolorgray 0 TeXcolorgray
448 3280 a Fn(<axiom>)448 3393 y(The)43 b(empty)g(set)g(<empty/>)f
(contains)g(no)i(elements.)448 3506 y(</axiom>)448 3694
y Fr(whic)m(h)32 b(could)f(b)s(e)f(in)m(terpreted)j(as)p
448 3807 2989 5 v 448 3920 a Fj(Axiom)p Fp(:)41 b(The)30
b(empt)m(y)h(set)e Fi(?)h Fp(contains)h(no)g(elements.)p
448 4033 V 448 4273 a Fq(XML/Empt)m(y)36 b(elemen)m(ts)f(\(con)m(t\))
589 4386 y Fr(This)c Fn(<empty/>)e Fr(is)i(an)g Fq(empt)m(y)36
b(elemen)m(t)p Fr(,)c(it)f(has)f(a)h(sp)s(ecial)g(syn)m(tax)g(for)g
(ending)448 4498 y(the)g(tag,)g Fn(/>)p Fr(,)f(and)g(it)h(is)f(neither)
h(an)g(op)s(ening)g(nor)f(a)h(closing)g(tag.)589 4711
y(It)38 b(is)g(useful)g(for)g(denoting)i(things,)h(as)d(sym)m(b)s(ols,)
i(that)f(cannot)g(b)s(e)f(written)h(as)448 4824 y(text)31
b(and)f(need)h(to)g(b)s(e)f(distinguished)h(from)g(text.)p
0 TeXcolorgray 1920 5225 a(4)p 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 964 823 a
@beginspecial 71 @llx 680 @lly 306 @urx 721 @ury 2350
@rwi @setspecial
%%BeginDocument: axiom.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.994 Copyright 2014 Radical Eye Software
%%Title: axiom.dvi
%%CreationDate: Wed Feb  4 15:57:04 2015
%%BoundingBox: 71 679 312 721
%%DocumentFonts: CMR10 CMTT10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E -o axiom.ps axiom.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2015.02.04:1557
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/05/15
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  0 0 moveto 1 0 rmoveto  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.06, 2014/05/19
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 876 2014-01-28 15:03:13Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMTT10
%!PS-AdobeFont-1.0: CMTT10 003.002
%%Title: CMTT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT10 known{/CMTT10 findfont dup/UniqueID known{dup
/UniqueID get 5000832 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT10 def
/FontBBox {-4 -233 537 696 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT10.) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E5ECEBA191DB82B3
7A69521B0C4D40495B5D9CE7A3AF33D17EE69979B82B715BAD8A5904C5DE0260
6C15950CCF6E188A0CDF841EB68E5A2F88253E382140F87C87E55C9EA93B8C89
14A36CDF630D6BE7CD36DBDCE22B21778E8648B97B7EC6742EB5114BDF0454B0
0EA7B1FE236C84C0E5308C871F67B973892890557AA12E00B2C20C71F516C397
3F3BBD14A1D0149CA064391056E45E9470FC7F6F556ABC82653B3C8049AB5CF4
BA83C8F2158C236B2FFD4208846013BAF4165E8BB8D334C8FF2E8D74AF5DAB2F
D44788869B08399421AAA900ECC6A2D594641C121660D4B5F512938994C18DD0
FCD9B008F68F0351D21ED735B2740CB1E0C1CCD25EB548C35B844601D98828DB
556F71D07E081A593FF12DAF83676492A0FFE16E95717A07082B43A966C1EE8F
8A59E1255E1705C43A23CF29A5E4A6547C93F1680A870EE7BAD8CF74D838CD5E
F806911D8FE4262ED8E7F5BC58B92C9C6D74F8AD45FBB021EC7E97393018B9DB
B1B84E7B243ADB05ADD3F1DB3692ADC5D47FEC7DF93080669E63281F1576B673
125EDF08016664BE73364F65389F7C3B66623AD1754ECBEF9E5CE6948D933787
A5674279ACB2EBECD3B4E6361419AB32028A27670C9F3E18B746A10B00AF6D77
4EC00E3BE521C02A99AE5BAA98F793EB1228952BE67934B91472E01AF7B816BC
56D7F19F631A1927846D800C107B1E9CBFF9D2DD513B4A8CE2E0DFD77B1ED178
E43FA7052765E9FAF89989D490D8FEF6C536EC0D4AE27A74F474B98DA9E6B92F
15E063DB260571979A5DE2423920CE1F59F56EB11E00E3BB9D466A8263E1E385
2014BEFDA8D1EA3EDA04BE32AEE6CD15C5C010A1DF7F705A2C0C18E87C8DCCE9
05D9163181CBA56C0FAC8C06A2990554C8E759D076B01BBEADE3B5FB8B551390
6C8E4A2A1C6E7D9C708614626F3770C0AB7DD2027469C77975C27576065862AD
04E5E50CEBE907E3E991FA0C627302C0E207B4D5992BEBAB5853AD1C0D271728
C76F40A79392ACCA7358F948AC65DC823CFDA59E1FF69CEBB6B7EC3CF21669E4
70D999508F9C49E2D9F8818CA53C977D93E15FBBBAF75B1E84F0BA62BCC4BAFA
4EEC82D804C8A8C0210F3E5E258BB1F6921AF02BA9861BAD5C3D5FC8CEFABA8A
A607E547B802096F7AEB09FBA99C83C9A494B94408DD607CA6561A6E6660C473
62CF8D35F31D052F6C6C8138A8E1430CBA7EA6973D6D510C1A06B3FBD79D9364
240C1A00272DA44B89A9FE8D5BF36DC1B5EBB4A78ADBE9C5EDB485F093D9517D
69E1AC9A8E6C9D7C324E3797CFEAD9A18E82E03F69B2CED7D5DDCD1A218BF2E2
ED2293AE999FE2A4B5213A10083EE0407BCF8007670B8C737EAB30311C868D84
121149ACB4A27F3ED6C0C181C98AAAF51B105F264B5672D7F745131ABAB5BEA4
0C9B43C0DD9116D6DC61F90BE72018F290D26D5E9D341055CAF09C9F45333CDB
D45B7954271767F638EEC499F7B53C2CC5774EA7A7F024C4CABFB93D9CB1856A
0C671A4ECA7C62EA5242648A84E7F3AFB9547A0AFC29593CFCE6D8B873A78157
D337CABD291431C0A2CE1F37E0CD7340567AC206FF98E4B5A6410F70F750451C
550EFB54AA259A1B236CA9CB730D2CEF125EC65D959441F7CC9768F777B44844
CC9842A307C72B740680ACBBF6AA35FA7A94825069BF7696ED81A371A9E5475A
9D997F2DFAD339AADF797F7E03E654234455AC3D17702A420EE0A597BA31BDE4
FEB8DBA7C61D311CC90441A620164DC22DC2D373973EF84CC553453AB1B3337F
7B39983B8DFFB3A9425F119B45C1CD37A76F905777B3154CA6200792F1759D06
E017890F4041A385F2238E3C48B6C8EE6F5258463FDBFF7AC762F6C4363926D6
50F004D473B7B7F73CA686B559C2885F1AA761653C727A77D73431E9D110E76A
2E55C68CD50F43997C9B2FC4710F8C8540909829E215678E63BB8363C4B8AF05
9986102BB36580D9CA95CD216B7C321822CB41B2E0422CD077F3B55E0246FDB2
44D5976F67296B5B0BE4B06F6E43535C21164E6C5089C3E9BA2D6B30888C57DE
49DC8D9D46C0D5EDC47ACF2C03B72DE3B69512508539019B759280BABEA12BC9
385308A0395C4CD33182A10A5A229743379C2075D82D8BFCE4A66E1AA087A091
8F5372684FA5037D1B92D50CD9CB4F50AD4F8EE7D51F1C9E63C721CB5B9BD011
6F0A8DD4FDCD2B008F223A1036D90F0F3B252487DE7898F9AFBB3A9D9CD49E0C
EF4ADAD5155A98D2125ED5A3D3907F67301649519419F33CD942E8DDEAC1BDA0
E90C431B198F646766A8FA9F8D1561B57E126EF604838C0C1966655CF31FB7EB
C8CCC434FC1C96046D38203E1791EC824A3D7AED85C029288D4608CA7668A2BE
484C99639F121845B22EEFCE0A3B808261921AA042AE19E641769E91277BEC29
4594082CCB3058F90FAC4A700A8A827ACA00FCF574ABC8EB7DBCECD97F2B22C0
0AA19E8739B81AF8C6F621D69B8E6F29BAE233FBA655A0AF5BDFD7F5C6B9167C
6BC7AB693D45EF2AD999F5DA3CEFA39BA48A17EE6D9F2C4DAB91AE3F0044DC3F
5D5506CE4675AA928B0092D6F173644F91295216D8BBB14CDDE0AD524A4D545C
1B5E284A3BF0396664081CFB4F186A84A0D24D61E82F4767C1E55A0642720CF3
909FA1AB8EAB78030B59BEA067DEDBD2F1D0340E790AB2777DB18248521934A8
BB38A58B7F633DEA4291B0D5D13E9A882C974697CC6D3B49E030C94EA29B5506
CC29C44D01B4751B453A46A9F6BF3BF135AE87A4CE232AF57B66578310DE41E0
2A6AC422117F1963C4D7CC306BD25A6E724E51921779F22F029733122E23E2F0
CB340008813ABB104380C80A492B3FC6D0BB07CB8D8409E9576891EF6E5C9D08
EB8320DFA31BAFFBD336D0C2BBC3D3B2D30368B9860768FC080D30569C7F7811
0EBEDA2962476113625EEB555490B8CE4C5F99D74ED10F738C61854CFF8B41C6
9402E56BE8856144A1A05D0B05F4CB7EF728B2F4F5A439F18C3B68CEFA41E59A
D8308ADC92EC1289DC84CF48D2CDEFF509A145BF945E1E00D552D329EBD2A7C4
21D58082CC8FA790E981F4AC8EAB99950678FD3A7DA3DF13778681B208DD71A0
7C3CBD0664B37C9EDC6B601D79A2C51FB54DAEE849F93209793849104E722D3F
52DFAF7047EEEDDFE744787A5801E4AC2C3D58EC5DDC15FCEE03990C53B0C57A
FC54F125A04C8E4A0ADAA725808C587E7DAFB9F784FA2875689979D316DC22BD
AA36B306A1ABCF907B63C6476737B746099973CAEA8C1E2C5C41F27E0F7DE8D7
F0D942E34E92F43FE902653D4D2EBB6F3B9F7928B1550A82AF234D45D028F429
067652BD3D391BF423AE72B9CB1E8D91E898161BE3A7849D456A861A2046711E
E934DC59442AE7D81661CE8EF727D8D7DDC0270E937E40F896AEAE6171661431
C1025C53172F9D366834BA0054FBFD84503FBAE328B6FDEA180F8EA35B1DA937
5CC3B8F00C206908C2FFFFA6A7AC6915D15EA44BDCF29E2BFCFD4A849535F19B
0D307C696BE8205C7D84B9C77F02EF27D911056EDBB4080E4D3ED72788666CAD
CD91B0ECE27A177DB23320A7FA9C31408B4D02D2A4B1CC6DDE1A6CAC3D8EC1EC
2226EC98E51046D1EC26FA20EE62D24747D83CF4941DCE5CCEEC0DBE387149CD
E05B19FFCAFC0D117F9A3E60DCD4C815228D98EF95EB559AD0ACC0D50FFDF714
56C3C812EA5ADBB013BBD956A7C4CC0ED7D3E25D5C9AF5E626F18297F75D4957
F5B0B33379114B903FE98BCF35C3FF76FEE1D9AEB711F2962276531F7380EE3F
E368720E0292A170A15C5539B1FC7BB954EE2624B504CB8C805B8D31AC38307F
0513606F09211AE64DAC447693B2A0AD15E9A64C34F5A911ECD0ABCA90E9791D
67C6BD202B0858EF96E7722305B8AC02B01AB1706CC6AE875A8DDD15EE349046
EAA65005E7866B506EDFB7A5A2AFD5C9E9DCC821A79EE9C1EA2C7BBA32A40BC7
CEC26DB1AC473C8C3960ACEC581B37D6569E8C8C42950BAB7930B65E1570E3F8
9A7FA719F1DCFDA45A3BF2AAB32C9A93BA3552608A61C623DE59BCB346E87EF5
9CF025A87803161221C5C1C6F6B3403712C76E9D755C7BD68D7F2DC03C14CDF0
C1BBED1D648B905B4B17037B7263C1EA7A7F06FAAC4E09E08483A8D714C19861
327CD9C32DDF850302DD6DDE24912D00C22ECDF3CDFB18FA831A41A7488EC203
F564CFE30D506F0829A96D35A7E09C3DCD107D589B627A15B55C5D6649126BEC
60B88C55ECCBB4E680265D9EAB4CE22965D3B1AF759B01ACB0D0E6C92B6B4EFD
A81E6A648708979487FC591CF09631310D46891423F4EC159A73E30D8DD147A4
B0EACF6D45D18CD16CEB8176F03ABCB41F2234747B9733C8FAF34AE5D43D3BA5
0CE0FACFC9B087F84FB6C68678BC6E76022B1526D6E5B3A48EC1A110BD75F45F
1C4DC6D39F254976453F57DF873B7D635C80C42026DE020E5BAFE0DA0D54D1E1
DC634D2621BA184347E5252F645A6A1DB7657C48124186F0E4C644077457C24D
55753C651A9A7B6349867641464B515B821349C795A645420508673B93750D0C
7A3B33EB1F09782033742AE8F3A23FC02284E6C03818FADD1731361542E3FA3E
75B8D52B668C3E18A4AE967D0FC3157083D952AFB8144D549E69EAAC51C279C5
E5D88A0D9D53013DFFB4352A1598FF84DCDE6FA32FC377306B9B92C0F96EE149
8CD55E7B2445B86CCA7A547FA732D52D59025129FD8C6333AC0DF4F0CFF6287E
F2036D5DBBB3B91B92F12FEBE0B61A313A4DB5A9CF0BB3DDB781A56FEBFFACCB
8CB9D1D3DBDBC4CB6AAE6769E470582403CB920630221B68BCB625CD4605FA8F
D3D5B7A1A28D15E44B38E92E906C138E72C15B86F64C38E23BF0440052A8C914
54397F49DBED99D0AF7CEA3B0A05FF37C2D7EAE1412567E6776333237C31E3C0
49949EC8BFD6E0F6446CE2D4DCD2C1524A288818CC5D159BF8463A847AE4A2B9
CC8C58F822804B81B13BF4F2DEB6229C4F51F093075581791D02C36A13B855A0
34900AA7CD4F1A797652656FE3A8425A38F421C4CC0ACA1CDD44FA6B31219276
1CDE1CD63D6A58CE705CB56CCA1260F9B86E989019071563A9B4C274A87558CA
6EF1660D574EDA276801F0057740E2C3B80D253D697736484D892CE1AB128B8A
DECD69712F5E70E895FBAA927E8194D792A04AB6CE205E04E38A433BBB793FB4
E8BBC4279D58A223C6673D909D6AFECD246E66A52F4CB35E5931D24C828489BD
4ECAF621A220D8ECF702BEB01C4FC7510197D3F6D15321EC87175ADBA6434ECD
2B5A306E91375CAD22CD94301763E4A8B981472890422C5488FCD523C9CB17DC
ED22FBF12D5F7525D0D6BCFE8CE85B0DFB1D6F989C267FFBA0A996D309E4A934
3DB54A9D29C88B9D55D7300DA3D46419256C5A07A2A529A8DE8BD1727281F5FE
97033D861E0531B14E811378EC1AF1CC7EE9BA2B07D935843D3053F673979F8C
FAFD59D555B56CE338F606747238B22BD62C42BB7238FEA335678D474A643570
A9E7B4970E8C541CE9DBC7BF70ED7BA33639D6744A18379455029E934C95E2EF
639C4848CE9A0879B51649FAB023A71782444B451F92A34CB8A124270CCF86D4
D18EEF5C1D2B2A29012613851C49F50702D63BACF95EE2AB4D72B375E0A62615
E0991E130A67ECBA9E05329B740708F1CB148724C3A6E5E3AEC1F88EBCA398D2
1CA8827C977D72734310233176D1AE26C55CF2CEACA62223315C28FCF6305C7E
A22414D4739A059F552F1F9372CCCA5FED4F9AC987942848EB498900269511F3
F408CBEA0659B954F5F1B18AE4FB270213646F9B28AE4439D2BA2D3E0AAAA780
5E530E4EFC8A060EB979E12191044509DA0C14397AFF949E12DC970658D5EAF5
4EA963F5BC1407A32F3837CA6A24B7F3D60EB8E6222B702E25ED903F9D21AE50
664A095009BDEAF4B78DAF94E5A55D48366CABF07791A1684B2F54EA69070844
4F031AF8DF416C2D3679F8BA038B0DC9DD0400CA6B34667BCBBC07E62C1668A8
35A8C57C9048A7227E672E89681B54D662079A189A9E96A3CA96D8DD10189B04
1DA49BA2729F1CA585B1BD5C467295285D52E47CA904235A1A3E48EFAE9EB6F6
01374125CE89D53C276858668CF45D2F092DDCAA52418E0BB94C2B8266B4D88A
5D911507BB1DDA3D8F6E7C14A91CA11AE799EC42E993098E18CADA70BD2A1D82
2C39326C6E3F9E84CD9758B9AE43D79BF99E6A0CD713E95B3D9B7DB90D127DE0
DAFEBF850CAAACBD860B5DEF2082F1ADA64B44B193C4A1417BE221FDCA36456C
BE5934C8CE3ED55AE3A11697C2D682B7D0F72D48976451D205783BE25DBD2507
39C14FFB4BB828DFD187104F38A7F11D5F0698C11E8C1D4F107CACE573FDC4B1
C56FDAE47024D6FD16A2FEABB434CA320300FC4B6C1B6CA08F76C60B7C08A665
99F404DBA8A2A1EB18EF6750E4EC186E31561A3F080BA6562967546715859481
7BA782940F5C5D06626D6F6A412CA7C13820EC7C1DF23E15E5829F698CF617BE
D940523E4EE4ADECEC48C24297DBAD528BA1DCE7AC335A1D15D55415B108EFC8
6D45030D27B3EA63B2B4CD771DBE66AE0218ABB1153D4B7482289D1313CEF184
5C960B1E3C3C953912CC6F4521D1E15636C1545EEE457EFB87B88C9E43CC2F38
6BC4BC96969F4FF28ABB06F4454C01CEF1B6DC538F1E832FC1666D977E5A881B
F72F1B4C7DD4BE167A5535F1163A0706F9A0B26400178DF8A128FB5EBE6A7B81
E478AD183EC06622B591337B9F1872AAEA356F4FC67EE767B34CB5A4D90702D9
39FB846947F4096FB3DCF16EC81455164783BA0B5D723060DAFF411B68307E81
7BEA1D9A47A5AA3D648E618C83C60F060029E6EC4D46B045FA7415BAB2AD0AA5
ED9C729C24136F6AF61E6409C0B5CA760B16225641E268A68CFB8260BBEAFC77
6626EBD97195E77CAB425CFB0096D805D9EE699E41680D095AE9FA10122A7882
2F00F495C9EB2102DF0D3E61833BC0A2E468C5CF7AB430FDB7C0BE3DF2C0D230
1580BAA25D65F599378D873165482A1FBB224AEA89C6BCCFBDBA42AE1C5DCF41
06969F585CD3B737D1388D6359F5468D88FCD2279BDB270F6A858FB7D2ABDEFE
5EE8FB79FA437F8F50237B92C307B73B0DCB808D07A9C3255CB9B3B17039CE5A
288103D05D132863FB522A02CEE3839EF9AF7F07D99732F0B8B384745369FB3E
7901166478F4A16076A1504C5E98D17408494E270BBF4470ED12B4332422679F
759F1D93984D7E506D16950DB6C2682FE1379EFFA6F6C95DD71F6E55BE3EF6AF
E0CB25388EEB436E6527806FC75484133F6E561DEB979D5C1FFEFDAF2A6D964E
03BAE0BD593C2992AD84569C81050F7A793C5263E50C2F50B98C4CC703EAE17A
6AEDAACE312DAFAF5278D125B6EFC5587484F61DAFF46B87B7C9B1EEDECA4859
314A9A9E2248467DE1E54D90DD671660B9040B3E0DD982260822177EFD757266
74A16C83A7FB168016A320D3DF3BD7726F1F4EC90EE5DFE810C96B099FD4368D
906AE4699049EFD37E8EF058D4B97BF71106445AADD4FC6E90615A0066823A36
673B8DE32322BBE861AE251226B4385AB28702831270DBD25D666FBB0AD7B96E
A44E891EA1EAF0F87013AFC982E33D67A28E96E0C9CB99B9E4192536830D9901
931A8CAFA41289633B20BA3BD7AA3414B6DA8D57CCF2FBE39920CC06361F075B
CC40335DB9A0071CFF77F6B7BB47F3100DBDC9C4A58C2B81EC99E8E966AF3390
E3FBCC28BA1D79961C8A1584266454DF772FBA99664D74D4A89FC82FFEDFCFE1
4C9E4A04291E803D142E37E7ACA66AB279378F2F192FFB2B5BBAD18B95F03136
2CB594A3D6D3F8576B90A6C4DAD6D6C8EE07AF682F925F01D0B26CBA347C03BE
F3B0585CF4539FDC66915E22117078CC94D621F31DCB3E021998A5D6EE94CA4B
E214D07517283D56973D8E4367392BF6C1150DEBF459D141AE0941C1C8C5CFBE
E735D796E365A1B0F60BB4CF2801EAFE4889EE5F338D3C4885368281B3C95CCE
251C28A90D318A8A0384439B38D63B94757252062EA44E88509FDD2E75FAAB71
7329622828B2785C1A8B26351BC7448C1719C88FE99BCB73F7DEA427FBFCDF4F
00EE079B0C712F7D2C8DF98D4830A9D8C8B70A8C5D54BC1DF3171135278BED55
DA1CF0E696B12935EB59B606AA3C0CC50C7A259AF32F4C81D9B39470D9993CBC
8644403D2833B34AF40511654F96BCE0064860F39849DC65622EDFA8E6EDE9A4
7DA62658B43CBCBC5E8F53D4FAE6BD0253C0C81E6C53CF5C3A9E3FCCD9AE773C
FFEB7E81904730359D72FB1F64E3B041A69B2440F63606F42819D52B47DCCCE8
D129A4C05778EA6E4945DA28411430C42A3D1366F57F0124EE7C8370B7AE6C36
2D739A53C137AF4C79060AFDAFA10DAAB8ED7D0BA6781213329980CFCFB18CF7
CBE6C7FA3C27329935F378698BB17CB6118EFDFA622B219121677E28A7F1D775
51B8EFD72B485F950B8B4C0F5E25DA3D226FEC96545945C5EBA0E4FD6B949B54
6AD49D1BB161EDE033C4CB22B633B70F38D563819330DD52912F3D10E9E2D516
B08001738F1EC4FC0B848E039F7297787377D75C8A0D05AD493E6BAB4100D265
D42EBDD432F204616D034B3F80AD2AD5D4E1DAE678029CC028DB4D2D9EC04E63
E90381E3A52638877B18EC6582059C02BE39FD0EFD694DC5204A247B081D9AF5
108E518512572179FE6218E090422F74FD548341A957DDD557CFE2A3E9479F0C
48140B475573873B2FA48758B7E84B69D33EEE87547541F53976C86DC1EF079B
38B2870748DD8BBD767AD3EFBE479ECA5B7529BAE86B985D6E793E013429A238
307E3A46BFD486834A752E5C0D52423EA2457F56703B271F766E4E8E3E36F9D8
4B8B5C77884128E64FE8F3F50A50BA8D036F18CFF8D23E9C0213658AE1922920
9F815677C752A689E9F3205F3B2C633A4FF49133F1A1C995703393F96AB10B55
F7D007E4E7EA49AABA75AEEE4BC60222661084C5F8CE09B039B6BB66D32E2A77
0432D63B1C903E50A6A59DF06B021F85A111019D507A3C8ACBD7FE39F283383A
5CF1546572770BBA3CB09E41AB8CD211371B773B0136E0B3C29DBE7626520C3D
5B005A6B6FCFB81C70E6BBA5CB2B4B5F0FFEBF496FF214AF5B07216335DACB2D
0D51ADE839CEE8954584CC933FC342E5C1AD6A88DC3E1A94A0EE0C23525B292A
271029E3285E0C2EDA6AFEDFCD9C2CEA3A18EDE81A4A94FCF239BAE2F1D1B930
15078DCF5C8BCCCC03EA0D4C9A68D159A241F1D79D495850C3C2D62B6CFEECAD
B75830F81D7C68CBE9CD0B9AF3861760F47C733167B2CB7DA20C340ABA91FF0B
3C92679836AD04949564F64A1A197E2A9809F715609F5F30FEE62B47B4CB2FB4
8992BA917D5B115D1288D731D099F1096FE2C360217FF439EE0CAE193EB0EC4A
35FB78B4ACDCE78D2BDC07CED8F44060AAA788B170DDB4C4B079F6B4E494D127
DD3DCAB49534A03D79063CE2DB5A9E09F469071B3064C2F4F22C2CE08B94ABB1
F80AA45DB36DCC13A89DC815D2FB5E675CEB1A5EE1716186531BD4F4ACFEEE8B
DAF4D4C34CDED61CD6F5E09E418B68C24172FD90BED7E150B0ABC194A7FC51F5
B95C4B9B765B8A962F033F4F88F0B99AFD63BA149FA0021F39CCA7F1AE1F58AE
1F5CC02271E99ECA1446C7D6B1CFADE1B1465F8D767F837ED60A55ED5FB32E8B
9BFAD32B83873EBC8C23AFF4F13A96F3D9F1762CC768CED436BEB2A4BE368181
8F820B00324D5E6F6D00C1A16CA8AC57FFCCDB5AB220031C016010AD24D7BBE4
FD996A08C476064823F31457241848199E079D12A4FB00F76327C880A4037853
5065AD88162FFC0EECF68362979F4CD9473D18FD6BA21500911836158B1455DC
4E3E2050CF509E71F99FEC2E64F07520CFA413E0F85E1E6FCC916ED5D832B987
21AAC2F00DF496288F46F21FC15112897ED7367C3FCF5311083B89C86D81AF27
BDCBDABC57574102869F399F75811DBA593E56CBC11D9287505484D9891F79F9
B21D4122B93BDC3D482EEFF168D3385ED1CCC9ADF716D597879F762BF76F6FE4
8157274F1421EA4C3F0F7D0B5FB7A908970060863F6493E997ABA98F5175D10D
17E3BD22A608D2F24C25B9D165253D2ACB4743B7321C0093A2A34993B43B6567
01A930476B878CC54F294DBD5F0DBF2A9BB91A13100AB11746A2053E0C5E6E8E
C7D1D9B54A53FA09BF804BE0A72AAFE74199DA8D088056F1F1323AD111354E0A
8C9985149D040C967D1A98662AC3CECCFA626161E56A308D32F64C7A61B357F6
2622980737E7A25231BBAF67F47F2FB2729E2FE307BE4DD449728E75EA46057A
B3EE2102FC3DDC2777A5176309A9EDE50B323043B0D781F10873619010346384
11E11EEA0E8389B5DE918E0D81073EE9A8338FEBD91498B80907F5F878B04B08
50B5EFA25CB0DD86D978CF1212EBFF76FAE3E54CC132A45E59D1D51E5A948FFC
A8D7A48F0FD63773612E6CFAEA8E01A9F8A5042C813C7B16132ABB8551511DD0
C74D474C8BDE1A19FE59B67D49AB485482F5D26B0D2B56D7B7C2FA571519AF4F
BCE1D20D3DC0EF4624CE6DD796137CFF53FDE5C8EA3E2A16E4DC9069F0D3079A
449164F46280862053F9B38DEF6E2C276B89C887314DAC65BD5DE0BC48F0E3DB
A260A66FB8AA0568E51B545E2F4EB2E1CF50F2BD81D09C2DE5063FB7679DCD8F
692906129274431015EFA0AA69D2EC789054B42BB46EA90AF034357F6F646FE6
E7EE4D3DE463A3534478009B48034C54E556DA96530AE50F3B5D9707F3A7259C
C511F2C31AD1AD0C50FE01FC5F5A3AC0A6D6B458088A64B8FF53CB01374AC6AD
EE3D96E1558E8CE1E8592E9D5BC6709ABBEA418F2926916FB3096C4F80A135AD
A74933789318A4BAE0154C6AC1FE989B55FA8D64B4D6CC7ABECA638D106D97AA
FAA995459F2ADBD738166B0DA97B0CFD5CAEE827763F1F2B49E8C241E56C4E01
98066BA2CBCFC28753257657439C3280867C5120EF2142407F5FD554EF376FE3
C182405BC9544ABD904D7018A00FA9BFFEB59002832F4DDE8DE519ACB699F0C3
F21070D112E8A46465107E0C2DCB3ED69B5C9CA80F58DAC0BB559C119C20BE3B
469A850668B70C886C5F24261440B6F7E41365369B856BAE8B00EDBD4253C768
FF16AF168C0DE6F40290A438FCFC11FCEC89E4A3D7E686554DFED8FC5881F0E4
A423C16C7092BB2677CC2B4B0BBB7280E1CED37B5C7A0112CAF98EC58D809C62
AB1EAD472D771DE7002F3D8CB8A227191CFBA40ED3C9C27409F78C3428A52183
4BB68A36053531F792A65EAA579085577B55538DF41C8D2F7EA6DB6787ED691A
A5B9A2B2C855C58733EE42345196D4CCE003D39FE053AA0BA6E9470AF74D2F8D
878A29DF413778D363BB6FED829E8F39A2E5527868BE0F1497F29056A0E8972D
5EDD5A6ACB6ED542BBF350C9092084AD386ECCB53DBCDDBD0ACA25DA4EC63490
B33AB63819BF6541E7F9868104C6E58941B09DDC9294ECBDA42613E90141A3C4
A6B3A56079B72FE7BEBB1C4B27CE2BA2D3E74B0E7F7C825942A39165B7F5C000
2683DF610246D6EECFA8C3F4AB2F950390EBB7A903052B0071D7F3D4E9449138
C37E00D26A71A7B7053A98D99C19DBC7E98505E5543827DD5D897155B681513C
6BC342F4BE2ACE531A19A37200EA816D3D44960DE1B632E5132CF0AB467417A2
6A711BA488287A20A8BD4CB31B3678B29D130F6207D2E46435705C8D4E0EB0C1
E442AB7DE37BB5E53847169DDF06F2A7789CB4F7305DC501C09CC8FE7A7573A1
326FDF49BA13C893C5C85A9412A49EEC177158B254058773508A7F0336D943AE
85B0E308819BCCD526BDC9F8DC70EB1305CF7C920F900D65E5831F31EB98F5CB
8CE864E4604BD6E69ED0FA2F552E5182B85FF5F7867855E896D0B07A49855CDA
868F2420CB7D2BEEF0FFEF5F0856E442F100731DE1E64BB00DFDCC8B6CFF8CF9
87701CD4E4D9B9C616E99DEAF28BA922A0B97C297A5DA8A318118722B72A9F84
5F3AA809849287EFC65373BAF8EC4F47FCD109F79A7770143EB543560B624A26
35A44ABC8F25E42B658C098CD4C026A95D67B9EFC7C076A737B812B2D0D4DFF3
BE527231745554DF7E8D247B1C1255F59F05B2A646A07517952795A55BCE6B23
510C4C7FB1E7807FC0D9056F65484CC8D2C7128E7A68679E728D5737F35BA4D4
1AE2FFA7F275671489915504C19AD63F2DA9500D3744EAA9C9CE27739FD2217F
961ED08A9705F0FF0E19E0583D461E6E558CE590F06EC2F9044E77CA1DF500B7
DC661B028115E378BEE8EBCAC9A93A1FE3122B397766E01F7926F49F3281DF3A
D2B72AE9FEBC204844A137C8C20F4DF8A436F0FE182216193534FECD9D1F929A
3457FB46F70FF4D563BC92A8752066D8FF66A3E43BE637B70B99BEF8E4080003
4FB73FC856068F7BA1AD97104FB812C3A6804D7757B75A6C5ED9EBA0AD59EFDD
190A94F79177717E6482CC5124553B8124FE0BB91DCD09DCA63A35D2F0927371
9D632B24F03BC50FFCD4DEB24221A4EB7DB2A0BBF2CA91082940EB095EEE5F87
1905559926EDC29E9B1C2059FBD19BC42096FACEB7D69A5956E63AD9B950B13D
FE73F175C016E1FCAC2B88DAF166EB5413CDC8568DC8173DA91019FADB83B869
6E8155702DF94F34D407B1C25815BA7FE82CE3C9E0D9696AF2350F721C880D58
030105D79CCF5E75A00C2D37144A51D64724B48B0B4E7FC6AC79D95D1FABBF33
ACF4B2DCCA3960A17A26C6AC862AEC7D4E72403CE298E434D56F8B1D25F44E56
FBA8352340177B57135B205338FD99148CBC731EB2A9535FD856159DE418CA25
39B596517EF1FC4655DE9FCCE47F09F6AF016ED712032042B0DE51E7D12ECC5D
9E5B0AE6C49BE5B58FB0B56254D6E322CE30FB35221CA77E4D86288801477D8B
F93955C490A7C7050460E49736449896527738B8C8B44CDB8C35648DD04917EB
C8968343C50540612394203FF128F912DEB320DF72C236C1DE0EDEDDE64EF74B
15EBDF5746466CF85415E1F34E594240E6AEAE1BB32962910F8185D0A7D4EE52
D11E1198DF2217EFC9C1ADCB2C482A5EEBCBD5DCB2C1661CAA1D907F370BA7FD
9B645BD2A7E94E70094E2FA9B7F2EAF918EA6E1D77AC807AA00D2B71862EA713
93043B361AB1E5B5A4BBA0BDAE188711739A86E4D8DAE77FA919A667AE992DFE
12F5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 109 /m put
dup 111 /o put
dup 112 /p put
dup 116 /t put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA2776F927C4FD3E0920790A57DAEA08C5B
169A3E2309DA6BA8684A5D1DEE81415796E13DCF906FCDADB092047831B16841
B250CD148557D72DD7E683BF122B38E2C4F614E59B395D1D9823D7D5F126D932
14B50A37FCA7120F8F3A8E42134F1B6B0C248D56F247AA68FB941839F600F61C
14247EFF780BBA3E5198D37CED44DEEC3455048FC451BCDB48DC414AE5293A60
5A59877D6DFD21EAD729CDB7B378CEDD34262B37A194EDD0BDB24AA42649375B
491DC08F6B03DFEB517B2FC125DA9373AFAA94F4E4BC09510A73E079F4ABDD8F
93529E898B13ABCDE7322323B3A2A02A0BF388E89B4F529A66FA22D38E3EE342
54475A1989BFB7A119CF95750D5A18BB4FA9CDA30DB6F1AEF8AE8448BBC999C9
FD0D74DE9A17A3153617F07CACE92977B68FB5A1CFB29FD42494D5D2B9C1ED81
2F3CCEEC1BC079E837DDBB57C7E351F9925FB96349F8D9786D8E6FF03E9C4C1E
67DB235577B68003BA14073E2702296B284F803259283005D97035874D2B9AFD
4D3F29B4B1E6EDE30DDB9C68348CC174A091791FA74520C8614D4FB1125CBD6F
B9367559D715ED057FDF6DAAC180C7FA5CCEFD0C5878A91B20D4919792C03CA9
3AFC986C34C08358A3E85F241E3F8F815FCE7C8E07C2A4258E17D65823264049
3803D47C96A2745580EDC957AC4291730A840A2BADA50A28342A2B7093A3F731
4F4F656E974389E133C53F89D5DD6407BB98B211697941A927BC72A0956FA78E
2DC624B2C253F76778698BD1510D509244AB0465D4261E3AC31D77C4F755096B
50C9CD8103CFF51490796CF35B02E38BFB36CBF2E6D0D7304344C4523C369946
C3BAD318835D4707E90A0340BB7B6ABEBE9EF7E7FF54D1784AB514FAC0FDC8DE
B8DE95405811AB2F25F2391855929C2C452295D698C749DF868A962183036CEE
800D650FE2CD2E74C038665ECA680B173A27305874D4AEC967043DBCF9275F02
7D92A0AC4C098A5DA5939BFA435FE56060110EA1E9FF2BCC9C5E93964FD43199
8133454CF0A83B9946D6D2235AE3F345BEFA7D935A4FD76D7A9CF080E34D1983
6FAB58E2C907D4EC63F6431805A40EF837884510B1A8C7CF8F290F034784C81D
9FA6ED8ACCFF15B6ADA1CD0460591326B7A7A5FE7216BCE081EF42F0846374B5
0FF9F6FB8025D2DBEE17991FF93E7C09B55135397A77ECB051306B93C58A2598
60E294DF402A6F07B1FD679025022AFFEC2938452C72400B45A1A49F1DA9113A
BA4C4528E9DAB7F86323AE99A1932A49161F10A37FF2A4D56FAF883DB84F209D
76982A6131DE0B316E898A4C039154A90CA72991180F9EEA6E0105B8A4443A37
3C8DE253233006178B9A6BC69ECF2556E28A2DEFB6371422CDD07263005CD570
9DC4C9DD7FC9563CE02E9DC08B593F7487CB390BE164AABEBDC37B3AFBB14163
4F0D84EB6821FC9B0C4B5071A6CE358A3A3368746A027350A9FBF947BB7C46F5
35097DDAE8237E4A34D9C413290538C5E297121D553215487DFD467F4BEAEAAE
A590A94B6C83172B5FD14E16895F58975203C43A7A6C788A20487BEA2C6C4E90
D28F301B04F4663162EE30F33C641BEB89754EFAC49167C9B4B1EC6280D7B112
A801A369547E1994E0CECE14F76A594D3F32391C040298C4B93FC32B1BB6C11F
CCB9708565DDE5047FF8489BDE53DA78A2DEFFEDCF0B1F51A0169165746FBA4E
1D248153A7E7888985024549F7E7B7E69C93FDC480D63F02B8A797C9CCD0C2CE
BB8F5A17FC25C3A25A3DE4D021EDBB11820D77A6E1DC6F653FCF588EECDACD25
533064A51A4ECDB83B64C9D9757F25625D53DCF0B9E2386BBF0900E0E011E8AD
F86D867BE0E96DDAD9059A3D7FBBB7227EDAB21FD30114780FC976151BE2612F
41247DF4FBD194FA89A89B4CA4D0877645B93081F354412A6420894D18639156
080606F7D40D4A1A47B29E51AAAF88C85FDD62F98D8CAAECD64C7D8468DA6DCF
2767A734D31E3013A7856D01915A184EF2573168158585CB595A3E0E7457D9BE
B1BC43CE6295ED8A66BF4C4B44A65A00175EBBF6A1CA6D601746799E8B90B384
D935E8066BFD21EAD729CDB7B38863CD37F974644B1482E16F1EE22771F0ADB3
E53C4E742567609F5CFEECD48E151DBE7DB966043D6E6527DA0FBC55BD7A92A3
FBEAF9140B86917135468FE006F159D3299B37ADBEE30DA2A9CE7073E02324E9
A21A5BF2DC34E17DC088986BD3673FFAD5EF6D07968BBB7CC49699FB85F1AC20
3D58C90DC6F1E8D3FD25D8CA59CCD3581C05610C9803C3D031ED3D5783185B69
DF809544F52912E4B98A6869F882BDCD3130822B4C9F05C103D6A4A168AD80CF
22E61904C92A4FCD68F8C5389BC7B4DDBBA3A7EEF2D2CBFFA77D888272366602
60C19CA8BAE14BB4138450AE3C9C1B184DF5E4681019A2F1C34062005FCCC3F5
D98ECD3DCC13EBA3049418E59C5418E9242D505526D34C38C598D8629B538C3D
4963DA2E1DD0D0F5C1E536B7FF0A941CA25240EE24EC03119417BCA64EDE28F7
3FC2A7D7B9F420AF1DE6A355E0C8588EE65BFE87A71726CC22D51A466A9D41AE
44E11EFCA4DE43A951DC93BDAEF848B9C31D44C06BCC58D737F7D239EBE3EEE1
A4F981BBEEF515B0167E8FC7306842AA09412CE50BBCA640FBE880EA03F315BA
14C80E80248819BCCFAA907DAB2AA5CF3DEDEE81F75D8B5CEB205425442B3287
03A8ABC48C29ECAB193C45F75C84522AB7294F11F5D48A242A5A281B2437BBC4
295CCDAA8DE64137227F139DCAAEDD17590E8EDFA7C7C277BBF9E386D35F9563
6EC295C472C9FA88AC0C591F66241E350F8742CA2C03D0960CE1CA51773CBCA1
636BE313B46CA13DAF88E3FB7BC8E659DAA58F729732989DD29BBBD78B73CE70
D18C2984E5DE1D89F3CA998BC24E0B0BC73C149C6E4410F8349459E3054AB6C4
F2167E2F7A891ADFD821E84706606D3CC2BC0F45F40BD9BA89D767FEA82AB37A
D8C368189090412C1BD0571876AF86CF5A4049DD8512F600BE92A0BEC8C18292
C66D1A339B7405D137D56410814FE39BDDDC5B597794DA1BB33C92351D4ECE69
C33CD54CD5AD226FEB3585A66467707B0D9DCA9FFD523309899D1B42FD971DB8
0DD4410AE69B0FA5513BBB5A051BF8FFC4B807AFC4CAE9C83DF96242B5F8D009
DCBEAA89B372634AC81C1F73C5D55CB11EB70F31F472166BB478D8B86C31753B
C8822CD0A7EAEE19976B922C4B3071EA3EF368B5B6F8411BA2C2D8A6A47BF594
268E555655F7ED7E3E077764F73D38BF38C0BF9BCBCA5E9ADAB3781A7E9F66A5
780B59E2A3A41FBB8FE8203F063EE503B46FF5F209412ECAB1930CDAE3851A7E
100C9618C6A0E3F4917D30FA36FAEE98516BE302C2E4D11E8C93E8EFB3ACBDFD
999546CB4C6496A8E68029C3615533E8DD84652C4A27CC2DB6983A50FD5E96F9
549606C9459C8D6F9BBF0D8560148D25D0AB00B246776343F554C806169A46DC
34D14D8AA0FBA05FB49455A133463F8E9002EDF4DD2BEAAECF32C44F96DD0F2A
757DB6BC3EDB9806007DE18DCEBFA7581F4C90FB062130E85F4569DA121B554D
459C2733060A9411791A1276A93E82C9394F51C03223DA8A240D698FFEED1C12
667DF7A177EC8564F4025F2A5E3D9282876287933E8DCF247266DE0E761A3DD4
75BE36E31D6F4DE394EDBF55B59A8EAD97AD4FE1704E43A99A7126F281AE645E
FBBEC7D61088C0F4D2E8B3EEF1E745F0438C9B2E614783332967CDA4930271D9
83EE74B67E5319BECEEAD6E16097D0CDC119B6C6FFED0E914BC4CD20EE1CAA6D
841E080336A01045656C085C43BF791BDD90D1309D8E666B7E9EF2927B8FC837
5CC429352BE085DCC437777BBD74CFF9C797A8AA5B0087B09CC2E27A08C8F74B
957549867BFB8B78CB4CB25641A5187ACAC99DD1A5F36B3480B1D4C9C9374035
29318F7ADAC423FD0B2C8320A1C4F6FC3BE35FCAC19F72C537FA760EEFF60134
4A70BF16F0F62CBD8C2F007CC95A72B210587105D7FDE38C35051DB403A02238
CCE3E9121B1BF3A3E1E0528C4D5E2D15D0B8881E6F37D5BC77E8495EF6AE7004
20B3262719C9585D38C7D18820143521748BFD85D7E41F2AC6179B012421BB0C
31AC4D53D0FC5B43A42308C1D69B513857B32EAAA66A036A7020C601328595D1
141CEF864C33C72A46125D03307893C2C3F65D91236C4825BF6910055A010541
F05203A8A66FBE8A0777C27A7BA378EBB390506DB838B455F94B18CC58D147B2
58D0AE34B638D4D4C5E789FFFE8878CBE2356477F090F13F46B964639063B4B7
DA692DDCE7721DC80BC092350F18DBAF8FBF2DC6699C5E42A1C842DC55B7DF06
48E03DC6F55438BDE08762B9CE55562556A198A2F392740BF597301CD33CB6B8
446BCE5C0BE0458BBEF232C7BD7FE4B32F2C783BDE960EE697919D017B9BB0A9
50ABE30EB32F79F7090209FE7A2B08C7A464CFCFF3CC0B0522425D27795AE672
349B289CF9204480D242B3947FD2FDCADC4ECB1904A138882DEEF895E5658DF8
34D6053E7ABEE6CF843C449B4AF09221A51BC39D1EB6799400F21CEFE102456D
5E656752805886FA8CEE6321BAC78D2543B76A9FCED479312940812310AA4E7B
5164FBDAF26ED2812199EA598550FA758231999227B94D0434F5A2C576DFBAB5
CDBE7E0A09A8C45212875E8384DF1A68CEBD23F36F446A1697449DE0311FE719
51D48CDC67FB432863B71C25C881011A5C63D0C3F869AC4EE174EA8ACBDB7C08
E839A192FEB09B4571B4A651EFAA9869722FEA8E586DD18D4C6D394A09B5F245
8470F1162536EF4AF337CF8C3CE47B9C7726ECA02EAFEF52681F2F24E8FF88C7
1C7160229BC314B63B1763D17E2C357F7528CABE5D1C6AE8F24D7C501E1F16ED
93FAC5568B6AFB749DD9521F85B26ABBA78A47D08907CB74CF07EEC25F687995
DC56D2336C4BFDAC3E01A37DA10C69D17D035E86C80CC31934B1A4B86DEFC5A6
0A97A1A035272A2D37052B68FB868466104F29AFA092050A0606644A955C6D75
7947712B39A3EF0543CB0824DD8003C8D58A2D7F338DF987FAAA3267016BF10D
0B512980F952A11F27BD12225961414864A8129B48408B87C5C0ABC252DEBB5B
8A3849DE8C6728E49E6A9BF396B373737E20D1B4AC1492CFEAF425A261A0BE4C
8C3B8E2580DAC0E81F11A2ACFEF8C055993754125DC2BB7A7FBAC9E04ED58EDB
6314F3A1BDE2EB27B76847AF725D9D973C1EEAF9A76A48C6A7299A28BE52FBD9
27A8EDBC615C56F75D847FADFD57BD4682DD13E524F7EECFBB2E62DFB7BB1947
1F2E3DC45882AD90DC5F031D25341EBAAA9380A3BA33464D14A288846FCD0FFD
571118E6082BB4C17C4BD4DEC2B2B771F115B4E73F21930630ADABD5751A67F4
A7C024ED04A6C4C7949E59A6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (axiom.dvi)
@start /Fa 134[44 4[44 44 2[44 44 44 44 44 2[44 44 2[44
1[44 1[44 12[44 37[44 46[{}15 83.022 /CMTT10 rf /Fb 134[44
44 3[32 3[46 42 1[69 3[23 3[37 3[42 97[{}9 83.022 /CMR10
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 0 28 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 28 a 0 28 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 28 a 0 28
a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 28 a 0 TeXcolorgray 0 28 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 28 a 0 28 a
tx@Dict begin gsave CM STV CP newpath moveto 3.0 neg 0 rmoveto clip
setmatrix end
 0 28 a 0
334 1995 334 v 1995 28 a
currentpoint grestore moveto
 1995 28 a 787 55 a
tx@Dict begin  tx@NodeDict begin {6.67859 0.0 26.38898 13.19449 3.3393
} false /N@T-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 787 55 a
Fb(axiom)0 284 y
tx@Dict begin  tx@NodeDict begin {10.8 6.02223 75.84941 37.9247 2.38889
} false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 0 284 a 32 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 6.02223 neg 72.04941 10.8 .5
Frame  gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial Fa(The)42 b(empty)f(set)315 264 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0 /N@T-0-0 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 315 264
a 696 281 a
tx@Dict begin  tx@NodeDict begin {6.15079 1.94444 27.22229 13.61115
2.10316 } false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode
end  end
 696 281 a Fb(empt)n(y)809 264 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-1 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 809 264 a
989 293 a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 117.84904 58.92451 3.5 }
false /N@T-0-2 16 {InitRnode } /NodeScale {} def NewNode end  end
 989 293 a 31 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 114.04904 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial
Fa(contains)f(no)j(elements.)1478 264 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0 /N@T-0-2 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1478 264 a eop
end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 448 1011 a Fr(An)29 b(empt)m(y)h(elemen)m(t)h(corresp)s
(onds)e(to)g(a)g(leaf)g(in)g(the)h Fp(XML)e Fr(tree,)i(despite)f(it)h
(is)e(meta-)448 1124 y(data)j(data)g(and)g(not)g(data.)448
1364 y Fq(XML/Rep)s(eated)37 b(no)s(des)589 1463 y Fr(No)s(des)29
b(do)g(not)h(need)f(to)h(b)s(e)e(unique)i(at)f(a)g(giv)m(en)h(tree)g
(lev)m(el.)41 b(F)-8 b(or)29 b(instance,)i(if)d(w)m(e)448
1563 y(w)m(an)m(t)k(to)f(send)f(a)h(mail)f(to)h(sev)m(eral)g(recipien)m
(ts)h(w)m(e)f(w)m(ould)g(write:)p 0 TeXcolorgray 0 TeXcolorgray
448 1737 a Fk(<mail>)528 1837 y(<from>Me</from>)528 1937
y(<subject>Homeworks</subject>)528 2036 y(<to>You</to>)528
2136 y Fh(<to>Me</to>)528 2236 y Fk(<body>)528 2335 y(A)40
b(<definition>deadline</definition>)g(is)g(a)g(due)g(date)f(for)h(your)
448 2435 y(<emphasis>homework</emphasis>.)528 2534 y(</body>)448
2634 y(</mail>)448 2874 y Fq(XML/Rep)s(eated)d(no)s(des)e(\(con)m(t\))
589 2987 y Fr(The)c Fp(XML)f Fr(tree)h(asso)s(ciated)f(to)g(this)h
Fp(XML)e Fr(do)s(cumen)m(t)j(is)p 0 TeXcolorgray 0 TeXcolorgray
664 3798 a @beginspecial 71 @llx 624 @lly 412 @urx 721
@ury 3069 @rwi @setspecial
%%BeginDocument: mailtoto.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.994 Copyright 2014 Radical Eye Software
%%Title: mailtoto.dvi
%%CreationDate: Wed Feb  4 15:57:09 2015
%%BoundingBox: 71 623 416 721
%%DocumentFonts: CMR10 CMTT10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E -o mailtoto.ps mailtoto.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2015.02.04:1557
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/05/15
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  0 0 moveto 1 0 rmoveto  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.06, 2014/05/19
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 876 2014-01-28 15:03:13Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMTT10
%!PS-AdobeFont-1.0: CMTT10 003.002
%%Title: CMTT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT10 known{/CMTT10 findfont dup/UniqueID known{dup
/UniqueID get 5000832 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT10 def
/FontBBox {-4 -233 537 696 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT10.) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 65 /A put
dup 72 /H put
dup 77 /M put
dup 89 /Y put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 117 /u put
dup 119 /w put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E5ECEBA191DB82B3
7A69521B0C4D40495B5D9CE7A3AF33D17EE69979B82B715BAD8A5904C5DE0260
6C15950CCF6E188A0CDF841EB68E5A2F88253E382140F87C87E55C9EA93B8C89
14A36CDF630D6BE7CD36DBDCE22B21778E8648B97B7EC6742EB5114BDF0454B0
0EA7B1FE236C84C0E5308C871F67B973892890557AA12E00B2C20C71F516C397
3F3BBD14A1D0149CA064391056E45E9470FC7F6F556ABC82653B3C8049AB5CF4
BA83C8F2158C236B2FFD4208846013BAF4165E8BB8D334C8FF2E8D74AF5DAB2F
D44788869B08399421AAA900ECC6A2D594641C121660D4B5F512938994C18DD0
FCD9B008F68F0351D21ED735B2740CB1E0C1CCD25EB548C35B844601D98828DB
556F71D07E081A593FF12DAF83676492A0FFE16E95717A07082B43A966C1EE8F
8A59E1255E1705C43A23CF29A5E4A6547C93F1680A870EE7BAD8CF74D838CD5E
F806911D8FE4262ED8E7F5BC58B92C9C6D74F8AD45FBB021EC7E97393018B9DB
B1B84E7B243ADB05ADD3F1DB3692ADC5D47FEC7DF93080669E63281F1576B673
125EDF08016664BE73364F65389F7C3B66623AD1754ECBEF9E5CE6948D933787
A5674279ACB2EBECD3B4E6361419AB32028A27670C9F3E18B746A10B00AF6D77
4EC00E3BE521C02A99AE5BAA98F793EB1228952BE67934B91472E01AF7B816BC
56D7F19F631A1927846D800C107B1E9CBFF9D2DD513B4A8CE2E0DFD77B1ED178
E43FA7052765E9FAF89989D490D8FEF6C536EC0D4AE27A74F474B98DA9E6B92F
15E063DB260571979A5DE2423920CE1F59F56EB11E00E3BB9D466A8263E1E385
2014BEFDA8D1EA3EDA04BE32AEE6CD15C5C010A1DF7F705A2C0C18E87C8DCCE9
05D9163181CBA56C0FAC8C06A2990554C8E759D076B01BBEADE3B5FB8B551390
6C8E4A2A1C6E7D9C708614626F3770C0AB7DD2027469C77975C27576065862AD
04E5E50CEBE907E3E991FA0C627302C0E207B4D5992BEBAB5853AD1C0D271728
C76F40A79392ACCA7358F948AC65DC823CFDA59E1FF69CEBB6B7EC3CF21669E4
70D999508F9C49E2D9F8818CA53C977D93E15FBBBAF75B1E84F0BA62BCC4BAFA
4EEC82D804C8A8C0210F3E5E258BB1F6921AF02BA9861BAD5C3D5FC8CEFABA8A
A607E547B802096F7AEB09FBA99C83C9A494B94408DD607CA6561A6E6660C473
62CF8D35F31D052F6C6C8138A8E1430CBA7EA6973D6D510C1A06B3FBD79D9364
240C1A00272DA44B89A9FE8D5BF36DC1B5EBB4A78ADBE9C5EDB485F093D9517D
69E1AC9A8E6C9D7C324E3797CFEAD9A18E82E03F69B2CED7D5DDCD1A218BF2E2
ED2293AE999FE2A4B5213A10083EE0407BCF8007670B8C737EAB30311C868D84
121149ACB4A27F3ED6C0C181C98AAAF51B105F264B5672D7F745131ABAB5BEA4
0C9B43C0DD9116D6DC61F90BE72018F290D26D5E9D341055CAF09C9F45333CDB
D45B7954271767F638EEC499F7B53C2CC5774EA7A7F024C4CABFB93D9CB1856A
0C671A4ECA7C62EA5242648A84E7F3AFB9547A0AFC29593CFCE6D8B873A78157
D337CABD291431C0A2CE1F37E0CD7340567AC206FF98E4B5A6410F70F750451C
550EFB54AA259A1B236CA9CB730D2CEF125EC65D959441F7CC9768F777B44844
CC9842A307C72B740680ACBBF6AA35FA7A94825069BF7696ED81A371A9E5475A
9D997F2DFAD339AADF797F7E03E654234455AC3D17702A420EE0A597BA31BDE4
FEB8DBA7C61D311CC90441A620164DC22DC2D373973EF84CC553453AB1B3337F
7B39983B8DFFB3A9425F119B45C1CD37A76F905777B3154CA6200792F1759D06
E017890F4041A385F2238E3C48B6C8EE6F5258463FDBFF7AC762F6C4363926D6
50F004D473B7B7F73CA686B559C2885F1AA761653C727A77D73431E9D110E76A
2E55C68CD50F43997C9B2FC4710F8C8540909829E215678E63BB8363C4B8AF05
9986102BB36580D9CA95CD216B7C321822CB41B2E0422CD077F3B55E0246FDB2
44D5976F67296B5B0BE4B06F6E43535C21164E6C5089C3E9BA2D6B30888C57DE
49DC8D9D46C0D5EDC47ACF2C03B72DE3B69512508539019B759280BABEA12BC9
385308A0395C4CD33182A10A5A229743379C2075D82D8BFCE4A66E1AA087A091
8F5372684FA5037D1B92D50CD9CB4F50AD4F8EE7D51F1C9E63C721CB5B9BD011
6F0A8DD4FDCD2B008F223A1036D90F0F3B252487DE7898F9AFBB3A9D9CD49E0C
EF4ADAD5155A98D2125ED5A3D3907F67301649519419F33CD942E8DDEAC1BDA0
E90C431B198F646766A8FA9F8D1561B57E126EF604838C0C1966655CF31FB7EB
C8CCC434FC1C96046D38203E1791EC824A3D7AED85C029288D4608CA7668A2BE
484C99639F121845B22EEFCE0A3B808261921AA042AE19E641769E91277BEC29
4594082CCB3058F90FAC4A700A8A827ACA00FCF574ABC8EB7DBCECD97F2B22C0
0AA19E8739B81AF8C6F621D69B8E6F29BAE233FBA655A0AF5BDFD7F5C6B9167C
6BC7AB693D45EF2AD999F5DA3CEFA39BA48A17EE6D9F2C4DAB91AE3F0044DC3F
5D5506CE4675AA928B0092D6F173644F91295216D8BBB14CDDE0AD524A4D545C
1B5E284A3BF0396664081CFB4F186A84A0D24D61E82F4767C1E55A0642720CF3
909FA1AB8EAB78030B59BEA067DEDBD2F1D0340E790AB2777DB18248521934A8
BB38A58B7F633DEA4291B0D5D13E9A882C974697CC6D3B49E030C94EA29B5506
CC29C44D01B4751B453A46A9F6BF3BF135AE87A4CE232AF57B66578310DE41E0
2A6AC422117F1963C4D7CC306BD25A6E724E51921779F22F029733122E23E2F0
CB340008813ABB104380C80A492B3FC6D0BB07CB8D8409E9576891EF6E5C9D08
EB8320DFA31BAFFBD336D0C2BBC3D3B2D30368B9860768FC080D30569C7F7811
0EBEDA2962476113625EEB555490B8CE4C5F99D74ED10F738C61854CFF8B41C6
9402E56BE8856144A1A05D0B05F4CB7EF728B2F4F5A439F18C3B68CEFA41E59A
D8308ADC92EC1289DC84CF48D2CDEFF509A145BF945E1E00D552D329EBD2A7C4
21D58082CC8FA790E981F4AC8EAB99950678FD3A7DA3DF13778681B208DD71A0
7C3CBD0664B37C9EDC6B601D79A2C51FB54DAEE849F93209793849104E722D3F
52DFAF7047EEEDDFE744787A5801E4AC2C3D58EC5DDC15FCEE03990C53B0C57A
FC54F125A04C8E4A0ADAA725808C587E7DAFB9F784FA2875689979D316DC22BD
AA36B306A1ABCF907B63C6476737B746099973CAEA8C1E2C5C41F27E0F7DE8D7
F0D942E34E92F43FE902653D4D2EBB6F3B9F7928B1550A82AF234D45D028F429
067652BD3D391BF423AE72B9CB1E8D91E898161BE3A7849D456A861A2046711E
E934DC59442AE7D81661CE8EF727D8D7DDC0270E937E40F896AEAE6171661431
C1025C53172F9D366834BA0054FBFD84503FBAE328B6FDEA180F8EA35B1DA937
5CC3B8F00C206908C2FFFFA6A7AC6915D15EA44BDCF29E2BFCFD4A849535F19B
0D307C696BE8205C7D84B9C77F02EF27D911056EDBB4080E4D3ED72788666CAD
CD91B0ECE27A177DB23320A7FA9C31408B4D02D2A4B1CC6DDE1A6CAC3D8EC1EC
2226EC98E51046D1EC26FA20EE62D24747D83CF4941DCE5CCEEC0DBE387149CD
E05B19FFCAFC0D117F9A3E60DCD4C815228D98EF95EB559AD0ACC0D50FFDF714
56C3C812EA5ADBB013BBD956A7C4CC0ED7D3E25D5C9AF5E626F18297F75D4957
F5B0B33379114B903FE98BCF35C3FF76FEE1D9AEB711F2962276531F7380EE3F
E368720E0292A170A15C5539B1FC7BB954EE2624B504CB8C805B8D31AC38307F
0513606F09211AE64DAC447693B2A0AD15E9A64C34F5A911ECD0ABCA90E9791D
67C6BD202B0858EF96E7722305B8AC02B01AB1706CC6AE875A8DDD15EE349046
EAA65005E7866B506EDFB7A5A2AFD5C9E9DCC821A79EE9C1EA2C7BBA32A40BC7
CEC26DB1AC473C8C3960ACEC581B37D6569E8C8C42950BAB7930B65E1570E3F8
9A7FA719F1DCFDA45A3BF2AAB32C9A93BA3552608A61C623DE59BCB346E87EF5
9CF025A87803161221C5C1C6F6B3403712C76E9D755C7BD68D7F2DC03C14CDF0
C1BBED1D648B905B4B17037B7263C1EA7A7F06FAAC4E09E08483A8D714C19861
327CD9C32DDF850302DD6DDE24912D00C22ECDF3CDFB18FA831A41A7488EC203
F564CFE30D506F0829A96D35A7E09C3DCD107D589B627A15B55C5D6649126BEC
60B88C55ECCBB4E680265D9EAB4CE22965D3B1AF759B01ACB0D0E6C92B6B4EFD
A81E6A648708979487FC591CF09631310D46891423F4EC159A73E30D8DD147A4
B0EACF6D45D18CD16CEB8176F03ABCB41F2234747B9733C8FAF34AE5D43D3BA5
0CE0FACFC9B087F84FB6C68678BC6E76022B1526D6E5B3A48EC1A110BD75F45F
1C4DC6D39F254976453F57DF873B7D635C80C42026DE020E5BAFE0DA0D54D1E1
DC634D2621BA184347E5252F645A6A1DB7657C48124186F0E4C644077457C24D
55753C651A9A7B6349867641464B515B821349C795A645420508673B93750D0C
7A3B33EB1F09782033742AE8F3A23FC02284E6C03818FADD1731361542E3FA3E
75B8D52B668C3E18A4AE967D0FC3157083D952AFB8144D549E69EAAC51C279C5
E5D88A0D9D53013DFFB4352A1598FF84DCDE6FA32FC377306B9B92C0F96EE149
8CD55E7B2445B86CCA7A547FA732D52D59025129FD8C6333AC0DF4F0CFF6287E
F2036D5DBBB3B91B92F12FEBE0B61A313A4DB5A9CF0BB3DDB781A56FEBFFACCB
8CB9D1D3DBDBC4CB6AAE6769E470582403CB920630221B68BCB625CD4605FA8F
D3D5B7A1A28D15E44B38E92E906C138E72C15B86F64C38E23BF0440052A8C914
54397F49DBED99D0AF7CEA3B0A05FF37C2D7EAE1412567E6776333237C31E3C0
49949EC8BFD6E0F6446CE2D4DCD2C1524A288818CC5D159BF8463A847AE4A2B9
CC8C58F822804B81B13BF4F2DEB6229C4F51F093075581791D02C36A13B855A0
34900AA7CD4F1A797652656FE3A8425A38F421C4CC0ACA1CDD44FA6B31219276
1CDE1CD63D6A58CE705CB56CCA1260F9B86E989019071563A9B4C274A87558CA
6EF1660D574EDA276801F0057740E2C3B80D253D697736484D892CE1AB128B8A
DECD69712F5E70E895FBAA927E8194D792A04AB6CE205E04E38A433BBB793FB4
E8BBC4279D58A223C6673D909D6AFECD246E66A52F4CB35E5931D24C828489BD
4ECAF621A220D8ECF702BEB01C4FC7510197D3F6D15321EC87175ADBA6434ECD
2B5A306E91375CAD22CD94301763E4A8B981472890422C5488FCD523C9CB17DC
ED22FBF12D5F7525D0D6BCFE8CE85B0DFB1D6F989C267FFBA0A996D309E4A934
3DB54A9D29C88B9D55D7300DA3D46419256C5A07A2A529A8DE8BD1727281F5FE
97033D861E0531B14E811378EC1AF1CC7EE9BA2B07D935843D3053F673979F8C
FAFD59D555B56CE338F606747238B22BD62C42BB7238FEA335678D474A643570
A9E7B4970E8C541CE9DBC7BF70ED7BA33639D6744A18379455029E934C95E2EF
639C4848CE9A0879B51649FAB023A71782444B451F92A34CB8A124270CCF86D4
D18EEF5C1D2B2A29012613851C49F50702D63BACF95EE2AB4D72B375E0A62615
E0991E130A67ECBA9E05329B740708F1CB148724C3A6E5E3AEC1F88EBCA398D2
1CA8827C977D72734310233176D1AE26C55CF2CEACA62223315C28FCF6305C7E
A22414D4739A059F552F1F9372CCCA5FED4F9AC987942848EB498900269511F3
F408CBEA0659B954F5F1B18AE4FB270213646F9B28AE4439D2BA2D3E0AAAA780
5E530E4EFC8A060EB979E12191044509DA0C14397AFF949E12DC970658D5EAF5
4EA963F5BC1407A32F3837CA6A24B7F3D60EB8E6222B702E25ED903F9D21AE50
664A095009BDEAF4B78DAF94E5A55D48366CABF07791A1684B2F54EA69070844
4F031AF8DF416C2D3679F8BA038B0DC9DD0400CA6B34667BCBBC07E62C1668A8
35A8C57C9048A7227E672E89681B54D662079A189A9E96A3CA96D8DD10189B04
1DA49BA2729F1CA585B1BD5C467295285D52E47CA904235A1A3E48EFAE9EB6F6
01374125CE89D53C276858668CF45D2F092DDCAA52418E0BB94C2B8266B4D88A
5D911507BB1DDA3D8F6E7C14A91CA11AE799EC42E993098E18CADA70BD2A1D82
2C39326C6E3F9E84CD9758B9AE43D79BF99E6A0CD713E95B3D9B7DB90D127DE0
DAFEBF850CAAACBD860B5DEF2082F1ADA64B44B193C4A1417BE221FDCA36456C
BE5934C8CE3ED55AE3A11697C2D682B7D0F72D48976451D205783BE25DBD2507
39C14FFB4BB828DFD187104F38A7F11D5F0698C11E8C1D4F107CACE573FDC4B1
C56FDAE47024D6FD16A2FEABB434CA320300FC4B6C1B6CA08F76C60B7C08A665
99F404DBA8A2A1EB18EF6750E4EC186E31561A3F080BA6562967546715859481
7BA782940F5C5D06626D6F6A412CA7C13820EC7C1DF23E15E5829F698CF617BE
D940523E4EE4ADECEC48C24297DBAD528BA1DCE7AC335A1D15D55415B108EFC8
6D45030D27B3EA63B2B4CD771DBE66AE0218ABB1153D4B7482289D1313CEF184
5C960B1E3C3C953912CC6F4521D1E15636C1545EEE457EFB87B88C9E43CC2F38
6BC4BC96969F4FF28ABB06F4454C01CEF1B6DC538F1E832FC1666D977E5A881B
F72F1B4C7DD4BE167A5535F1163A0706F9A0B26400178DF8A128FB5EBE6A7B81
E478AD183EC06622B591337B9F1872AAEA356F4FC67EE767B34CB5A4D90702D9
39FB846947F4096FB3DCF16EC81455164783BA0B5D723060DAFF411B68307E81
7BEA1D9A47A5AA3D648E618C83C60F060029E6EC4D46B045FA7415BAB2AD0AA5
ED9C729C24136F6AF61E6409C0B5CA760B16225641E268A68CFB8260BBEAFC77
6626EBD97195E77CAB425CFB0096D805D9EE699E41680D095AE9FA10122A7882
2F00F495C9EB2102DF0D3E61833BC0A2E468C5CF7AB430FDB7C0BE3DF2C0D230
1580BAA25D65F599378D873165482A1FBB224AEA89C6BCCFBDBA42AE1C5DCF41
06969F585CD3B737D1388D6359F5468D88FCD2279BDB270F6A858FB7D2ABDEFE
5EE8FB79FA437F8F50237B92C307B73B0DCB808D07A9C3255CB9B3B17039CE5A
288103D05D132863FB522A02CEE3839EF9AF7F07D99732F0B8B384745369FB3E
7901166478F4A16076A1504C5E98D17408494E270BBF4470ED12B4332422679F
759F1D93984D7E506D16950DB6C2682FE1379EFFA6F6C95DD71F6E55BE3EF6AF
E0CB25388EEB436E6527806FC75484133F6E561DEB979D5C1FFEFDAF2A6D964E
03BAE0BD593C2992AD84569C81050F7A793C5263E50C2F50B98C4CC703EAE17A
6AEDAACE312DAFAF5278D125B6EFC5587484F61DAFF46B87B7C9B1EEDECA4859
314A9A9E2248467DE1E54D90DD671660B9040B3E0DD982260822177EFD757266
74A16C83A7FB168016A320D3DF3BD7726F1F4EC90EE5DFE810C96B099FD4368D
906AE4699049EFD37E8EF058D4B97BF71106445AADD4FC6E90615A0066823A36
673B8DE32322BBE861AE251226B4385AB28702831270DBD25D666FBB0AD7B96E
A44E891EA1EAF0F87013AFC982E33D67A28E96E0C9CB99B9E4192536830D9901
931A8CAFA41289633B20BA3BD7AA3414B6DA8D57CCF2FBE39920CC06361F075B
CC40335DB9A0071CFF77F6B7BB47F3100DBDC9C4A58C2B81EC99E8E966AF3390
E3FBCC28BA1D79961C8A1584266454DF772FBA99664D74D4A89FC82FFEDFCFE1
4C9E4A04291E803D142E37E7ACA66AB279378F2F192FFB2B5BBAD18B95F03136
2CB594A3D6D3F8576B90A6C4DAD6D6C8EE07AF682F925F01D0B26CBA347C03BE
F3B0585CF4539FDC66915E22117078CC94D621F31DCB3E021998A5D6EE94CA4B
E214D07517283D56973D8E4367392BF6C1150DEBF459D141AE0941C1C8C5CFBE
E735D796E365A1B0F60BB4CF2801EAFE4889EE5F338D3C4885368281B3C95CCE
251C28A90D318A8A0384439B38D63B94757252062EA44E88509FDD2E75FAAB71
7329622828B2785C1A8B26351BC7448C1719C88FE99BCB73F7DEA427FBFCDF4F
00EE079B0C712F7D2C8DF98D4830A9D8C8B70A8C5D54BC1DF3171135278BED55
DA1CF0E696B12935EB59B606AA3C0CC50C7A259AF32F4C81D9B39470D9993CBC
8644403D2833B34AF40511654F96BCE0064860F39849DC65622EDFA8E6EDE9A4
7DA62658B43CBCBC5E8F53D4FAE6BD0253C0C81E6C53CF5C3A9E3FCCD9AE773C
FFEB7E81904730359D72FB1F64E3B041A69B2440F63606F42819D52B47DCCCE8
D129A4C05778EA6E4945DA28411430C42A3D1366F57F0124EE7C8370B7AE6C36
2D739A53C137AF4C79060AFDAFA10DAAB8ED7D0BA6781213329980CFCFB18CF7
CBE6C7FA3C27329935F378698BB17CB6118EFDFA622B219121677E28A7F1D775
51B8EFD72B485F950B8B4C0F5E25DA3D226FEC96545945C5EBA0E4FD6B949B54
6AD49D1BB161EDE033C4CB22B633B70F38D563819330DD52912F3D10E9E2D516
B08001738F1EC4FC0B848E039F7297787377D75C8A0D05AD493E6BAB4100D265
D42EBDD432F204616D034B3F80AD2AD5D4E1DAE678029CC028DB4D2D9EC04E63
E90381E3A52638877B18EC6582059C02BE39FD0EFD694DC5204A247B081D9AF5
108E518512572179FE6218E090422F74FD548341A957DDD557CFE2A3E9479F0C
48140B475573873B2FA48758B7E84B69D33EEE87547541F53976C86DC1EF079B
38B2870748DD8BBD767AD3EFBE479ECA5B7529BAE86B985D6E793E013429A238
307E3A46BFD486834A752E5C0D52423EA2457F56703B271F766E4E8E3E36F9D8
4B8B5C77884128E64FE8F3F50A50BA8D036F18CFF8D23E9C0213658AE1922920
9F815677C752A689E9F3205F3B2C633A4FF49133F1A1C995703393F96AB10B55
F7D007E4E7EA49AABA75AEEE4BC60222661084C5F8CE09B039B6BB66D32E2A77
0432D63B1C903E50A6A59DF06B021F85A111019D507A3C8ACBD7FE39F283383A
5CF1546572770BBA3CB09E41AB8CD211371B773B062D54870AC37B86DA814B3C
3BA845F0022C19ADBEA417703F48FD79BB8BCA69D42290F62CFE0219761E52FE
74F0D0781CDCDD31BBE3590E7805A3103605402ABC8E2F8C72654E12385D1EC2
1D1F9245B054F4F1357F07BC9C4E894307828CEAC703088A2781BB126FFE6BE2
3910E7F181D048F238829D40A04F1E0AEF033234F6BD0B4A6DD861B68FB2BC20
1AC686E524E97EAB1C4A8ECD0B107CB61E6217FBD4B7B1450CF9149C46ADC069
0E0DA50823A34E37CA9CF858338F263B2DE22DD4B4E3B22C2F0B84531D5B7072
A70AEDFC73D7697FD45E3E6750EF6A2BEC069187F54D15342F45D4F7750EDD2E
7B3DFAF3BFF453FE60FAC91C8F8A4EB363A151A7200EE4D8AAF05B680C8E9ACF
E6DABCC6E16691D0C0C85493A7DEB7DA08B301AA174C00F5E23DC35C4512B3D1
4A1095D5F10A9046288D9C33E40165CA4925A44135D556625B52F59C00DD9206
F894206680357CC72529867C70854183F1587877D6D54FCD6D373246804B2563
8F27DF59CEFF01C6957734D0CD3D2EF768BD776EEE1A613D41A3E8AADCDB4D18
753287AF757E77D486D1579202FC88AC0C591F66241ECA8269A34B5441CC0CFB
8B290BAC6B75992D4B60F1CF298AD22364BBFAA57FCECCFB60354C50CFD8C05D
DC3040E389BD22FA894F8F52F0A87021F7F3078AEEE1047F1D7C7911F3169280
5C18B57418C07E23BB280EC1EBB7B869C08B929591DCAE59B558520EF94ABF01
ACCB12E4F190162BE716A84D6131AD022DB9ED66F92F3918E329A71C3CD3634A
36BA11160898905719B9A1CF9577C010788C68362413DF88FA9735C944C0CB10
5F06D5F6ADDED982D2D834531CB424FE607348DAA1C036F202446A550A868D0C
17E508FF29D22FD5DF3A0173D3864C01FE28EEA482A28A5F2C62836EFAA8E50F
91A710D45BB0452D7895FED4BB91EB89560A971E20D13D14FBDC71D6F64905DB
B304B08A5E8337C11F993732744FF16AF39C0D740BB8024B3DCFC470C2144706
4B4D0F2EF4BF8C2A22BD64092A55571C6198152070AA3A421603EC601A46A2AF
9C65F9C37B3882DF88D9F84BFAAAD91B5093B9246BB2D4C01DF63E3767748D34
A05AEE7D7D79FB0481C9B4353D247472F71D16AF8CFE9373FBF31C8E6ACFAB56
609A6CC81E83BF705C6E0EE6A07FA40B01EBEA544FAFC0C3726112DAD8BEBC69
2D09C892EDD0090BD9A658969B3BA995F1D6868BFE9F953BF6E59011EFC6C24D
FDBA3074D2F4A7CABCC9377DFDB31B256CC709A0A2B6C9EA94B8929E2E6681D6
FE09337FCDF3900C538D6A0AFA8C68390749386FB13857BBD355505776D91560
9835D98CE3007FF16569740E27154A9793148C0847F92B7E4F5DC32190602344
8A0702ED31E76D7EA8FFE254975EEE14044962F0B42663C4603DB1AAD19720F3
F3987D8C70877DB5578732614771B51FEF34AC8B5872580E379881BEAF92DA52
AA2A0A3B9D2F34A20EE32445DE5541050634715F55DA3703F75B9CB6E3EBF732
4007BD408579D806F411719E6310D2B95C01AEF65DC0607F9D5AF3C525CECF7C
2A2571E196DF72E37B4C541CC3EB27EFAA3B33684EF5D523F8811F93EC4F0EC7
BECA91B6A645F305569B0ABBD26FC0E7BC26EF5CADCDD4EB58927452BCC5886B
3D4BAF8A48AF141F890DBBE8CC601D174B847954671C97E092BB8F0A4315B0F3
F91FE844F0E89D8326ABE60C601F6D94D8B8B8DB77FC96A7FC586EA394501859
E6E8DB6A0180199BB818AE302D06AD644B33F013AAFB6BE9E034F68309FF555A
9F9427A9287557546C16C6066B5D21C24D46BC2CB2ED417CEAD3C690E9AB0432
CA8C38BCA87E487B90A0D854FA33559D709982E6753CCB6A3CDF16FE4454D166
239A2495A03AD057312AE10ED261F6EF9C8D1A1CAE567E71CA824B117CD99334
62F782556A1584D37E4B39D2754C9BC34D1F0F25C1705374115BECD0DE1DA535
E43B7B7D948A719CFD75B1F66848BE5D901E535E42C189EE5D81AFE55B772CB9
57F33447EEFEB6ABB7FA1DE66D3779B1DB3DA2F9B1AB45585CDBDF74E46937D9
A23C8354B40D22AD84C6A63BF1DC67BB010E71DC23886A89A3F5C65B7ECB86F7
16B54C44A1D159F81F62398A966B1BB19AAE812CC82F1E6565A78D6DBCAFA9D5
DE2BC113A1C65221FF387BC1AA6F311200DC21926E3A9118392A92F3A26EF5E2
2F63CD69865AF20153A9C10B9168A70B5CB335CFAF7FCA9ECEF6573B16FB08DE
D23EE99AD90FCF13A5036A854DA0DC44876D91B185BF35AE1579B9BC8DF4A120
7964A2B5D72C339574A81BAB8965DE4120318E0E47F293425DAB88E8CF448039
839D99F5629E122C666126CFB6229ACFF69DB8B2FC8AFA28630114E6DA8EE42C
CA1D4AD99BE07BF9AD842EC825E6397EBD0CB55FECBDA4BB89EDFA1E3EF256CA
752809F898436B8201C8236617F80B21AB26B299B6054E959AA767A55CBF6A25
EAE1870D75A51EC7AED41D694DD88401EC126EF5D556EA28144BF9965985FEF8
824E5FF56AC89F5A8B03284181DE09AE05D5A401EDAFBE8A3F9F386842DA8E52
4B8B2AE9C2F7D2FB98C9E3FF134708DEA63556773B115908FCBEA8FBD73C5736
CCB3C6FA76F9E53EB0D37ACE9AF7D0C84C3645D24CE2A21DEC744EDFF4288263
8A6A574B7AD560CA26EA8970DCA4F39582298850D122D79B5AA3EA9F3D2E32E4
293FF63077C37B40F514A02E09210BC0A79C8AFB448CA37F7660C4941D3140D2
E75B1979B574F51D647FDE3F46DEB89AFE5AB4350C7C27762B2EEC762701FA97
0A511180F6F13FC533B52731C59773E52DB588C02B1985215618D35C9D140EC9
5B76573E4F4758AF51768496C1226255FDBD15CA8CA9184E15FB83A35C05C9F3
97BFF8A468DCB6B437B048F04954ABBB0CDE9BAD88266E9B0F5718F51E196180
5C28360564242EF27F1F8C425C3DFBF8F95ABF2B21C14CD14BCC66BE0DBCD7EB
E2563038AADE657633C17E54458F7683DD066A667FD54F7D1349D46AE4978CBD
199CB57B076473C1F63376180B8B4A9E5BD5C4D5E0F43DD141383BDBFB1F32E9
B245D5966FCFDE160FB0C6D19FAEB2A68C8A932B6A16153FCB4754E23669767F
011145A7D1170C4C5822B39FAF68AF3BE1B1DFE506137C7B3D9A35264803576F
037E7E263045CF3BC7698C98E1ED6DD4A5C30A9E2764EE4722CC024637F7054C
C59B0FDA179F9E428C90FB2C7A387666DDFA716D01520267DDD8A33C2FA4C041
A3D2B114C7DF815E4A8B84792EF7D0C4E2A81C315798C8005867B97773BA148C
C3F2759E060D8268DB1E2B5BEEAE842754C6132EE2E0C98767577E945B275E0C
A34C78CC253123FF256DDF6B15A21018E06C543464394A3E698491385539C9FE
24886A4C0AE9735585F28C3D643911AB04487B7091C4E4CDC5F9EE9BEB8982E4
3B383CF9E0ED685999D768722156784017A123F9CFCD5CDF3FE8D5E484C5D891
E7DADC353EF52CCCCE8863DAECFDB831444B96EA27F6E7661A06DB2DDEFE1B79
2F6D68C48119FC6E0E8060340A37C59759C57E4EFB0CA2AEEFC361A69AC6D0FF
01B08094A6F3A74CC5DB6D733272F54AA6F8508DD71186901E7D5AC9C9846484
CF63BD56987B535AD114358C8804E1F170BC3FF24815E334C57AA89C1014F5C8
6630A20680E19CDBA5EB72994DA5AD364493DCA9B2608B570F0E2B8832E078FC
62330038BD7C589F85745560757A55AA6901200929616387D48758A815AD4BD7
CE04016EBA2DD686168B6CD687698FEB06B69D795DB3D6A4D72D2ED9CC1CACCB
CC0C5926FA5C1C6BA43AB10A2A0E1534B28DD346139B2D1F68364825CC5335B5
9442F90C05F5968328C423853E8788B6FE660B0F53C4374039FD55223E7B60A4
FE39A4330207B273C58EB9335DF6EDCF2412B0A938A1EBFF198BED22B1CEF282
BC9E9989F4246B6E6ACD97F3235CA250E91EE271164104C86F391114FB4E188D
242C66B5DCD8B7FB43FDCF093104BA61DAEA4B7C75AF200A154B1E689A61BBD0
021C1A8B9BBFFEEC92E46340748B9DBC73C7D024F2149A0BFCF8820E1CA79237
9C421BD31410F4F42F2D31F526D234F65F6C5339A4831DE4EE67481AFA8C024C
108847768646E25E10D8D07F91DCF297F7523729FE19F47015BF1228AD623A2B
55599039529B386361EE6D09B687A7BAA768B7681B8B55EE294C3D06052E643E
83180D67B2EC48C003D3B128A233ED4C9C8F771EE36E100F5FFB9BFABB279AE5
0809B9D7C3A060C80DCD59FEE897B74069E4DD426DEC78C3381BEA1A14A46E03
7049E5B8DE6495295DED7C70AFD45A379211BCBE187B7F4CEFE4DC51FB36B676
A9CFC10C2CA668470D0CC3052643EB609056D497439A24E9665E119D5DEED487
5C65587993FFAF933CFA9B00BBC1AB5837C03362BDEAFD4211AA12443370576F
7F048F195FD742D85D94EC3EE00723F7F14AA477320BD9464F9DFA7B114229EE
C99077DD2BFE4BA8217086FF54DC9EFA4509D63E908DCC0744C37B6E2F45082C
3CD86E28AEC8D19C6B8BA081AE8D910D3C49E93383323F940169CF0783D2BC89
EDC54DDBE9E6851E99B88FAE5CCFD447F5F5FAD4FD4DF9FDACBA19C9AF96D3E8
91EC024AFAD7A622D203A56FE5CF729DFD2AABC0CB05A8EE09F7C56100F2B513
A81DE4B3A0FE92EFDDBC67CC9998127401691C0425A75BAFEECDB74D81804C56
54E661D5DF2708FDFD95240D6A54768A512E22FC9F5138904E4384C74B53367F
C8E29F5BF925E7C6F18EC4E0F4C31D9777EE5A9E5A0BEB984640A0488161FEB9
A3CA1B0C478AC4E5AC841A4821B34F21E93696F4AA77495196F38CDAD704FF89
02CD545E985917256B197063069032682F5816BC14177CAC5E6F3581A3C1CF28
EFD85AC693108422415173D1842C32A42F782CC4BA2C6CCC8F8AFC1F340A5020
764E9A5DBE640CA919782966172B447152B918F45D925840DD7194A769B9EA61
4E8DBFEDFA59C3C1FB451272CB2C5138798FD59556A4863F53BE0D6038AEB9A4
AF7E68D2861AA9A4E4C633C4957E469E1BF488A5FEC2DAB9DC477B3E2C559138
3418C2E8431A8D1F8E5BF1C59901DADC86F5211648684A48EC3C88C786DB9728
43139998C520F77AA5030DB55ED5BD3315E808A08356AA25195936CBC47449A0
E0DADB876229E44D92BF9F05C71693A4673B2A37664BD8C4F3A3DDBAA5B53C1E
E22CF8A281EC4E6F40792A5014D33EBAA1FB2BF39E0294A3C7069A9AD40BAA96
2FBE476C2498348E2191FFE066A039BCC3166F23E3E1E34A049EDBCFC80888A7
24724D424A7622FDC1535873A90D567C21C778F01E493081D20D0DED19BA1039
D4FD0FBFEF80FCC64CFE4D57A24735DDB161996761142A1D6E2005FCD98193C7
30114A8A39963C06602BF6EB6FDCD74B2FD1FC83ACCAFB11CB78E5FA0A80D90D
A363678EDD20FFA85431A3B73C5A5B1470B167E551787B21CBD0371B8CA32C14
F34F13CB4D9D52766A25EC9AA7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F43F9A1290E91C463895BD12E8A831DAD661EF23CB9AD2C26CFB26
71B72D15270CD8CB1D59CA2D9DE884C96BB923B1EC8208BD7DCEAB0FC2293629
2AA1F72C6B470701C381E335C2364CFCEBACDD20CA36182CA7E70AFF5B14B02B
75CBD0738E35DAD8E60CB3DA4DDED557FF9ED386DA52D10615E700751C842FBC
85D89C0E713F556814E051C6CEFE7E83C2F379B88A801DDA565BE73013DD56D9
44D97798564787AE6D5A6A9FB777EEB850C7481B4A353EB9279731512C9B95D3
2ACA3A0D44585E55AFD968135F6492A9381FA2D126CF50373AB7D47B509AE6F5
C4B100BE8334ABE2268DAFB7983BF339540A8D8280F3576CDCD4F21408AA7D95
D50A7C1599E62D4FCAB001D5F9DA84FA530B88F2FE36B36F9968B5CF9FDBFA11
DCA0E08D087C4C5F4D744BFBA60FC22E964CE10AF512C228F4CFC3DB21E38CFE
AC11748F9B23F33426BC4AE3F026AA8178364704446D3A12157DE158671515E8
FA0324852EFF0888FD90913D77B6417FEE8C039C12D8CCF516AA5E9AE60CDF64
8F9677A2701944FEE0E51FD5BEB501509F73CE26568F78981B480F688646A5C8
C563B8FAACF6D61C1D0A16CA68A4AF96E6F89370958884EE230DCBAB3E90B348
F1657F327D698A8A222DE58623B2B82E6F39A572823382D6DBF390F03121A932
BFA4FA7A2247EE3C628F9A334F62DF98CEC11E91273A1462E6E80A7B58F0B3A7
1010CE8BC3CBC4698763770EDBD721E66C5852C838BC3BDB4D669E857C728060
5EDB2F5960CAD59B4B3B349146BE16B93600F1254FBAE5E548E490AD28B1CC9A
B2133D79D6F030D91F1C967EB2D468C50DF812D8CF9F07F4648192A7EF6EFE72
6C526DE1A99350025F131D697CC0ACDE8CCD15659B544BBB3612697568EA0D83
DDD7E1D83FAE2FDECFF5AFC95518DF8CEE4B9E59CE2420515A0042EF7592DEE5
2E10D424859429DCB4ECEC7DD282636A3D07044AF41C0A3FC132DB99C17A6E74
7D024BC3297C403B5E2704963ADF87B75E8CDE74E37C9AB7F35D50296B0B418C
5D08CF057ECDBAD28147DAC67EB875748BAE25E19474B782F24BF7ED544AE148
467180DC2293FA812D804F479EEF9C03F89E026963830B08E9BED0FDF83EDA2A
CD3D3B279ED66EB955E260AF1DCB0E8959857A5B2FDF4AD90CAAF7A0B9449559
4710F7BB631D9C72C9D1037A698BEC695D0E254EE44384CDBF724CDF871CE1B9
5B1A738E62B64B42242C18F5BCEF3BBC0BBCDFF50A96C971445D731DF9B83A7A
1136A9CE8747794446CB7232023DFC1D7D4C4FAF55E151C39FEF8B47E45C5AA5
F99198A39BE62AF7CFBAB277B8A66C8413AF5F059D8D3F20870038B6EA3C5E41
A3E6E6EAE70E64E165C15797687C7632A189CF44A025208FBB7013739A349082
F6530C501595FEE183738BEF36982B7B69468B12590B6EEA0E1A19CD13962231
7F5DFD2EFBDF0C204AD90CAAF7A0B94495594710F7BB631D9C72C82FC752771E
B050A697558AC6062ACD9C0C1E624A4E47978D228C684452513CBFC52EA63C63
19DEB18F99421D5845A65F73AED95051BDBD5B304D90B664CE6B192C1FB3F7B5
290C219E9172B0107883EE596FEF286C526C0195133CAE87C919D97B0DD0851E
10A21034A28CC98941257FBC1D848962774285A0E73867601A1637CF348B0D6B
F5D5EF773DE3E6DEC83053CD18E028C0F89777FC5FD2466683B7E3A8F532477B
7D1D800310CC42F926DD71C9A3B8E838C9B7BFAEE46118DD59B27327C7D9DCE2
C7380B706D44E4C7424CD243B89EEF73565F3D0D2AF2B6219C1C4348C3109D06
711E6F18A59DECC5DAF70CFDCF546A43DFB3EB225B835DBFF1DB368811996293
AC70AE9037BAF2779E53CB175B441E72A562BFC01E47C3589D5639AED890E8CD
6EF325DCAA0A494133FDAF30EA27983A2552A41312355854E496E7E895CE001E
7987E49142FAF0C1B27E139CE1D555010ECCF674025C8D120F68B4A4EA587B4D
B14C661609E63275574A35561EF664C3D906427BCFDF2A554BC1C56AED7E3E83
B7EC2C8FBD317A0B0313EBAC805E6FB565DD7E38A2676BA81D5448A78FE2C8F5
6E6967470985AC22D70CC45ECA5A89B19DAC7684763FE52DDBB447C01662003A
FC9EC243CA4D5B6F39E58816C7A84839C069CFBB069C10AF00376173B3F25A32
DA0A44303697F620329AC04682962E7A48844F6A0B5C8448D0420E009617C2A6
55DD4393A30FE88C40692800C51F9FC7B77057F44D87127A627C3FE5D8F06257
3FD7157C14C92F66470CEF28C539D7A141529B10FDAF908720C544600B28E6DE
6DD563F75F9C4FC9B9771F85136B44AFF12A198A87CC2D6A5C3EE7C7DECCD1A3
95E7BA296EF8A861492F2D6D5F591653828C054D9A6AF0080C0A94775FC9DAAB
1757A02E3CC329C7ABD9B75D399345E2229815549E0A5D45A035FF25F0D25229
09D25B70BA79836C15C3F98FEAA5378501DF9DF82D49C4D40BC74F3E14C9239E
2F220C517A3CE6A86B2C5553688AD476ECA15CDEEEC5D09AA10EC8952365517D
173E8A833359F485F05CB16AB6A797120BA17717A5D56ACDB80ADBAB2BFB7CE1
4AE2F0BCB483D222394299B2639AA6FD42A9B69C124AEB6E14B30E0A208BFC47
0AB52A37C07C643276435792033AB924D68EB23DE14EEBD5691440F5430EA415
B76E4D2C4BB848D07EDE0C1B23F116D757388E7C54C8C90C1EBBA523198941F5
64AF8E021203F56C1291D6A1B56DCCA040C9F833ABF0BAD1DDA4836E4CA03976
B5D7D2B2ADA203EF37C5F84CE7C6842F37CFD0C4C526F0EB6929BF56986703BB
58C780C73C09D36274C99FF22720BB1F02070DD18E6436BE09624DFBA69D2845
837AA89EFC824212282BB7BDFC5534A16FA3749F5AA262043699F4AEFF647F8E
221462479F2EF629D4A6C41C860B70833B92401728DC8A090F286371CD3FFAF2
82D3BC5E89C0FD5D7B72F367FF7E276AAE0A4B270E830E2FD44CA8547088CC12
97B48F69CFC6932DF0E2362CCDFCFEF217752A873B5EB6DC81FB51FFE7585EC1
BDFD20D817EBB696A33D1B4C852865F417E0B4B4B1BC085676EADB90FCF67136
BBF7FD9218032C4534B399FA422E0419506D9E406F2DE58EA2C6778463735B05
E0FA606348288CB8E605872515E08504F525DF166B4F587AE41977105175EF7B
FD3374D73E25E8B728E94E9984F1524A15FD6DA78BDB70F04B1479D489B8F6CE
AB4D39CCFDB8D3D17A2D90F5BF412A88AA659E803B0547A84574F6B8938CAABB
CA8A9966116485590B169A10F6494A8422751FBBFA8906F26383C9327396ABC8
A8AB2EBF1AF41F699A99BB37F49D7B9A7192A22754951974A5DEBC78F81C2CA7
87FE2A5605F7CA70A27D41378C65412E3A118C7EA13A23466BD772F7A64AE56A
38A592742F5FE8D6B677CE496826831E9AAD3ED8F1D818814B49D0EC4DDE1F8B
FB5724EA4468506521BD15E02CB2F4E5B602F552181D005AE13EE53F5EB857A8
6531126605817A80979D8B044C8FBFAF76772C2631727CC6A53E94FDA12E86C0
AC64F9F960EE62E049E6D9BC9858A3ED3CAA1D77C3E0EF1A77DFF0D1E5B9EF8C
1406A58B14B39841492F2357428D0E9DA501524CD28C00303A6879F7154DAD1D
3A26AF2CEB9E359BD9E5E92EC8F6A19066B51C2D0BA037705EC370725C45D5CA
A5527CDC64B306DA66762D0B4F8CD014C74D74DD8FD08C356DB9F6AA62B2F5EF
A37BDCD84532C7E8C0FA3CBD007F456DEAD907353844BEB4B6D29887108E1511
5CF8FDDD9069BEA6501185E83688EDDBC721C3E15AAF4335BA708145A1FCCBE1
9B19D99A7987325709BBAA367BDFFDAC48CC9704F2DDA7CF3C16C74DAE61F799
4A1EED402BAF8FF96F766858116600B380D7A54DD3EBFA465DC5AA2A7F1873EB
A4306C76C168F0178F70D9495C76B7E26351FDBCA3969C0D3090511D98C772B5
5BB4844F79B4763C183C5D46B6A2CABAB84F16B049564C073A30D337DB806A33
AE5BE9F2F18AB4F1A429EAC5DD19DB3DD4EB3BCC147B05E417BBCFF718745693
A5749B8673EAE37E36FC0BDA5869D32FE02E99745B074EEF728A561EFB61DFDB
A44629D2FC15613CBC65CEDB4889C72876BE07B819D00B823EBBC83C8C051565
DB7D3A81A34C0C63378FEB9CE3B835B252BED046D1210EA3982080FC17010F84
20D02EB431B327EF8CFF7C7AB079E1BD662F34DCAE6309809DD0B54DAAA9A6CB
DCE23B4A4ECEC32F7DC5B99801F57EF11A11F95D4AB68A8D431276A9CA803E8D
80ED1FE6311F9D088AD233A60B14C262B29228C625D6AB822AEBE4EC1A65025C
ED658FD4E0D504498D8EF871C6A256CBC5BC84F2B22D1407268A55CF87706034
18D54EA3773264F0EF5C55DD6923D475727C9C599A7CDDEBEB00524F2A260E27
08C62622390D27D3ED78A79A18D5B85A212874393413E1E2BB47532ED20D82E5
5F6C6FC59717B99514E254DF3503952D29FDC679F7BD0B6DB67D14084051F22C
1BE49650E96601D8E05B6C4B53B64177AF04AB6CD87ABEFE7345BC1BD2B6619F
595F6C3E4EFDDFFCEBA83DA75FCEB982E72677DCB3D0C9CF697CD26D45DDFFF6
F735FB5C5808675B3EFEAA27241350593A637E055EFB1650934F368B2705B01C
63032BC6AE1DB869798090AF474ED3B7C793B3D540A244909B4E5FAA1D5CBF88
DE38574494D31EE67673A7513C9C8596957EB0D3FBCD78DB125BDD3FF84DA352
7A79917B3DF604DCF7DCECDDD94D73CCCDB3CE51BF299EFC1F88A595B3190C2B
239000C45B8A3BECF570C8EDF0185B129BCC3AB1FEA7F4A57BF7A199A9081D3A
3E8494BA5B1F897598289B4172EAB58CF158E0E31AFF26A948FDC0161AF887CF
41F19B0DF1F4615FA0F3BB35CF894BBF453BC2E576BE4D420089020B87E01D66
510574EE203D0230B2AF1F10C7573E39AD16E88293CD43BF969F715C65C69E0B
27729C56DDE82A1F9A87830EAAB359F7DD9F7912D64474ED2F2940EC165FB5D9
D4664A2EAD9B9E7AEBDAC87D5E2515ABAF851516DFAC20E17149F502C09EC985
FC28C0F860DDE03580D6AED4E2ABF7634A3852CBE25EB632B0BB3CBBC6DEAED2
E30B9E321DA7A2CCB95BDF7514EEB8A32E38A92C6D088DBB894F4B7AF6DC8410
58454E91E77E72F0FF0F594B4F99AA343733647F41976503F41B33A02784434E
5545FF91A2791251BC32535C2F940B5723D1B8EABAB50DF1A918B5785AE02F33
BC4F46CBB219DEDAB4A55B1C61EF9A5B5A573B6BC342CE722C06E605327B09B8
5620F36A0C5A4C0A1FF675DE64224BD62D0776490CCACC9B96AAD46CC747D344
A243F69C0EC8CBFB8D34F628CCB19DF0480E40A676B145365F0980046A9793FE
344C1ED6149EC7D2B0F423EA26EB2244CB67C67DED9E1330B92AA36BD5FB36C9
0EEE9FC064236B9C825FE30671A93BC36DFBE6023FA4C17FF4B06C1CC84FF37B
C8D739C76121B6EF023AED534811FA07D811AC5484C290616F48725AA384FD9D
F7069EDAF4F3F4B7F65C206CAE0B47DD5477E237828A375F7484D8B7CDF13997
42F2FDD61E1B427468B55D6FDBC901A051D33A340D4352AD30E6274D21692ECE
B42DA4A02FA53F6689A5BEBF3FB517A6F27E70245684A60FAF17D76458EC4E5E
89F9F0CD43CF5EBFEB28FAE7B42FCFB0ABD3D273EC0CEDF46C746FCC4F3E0FB7
BA315D6707004545E27E3803538CD1E3803F860F92E850B5DF554FD3BE87DF75
0A63C5FD918FC60843D1751D778A470765334181C4121686A7DA94EC39CC4815
CD5FEA98602FCA118111EC8AF9664548FB61E1B51DCAD2F469F25D32FCD879D4
505C4BA5C2B8C70A052AF46778ADB468B28821E4CF131DCE017865362A4F7A58
AB4A0C48921212B3A783A8EF2AC87D3411C936BEE5CC8CDA339EDF7DDCF9F516
E302320B8F266748DC031729839B55AC1F1EA99C91F9AE9D6FFB2CE5C0B5F289
DCEA59F16A3600280328962D5B42CE8BC49C7D285E06F90A0DA2475AB29FF198
019C04F2B5043BE50CF2587E05ECF8FD95E2604D2C53C7D0A038B6BA98B6072C
CD70D614B32006CB3E69C703CA60A7433D90A73FD03F1DB73F6421CD8AB904A8
9F90888CB2DDC87B14635CD4A7DA378AE71F1E689004F27D09DB5C010B429F74
47B11F6929B05926923AD1050EECF8EB0C8F785FE4FE1705D5AD58D3F96A0D8A
B76537B58044C2D76E44CCACA196810A3D746010346D5AE01C5F7A0A6C3D575C
B2311106958CA7E31F1C44C73B744576A3D5D141EAB55269DF36993949F973D8
3F4B09818733C9D8B25F4B7E194F8F1EF4DA1814C3C28D48DA74F337A9003891
707FC7AF1650C3C08AA81AEC35B61C4F4C4894CB977DE3716094FE8D8E996F37
2C49187B3F5B689629C337FF1B72712216361C5E74B3BE923E3EEB1D612580DB
651255E46F02A6911B3C04548756ECBC2234CB4184308A5FA09E60448B75445A
0099EA0646CCDCA4575590557EFB6E0F644EB84D1B99729B2F5ACBA2F0A6C660
F111F4C43D0B9E75105398060A1F2C89EA643F6478B97A65CF135764521EA24A
9F8BE6A8E297165B5328BA23043541D3789401DFDB77536C60250FC9D711D3C5
22333DE01A58BFD9F64D26D86C464937CA73466C133E5FE441DE450CA28D328D
4E3F94665621526310521CC54E82F9FE02D708AD62D58227108CA09E520F8EC2
47F34D393B147B01C1E59B54E2516F3CB1C2E39527609EEBC4CF2BBB75DF9773
51C4578D06AD8C929CABF128FE25117326AEE65412026A6AD283657CC7EEEB5D
08BD49120A9ABA12C6D544BFB9DEBD518FBC84A8F7A192DE0C483E3BC6C25E90
89832190A920EB5301834FEBCA20897036A7E0266DB355B01A0C0B566B7E70EA
92CCCDFDDF006E5DDAA68A84D0A771979C7FEED118A62DF9CB1E2B664D195038
631DF3BF40FCE0620E1C7AADF88792F0F137E33EB9D40D0D129CCD8E3F470BFA
006415CE178CA40A1BFB572B6B2065FD96DB47E831A5F815ED55F9E372377611
E0DF60D447D80BD7A8C9B0369B1BC18FA045BBAA77F4140402BF84F92AFFF4C1
FE94B611E3647179ECCB2C7D07FD0459793E9831E7AD948B39A1003BF5860A0F
D4FE3EB61B2A46B8CD19D238BFFAC8895C6B8CAAD81F90EDA24AD742A575F71E
99FCDFAF4B8CB01F4ACDF284696B158CC415C0A647BC19B6468658CB54C2F323
EBED5FED957103ED90C5349F494200A88F768E585111E1BE4576C0C31851756A
4D2FD5A9536041D7266ECE7145D8BA2B19950F732B1347BCF12475CA5BB8D77B
6CEC8E83E6366F64171C135EBF000987DE9540A311EF479C4FA84BAD90796030
6096E0B15E4C5C72AA29C12170738A8D4ED82BA48DE8EB00E02D7FAEB0AB5E1F
23E524791C47B05D381EC4E5B6C3D1C9F2C5D6A282F5CC891F91B81031AFC9C3
10644F79B499CA0BDB2442E31F4D770CBF394509C295FC80E8B6FC8D8096C37E
4B72912654BD15D7E25FF3158C156EE73AB93AA7D3FDE2F73EF85333C06BDA3D
5197070B1069B520DE13EB3FF5EFE03E9D6017C971115F9E309E9ADFFD8FA102
D92F55C2AD967EEE7F9CF3FD704B3C6E9F0722941B343B50768045422EFABFA2
984522A07646663E8DB641FDAF6C5A9DF7C877D824F91AA4280386D38FC1BDFF
7765C768CF795678949D7D9077911EF97298921AD3F75E7ED066D91FAF082F86
301940B6F9169A33E753BCE14B66C9F9C1A3BAC534E091A7FEB8F88D5AA2FAD8
B8D610FDE7E6A3F1CDCD53B81C745381031A1B9B69D876E95894CB72B219C598
4EDDDEF7B4964BD57B648FB7BAEF40D526C10AB20CDCEC7C52F9F78EF09E89E7
8CBF1F2CD3C39E7377679FD3ACCF124255564EABACD50B17254E6D298CF22188
30D13857DB181663ADD96EF7A7AD63067C9B6D6569E7F6955F5032E6C2F1D99B
3DD877FFB65476F873F4056CC4F666894087A229007E5C4A2AC7287606CFC51D
FF4902D5240D485030279C9EE54612C1B7E05D177FDF0568F480883A6B807DD9
B2E8D3E620718FB4C587CE78D1AD72CFC2A4785F93EA2DA85F1F930922772DCC
66470B609BCB45BBA78D5189CCD74676F4E42DC9C5D2128EE1F109D069D6242F
F96FB436D1BEAF0085D529AD691121FDAA46349979CF6DEEDD6B19EA301F8732
3FE61BF6ACEAE1DB4B0B84B0B77A81186B3B04ED7A56EEAABDA2742378881FF5
6D858A7FDB85C4C892F9912C517A3836C29EBE9AA47D3CAF6B431DBE72B0D1D6
6A39C8DD20A1424CA187A1A8B64A44DA841FB53308C225A65C4CD26A1D659C14
603DEAA9650C2A8FECE724F2F122FA2DC686CB509203FF4AAA1DDB996BD80A3E
48C57DE475CF89F5ED0EB6FB8E7EC5DD3ABD64ACDD255E0D0AC0EFB11A89FE7B
D0E402B80BA6CCCD4B93734CF515EE1A48B1AE615AF46A36CDC1F78F48F01E4B
120C2CD31DADEBF2B3F76561680FB21E05352EE4798B7C4DE783FA2EDADAEF70
E3013A848BC638
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (mailtoto.dvi)
@start /Fa 136[44 1[44 1[44 44 2[44 44 44 44 44 1[44
44 2[44 44 2[44 3[44 1[44 1[44 11[44 4[44 6[44 18[44
46[{}21 83.022 /CMTT10 rf /Fb 134[44 3[46 32 33 33 1[46
42 46 69 23 1[25 23 46 1[25 37 46 37 46 42 84[46 12[{}20
83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 0 29 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 29 a 0 29 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 29 a 0 29
a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 29 a 0 TeXcolorgray 0 29 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 29 a 0 29 a
tx@Dict begin gsave CM STV CP newpath moveto 3.0 neg 0 rmoveto clip
setmatrix end
 0 29 a 0
798 2857 799 v 2857 29 a
currentpoint grestore moveto
 2857 29 a 988 58 a
tx@Dict begin  tx@NodeDict begin {6.94444 0.0 18.88895 9.44447 3.47221
} false /N@T-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 988 58 a
Fb(mail)0 294 y
tx@Dict begin  tx@NodeDict begin {6.94444 0.0 20.30562 10.1528 3.47221
} false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 0 294 a Fb(from)84 265 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-0 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 84 265 a 9 530
a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 18.09991 9.04996 3.5 } false
/N@T-0-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 9 530 a 32 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 14.29991 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial
Fa(Me)84 501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-0 /N@T-0-0-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 84 501 a 323 286 a
tx@Dict begin  tx@NodeDict begin {6.94444 1.94444 31.44449 15.72224
2.5 } false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode end
 end
 323 286 a Fb(sub)5
b(ject)454 265 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-1 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 454 265 a 226 530 a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 54.8496 27.42479 3.5 } false
/N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 226 530 a 31 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 51.04959 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial Fa(Homeworks)454 501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-1 /N@T-0-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 454 501
a 808 291 a
tx@Dict begin  tx@NodeDict begin {6.15079 0.0 8.88892 4.44446 3.0754
} false /N@T-0-2 16 {InitRnode } /NodeScale {} def NewNode end  end
 808 291 a Fb(to)845 265 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-2 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 845 265 a 748 530
a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 23.34987 11.67493 3.5 }
false /N@T-0-2-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 748 530 a 31 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 19.54987 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial
Fa(You)845 501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-2 /N@T-0-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 845 501 a 1046 291 a
tx@Dict begin  tx@NodeDict begin {6.15079 0.0 8.88892 4.44446 3.0754
} false /N@T-0-3 16 {InitRnode } /NodeScale {} def NewNode end  end
 1046 291 a Fb(to)1083
265 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-3 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1083 265 a 1008 530 a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 18.09991 9.04996 3.5 } false
/N@T-0-3-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 1008 530 a 31 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 14.29991 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial Fa(Me)1083 501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-3 /N@T-0-3-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1083 501 a
1957 286 a
tx@Dict begin  tx@NodeDict begin {6.94444 1.94444 21.94453 10.97226
2.5 } false /N@T-0-4 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1957 286 a Fb(b)r(o)r(dy)2048 265 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-4 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 2048 265
a 1225 530 a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 23.34987 11.67493 3.5 }
false /N@T-0-4-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 1225 530 a 31 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 19.54987 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end


@endspecial 87 w Fa(A)1322 501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-4 /N@T-0-4-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1322 501 a 1485 530
a
tx@Dict begin  tx@NodeDict begin {6.94444 0.0 41.11122 20.5556 3.47221
} false /N@T-0-4-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 1485 530 a Fb(de\014nition)1656 501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-4 /N@T-0-4-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1656 501 a 1450
767 a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 49.59964 24.79982 3.5 }
false /N@T-0-4-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 1450 767 a 31 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 45.79964 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial
Fa(deadline)1656 737 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-4-1 /N@T-0-4-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1656 737 a 1893 527 a
tx@Dict begin  tx@NodeDict begin {10.8 4.6333 44.34969 22.17484 3.08334
} false /N@T-0-4-2 16 {InitRnode } /NodeScale {} def NewNode end  end
 1893 527
a 31 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 4.6333 neg 40.54968 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial Fa(is[...])2077
501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-4 /N@T-0-4-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 2077 501 a 2327 522 a
tx@Dict begin  tx@NodeDict begin {6.94444 1.94444 39.55563 19.77782
2.5 } false /N@T-0-4-3 16 {InitRnode } /NodeScale {} def NewNode end
 end
 2327 522 a Fb(emphasis)2491
501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-4 /N@T-0-4-3
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 2491 501 a 2286 767 a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 49.59964 24.79982 3.5 }
false /N@T-0-4-3-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 2286 767 a 31 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 45.79964 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial Fa(homework)2491 737 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-4-3 /N@T-0-4-3-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 2491
737 a 2722 530 a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 12.84996 6.42497 3.5 } false
/N@T-0-4-4 16 {InitRnode } /NodeScale {} def NewNode end  end
 2722 530 a 32 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 9.04996 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end


@endspecial Fa(.)2775 501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-4 /N@T-0-4-4
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 2775 501 a eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 448 3985 a(Note)k(that)g(there)g(are)g(t)m(w)m(o)g(no)s
(des)g(\020to\021)43 b(at)36 b(the)f(same)h(lev)m(el,)h(and)f(that)g
(their)g(order)448 4098 y(m)m(ust)31 b(b)s(e)f(the)h(same)g(as)f(in)g
(the)h Fp(XML)e Fr(do)s(cumen)m(t.)448 4338 y Fq(XML/A)m(ttributes)589
4438 y Fr(It)d(is)f(p)s(ossible)h(to)f(annotate)i(eac)m(h)g(meta-data)h
(no)s(de)d(with)i(some)f(lab)s(eled)g(strings,)448 4537
y(called)39 b Fq(attributes)p Fr(.)62 b(F)-8 b(or)38
b(example,)i(w)m(e)e(ma)m(y)g(w)m(an)m(t)h(to)f(sp)s(ecify)f(that)h
(our)f(mail)h(is)448 4637 y(urgen)m(t,)29 b(whic)m(h)f(is)e(a)h(prop)s
(ert)m(y)g(of)f(the)h(mail)g(as)g(a)f(whole,)i(not)f(a)g(part)g(of)f
(the)h(con)m(ten)m(ts)448 4737 y(p)s(er)k(se:)p 0 TeXcolorgray
1920 5225 a(5)p 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 448 573 a
Fk(<mail)40 b Fh(priority="urgent")p Fk(>)528 672 y(<from>Me</from>)528
772 y(<subject>Homeworks</subject>)528 872 y(<to>You</to>)528
971 y(<body>)528 1071 y(A)g(<definition>deadline</definition>)g(is)g(a)
g(due)g(date)f(for)h(your)448 1171 y(<emphasis>homework</emphasis>.)528
1270 y(</body>)448 1370 y(</mail>)448 1610 y Fq(XML/A)m(ttributes)d
(\(con)m(t\))589 1723 y Fr(It)30 b(is)g(p)s(ossible)g(to)h(represen)m
(t)h(that)e Fp(XML)g Fr(do)s(cumen)m(t)i(b)m(y)e(the)h(annotated)h
(tree)p 0 TeXcolorgray 0 TeXcolorgray 630 2640 a @beginspecial
71 @llx 623 @lly 386 @urx 721 @ury 3150 @rwi @setspecial
%%BeginDocument: urgent.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.994 Copyright 2014 Radical Eye Software
%%Title: urgent.dvi
%%CreationDate: Wed Feb  4 15:57:12 2015
%%BoundingBox: 71 623 379 721
%%DocumentFonts: SFRM1000 SFBX1000 BeraSansMono-Bold BeraSansMono-Roman
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E -o urgent.ps urgent.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2015.02.04:1557
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/05/15
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  0 0 moveto 1 0 rmoveto  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.06, 2014/05/19
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 876 2014-01-28 15:03:13Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: cm-super-t1.enc 0 0
% This file is generated from `T1uni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T1Encoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
% 0x10
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
% 0x90
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcommaaccent
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
% 0xA0
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
% 0xB0
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcommaaccent
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
% 0xC0
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
% 0xD0
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/SS % Germandbls
% 0xE0
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
% 0xF0
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls % or /germandbls.alt
] def

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: BeraSansMono-Roman
%!PS-AdobeFont-1.0: BeraSansMono-Roman 002.000
%%CreationDate: Thu Jan 29 18:27:33 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (002.000) readonly def
/Notice (Copyright (c) 2003 by Bitstream, Inc. All Rights Reserved.) readonly def
/FullName (Bera Sans Mono) readonly def
/FamilyName (Bera Sans Mono) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -104 def
/UnderlineThickness 69 def
/Weight (Normal) readonly def
end readonly def
/FontName /BeraSansMono-Roman def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/FontBBox {-5 -236 606 928} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18A96F6D1C771F81C4B3B8CF0CBC2E8
4B44D923DDCE84E17DAE82547EA9EA5E732D78F03AA245377BF0780A3752527B
6E63F6A41202E7A6C4E4F9330A0AABBD04387E12F2ABF531216BF498DC6B6BE6
06DD50B385DDB864515170905E2BF225AB9AEF29A2181200040460795735C124
59C90AE9BF9F01F42A2ACC5A5D97D4F6548FBC903ECEFE9FBC8492EFEE55ED6F
F29A7BB50432A42FF30DB3CEBFE1C2BF83D613F2C846B7F2173F00B4EE5FAA8E
12EDC39BDDF670F50F6AF072673281554416E77FF134014D5C465127C28647BE
3E810BBD9EC9F9580C21D2E9479B8F0435749734B76F4C06995E769710828768
3141ACD67803BC92D5B405AEBD4B25D5DF255B110F1EF1C35D45D24AD0B1E0C6
8816579DF17721764D5D2CE396276ECE1E6142DC2EEDF83FD7B65717064CF671
051D92A9993F82D241AA1C3254DBD3DC53886264BDA18DE9FB8F584DEC9A32F9
82A6131D7140BC7926C074E26639A7141B87ACCD64E61A25DD7E26F463FD7834
964655DDF83538CF1DEA3D6363DE79EBBCDB429279F84F5DA8035CE823A76FDA
C2FE77036F5B9D71C0CBB063689C0C9770514E550CDBB1BE97D763729B78CFE3
DD162726B3F3190F0003F4812E9877545507664B32A1BC0E6C933BA64EEB3563
39606495CEDCB8EA6E63ABEC9F3558DAA0BAA350F45A6E9B145480D9513B87EC
14F7551489E0F96B698A104DCDAEF9160549D551093AB3F5F7EBDDEBCAA3ABA5
F0CD388ED13E9611675BA045A8E99C002616ED89D1F3EF0537C6E787DEF9B5D3
F20879DF1555A646A79400D3EB80A209937A45A6345C4E51748D3A5C523F9F93
FCA3628D463FABD8537A948B3A3715BAAEE70345F5186A550FAC78ACD262E671
AF8FDCC133800B82183CD17B4EA18EB6AD976F91FE3C1447EAB9EACE7CB88DD1
9CD926D28B223896BF835DC8C340159DCAC5C4C8057F05D0B2BE9C7224AB5FBF
123E8E0C9E0A9A8A4DCA7AFEAF3B988BEBC5171618599C3E0BEC95BC947604A3
A110ABB095A552F5EAE31D0589A567AFBB8A5E4F959DC137C0FDCD83C3907B59
7E7A3D910C1D4011FFD5877D0EB5F0BCCE5BCC853EDF0D131FE20BB380A3A4BD
C0EE48597DA54D3BCA7908270021B40C343995838478DE252659EFC68DF3A83A
931B5376512795561D9C92335BC11EAAC1420429290EBBC382199289DAC3C9AF
86F7D9697C3981D8DBF249CA5E8BA9B8706879A0D102C133615199E7F2D0E341
E8934182D2FB1D868803D290D4689F75623FC90858AA74FA8AF358BA5DE67F7A
49AF1C5B93CCAE551496A89B02E258BEDA281A65AAD17AAF39C1335D112F5534
F5AA77699E6DA8AE1786899DE76BF51C49C5E87CD4739E72369715AD74A3F078
C59F640109B60A2DB46BF0790FA9CBFB7EC4E18A2D564B27E2F31DD93B0061DA
1DBEBE6EDFCD0999674B9E901DF69B414A798FFBF17CCB9034801B21CEB71D36
731D2076BED43CFC589AD67F26CFF052F780F2E480610BEF80BF540CBC92A9C3
F499E533DA1E00AF935D48E87054FFF6DECF74D3D56AAA2AD5F71BE161AA2924
41A608D60494975857F4D08474C5234D3453307581C6CEFD0729258DBA2E17F0
4F3493D6E5490A1EFB464AC377F197A807DEE8AC4F84D96E11525D38E77825EC
9F350931BD70ACFB0BF58C02F7BBD10AC15970A92B9AFF1DB70318B978E0EA0E
F0A89729C1C19C136816746B580013DA63ABCE2EEB22311EB2F90A16CDA952B0
18FD46AC9F831A8BE63EE8F6DACE8C0FC1A3F3166D66D31F7A9007FC495BFEAD
E2BD056A909CEFA02448D31BCFD2779DB4C3BD1635A1A79FADC4690A1E775468
261000CBF76E0E37CB5D558AC50162AFC2165C9C550BF4CA6E78C47D28C90AB6
FDCA50C12DB3EDAA56991E05961869F3A0386CEC628B4CA921F0BDAA80ED29EA
BAB5C8A5CD888E9F4F0573A64BC4A1E4AED718C630BBB667B5B5AF4EE3662A43
8EB0C3672E5FC1018F6E0D272EBE9D6E95688C4AE153015B1BE1D3E90A16EC1D
F4F023D04BA5379DAC413641F5F539835C2B7A8003CF5B45F2D1437C1344808F
D3035E78BDC7B5C12121C9CEA8C8790606B46816C8CE1CA85583998286C9928B
B55B18E0BE5F7481BF24B9A46ACCA89D03D7FC5D2FE67F5CB8FEF3A9CBCE4046
D3C36E407D6BC2DD219DD977EC097E97BD6E9F4F45B6389B6C09147A8E75C8D3
7C32713105310647822EFC6EF8C8F49FABDC15A9CE81769C23749EE49F183F4B
92C5B3B9C3C8967C8B2B17E216D1527B6137214131BCDC6BF54311DFBED1247F
CA014D331ED58739E21537CB56C86E4C5A3D2E3E7438CCC49D3EE18919600C36
A22BD7A9BBD1FBF18587A17DB7C2C4ECC79D634A9FAC844B5BE9FB652EAAF508
78F79711D309F1A72C238AFEAC44E56133D7076901FB511702E6ACADCD06B04E
D5ED57B8A4C8B8C24A3CCB7F4DDEB4C1E31D7C40A052779B93E379F40ACB4236
5CBCA048769F98E0C69D0D9FB41655CF989CC7503F436901BDB28C03CE98F66D
2BF62F94D03ABDBEDEF40B971135D95F905AEC75838274208678A6D252981C19
CA17FEDF37B535695976DE14BC034628AE07075C8FC2357576481BEEF55DCA82
E47DAB894A1B40134CAA1D8A3A941C7663740AD26B4C73330FFE79716BCB15AE
EC11C8D0701D85C114EB7AD73754CDD264C3C6C30A9109F1F7AD85965450E444
3701E80DD821806C5E98A0FF55B559335962D0894B8B5C340E72EA6DB942D799
343A4AAFA22D114A58C9328E2A0E24C5601227595E3E55DC56DEBDBBE1525BD2
FA809EBEDFAFCC05DEDEBBCB6572B85B80F41FFEE5DB6339C5821F726E0D9BE4
02C82C536DA23DB082E2BCB0B2425DD478040427B558F85E90076A43F950E477
756FA623235168A8C8CA7B623560C0E19677E203096F495BFD84BE61A7FE2C4A
7B171F519F2098A42E2D1C567C1943AAF04393570C5C8C93FB8ECCC8FDD0B029
3CB877FE09D20C5C6A075220728AC5C83FB8DD778901AB2F1D83F6450FA54FDE
CDD35A015FF96C6D6619AAC04C4B7935D4BC7FF1781B85AC90FF71E486437574
25A43DEDF432428A38C0E27325DC587F998E96C3FF9358BE0239FCD276B688D0
7EB67DAB6227FF89A91B47726ADA129D18134C976CBCC796896A4EA1431489AD
6EB0E29DD30BE5C49FE30DBCF99FD1D277709C0837FDC53AABDA271CC1129FF0
7CAD569F8611BFF32681C665797E746E4AFDE210FE1DDEFB70463B4AB5D7C911
079299E68D50DD5F9C12B01178E54FA8684D9C5A3E42BDD90A4C8FAE80333EF8
E7C2FAEB2E945A00D57B49F9FACA441E97A07D6A363D6EF13CF12D82D4EEDF36
CAD966BEAB370D131DD5C41450146074DB16C12E675D20F4D871A37C34E5F9B4
A295AF8259294B335AA51CA3CEBC0AEC71BF4467B90C43C5E718D0B0C00D13A5
5834B60621C5D9092D50BDF531E4881436542C46DD3894EBB465
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: BeraSansMono-Bold
%!PS-AdobeFont-1.0: BeraSansMono-Bold 002.000
%%CreationDate: Thu Jan 29 18:27:48 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (002.000) readonly def
/FullName (Bera Sans Mono Bold) readonly def
/FamilyName (Bera Sans Mono) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -108 def
/UnderlineThickness 120 def
/Weight (Bold) readonly def
end readonly def
/FontName /BeraSansMono-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/FontBBox {-19 -236 606 928} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18A96F6D1C771F81C4B3B8CF0CBC2E8
4B44D923DDCE84E17DAE82547EA9EA5E732D78F03AA245377BF0780A3752527B
6E63F6A41202E7A6C4E4F9330A0AABBD04387E12F2ABF531216BF498DC6B6BE6
06DD50B385DDB8644394C4D3FD8051BE7AA17BBF8B3C41354A86C4334EA306A5
8772FF918DD38C7BEB1DE9E6CC2149A988B8662E7034569A0631E02086B7C244
DF8F585CE52A08716EE2832F7067728C244B87BF5A0E5D8F720F14859C2BA170
7A223179BEF36D98791691B88239BF1292FF3C511739A3342419C30DE5C4F56C
70570E32B8A256F0D0CE6E58A26205B32CF8E4E325C2E6B9CB74294CA40B1B98
83A602C90C2BC6F5484EAC2F33F86AC21E880023E3A820D761FB828169C8CEBD
AE34C85DF3925444B8E29C56FFE614B160B57D8A55F1A6D52092BE766E050A98
8D1A856B2E24DDA3EA9962A54F0DD0996782017D4654C4F8BF617B529DF54BFA
86E1E32AA4C1A212212094D7942F412FC49C96309D495EB67CF229376A6987C5
4E320CDC9808E2D7ED4BBAD182C2F3A3EAB70112B45FA062DD7C6492BA475EEB
19E78A80F74B6859647BFF707CBA462AB54F51359D9DED52A23AB9F714CA8226
C0ECB0ABCB6E109CF5E72424ACF5601DACE099869520CE07F92DB9E600134C09
4CE89547BBC53C6384DED35AA84888D4272F31F33CE7EDD5A0199C03382B0981
A32057490A55690393812F465311858CF6EB237B6CA692048F7410F96B786135
5B3D1870DFA4CEAD06744BAE44F72CC543229866032C9905A3CD2729C30877B4
0378154914E27F6DC55C3E980C3A03CF137A1A1342922A435E50C802728CFE1C
820774CB474ED6B05B7FB52B489B0E9B262C69056AD9EA3021442069CECB6951
51D5EB9C92E6F88C6F7794FD8791B0A6D07A5F7867D2626123AD13A9D8F92B5A
2F7F7D495AD10D01C1E1244B8804098A1130405511E3A7A64042CFA58BFE315B
4543D84406CD0821FFFAFE7617D8B8F4CE16D8F10DB6E6AB6E18B79A466526D9
007DF8A416F692E93D851DC7C7AD5B2535BE0A22B38E52BC9D8F0B16E57EDE17
345338B5BF10330ACF63CE693767EF3E571E714D8CBF4FB4B5B7179163D22279
84923AE3BBA631A62DDED536C7DF2AF0C7340F19CFDBBE7FE95CAF2917C55B70
A88B21E870F2E781E02C238113035584117DC196D992BC442E85723AA4BE36F9
D35F2E81BF8D0A101038C880F6E68572E1AF6F873ED18282E6862B15FF9E11A5
97DA8AC204AB677615C08AD4EB3C56C391A369F8A63CB525F308E1AE639D8C42
28E9D0ED4E17D6247071C5E5F480E39D05F36BA471044A79D1CAE1009235C14D
290E846715C575F930B0A0049285917BE40BE702638E905827E10D0C36FC13F9
6F5890CA7C084517D27DFA24FCCA5B462A7F927EC8EFADA4B55407FC7221FDF6
F1A546E9696A8E99885D861A3801D692DD2E75FA9A5FAC17B79FE5CDBB050394
017C5DE4D9F942F1B20993834459195D671E273638E2424907078DEDBF854FC9
C76AE98EE060C6AA56CE809321078C90E597E8BB5CBE9741955B2C8DB5497641
819A37AC95D1485265A694AD3CEF18C5554C9E810853936F3B75587C2A4EAD11
88F863AAAD0B1A57C6647AFB13DD24A0A2ED1489BD71E9BD7195404D7D0F0DE7
4782000E3373ED9B8BBBC317F73B47A175CDD45280CB346D2E4269330789DBA5
A06EF698C3BA1D947988278F0009563B22F4E7AF045CBD22C9CF09F683F539E1
DA1CAFA9F200B36F31E61A41EE4677DD5999820F995F8FA0F63AAA22A5564403
EC555716D548C5B3C81DC9609FE032F234155C83B06FF394BF14C6B8FB365DE2
BD4DCF77985B1F3C541BC57D6E53313AA04065A538E22D8B299202A36CCE0AF6
E6D3A7229810A3897C1764227AE9AE4D59C96A95E07E574DE45CCD4ABF0F9A78
DC61C65BE8955C96EA66DFF631F4BB2E0788F97812F27AC81C1E8A63F44882ED
4EB685C985B6D35870B569E7AF8D412E4189070E935D3EC0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFBX1000
%!FontType1-1.0: SFBX1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecbx1000, tcbx1000, labx1000, lbbx1000, lcbx1000, rxbx1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFBX1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-229 -316 1737 939}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA1B1ED6A435C02C357D527BF5BAE9F3163F8850F
4267F16F7320BDD6979C2F8C665632114CE1D7FCD000F5FBD3E05848929A6E47
97361D305E2B3EF0D3289006D6D4A92B4915A07861EFFD2EAD6D0E44D7F2BC50
0393AB5D4E20487C48DB19B78C49FB68EBB7ECED723428C77D753A22B7D69614
D9508C82BA58E2D874CC9F68A68F2A40B655CEC8A6308B67DD6ABE39F97FAD75
03DA383F4C166B7EAF7A3ED4BB7FC5E6B5D2832CD0A6587B17539297FED807CA
ED127D2F0B4D1835845D8E3FA03981EE7410C5EDBF3C000051861E7C98A1CD97
D8CFEF6B875885BFF5832E8FCD91B4780EBE0E908E59EF5D3FA8CC9D67787EB9
9FF5335E365F2B9EEE281ACC85039C952D301529C2A7B52B3A174115FDBB2268
D98A22B25EAAC4F57C64C0C1DBC34B0FE96C1D9DAC2B7FF6749250D8502C5C28
3B8CE334C9E727CD19A3AB4FF6D3339E7E9C3F43BAD7A78D4C7113CD45530995
E6A70147ED0D3BE8A22B346818368B4AA3AB2ECEBDF089D4134F08780B4CE5F1
D96EA7AF6FC84DD5FDF8C9EB273059C87A568B0E6B0D41B1745D6DB55C621F11
5E7797466B74ECA431199CB2C9D974DB020DE52EB9C39B2CE83FEEE98D229076
8C6B6237B150DFDDCB233858DB62479384302233B6472BCE3E34BAAE8F821E9C
4B6ACF55A88DCA7FB297973FA132DA117DBA2FBDF46240FC15D46DB4FCB96755
9E9C14B62375F979564E382E27178049229726B25B523D85FE7AFF6640D96F18
3403C13DD05DDD24B5180D80ECF74C81954C7821AC143BD93111D71005A1FBD6
7C615092298A3999D91971A3E4841EFF387D63DE04A7FC6C0C3F42125A265178
8700B06BF950F0BB85EC5565D2B6DF6127C88F95E7CA7CECFD9B5EB798AC8C81
69AC63A5DDFBB21C65E834A32857E87B26F55C6A3A04D2F4FE43712AE621EB7B
3A41FEA633AE6C255C3DE3E6AE805C97890743B0B8F87ED5B96E2F535DAA3639
B351C8EF330672C95841467187048ABD8C42B329EAC163090F32BFF53B3071B2
A81EE764E92B5DBE073354651BF1573997E08AEF740A455F3E1C162A1501FE9F
1A8755B76E99FED552E9BDA8AA095A438D4BA37A9E5EDD235AB843CED9F550F9
7AB844C09A02B08A41A3F71A72861376537BA2848F6E1DEC66332E5C608E3E67
6FA6FC0B79B638DF933C9C2AC98F943AAD126C6C238DE24F302CC3351BE00F36
85CA11D23B413805A02B2D28DEBC35E0A305DBBD2E87DDE05F2E40490546598B
1382AA53EFAE26EA96915049E90B47B7991C032E3F0B911BA297F2A7DFD7880A
B829B8B472A70259B3717A38C339CAF82E19413C41B247F3F19316BDA3AAE019
9F32CDC9E5492F176158EF4633ED20AE9B21FDC76A82E53214FF985856322B6A
AE08FACB1003C12938AE4FC0ED33B192CABFF8CFD924CFD804CEBE1F9F4E3B04
FACC8B34FEC11B39FBD3935C1570FE893FC300DC731F8018AA2DD86D4236326E
6DC3A046FF00D80D3B908210BDB97ABB443995735BBDD275855B4EA1D56C70C0
1020F7B4EF9C75EDB109165FAF99D9315278DFE48AA67CA359A03132D235AC8D
304F409639BBC939845A70CA29258CF7AD697B1A54AEBEBDB8C6AB5432D5EAA6
105B198F24E59A81107E21DE878BBF07834501382D452C210D2E2275615D5535
203307BF0047AD1108AA0937F8E21ACD2D5C2AA41D07CEFE0196DD4029121E49
5BF6AB73E5C50204E8875D2F551FB4F940E0C71D74CFDDA0974B98C882443A36
67BF6AC4874A26CBE7CBAE872E2C813A1015427AD5372F6AA8E4E1817C062383
D232DCF46AB32DC91F6AEE8000C98A78E4620C1E0E85CF476D0B1B3FDAC9A7A4
D05BECD1A258B0E7B325349F376AF72407CEE5FE4D089EEF4FE32A900DD9D9C6
21DAA3FF4F4564D288AFA9950B51C3704FB89C3F5472030108CC5E5B9D86235A
2FE1817CC70EC57F21B33857FF798C2CF820418245421B52AA378F712E687238
B599E5C00AFD83A8D88274F1074EB3E50C03EC35CF2559CA6717A5DEBE1EBF80
FBD241FD064DBF03040902240A98955B94B8F9B3C73D34077A72E7D522CFCF26
7A5A48749587A48B07559E260A97625D37D92C4555E13DA0B4DC5730FE26DD67
C70C77F886D302BC98DD042A4F33065C68458D28C670CBFF1BC4AFBB060CDAB1
20A9662627DADA0582703B7DFBB65F3929A51F71AAAA0A3CF68F963E99E610C7
A4EBADED843A426FD7322F11F8EA83238F90FC1B581A05B27B4D3FCF075358AF
D573BDD19CA75A38253643F170718BDFCF0D19ECA73FB423A2AAF1799466827B
328E6CE80BFA2C5B3352E23F12534450FC581D233896A254B12793091477CC0F
FB581E07D4D78057167D0CD2D5E9B7BFA63949C6C3F6ACDB5B50DEF8FCE37DA2
DFD923DA4B7ED5551A3029AD97E061B6C502C2F34B7484217C2EE2043E34E559
AA1BACF8905084C826AD46C56957C8C329F3F3397288F9E0583A3360D104247C
BDC724B568EAF96E7341139CFAA6AED96BC89A61E010D6ED3ECE64B6C360FEE6
76E9585380AB3606D027B1785EA670BB335F1D221C7AF3DD19878B8C9ADEBA74
91577EDD5A942D04E4CF2F27123D998310E8B2653446BE332D431C0FDB58AC6D
73D7EAD0D146DFF1E584AA4D632BB23F86EAE1B0295DB72601DB870243C8DA1E
D5F1E5F0E3740E009C0CE7E9710565DE42233EA6AD853268D7312C2FAD975C89
DEAB698713943E2688F7A9F70FC1F4FE8070CFD8BA89C15EF8BEBE2E31002947
164EB11199D222F957CF5CB39F1352524B542C76697253686198C503C8161A06
348DE9AC13E922561CB2F8AABD2C55B74280C65F7495F33CA41D8C4A84549AB9
6F5E58D48A7AD6A96D23DEF906C7334F8CCD3A80BA07E9AE56A650982B0CDC31
E1E9679D75C4E5A961DFE16592962E5BECBE729E4C1063C61471CF61ACB392BC
6CEDA731FB6604687AEF86100BBB3BF729C2B6B24C0CD14763A93F7F65C69641
C06A82EAF77EF6963811F2D1B6F8BBB550CED5D4E0167AF714716ACB798DCD66
5F4CA477FBE8891D68A761D9AB5A20EEED756798AFBCD54422115A7568446D70
7290C071F8CB54C27AE2CB7BCF05DE57AC9475AF6A490B8A976D7E279395659A
DB51139B2F24AC5C1155FA56D641701E873CFA3BE04171939B5FBDF1682C8957
F3161560D47FB341FA02A41E73A4A2B6C88D77303428C7344F8F6C6A24F9CFA0
F45AA8A642C65CA405E5DFBDC0F22D5DCAB19AF52425D9BEAEA69F00E597A333
1E55C9A16327AE484BE882A31EB3051A5AE5233ACEB7DDF217A5D00EA676B717
40AA4AD81F5E7A0B925092EB48DB5E114FD9F910E874FDCA60E15A5172EBB278
239FB4D7FE2935E62D3C1AE6237ECED94E72B465FAEEB2946B704DAD17D06335
5BF7744BC7EE568D8F67BD90AEF0EC161CD2C4EC1561CD4EBC1CC4BDB1E08536
E2DF4A0A6826013AC84FE96507D885F3D4B18FBB5C9370D9363899F97A900926
59CECD7F04B6E2D649016DA0D967F967AE0305DE3341218259AADB936D479ECB
2EAF6B17E403AFAD974695CC9B91EFE137C9071699A16837563BE403F1C4CCB5
E84BD9BA8BD052B9B267606E6D4957F08FEBE9CDA542EF50730A103B89A15259
6DD03EC67D963911E1F2378357226C1B0D8ACDA773C319D111304A34AAAE285C
EBD6ADE595BA5ACAF395D1B75BDC9288ED9FBE0F93390CA7B0288E219372B5DA
95E308483FE4E9E33E825DA8B323B01BB50ED46CF009FC101B4941547FEBC303
7EAB9931087C8982D6B655371CB9A8B115895F4DA2BDAA4EBD37CD268DB0E5F4
25C51EEE7F3A13DF5E22169DB9941A003730F15B790D08E28822E7347F9B46E3
ED2D84B5CEB6B88D6DAD7A3EAE2E37B0BFD92CC613AC4BED5FC979D11C11BEA8
B03C5BFDE1D1885ECD110CBC0649976193966FDE971BA80F6E5353D19FD21D6B
F936B768EC433CB0CC3D65106B89EA16AE1952477B52717689D3FE52ED8D539F
62B13299BFD8AF11C11BDAA5C395E558AAC41DEDB2B84C1A948C0ABBC923323D
0B916DDB427B1F71AD0236545EF81AE0336BC012FD2E2E5DC1DF4BCFAD1DF96F
82FFCC4145600F85995ACC965ABE961C05F527AB6AA16C612AF4A0D2B46E9C45
88738DF7BF13E2B8064F09B842C1B7669A227F1F250CEE38F35889B9897CF34B
70C9E80A74EE2DDDDF061E61D1130C6F5FA16B886CE9606BB0F3230936435E79
A459D34A4186344F00034AF1B95E528CD94AE6E32CC9A1DB8EBE55ABDB390B8B
1A08AFCECA8B89D0582A2C8921283111083FC2B3AFACDE5197D787E04A8BD481
8A661D8A745CA88029B38C451922BC2207F949C62E59816FCD469BC3FEB57E16
7D0E0337883A0E37286C3251EF07FAC26C11F9CBCACFE6DA1137E970733CE480
FB161354116362196E6131158F15D3F714C1764C36319E0C44B81FA96E233288
7BD4A04494319A213FEF25CE4D4A29A5FA29B477018D51546108726CE31F8E04
0A1570F91DBF8F6704659AC48AC97E4EC0DF6D27C06741F0F155EFA7778C1D27
AC5EC62364DA6E0C5EC40DF3A6E3D0BDD11969C3638F0B8FD51ED85F59842FAF
07005B4E8DDBEF263E1949E4D82C2871B3604ABEA3970BCBFC6A61A485CABE02
3FC3D28ABC0F5538E62D234EA991F9B8C7066486714D05D29C940737ACEB410C
EC6F917E4BED0AFD92CE58F1F9695B05446E3F9957D7D204B01579697D4CDE1E
A6636426488105E35F636419E69BE2380293B531A3DEE5A4105D2A404AFDD694
7B83EE6DAF4C09F323457D3728E66E88F43E2C8CFF6CFD426A85C5EE149F191C
A800EF635172C6124E63873EC91A0E12849C48835E105751951DA722DC4C2E53
BFDE5A28210BA425AAB74A79F1043C14F553F64AA7BC0B3D3C01AA3D0F18345A
30EEA69B5DFA2D0047C51E61CCD72C20F5E2444EA6AAA8137C4249B6D5AF1309
F66A7FAD728E9D8CCF2FEA55B0805DCBB68BC537FC3F1E7D04513F08BF2174D6
CFADC31662D75760978AE0D5CCE71AB6D2CB3960D6F0D6F0F08578A30A6399E4
FE36A060A0EA1C5E51091ADDCD307443DB32EA3DB4AC283C5DB47854302CCC98
DEEF578CB6385FFED63B16304AFB4241AF3A06C27A7B2C00372EDC99A4654DA9
5F07900789D0E0251C397DE74657E3F58DB7AFFA445FF280FA2F19E41E22C261
4EFC317E4F4723EAE2BCB0323E0BFD41266BBFC3A0D7D3C2B03AA915CE26FCE2
419E2284816058D3E4F5E146BB4F21E5DE809984881E532371A729C4EAFC2F76
0DAF84AEA8C227375CB007D833D4AA8A36BE77F584D4963DC669F9A31E592ACF
1335D15C8042ABAE0FE58B85E3783FB06BF950F0BB85EC5565D2B1CF5238768D
D0836AC428FFC415CBC4A7D3FA0C112F33255B5CB7BC87D5C3EE7287DF941412
0CBD66AD2E02B47861CE41967025607167C69305850D4CC2810636D594C60EB7
602DE94BF4743C8ACF765712D191D61F1A9FE9EBA5EE699975C7A2E84D1258EF
C55B454E3BD2F8E8F5AC4B5F5EB63C17C6262AE5054DB5A32790ED8822EE69CD
649913B8878F611F6D1A775649ACA08A54C3602B56636481F48F4E3A74F611F7
D337D1BD5955C82BE81895323E2ACFE54AC457D222E62F033A2DF32511E0C058
5AD48A97F117E8D7AB370EEDE4F471DA6BF0B52E647555DA495A14003BF43CE3
018CB3665AF8A5A7AA737AEBDEFF0ABB73A8AAFFF9DB786D7E7370E2F18821EF
C3824480793BF893C52736CD8F1DBB9FA3C2571FCE16D3094F5C09CAB3E99594
98AB03604C1B4F6F8E1A427D4C5C819A28528C779035392AD8D7E20E0C20F461
924CC4CB38493992138AC91FDEBDFAAB2041A9E1750C95C2F036D4C569CB28FD
BA480644C93D5EE58229FFC7EB03EC82C569BA603682EA6997F2AB23F0AA866D
2968C5C07D236188EC0EB82477D8FFB970A188B4F16A40C1B6E47FC833938AE2
6C48F97C4D1F90D57EAE3D493F0376B0FFB6345B7B43CCD0C0DC565AFC8F9F46
BA7AC14F35703B77BE2491842A732E99AB50E8D29D073482DD74B5F5716D80F5
9C271A0299984D5966698C091F151023347EE74E6A826FAB2DB78737C67400E0
FBBEDB34B6AC1E4520E2575650D094AA31D13F89A74D8550213E1DEB336D1ADD
8FE9C15419324E20F5E34DC6D043E8853A6A8343DDFFB840F5E20C88078EF9A1
CAFFA857CC8CC4DC000AC12460C7D8DB2E136D19FCFC13B56F9F65967C51E9F3
989A5DD2DBECD5E6F68CB3D52D76D901203A12B6F65B86310620BBABAB38C14A
39C12ACA84BA0E1F52A1732A856F96C8893E318AC4659C035AE67EA289522265
A58C56DF9F1EAA31813F23D7224AD97CE9B52FE5D0550F66F8B14C146845BAAF
EFBFE4CF353FCCC51F3D3F15048B3EE075E0E097FA909B92189AA35753AA44C5
8100851CC85FB2C8ECB8327C2ECF15A8F34BD699C2FD288E2E75FD548D2F87DE
B754768BCDA1771DC22214C66B8E5F32956A60D1784D9CDFFF88C3F05B5E1B11
C4C4BFFC13E9A250E723A324024EAC869E3C319D8A64D4F5BD7BBB31BFB1AFC8
24E2B4184572B40593A1A0EBF40F65B84FB5A158927519796A9B6781C450D918
257EEBC0BB67D6CBC18BF60722713341F358FA3B94681F9FE0EA0855979B4028
7E918EEBEB5C31BA48D37651D3C1504EA11C2A563F7BBE4E9EE6368E570964C9
0541A21B6B6CF11194DBA8350C9D1497290B71495380352F68B25FCC18C661BA
15B33C15564868E1DED13B33704C5B96E51BE6945D1F5B4E6C18A2C9EAB8C268
A8A35776182B8D12824EE12EF9106066306092ABBD856E72EA33AADC9A30C85F
FB9FE20FA7F817E77C8A8D28E81242F2BAB2DC490CD3CC898FF1E089F3160729
306E4F080CE29AD1F7AB457B8B4757C7C3265348CB94D7FC7861CB91359DFE60
338A73083C4108D9470B9A697CE78287CB2CCCC4B3DE9A718677BB021E46565D
B2122C659DC2EA2A023C9720B783B2BAAD12D3D4AE428C31800909EBB172DAF2
8987B439343FF12EB39353D7191ED6839E8536E8C4217335F84A671893F03384
89600FBFE3D82563183AF540749D88789C56CC4F200A28DBE62A854163A7BA0B
ACA8504CD1C6DDC3647EAE1CE1AB0DA7D8D14B2BFFFBDF58F1C5D3C635F9DE9F
5128D4644A9B3A0CA75C55356EAFED386BED5C7A82F6ED4042166DC9ECC9D22B
B79FFDAC29EB7EEFCFD77E4E88DFCF78074F5379A0716AEC994124C921027240
D4D09C951BD68B348E404F7E856A39F1EDC4FECC2407B10D04DA8680D0BA0651
B21F73243111D02F4C228738897A53F35D00B6B1C51FBD334AEBE7C94E213445
30011A6C998BFFA3914574309C941A50F817D9096599DD64AE52A1FBA984FD15
2401AB575605254824A1BAB8EC451BD519F75F0E16B4265901F76DCE431B69A0
63F022BB21829737AF2D393DA6D6161F79C70692F903BAC08032A3DD099DA1BF
5D60C31CBF46B81CB362B87BB87E9552402C3491A2C9F4D3AB40950DE8F214DB
1ABF8B7F06FB346D6557BD6CB3EF61FF3B518AF205258564E41B76E2535EFFE2
43981CCE9FAFE1FED53BE68156153603C4D647B0FFC92ABF29C06C2247C937E8
AADEC7224BB26BBE19814EF6213340B86FE438BE5D36359D09F7470B799F0EB5
4768E2BC40F003E922156240A8A3A0FCB33F3EA9EB54E9B465EFAFB817CA542A
F052AE726A80CB0A38FF9D61E9FB0E6CEB6485C290CBE3C84E6CB5186D17E613
0049E414CE906934D916A30EC70BDF1C0EE055F4C8E804C409E08D5C0AD1051B
1360D5C0D13E8FC97C8DA1DB86B1EA339984CB81320DF07DEA87EFC6AAE69F73
56132C88524893A3C7B38FD84EDFF90FBCA8D590E18907D51ED4D40256BAA743
03D3F203C04714E5677F893E2EA3A50A3520295A58612C8BE472C6EF6C6D847C
2F677A6BC7CCA0B0F1D65A529DFFC640D25B5C822A209BAA33D0B0A422C06FFE
9E76E342F24435DDD2C3AB3ED6C5B3DE51C3D14A1FF76CD9D1CCBF26C7455590
FDA7D9F63ECE5EA6C2FACEB838BC0D230C40972E6D8847FEBBE9E501E96F90D9
DC38ACF6A9D00F5DA548080C96E9BAE18085228CCEE136CB4D6288560DD086E1
020438F4CFA0400CA380F054C59BA9086C3C781BEAC1865DD0E6305207F4782E
93ED927EFB0E58249436A376E0D299CF4CB696188523202996FA3E70A93D3689
E5DD74E0FA66F09F9756A4EE5C9EE0C92452D27EB1E590E43480F0F3E2C2AAF3
2AA71D289EC384DECC1A97814F8E3BD2FDDA1012131F1CF8AAC8943C973FA526
4B6277B4DD4AEC8C2D88FD550AF4B902B396867C9523623BDF0910A04F5F90E3
593CD86F5107512F50282CD05E99D15801A766219CD91FBFE3BEA6E5EAB5D39F
87BA1A514F6FD6A86B7A809FB0EBF59B3B0D75F7809F3C7776B20DA1447C52A3
0C9A56515F282602FD49947C73E872DCCE9F2435898148687C5C967880A473D3
9D285D3370FE103C4994E6CA9CAF69C051F98C9BE96BE1F6C80D3CFAF1C4C520
543585D71151E749A6A8D0534582943018FA8F74E9E873AA62A2DEE42F8440DD
A5AC804D860DB6E51173704DE35D983D191858C125100A5B42A2E400A501580C
A854EDC8F4D48F9516944D8A6334F85FAFB7D298F53E6AAA020481DAFC14076E
79FD99C0480F85187FA290D5190A77B1AC66D2B37556C6266F2157E1919634AA
E8B6EB70CCDE3282F6E2A80F4802283DF85DC40CDD2F59C5EA20764142C58ECB
82DE98D51E9849C05DE8659532930B68251E58E5238D15FF6065F98554957799
D9BAFDC0D26222FD214E9C3F216E6E0BB2251544AC539B2AD1B2274C4DAF402E
CCC26A80223DAE6F2B4E63441FCFD9F44C776360BE5D268088C01942E27EA415
6CE4CCF7EEAE217E4421D35B8A1397737A05DEAADC6FC529AD6F4C749DFC9777
5ED8F6B595F7A88E48832BC0BFE6DC724045F4EFFBE43DFBBBDDB4E3D6D9170D
5C4F47CB799B8F76AED91042B5A5528B53CBF07D9E84A54BE377B54EB6D9BD1D
20BC940F3D3D8FE8475B87C18222102AE68684FFE7EC0C5D329F728669DD4F41
D32008709A80F4934CCA3615F80082E92C35EE3912E8F5E9D28D07FD6C20FDC7
1994E911990BB32BEE4E016B527EF236E5AF135276C81BF19B802FFF174F4542
587C63986A42B5463140409018D447A9F592D1ABA356F58CAF4AE2632ECCC001
FAC81CB9D384491B65E5636B4182B05BED179981FB4F7A90529618049F88A785
B15D0E3F46B0BB09A3BF5B2867461874FFB31FBC8F73DF237F7522F402A1318C
4451865DAA18284B979CEC35A110CEF0D9FBE2AE1D7EB7B88E89F96062D489E7
AEDE08F1FBEB0759F70A51E2136B6E924D43301F5FD7200671D9289C2B647126
3339965CE55BE7066680C09F9D892AB294B09447B5D047E75DAEA53560FFC9ED
DE8F93280F5AFF773086BDFB546533E1E097ADD624D5A0A9E6CF8B200FB6A5BC
D1D7FA7DC052FAD83A6356F227BBF51F56E66B4C65F701BF34711D83A7642346
59630741BC6EB8CDCFB0A28D3851129093D4363E5D0A84FB21C5CCBB89D70D8C
5EBD848656F64C44AED384BEEE8B85A7B5AAD82FE5688E20806F51850DDDDF32
C7ECCDF030A8B004C731816863E7D2DC33F796E10C46749D3E72C032EC9909E0
585464ED7F91C226110DFDBBE863471296389FF7C7F829E02260E58A729405DA
B005EAE6BD338E6B04E2F992F038335EC3E78C7D2F4F868DDD5FDF1959595A40
BB5E648CA76FCB18186219301BF6767BAB871A3B1E89AB5F7B86D6BFA666201A
11ED4DF3E2B9301AB476492AF87FC4915ECA2291C47042E7B5F2E05817100EEA
6E6D9A047EB82077063F6ACB3FDA289F09A572964703EC80EFFE49485038FF95
FB8515B2935BE0A92AAD27D18847CD91476517A40DEE93EDDA72CAED72650F89
E7E0B1538C5D0664B6C44231B8284F7726DA736770EEF2A57E32CDF12A93F017
BA10D470148CA55C7A1C4195A1C54D3B05D60B0EB6EA44A0C27A848BAFE49D9F
BCB26AD548F07DFC738AED535E4DBA55E4B1A46A61EEDD111C442A7CF5B27E80
983C0D44BC29B509DE4C9A4020E0C48461035EA2AD57459F07BCF51132F38951
F15A65CCD62642056654D56C22EE022AD907C278039076BAF3268456D76B3DA2
DEE7B47606305D978A2318A18413A45EB18F5782A7D3E38598A1AFFD9ACC6534
713814AE888D4756AC6FAABD931D7A71126DA51D64604135758AAEC999AA5917
A5F51E22F6A0D4F8FCE37DA2DFD923DA4B7ED5551A33B89B394ECD5439251994
8C0FE4561A01DBDB97117C880F3DD9EB28A176EE3EF3F92C26F752EAAE789828
29448D5300BB08D98417027BCBDB211A68DC7713075CE9B88F6E690BEDF88866
0011F1A2B7CB39ABEED7EA7B4C642654F712E93BAA78B4CC011D1BBF76EA5970
AFBCC12DBE2CFD4D097214087AC951B6634E8EA3C0579D9536A29293C5150930
4BDA94CB4FBF38D0DAED25978A39A00135683439DE579963220E7FF0ADAE13A5
8F669FFC9B10218D4E9DEA09FE7A9F107F4BF28349217B65A2C6E9971456C23E
EC3D82FFE845D8BA250670E5CF73B0780533FF604546D1A956D6958D78BB1C8A
D739BCEEED50FA4F21287FAEA2FB22ADDC2F4941797F520959231F2BD6408ACA
E74BE7E3358DF0EE889665BFD5CF095DC10B658B1D2ECD05ADF0BE0B7D809DCF
0A2DC2C3E42350EE4D4437D9191D9C2D41145F9F6A79175869485DA2C7848EDC
71D17A71530F2504362B5FCC9EDEA3BB1C6E10FCF22375719E962F3078FAF5EB
374EB3EBC946CF8132B8CB3980D3AB83060389B399E6A4A63ED32F8E5BED4EB5
713670803AB4D7450CAD98A4FCB439C843F92E4158DC90D3B50D024A8719BFA7
AA75E27E054821F0CF01D3A2B352DF18D695911DF7322BC94221E3103AC9539C
2946BB389DA59DA87A7759091609D31B340F293A79807E5E79F0B04F4F790CC2
2C491F3EE35CD3380E4239E5292951B4B4F093CF77BD1EA2C65833EFB2056403
DDED2931BA2386A4719B2A623EC9FCFE5B319DE2507384950070482597F92C1E
61C861F9E8D0E77514D755162BB65C9CD7A99A0A499FB007FEE01A71838D96BF
128648D193B18CB833CA2FF2DC77FE8DF688F0523B9BC63324DC785BF68D1A1A
57F64A4489AA77C19171B715D1A794780F058017C29881B54E0DBE14312CD769
F05C8053ACDDA5DF00DF9ED467557DC651F35FCF210876171868C5ED5B3E3346
3C21BE7E5229AF91FA8E16B5AE0AC9B674D75851D2BB81EAE547713D0F7BA515
220A0BBC480D2C20CDFF638DDEAE362895FFB5C87EE580D6E53BF9392D4448D4
AD4EADAA98E9D3CDAFE35798B908F5087CBF8A9EC2BABE3DACE2F7F3E2477698
5E7B9D04BAFE5781C4859B00E74CD42BE364B0469FDF42AEB565F3D87684D7A2
3752762CA0257137042D12CEEE002C87D3CD39F92BCB7471571B0CDD82910839
D8627E0185E7D59F151E2C36C1E1210FE735ABC7631A9AE97C3D73EA1659BEEA
19E34024452F9C69088E61B8F9E23107389C627A686719195A142D39D6C0E03D
C00FB2502502F173C810C1A820B95E2AA83517FA15DEF071327ED6BE896EA771
BDF507CD1DAB7F72CBF004B65B0209209A65E6F65665CAEBA5A3AF5B7879610B
1DF92AA51CD4EC20480B8B7B1E39D1A96CCA66C1299695C85025E1D5B039BE2C
981AADD12C891F40ABC0B36EB40A342CC1D2A285FCE4E7854744B32102C9E2A2
845E755D274A3C6C22465F9A65E4C9E9432B3DB333A0031BE4ECF9A0BC1C77E1
8A241B500D66ADB879B2EE2026AD818632BAD5821F1DFC9B562947B9BC6AAAE1
DD23DF6B9D30ECB1BC5C1846F6739E061D77E0A75ACA00EA4C0D6C76691F1D78
ACBEFD0C53CA06FB321502B0850C137226EB16D3762E4F749A571A325AA82827
A6B65957CD2CEE8EB45107827175471DF1117988FC9FBDCF1F649B3D501F8C71
3AF42492F76597DF80A2360BD5352060946BB0CAFA629EE9683652DAB14D19C0
7C614C2EBC5AC6069566DAA19066B51C280584957324C4422EFC571B8AD6C04D
B0C80F19F75C093AA734A243D6F3D331C2F869AC81C5F29F61649A21FEAB076C
CD14323C848C164F54D55031369D99FEE06533568B55A5A342F646AD31A292E3
0EF99B5C327D0A3FED387CD2125CDC46DB778158B67FD318F4551E3E00F37A54
91C81C8561C0B04C245CB509168898F0B3866DB303E4EA04945F3C625521668D
70D8697BF9F2F1D127CDBD11FCA6A0AC0EBC25B4CBF49BD6526B9B15806A2784
7793C804BA8F97E95820907F6B252105689B9965567C67BF5AD328803D6AA3AB
DA4AE41B665A2F7C931826A17BE27A6AF4ED48C4227144F9CFD841A9D8F9F803
61D9CCAF5E69D228F84A288944A5351297760652B083DD38AD7853289514EC6A
3F2A17BC46BA4523B34ADA1B5D31E27DE2955AABAF66DA4E88A6FD04C4D1AA9A
CBD4777DF5BED92D2A9A098BEED08176FB098802690AA39E774B9835D4F8691B
029ED37E2329240E4872E323457502743C5305D7D01BE55A9A33B2EEC3743AFB
006E526F590053DD36B4C9A20ADFE7ED918D653E9FB661B93F99AC8F796B912B
9BD5DE96390DF4283BD6E36235BE8502FA9E4B6E6F50966B571D080686D716F3
34248CCDFD8508705EBF47DD5454C0F3DFEC6476CD621FABBC89D52E6A0F74AB
C95B7ACAB6C7E4203622C7290E987F074AFBDDC51579E49659140DADD4CDEF90
E545DA3174A7B31FCA155BE79E19EBE383AEC3B3AE33596B251869EE367CC1FC
DD4AC89713FF0D683ECCE7CD60554EE8C7BAE41E9D187AD9CA260CDAAEDD0DD9
02F01BCCF12D99E3021E9EAC269C99E9CEA17B0BD94EB5AFD64AF7D08E413F73
5A7DD2B0C83CB3BD99B714FC1B25E5412FC4A752006847B5D2BF2357530D7D0B
90EE255ADD63F1EB4D518803661A47260958BE65CA61050348DEE8FB39BD0D83
7C48C838B4224619B5413F30D9A91AE153DD2725DFF7861AC0A9C29EA19CC755
A7453AADF7BCB30C2773AB0DF66DF64C752CBA71B573BAC93A9F5A5AE79EBDEE
D194AE1B1CA54943AA2C3AE73E79A8D11E8AB5D0FFD6A165650BE118AB54C6C9
DAFCA752E9A824CF3E1150A0FF454E86BA17FA3D0567ACC81C1F89A1016CD4B9
F19326601497BD9F11E44E749A04D3F56020B4634F9225AAD9A826EC69C2987E
B5CEA210B77917D792EEFB66790435D7FFF5CBB0F7D27759E76E615E8AC96DCF
EB832195A31705760C097936F762B4CB28BE158C9A419BF86FDBC9BC4015422C
6DA9D1EB53E1AE439506A9B400ECD3EA1B5A6C6EF7F7FD5A586989C46B832631
F461AA0478A60A202A8185956F6B4548C5DCB65999F5BFDCF727DE878BBF0783
4501382D452C210D2FD39E7E229F4FC592844ACEE1A51AF1286BD68B8921F5CF
2FC5BB00EF4C3AA5D733BBEC21C67A784C9E820812FF747775D5CDE831992C4F
31D9BEFFDD2806081D3006CF366A7B761B0C619AB2A66679B71CCA5EA4581A28
1E54F0E3FB7805BA884F8808F069DC32BB476432813EC7D22B6444A1AC1E57C5
0CFF92C91A8BE6628FFEE4760A9656E04733A58FAAFB8B546F7C26AF23496D88
825E2E83FCF824907A72492DAB15267C8AEA399C77D4281080BA9F50E9178571
1E3B4193411A32DBE09824E2A2C906F7063F245224FE55AA2AB893428C2E0E53
B541A598466864D44CAE0CEA94ED1E11C20FD9971FAC65F00CEF7E9DB71AEBEC
C029FD0DDC423BBEF6DB8B65DD282E5E5EAACA3C14B5AF66588826729F5AD10C
AECF37D6EBE1A7FFB357FF2DF5BF7CA5AC8EF73B1288CF2D274E66F7730FC35D
C5886057E92533E2A47B38575EF49DEFAA8D379093C76D9BBF07D73C299DD0A7
745E5C1EC8850626797C2D7A4AED8C7F507F5D8A765E323439F2F2DAACC1DE05
B9637C004679137FDCDA43CE0B6A1BF007E35CA53ED7870B43D813AED7DD2642
9D591997BBAF1324CFE6F8EA77A1961D1CFA93D523F080F503E7B54769B7190D
4F8403A126B6EEF4706DB41E9274E32007F805C4E0A5E3E02711047F8C04BFBA
D5415A0ECE0514405834ABC7308074735AA85FA9CEB548E54EA57F452E3896BC
A6B7AF01AA6A26587ACBD29CD50F01518636C3DFC69EA19CC755A7453AADF7BC
B30C2773AF4F588675F1BB1A8E90C81D990013ACC67884F49114133CC430BE71
C9771CB880E1C040A5DE56D71DF8537489F2D087E6F8636E086070F045637BF6
F46DC6CD4FEA8E19A8AC4A31B3CDCC0E424CB1C2B4F825D7F1A11048637CE63E
BE78403A13DF5E221699667B2EA2A700229BA556E747DE68FF8CC9F6FE772C2D
38E1CE50083A506F57014376758A17A70872F222601313AD7716A55203269BF5
8E1EDC25BAAA8889012BF840FD697DC6D91893ABB326EB4592215533641C078D
236DE64CD9FFE20059D241C6709E4876C55DD99576B273DAE727633350F4C670
8DD299230FD67F0EAAD13949CB48ABFD9A8035B017EAF149AAE7A33A387289DD
4C38A28186E377490CB2ECF9F16E3C80DC2BD050484EF705C5C4FA63BEEC03A3
21C96B32DB759FA4A52763CBB550451EC80B1DCD77F7C1B38D864386B8A96F49
4FCF8D02FF01610906A5B4449A61CD129C1F598D8C145EAA7B6F4CFC6289BFC5
702BDB5DA5484396B00C4CA35888F63501225E412E687FD5B998959CA533F1E4
44F8FE4C2D3E6207BD04853C400BC81203DC0328C9D9178337C2077C42B214B7
75E6EFA0CBDF19C5B1D5CCDA03AF07DD31E5C974E8FFB2C222DE1EFB9A8330A1
2AC118EF03DD0198C81841E2DE908976C29D47A4AA4094E08CB602B03655E8DF
D866D2DD46E57217E06644E065E23F137C28B15CB84E66B7232BAC88EEE55B3A
090E53E934816A260BC2DACFF71B4B62A4F63CCF0E39201ED0A5BE3F0D466C02
CDF1DBF476F351613EE2B62E918E80A35A5E970DAA2463EC79F7293A55BDD02A
EB87889763C0BB94D94B4674DE422010BA6196EDA348639FC3A0B28A22A82CF0
9948A472BEB42D93A8B6B7EBCE39AE87C0C4AB4BC1164FBF23EB2C418136136C
2907365971BB1BE552B7166BBE84389237AD4423119C98D5DC1DC1A3FE0884BE
434D0EB13B50361FEC8C077445CDB87937B15F8C6348AE5E701A0CF7D2AC6217
6E421C3385123FBD0EAF3788648BF5BEBC56CEE9376723F5C50CD5900EA4E259
A6A1625DFA8AB1AF660880148C5FCBB746750A9A91BD7A92E0B718668A71C7D6
B094B14FBEBE845E22E3942D6AE86CC4878535BCD86FC32FD2D12E587DA7B768
9D74E0965F73E7B017A51818AC249383118C278A8DE53E7A55C978A8C1D239AD
11EBF80D988B018FD36C578696B4AA36E5E6E4B61A562F1481E64BD2EC09625E
82893344EE4CC83176CE2D1455E896681FBCE9FDAF606715EE32FFDBD551AA5D
B383E3747179FD54E0955DF11D0FC345AFDF781E3A9A3DABC24B5910F26071CE
FD60F0EE507028DD7F98A82465238F3314885DB8A86CC7A26FE7913E39C859BB
53D2AF5DB023B3AEE35DC97B9104CA9103002B85432DA0B395523EFEB6E118FD
1D415E0F57EED9E39692AB12698C96E910707431D172AF86488817BF82D908BF
63F64AC0C72B964BB1F9DA0EE178E6266B7FD3420157EE3D7DF1CFDF7E0CA418
3768673F7BC91C5D01DFF8E1CCF5A51046248DE14B83C7BB911898DECB8205C7
F9F15728751331DBC74A59158065B771309820B119078ABB9FF58247541348B9
1C07B6FB9367104EC44FEF1C3CC92AEF10A8FFF85C88F1EB02875B7B254DFCD4
B0C907E18AEFC14F979F3CBF9A27E8BE5DC8117878647039F1FDA13CB26FC97D
40CDE2C2C32CCAC2E066651BC347557CC66D11ACD5B5BAF7E53291C6E7195E54
B57FFA404E685B2C3A10F483FFBF44E68D45DEE92FCEA136F517DB61E1D3039E
5F65F0F3A1348D14AB9C733AB1179CB9B56E58D967E59AE280B7851190EF3BBC
0BBCDD1DF0775C70B21CDB37C62BD779D9E64F1FE050D8BDAB17C7A633909BC4
F51848BFE4F534D214B72FD82A5142BF70756D4E3A2C2F5D684239ED3F7C7461
6B6C7782BF11CBFE214F632945A228982E7FE722341BD44A2BE19B09BB3A2B1C
548D84ED63036596FBBF26798F6A5ED038792C6A36434564120364DF36A85537
12A3A549E68CACDEFCAF9E7837457B93119F2BC86EFA695A95B4313933574C15
631B259623C23AFA8F6565B7C23FA2FABBBC6B7601D79A5E45E9624CB60B95BC
6721924EF1C33D6AED291F0B78C20211A6BA2F10874A306A94C0AF48A292015E
24E65CD7F44E3EEEF82158712B2D95BB673E96EDAAB3EDC77B644390FF2A6C0A
69D8A31550FBCFE50DBB38D38514EA1ACE4E12BD332321B6F692850AC62C48E1
367FA207E2E941E9106CF5C5B6CB7B8BCF2CA6C2E17C534150E9EF83FA45C008
DBEDD2808DB1705571399525C9D6D7771718DBB01E4B3F1995497195EA129D4A
7D49D70CF3B60070DC600E07C03D09DECC7F3DBFC0ED3E34B48782775281FD7A
8B4132D5C35C47D639F99EDED46537A910ED31359611F6D5EE1BADFE3A6865FC
8ADBC93BADDFEC1086D96CA95BDC47496448AE11B5EFB08AB6DE487ABAA5D01A
ABC16103F0CDA040B3AE8446D1F8EB3231F8336EC713C7156AAA18778921184B
BA6365FF6A3CB0E15984D2B044BCBC8758B2AEBF61E37964800F164F028F88CB
295B36266C47DE3DC6B596D3DC87AB035DE9DBD5474BE9E7ECC09F6E0D7BBD28
0FAA43DB275EE7911690B14B5D5735FC32C14EF1CF5A5258BB0AD778CA3A3003
ACF66F2F7D1108F05DDC885A1FC5FE18BBF95DE79458E3FBFE3919CB75C2FDB7
E810D7C7DD6EE2CB6E4F5DFA061DBC8D703363A1AA4A806731C2F84AE523A10B
01EBA34E1CE1CEF3D5F31F6A73A371375FA8CC621CD50860AD7EDE699E859B18
B0809E416B170067B51D0136B5E6B5713C0EF18EB28AC56D6DE146AFD58AB298
52F8C792864C4BB40E21CC100DB29E2840559B84B4558336C1768E8E0A850B3E
1519D2A0B4ED540E4B094EF37BC337D5B80C8D927DF8FEF4D6F5C759E6CBA166
D05C951AEEF79D91FC25EC950E250511BCD6D5CC4EF9443709B480B064EF7FBC
CAD9B9BB4DC9F1318E794ED89C47409E478B5DCBC6115453F992D7BE21CA6934
AB31C290E8BA59FD00D9106B0D8CAD7723AA6213A951EDC5494CFF536C6E0C19
E903D3CCD64CF4EE506F1C674C000D6A4AE76C74B5C24A34A0718A8C70516CDF
ABD02B5CDD259155B82B3FBAA5D77705218DDD134AAD7C32A4EC449CD3F20353
9F73FC7C36B47F9852748D66B065D684C3BA99E260252AA2E7CD02BCF1EDAE6E
559500E1DB70132EF0798C42BFB56A875616533CEED7DD3B1FAEA9797B05865C
00A32FE56D7BEF7F75313DCF0517A8F7A8869044947CE709E5F572701A3C85AA
0369B0CC233DCEC2AED884DC7088B6E420372C928A3304A859D98C2AE3B0DF0C
1419D38582DAA4518E446B176D90DCC6933F7EF647F56F6B3CB10EB6F7E806E5
1B294688E87E12C09A3AAE697A36B813F06C4EA07A0BE32BF73F83820258E869
FF3B2A422846427B52717689D3FE52ED8D539F62B13521ACDBAD8BA6E020BA86
1F40465C49BDACE90043E31C55A167CC5938965D4F6C75CA21A686830D1127CA
3E5A0A3C6099B6D3B07DD08477454B3C680F90A7486D974A71CFDE9565A2B456
29F7D44ABF22D2FDF6C7D1FCE32CA5AF7BE01E27535F5AAC9EB49CCE0B1A4F6C
1759E48E36BBC45FB55B56AC00CA4AC01C954051D5C7593D6546A9D962C72B0C
571E3CD84650C982C409341BF5E55A022440FCB7A1A92F293284B025BBB49631
F787EFFB7FC9969D616A2AE8C69D2C5A0111234C8097E44D43CD21060D35F24B
66D79A4B5DEED53F78B2D9157321839EB857878ABBC26F9917B2F44155D1386C
6B61A5E772B9A3F57514891FD61D4EF00A7EE3605559F0316FEB64D096AB0FBE
450EFD0039F5AE90608F62D118968D7805A450898925DD315F8A6F8C14172D37
60ED7D2C074997AA127ADCDF044BA8612C7C6EB6DEE9D130BB7496CF52A33FF4
4BDF6284C1280A05B1E0828B17A687FF469B4350F61E50699E9F98C1F3A6E507
D39E1395D05B79D9DA069D7B219716E00369D49D47FD0DAC92EEBB236469CF22
A83DCDF832A5CCB67E8982198428B78052B2F46C6ADD5125CDF74583DD9803A3
5FE5800B2B623E0488BECDD26DBB0B3ADC26E8A1483326E90FF6868B29BA9DAB
6B1325846B620507F48F326512EFE1B93D08979ECF235407BF9BC52630BA1C17
591B177F8D123E9D0010780CF5A166FF8EF5DBA57E2C0D3CAA87D634BC255F89
CAF1DABBA4C78634677237C694CE691C8FBF4E59F665458BFCFA1CE7710407FB
030F6793A4C18B78875A948EA6E61CA2342D7A63899555D361AA3CF517684ED5
C21C084ECEF4405FCE4CD6702780B3D56D13405C5CB5581D00E6DCC3487123E3
36C0070321F93E7B747BD0F5235681B7F9DEC5AE5B6FD125F6E863859A27FFEA
7A4A1C1C52D3D7433EF36C4D4D26AF48FAE0D36C328BE4815E7B28EA4392665C
3C82060040611396581F1A77DBFF8AFADD6349FEBFF6363312F2E4C99F4FF66B
092A12B53F77651229E66C594784DBA4A2DA454469719DBA504DEE92F17B9DF4
F312C21ACD85EC057C82D080AF03F9E8178B4A7808BB27982917DF5D0EABDF01
663308AE92505F38B4842D82FB04C02E57BB179CB0E63E9255ED02837BF1B7EE
0271E2233F7DD31044A4A30E71BA8288912795CA29E315E5E6545EAD4181FF98
8A654DF848F0AF7C054CAA49D99D2C146C0130B2D8C5A51C4060D0382EF7ECDF
D54D76AA179CB516D7287E3BF4591D3F63B87490338692E1E8CBCCAC635195A2
9DAAB15D42B9817E73A24025E9DAC456B3D25264E54B411296A5A8B25704874E
F5DDAE633524AC430E1E2A35E4D2AD2DC1130D6127C281AFF828DFDC5156DB09
BD3AF4BD2A6CC2926120BA8F870B4FA6EA100937BBC2D21382E763F9E77D257B
AC59B3BA7B5883C08EE14893266539D06C71A84AB5707604258B274F2EC32F40
72EB38E42BBC9FE2AF167DA66AA70EFA59E99DD69BD3B32823343574541FFC81
303B040674ABC6CE518CEF44971BC54CAC4353C5C4C555B232639B0F5E1CC1A5
087F9B932E0AA00C6F16F9AE7FF20731861A8907AC8818EA748158A6C5EB46A7
BD3D2295F21D1CFADDDD8AC2E1F617AC9D4F956622474B6DE51EA9EF3BFB9DB1
E0AED4BBEFEA871B409881F9B4010E19D5C91F81111B8B99044854030673B2FE
71E13F7A8ACB63D735F2341CDC63BDA245071B497D69A6C624E66A4844C7BF26
AEA47E7BD353729FDCB7666ADA418FE4908B0A696F77E2444925D1417AB231DD
734384DAEB199120612685BF248D375F17F900B0459C4BA521BD7ACC7609FD70
5543323B4C31922485D848D60B64094622BF1A7944D7BD0AD7E6A28C6AFEF924
4779AA1830DFAA9707E1C7A4407A6316BCEEB96306516662D82BDE874D086F3C
36D1609E4D8CE95A15D6B3BEA5E6D5ECF78B88AD884FEA992240A72F1133408A
E1491AA0C6D512813F6D5AC0A964F91913EBCB8EB40CB02A267B5400725974CF
7C5868F643311B03746A1D764E58404CD71307C27A690EB2F059E758B9889EDC
72BAE6575A27F6FBF3773123CCEF4C30AD3CFEE8A8813C3FC69DEF869290F64C
27EC87AFA42DBC99B379A8DAC749ADD96B85601419CDEC998931FF51FDFED288
4441861537BF9D590A22865F5487474CAB36A193CFCE42FF5A04BD168BEB6497
0E5E65967D69D41BEE653F13B0BE41B5736CAC9534DB200319B2490CC7BA1C68
450D341C577AFC2FA95F719ABC11865D3D3DFD936356EBB405DC7426C771C2AB
AD802BA41BCDA726330D6E241672410558C6F486BF9054E9ECC1C2F78C1A289D
775CC58F9601378B8DBB71FAD7C6DC574F18EC95DCA2A70549F6489B5402C4B3
8B9654A44A09A4B30A52751178F4C23A37ADF2BF5C068282C2F0DF5DEC1C6961
7272453071E2DAF65BFB4DFFBAE936342304AD82B142D4FEB340901E12B16AD1
B0B5E9DB82826B6CC0F3D30BD9320A4D044CCBB2B91338B53147CCC9C964B388
7509F450EDCA3E83F7BD2B47D4DDAFEB3BAFF0CA55A1B63209A4C0B83515A062
143B44B3F419360242DF2400DE391C3FE9B48597E8DFB3E022DEC640CBABF6DC
078381A3F761FAF2B993B44656291FFDDD0DC46D2D38E41EFF9C41D64C8C8D0B
C0883BCFF1B5F94860D9960B18BB97535632BA17A5337853E31DA66834F55FE7
2B857F1BAEFFA3E9701F9B9FDC259AC83993308C88BF758D7CE140181B5B358A
90D104F806BB602567AABA0CEF5CB0EE96785104E3E0083C3FF18E2BD236670F
2FF42F367D187B8DD96447F6D0750839ABC6E5B40128BE82EFC97923365CD6B8
AC674B19174887DEC6EE6C960BE1EE885E21133FB544A116B62F845A4801086E
D6DDA59B572C4B6D83F301AB8561CEF94BE8C1FFE2C3725EF38EF8038EF989C0
EFB233C1940BED73C8AADD4312990163D87F2D64356958A6605A098E489B5CB0
BA1E42B77D128CDE86D041C231BB4667273135B68927C71261A0777A875DF259
4F4B77F0DC58D5F084227D8EFCB8792A7D8AE08B584BBF70274452DFD710B3A0
0DF603
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1000
%!FontType1-1.0: SFRM1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1000, tcrm1000, larm1000, lbrm1000, lcrm1000, rxrm1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-189 -321 1456 937}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B57DF626EBF73D2779A4A6B462AE6E5
19E5878939A488F2FE1094A76925CD24DAD4573AD3CF34E426708CF06E7EBFFC
BEF5595408106E2189F418D17AD510ED5B6A528E8902AA3A5F0FF52AE3DEAB07
32F06B63E28BB88229E046F4FF8A356BBDDE82DF2A197F2E26CA00D5594725A1
83A89A36487EAAE1AC312C929CDCE50722FA6C596C261E4D78D6C6ABF77F5CCE
0E410ED74287A0F201140F8D9674A7AC585D3CBC72CCB824F9E1CEBD08AEDB3A
A4015CADF471F7ABD9B0F0AF73A8274FD441BC1988A61799856E4770155341D6
516CD0E25BFA59B67AB7E0571DF3F5BA70AB52137D9E6A79EFADBE70CA05AC8D
991D0895C8FFC747FBC0E9A7212BAE6560B9E2B64FFCC58112E64A3B4CF7ECF7
595F51C34AD1342F5678FE1E62EC5A389CF04E82B5F832914B91F921F30A7E32
CA3919F57A2D9DE844CAAAC0DC751C255C9916595E8C9532E7A0A84A0AEFCACD
83EDE059FD06EEE9951473180B517F25F609F347DBA012AE9F004DC3C771777B
BE812787C3C50315D67254A384EB65F260943C6E16B2CDC64E15EEEDC67C5544
8ADE9981A6867405E46222CACCEF79F9DC8674268BBBE1EFEC2187A75FB7FBF8
CB2DB2134848DEA2F9CED443DCF561E7272B38F830871B2A5196A787924EF556
4B7E9093ADD414ACBC10147944D216D35007E738742FE10BFEA9C9A44B32958C
627546E24AE2CC98146A855899F1DE9E2C243D7F28ED966589D9CE396612AA26
9078E2173AC40F568487BDF1F53BEA5827D336164E2819B6AB69628F857FFC86
938F1742C86CEA1DBD68301B2C84B62A33C8268A6CCA6339F4AF79983D5172C8
A479CE8AB6CFE5FF69257E42AA6B4F5AF414608936BF5BA647138A1D721FA43D
1D5BC07CA7B7B4F81CECD8C39470B9A1A8866990838A8596254E9BE0AA158799
C8693B387D1A561C785568F015367A8CB272680B488ECE13872093FB64AD9FC5
5AB3C2B84306176F7AB5B17F4D73B66A519CB9D43F8166197D0F5988EA6E19FC
AF5097D67BF30E87D52A523953478E98F10A66B70E9B262C6907D2DD0926ECCA
D6D045475206CB2889ADD3236B93BA8CDF07076529679EF111D73E1B5BB4E67D
6BE2FFFA9D1EE483631466C29A9E5BDFFDC394A6DD05090D2AD76EC405B062C0
A63C847DECFCA7EB8C9544547AFBF3A84C5F9174B2FB78175773786794CB8BF8
74AAACC793769EAD5149144B93BC6265F469E3A118ED153CF2CC4B31745A01FF
A2B6EA8A841B3D5204460E0324A728A44706575506D08B278CB9D895318B86A2
52F8FCA0F5E5FAB4693453639318D5C02F31A161D538B2A2856AEF870FA38042
BF9AD232D663BE4CEC9D9A7E291447B91960D312DBBE9C97735B765865CE1F37
4905D4192E141233CD8FD1BAB44E9EFDF217856B33E3B857A5E9FAAA0FEB68CD
49F45BAD15222735399E9271263E09FC1493C960EB66639B4FDEE1046E845E5C
8F06FE63824D86E19365A6FBC83CC5B4606AE51EEFBD53D8605F508976C11406
E630C62B20570898CE57EF72C03E936F666762EC501537F65F5CAC2B89ADFF4E
0BC424BB943F10715FA959E9F319E7737B8908D28EB2D6CF6BBD036B37A19BDF
6A773E9555DA07C374F7755F3281803F22AB670A2D553D7CB133CFD21873F8CB
4A1C2D702C2275C4D3180812D91F5D81AF68052B92B362255D1C44A27ED377CB
612A8339108F0636CB02590F66F8B14C146845BAAFEFBFE4CF335AA573D2B9DB
FD935263022FE12D3D45BE71F028E601051F0857C29192867A15831F5034A3FF
831081270062B6B6B0B64029FC0122B3ADC7890F16D8A5685D58175EEE871708
6684BC2D4F757FD2D926E994E8E1EEAC4A14BE2829A55B68CFA4E2EDCAD61976
E7D3A90E401AB64F51DF590F682F24890DBCE037952AD69AF7357F95408FC983
6182135BD489B276580E5ADA5CFDE66638344880CC6F85A6E453112DF5FB249A
07431EAFE27409C5183133C083CB2E4949DC2D2D1ADE17E43F801555906372E8
7B007B8C9A43832B2899C898AED6EF6FD626F70582F9B1F79FE89BAC517ED725
DA0E460C5413CA5F809044555634A74681A192E2E22BAD052619A6D956CBC6C5
A5418D2B1578898052C66C8A8542BF1EF5EEAF0458BCFE820B44579092A4CADC
9A15C7C7B5CEDEA451F831A2E3D238EA59C3B5CFBC6677F11BA3ABF6FCE3B0D8
CA258B661FB6A99122B82E6DB9B5C63F50644ECB46C1915B6A7715D90BAD865B
291D4C286AAC333473EA1C46FDE77496A505DB0F3A64DDE6524A78204BD75A52
503CBBC097A9100D21325104D38302E0FA91517F04289EEB213DF0CDD241A5B1
A1B1FB7ECB0E71C1237B1F812154063EE2ABADA4E4A2A4851435943C5EEA16DB
4958E1EFDEBB3E382BC4E3AC5FE90D0E5A96AC740FB2BC843D96917A6A8852D5
B7C3BAF6C95FA301B8B561682F3D9A7E7BFCAE7C793CC44311290B09373A7694
DF7570E2CD662966EBD674F2CFC3892E2E5BA4BB7D31EFCD46CD7D374765AC7E
6D669CEDAA96D6B4817829E999206643B869260246FD78C82B860FF9CCF8588E
EE00F68A32D10F0E0703FA58FD013D9EAD2D88B01654F4C983F4C702ECDDA6D3
E10FFB63DDAE8346CD67C5A480E0DA825FF25FEDEF8FC4C3E129DE59ADF30352
8479B0D37A4E26CD6CC0EFA499B70B53E4C056DD53F8E257E4153E84CDB90F99
347E6C4A959298984C777D093078BB81618191B0C2B5DC722444A4FDED35FEFA
CCA51967BEB2771D9E8289E6A9C16030EBF4BD48245FD0D207995E8051972F26
315BA2F314DA2144FBECEC13A096DA2EF42AF598EB9149B3472B527070593E26
4BAAB6166EEAFEA964BE97FC41680B65512359C85D0FEB7FD431291F035FD5AB
341382BA19FFF3F800B2F2B8CB97CFE73A97BD6F9B93D940C272D098C01DB574
902B83396DEAFC24FFC366A0F300658FA9CF48470309EF0926149EAF81BF6168
52BF40CE8672A37BD8F6B6892450903FEE3F2CB8EFD9D9CA42EC26038DE347AD
B84D2B3927CB313D475015C2F169B785AB3BC7F46F7415CB70E2B9962D46E27E
3EB2BFC19B6E151EE943E301D9F0A0B58494405D4E5579B5A41C0A3D62CE990E
62666F649308F0153C1773C4B9A21962EBD0E9D5EDAAA3EC668CA5275403A02A
28FBD48EAC90FF55E4297031157184E1F24B85304F54925F4CD798C79220B7B3
04F5F744EAF5DB260D8D6229F9C77C6DD413BEDA2A09D70000B3BFDA433C6940
2363EFB09EBE73235E47D0640C977F1682D0F5DB8305CD2B0512E17B17F442DD
2CC497F560F13D3B3C307DDB572C5B61581CDBD5E2D5B3AC065B4DE49CD63D92
300E3FDCDECBB37F53DA675076CA51E132BC5ED05D483B928D150EB95329B5EB
47BCDED3D0C187D4ABBDBB758232B7EFE5703416A6D5868B60996E0E87A2DBD4
2A7B71C9F9A1E2EB3063FCA511E25AC0B17B4ADBA8E2F7D9EB2518895563B3A0
FE97C127E565455E11A0FF843C7CCBF8D73B13087EB2DA9ED2226DD665582EEB
ED81894089B4256F5A05E1C7A440DA8749FCF325A4DDEF7DA50E60B8E13F999A
8DC745DF4D0071374F26B7C557E8007B09B95103753BA53A7BA9D9FE3C533FA3
8D373D1C290FE5BB84BF79F23375DA27297A8909B63BBAD79D0B44AB32D6A5A4
A100BDA398EE06E7044D53414AF7E51B8ADF515DDFBCCB55C9C030430301EAEF
4E01D44EFD163D20D13F54F0F6F9BBCFE5096766260A3C12F300700FD1893285
8F29D9FCF4F9EDFF61EE9864621BB2A2986818A34CA1082C6BA588E78E365F57
B337C63394FDA7518D580B451C0F93D5C6B3B0A1C647C7A1E1486025BE30C7B2
9CE3364ABEC64BD036184D8E52B64024927ED391DF22E4E37E04CFC879DABD78
E652C2F309C2823130BDA375007F0B938357D4DC0524B6B45C2E8A6A4FE24F69
F4726DD73FFCC6D048C8C9DADF89F658AE0F68AE093CF80FA07373BA673CB9E4
1076C1971B846D7702328FF16F7ED7DAB37717AC930FC9BE78B7882FB88CDEDC
905828412D825D973C8A6B0A83E24D53F3CBEAB943DDF575D4877A1119850137
4C79CC89453D5F86F05A45B15B3E991C222A3AAA903BA2F075BFF94595588C28
D6ADDC9BB1C1156CBCDAE0DFD3D28735D22803E0FDC1E7ABA915976C99B380E6
062E55C5E2CBF3D19422B44DB16C7147B090EDCDDF3664B9A39ACC72FF67FFA5
F6BD109A546C14FE40ECB40DF7181104E45B6CD7AABD8D5CF0D71FAF511946BB
0240F44DF855A68357745F675B625DB0C0E0EEB02FB1BF673EE8BE7C034C1620
E9DE75407AEE74D4662B8F434A80BAA2CEF97B4F65DA9AF2B77378813BFBE08F
99345BFC21BF840FE7F70079334773198F1220EC691FA2A16BBBCF8AA54D8B20
8F973B30B14681571757EE2ADA6820AE61FD18EE54B94FF98D6287FCB41890F4
6B6ADAB12641F2AA81DF1E792D5A7ADE35009EB3337A4DEEC948584C8D5A0824
BB92A02791092F9389C435100BC08CBA45FF6C7F954E9D3CC543608DEF3A0DFE
83B57EDFA00EDA06D6961CC682212B91C3E7B01A48D2B0FF694E25C9B9CF49F1
E740009B6DF00C90AAEFD8C121444EE372B9A4348F5773BDB34522BA87EA55AA
790080A9BB34DED9049C7EC8E6901FDAD30F836A38CBEB163C653EE79C2F1579
4CB9F4EDD4D43B236ECDEF1A0FB2B6C0E4DB2807334C316F3B0E5D33184B46C3
BBE2D6F3E1134835F365A92845A304A65AD994C2B31CC6F51EF83CE7B0F078A4
114B957CC66F87A5F87648D8A25DB8858C0204B4F74FD037431CBBCE8CF9543D
DB2697B15151088234AA869876E0492600FA8EC8FCFD3FE4F4BD5FE64B1B3352
170FB896A21F6CC7A175FEABDA80CC1C184C912450CCFC02E2FDEAD12F122FAD
E9B1B32B40AFFAB6B59FFE37981189C429DB27FBFDB8CEE6071DE19E9357AD63
F6E73FFFC3BF466FDA6CD461E0FFDD170AF058E4A88E00BF9A6ED9CE67C618E3
42EDD3E8A1643925A919CDBEE9E91C51725CC9428806BF04D894FF62130D611C
8CE90614618D8D46D5D8F49295E95FCFBFD2C695707313F8BA3DA967ECE11695
BF4AC2EE65D463E02A6AC05B250302BE7CC4FD908EF3619DECCDAFA6422E6D5E
596D52296A8AF5E6CB5AB2A3FF9873718D1832F24DCBE949D7F09A9380F2300C
64ACCAEB8AA750E91BAFA52B4E07BAD15A22B013FDF3307FB09871F2D94EB733
08E3EE1C0E6113C1A0F8165D225CB39FC6027BCBD31D492DA10155F9C4585C69
BE839B7728FFDF0D51B2F874A2E248E953309F251D14CA462FB6429B70C9A49F
D48F52363C7D94EBBFC40FA5025BEA2CB0BB78FA92D59BC869EE885E16DA2E1F
DB18650BA5667801D97B2A9CADB9C6FE5306F1B1906948723B14D175945A3C89
DCB80E9C8AF309D1E1C446E5F32CE33089DFCC10E636A3ABDBB1991E4D9DE9ED
5767C311C5BD175DF935E5584F44FEF6EA01CB26040426FB5B2F0CC212018416
BF6C29BC51B4CD15F061EC94A7B673AAADAB4CAC4A694560C23B0E2DFE322EA5
27ADD604B3E76E22CFC5D73737E09161BC62E8CCDD2FF708C1A551628EF05A78
F03E841887B573C1E165BA8571A368F4F2D951A732B62D92014636836EED733D
4F8EA2E408C716213F9F08DFC297432F8E8FD690F7A9C20C8DE516D18010527F
4DEC36C39A00E79A4F868BF0E582CE58109B35E97C70B11C523B8422A46CA549
4FA17062F1F013C21D9A52D0849BE7D62644BDC929982E59B5D1E4C701F55F00
D5751BB0F0B7157F9CE16949FE28D3DD0C225D70044471257FB2FCCAD1D156FE
F121AFDEDF2364C45EFFAB4130E61EEEDA3DFF2E9F21E742A62844220A3F9572
E2A90BF144345D8BEF193FCAFCE5A676DB280E0041D12C0AF8F7AF0E606A892A
549D9872F089F845B9CEB226AA7B91461705456D80CF4535A435A85FFB6B177D
37103CF3F5D3866456521120EB03235FB9C69EE955D8FB17FDB11EDC2AA3765B
6BDE4348145BD76F8CBCB04C4E1699F8703CBC338DEA90CCD4EF93EFBF521827
4F42A9F8CC178C0EF4F2964CF570AEA1F61176E5ECC2A0BD0EA85D9C7B241BF9
B39145CF2956D98239588E6778F8D57D937E6154FB3209A8F665ABBA035AC141
7ED52DEF772D8D481B143FF92C26476268534D8BF987BEE08267DB701BB94B4F
D5E8A00EBD672EBA1843B8284794F9DC98EF926BE781B72384681013A2AB8EE4
213CF00969B3D22D9CDB1E64E737AF47A894E83C6FA0F2BF7A0AA24B019B9310
A9000BA8FEC14358D2D4AE9039EDBF9CA91F15452E8A374652DD390A384EAD19
0CB950D0E91D2737ADDD01EA411DAB24C9F2237D5BDD90502AA0950B763F1C58
8E150EF466D40B69FBCAC15CF57E47DDE6A33C0A15BA2467633824C802A8F5F3
B582D83648B2F0FC09296926EF7BA32755ACFCBF77BB4C4FB26D2249AECC25DA
D4032A8CBCDF482F71DC6698C1D5E7538098DE0F035EF43360E849EC8013C5C1
40E306763B3CF62F8D188F20809BB3D7B7D2BDFBAAD699C74AC16305389F1101
250D9C7C138EE1D7B60D8132B4D368064BBC7E3E3FBF8B186BB9E3F6C85E86E4
2EE8F1E5E97097A7815233163562A54144C0F234795273BEF944AC81EAF70C49
3018B862FCB9522C38E22A553E4D2252D9EEC7DDFEB8A57F05DF767CAA1AF01D
FD8ABEE459FF49DFDECE3F75D7B6653DA44C4875F7887F839A59169BF060AF51
642A8F54725D530FD73BF0DA1F8A8C01D0852A8251BE5671A12702A5B81A3266
22C31D8B7BCB9D1187146D9BF3B0FF9F1BACAB3201A0271DA66DC33627FFFB98
237D8A88F0E9AF05FCF285CF917098743A935E3F0EA994DC152E588250247893
637369C7729F5A4CBAD8D78B04A896706965E71016AFE4CD49A71C7040400D82
1194B4FBA7884337FE0417DA2D04D6C0101E25E1AC57CFF06833B6118C983784
CA0A2A4AF5D01E846A13BF6241784D731FAA629437BFEFE10816C98F6C3B9A4D
6E64926EC29D5786AC356DCB3BB34C9D419A70A37861526A2D2AEA28075E1690
E46D1454887A09511EAC7B9273A0137ADA6FDFD1CA40AA4A31B3CDCC0E424CB1
C2B4F825D7F6A9AEF22560A56BA1D8874F38BA2148B769A36CB84D7E9FDBB5B9
83BEC15AC45C83A79EC371BAB5C4C2CB7A0C255D9C085B593B67BADBBF2E83B5
CB17DA3756A2E8BAC52BC58468BE779D08E020782F55E907D237A8F545110A39
2CB82049664B01DFBB9E8883E8D3BE7061280CCF4F8A74B712615F4472E316DA
64B14005995AAB5EE59F8A4DD6925CB7B334108FD922C9F50F77B237D5781070
B4E1312979EC47AE8198D8529212CD41E0CC1FF8053659BE46D2E650B4B4BE28
1A9AFAF88910A6C3C2D6EBBBD5813BB11DB584AB28882E3C7B1414FEBE8D2CB8
CAF6B440371065F40286D62E664D818DCDDD6A2ACFA422464CFF01F36329B1AD
E08C34A8B2909759022949EAAF4E98C3FF5EBFBDB922AC02FA8DCAB985DAEAA6
494AE58EBA775EA7B317E7B630C8C5D9DB3167E60D997AF64BB1721D931A2AA9
EDD644E1F3D065E8BD9739FD97F4DBF725068390689160A57BE6AB6FA6656A89
0DC8E3D1231374F8B233A71FA622150686742A06722096264722C4B7CB9EF164
0E1E4BDF9F7250D90FBD295196A7C90EF1F534A5AEBF45AB9E4CF7B3F00DDAAA
CAA0BCD9E8ACADA604AFA61AF0CD189A110E12EF6A99E70FF71F507560FEC3EA
EFD58AB927897A6AC1EDD55535898FD82ED504CD52A456862E66212F96F1D3BE
6F973C84F30850FED01BE3974D03A50105C5679C8DFDA2E48084B968A4AA7793
268BDFFA82527C15C8CD09CCAA4EBB64EA424047A066C4CE5E9770A4FC654F5D
C709A9B2FC14E3BDF0B45C30D0812C5FDBD9F110CEE18ECE3A8526C3819E9A62
EDFB53F14E7E4BAAE7346D4DD8BFEE79FE657C508B0076DF15201D0FDB58AC6D
73D7EAD0D146DFF1E58F4D217B727C428CBBE7C3D8596330893FBB2F175BD1C1
4A49A95B8DE1DAB44EBBC0C71E9FB231D72DEC8256A1AD11EE5C79A76A5E0EF9
7FCAEA0079C08824129D592215A261E2DB686DDE465212B3F1FE6A5A10F02CE2
3B8838D780C6C6C20EC0DAB0F6BAFE6B559FEF2E50E6E7E3968593B908CC73E8
0694A24A65B1434E2BF270693720F02A01A707CEF09E0010533BC14E56C29141
3C501F36A5E601EF88B9D63C0291AF8BF87CDACD9B75E4D59691C2AAFAC725E4
FB6E07D5C635E7BF835FFCACE711A8BE1AE06231CEEAFE722C3E78DF65418DB3
6D6A3AA28263154B6B34EF79D1C6DB84F0F04D7D461ECBA91EB426E81B759421
CFB49B1FA698571B1120F4E1280021B01C0CEFE18FF3A61799D44312D0653924
281F254FC8A135610C3E77C7D9F09452F544143B86F62BE70941CC751D0D0042
96DFF77444F752EA9759D337AA2382B329618C3B80B4ED3B0BECE87FD5175425
2D5664913D0765F6B5457CB040CAF1605074CAEB0AC002CA2D828014F3566E7E
CFF5DE9036520AC66BF2CDE756D3DE2C1DD7466A9B3014A5649C188E19CB578D
53850FA6A623848718D0DF45F19FBA00895D87D9745EA7B05D6DD98AA835A353
9824DF0EEE6DA14E2B9E1C74E667F1D7B9015E4C8B7FAA4CB7346CFFACB29AC7
A63035395B75562AC5D00FFE3CE7CDF39079646781C451885821C8EEE4462F49
CFE015E1FB85E9C7175512CDF9D31E0637912971F64F47C59CAAC7DA188B0CA7
E1798BC87422F32668DB89FD04F1F622D438B73B5BFCE58DA039FE815A687F71
909AC196CD2A10543D5654C0F3DFEC6476CD621FABBC89D529784BD875D383BE
5682D4F28A725E6339AE4C105C9D85DED3B1FAB51C452D5F272EDC9D84680C87
734AD832D8B0E953DFA96871D4C1A77C3E1F216F33D02958474AA95A6DCA9DEA
C79E6CC35CC07CE278A971F4AC9BD5F894006255F0F2AC4D26D57C33296B8F67
683015F04F6FF3B376E0349ED95F66B163D625EE441706FA90EC5C16ABC0DDC6
BC8357CA558CA5A62849A91817185E95A7C0F27BD2C09636F12759F20BAB4FE2
768F9ACA867186151CE25F559EDA4A9A860C3B979DE182871932BB7891C79F98
7169479C4682E6A5554C5411AB2DD68EAD8EAE284137C56A9F4A9DD1F2C09E3A
49797EC537E26CD192DC510AF8DDE935014E48E4AAA1B281B1352CAE291CE6E7
5258D9AA9A634B5BDA41444549B374A007B7F81DDF5DDE27133A2C441EE9F0B3
0DCEF2D45BB7B0ABFAEE0EA989D5E32C2B53A9BD5C6A1CE2F0216F9009E2E856
93C2015D39785A86AFFFA25D9BB6E42F242C60E15FE46FC08734FA8DADD21647
20276831B0A322FD7439737BD2D74C3C60130C03276017DF01B688391D5598D5
C1999132A9D11E741963EBF47302944B8E689AC32A93ED927EFB0E58249436A3
76E0D299CB72F1025EA32E245FB41A163ACF2F27729A8A5FE01CEBB8AFAE97BA
61587C8EA6D3E9E092640A5A42B10CB34B28FB5F6A563C0B2A1458C0FF846CAE
BA5FBEE789B157868D09BB261726ED4922B80AE4C107DB8AF8B86AA14CA697E7
976A1F8A5DEDBFE52B3902B95540C330299CD949F303B5B8D7727E138D7D0F0B
3352DC18A9E14590A24D228DDC915127B3FEE031C1F700D65D00492A43DFC191
D98475CE4A11679D4923598042B95AC5245A0270CD53E723707CFB515C77D784
90CE6B997D699E5EB82BB81530549DDCFC514DA0699643267D78C0831465581A
5FF98FEB82C16DDE509CC736A57C335D4762259F6598A92982A084E9C6940DC8
07571C66CBCFAA97BB1570AD58E4D342D8D464C94C6EB71D5311987CE12AC315
035AE55D2C4D4F12B5B8758C87D68C606D2B003CEAD01625937F7F067BFCD786
21BE2AEEDE19FD1F4D1634035FA6C24B02CE4BA837C7E0501B0E92A2A1E89FF6
126AFA4B901D1EA31B3CFA112EAF63301CE7731B0BC0030470E4D4BCFD500903
035C6DD069A47D00F55E9F16B8C50416C7F9CF2C65D4178CD686041177AE0EB1
0E7594766B0016A80F6CE267095F20EF0671C7B319E0AA374966A06C3F9047F9
C5D5ED324AFF021C1AD4D106EEB85412A31A27ADC6EEE73C3A02D169139346C8
9EE12A50937475729140022D651196BBDE507EC706372A3CB0669819BC0EA931
DA293B0EDB5820A1089D1EFAD7BE9460ECCFB206BA7469374F9D8102AA6EC7F0
5B65B3AF6282C9E4D2270E55FD357B319388E0E16B8E36BF32BB6400E5B35221
E4454E88BE45501127A6A10AC0EDF889E69E407E0E4EDC260F341DB3A536F835
52A930E5FDE15F633A8BBEE87D6A86D7BD053A5C813004BA89D16D4114F2D636
B626D286F95D97C51628150C0CC7AD70C7E7348BDDD9BADC5D8D10E3E3FDA0A4
BCFC487D0CF227BA3EE5EB69F699C12A5D5A5E60570DAEB614D51114037540E0
D730C97EF15B481A766DFB21A36E4C6E1A611D883DBBF22EB53BC8ECABC3DE47
89A2F0D00215A04F0BC5A5BCD11F6313488D30B9B5AB75FA91AC63CE9A2ABE8A
F75C28A74BF1A5F1D19AEAAFD6B038DB0E2BFEE9CB2712D3DFED47EB8F441C34
5A584BA5075EE3147C86B09092B5875517DA21F1213656CF35E7C196F2544861
6EBFF6F4AA21437F2415E5403CB175FD3334183C34B5BC82054E79EB274718A3
098FBD5050F10F1BD0186FCDF5042F09825D9D918F3BD37EA60FA8BB94458022
8AD7BAD884B8D528BEC85EDBE6B3FF7FB909F51A032A7464CB460F7E6FE08284
13009BD7E36DAD065A6869DD7CF99969AE5760000FA804D40DD47373B2F783B9
906D041F25266DAFE35A96FA3215DC98061BFA8DF9D17657CB990D7BE674118B
C8520F9AF6079886D67C88D2B2C32C494DFBAE49A624819A95488DD5A3CC69C7
6B192910FB4AE3A75A18CBB8DA781F32893D6574008A602E6D74CE017C70361F
4CA0CB8FA473EFCD8D1FA34314D031CBE64808E618E8D838FC5D7E05910C6966
F99490B2A9428BA48CC82AECC8517E9D8DC76ABE9A1B87D410C7F3D17CC18032
1635E8202B76888E3E7D504F122868779EB4AD7EFFDD05D4EF5C43BA89E207F0
9C21FCDC052282AE1778E24D3D19C9D40FC304CAC934D15F5484373DBD386D63
D8E34F92051E03B60A8DB8339ECA87C5F3898B654161C3C3EBB3655EE3F6DDD9
1C88D657D73E4B7D20A1C37C4E22615EE7B9C7247B2A5847871394541CE983B1
D4B6E40743070D2C16520ADF8956B1DFE92534163A965CA4B0D9FE1C9C06B18C
53B4E838B15C67D6F0945BE5B258F5723465DCFFC1B4F9F9189726876CAA8F13
F0EE5158677FDE95A26167DACBA95E2EC1E791FF298B4800F705FA7E2A16C0EA
35A3C42A1AD33B118362FE03268E70480174ADE77EBC7C9612CFCC2060B1415D
CC59C073B3CD39B0D0A1F46CB4DA993AA9BDF35B7B0F86FCBDF5B3F16F1AF287
072BCA544E5A535CA5BF25824F7B1C28A8FE5FFBADB2A9E695E3E7C9A622D747
A8EE6647696E9334B6EE5D0D6F49D45869D3121321BF3C7BB8441296F8C11795
184C9CCE98C5499E73A1BC2B1BB5652A867C60B09422A367E46B329F10813DA0
CE1F394B55413F68759067AABCA14F17A5909E5DA23B2846C17DD6E2D2C08B66
FCF41D02C7EF22396536A6B99C22B2014B8BCF94A2E70F314107ABFE41037EE7
9889AA84AC2CFF3C2CB5D34295078D084563AABA0045D422907D2F0570D0DE88
AB6F497C641FB78DFEFDB43E859A2986F0715D168C0DE8CC5D324478051F6DD1
EEED04351AB04308D8BC9DAF2CC838D15B5AF24D4D9EBEB2AC0CB38E3BFD4E63
CA440C48B5F23DD02B83352A92D6180374D8B63882894CB6E03B5CE7FFDE739E
425895E85446CC93169AA043DC9DC3A19719B6B0F2DAC9B6E740B77393BCD34A
B433C85CF87754C6F2A5E26F7440CAB36919BA41311F487F30883D4F9DEB15EC
D75987677A99A95EB7451D7786D83B69E0A83A5566168FCF2F88EEB5D5123CED
C98EE686B4A9955172491AE0E2CF7D447C1B6A40A3AE9C9AB76A32B2EE0DCCA8
99821B38A2837E183DBC11A562B579A3F59615BB28B04F50B5931E57E5ECBC05
3FB4D4E4DEB8DE9540581D0E9E9D312B1842D19530E3C0D286CD918A9EE2FE1D
CE8C3778F91E373E5D5C3D547E85627BDFBD753EDC62D4B534249B0DCE626A8C
0A625F4E297E80C8B6F1293846B4A743948AEDDFE8AD040687B8CAE372D82E32
FDADED6DE71B653E1B5F49E9CCC94275EDDB382EBFD33AB0C882E5C9698CBD8D
333184F11DAD76DE953BF1A2C1CFF4B367BA33EE6971F0392F0A415DA74DF242
AB71F8B983F081FE6B204CB34A51F00528A9792E6E77ACD8CACC3B67349975EA
E63C29E1DCAC8EE595617181E9E013EF039C6FD269276B8238E48FE6A382B0A6
106B4AF1FCB51DFBF33F122EF9D7EDE3A6D800710355C1F7F9454E755F8FCAC9
608C28C2BEFC4C71EE3645443688E53071F114D6F84210E65330BC3CA3C103C9
E1EB3FAAF4B3FAEE70E1977F712C6A611406AF9D9435A7C2C0F758E6FC496867
EF54174CD8169353C6A145DFE9752E4044B69CBEDCE1C779376FBF02FC2BD25B
9069BC12B3EB77C5B7BBC3E9242746084F2EB4D10FEE116FD3C20CD733BF53F0
3E8A676FD03B5D0BDE7221875C8323B9AA2320E3835209C358E7BDDE1DE94AF8
8EB9571BD59E2480B9D27F8BFEB512F79096949DEF0EA4534C9D3AD6B59CDBE8
B054CCE04072E826E0882D34CD92721384FC345EFBB9E135D0D1FBB0BCABD195
1617FA7F2A553C465B3E8114F9DBBF93B80A49BAF2936729D77B63121ECA987F
E852E37015A14591C4CE6E45B04DF1DBA8486AF6DCBA5F88339E5B3A59D5CB60
FCD85CA74A61F1C9DD3F1A6CF44D00B5FD95493FAA5607980879CBD1F0282F17
543807252A12A6B2CCD7E7CA01413F6DE95ED3C135F70A0F04FD7969167FE443
8C724EF9F4DC35E645D1FB0FAF44D1871469CF6BB0929741589770A4FCC2E2FD
ADB2E18296F262F6CC9F004FD2EAEAF8EEC710852A54A86C7C7B48B8D67B79F0
C3676393D1515905074CEA7A49F384CB97D4BF1B3C32FCF55666D55A9E2ED8B2
88120DED74969E6C484D885C0C9E5BB6809F1076FBF01769A01A53ABC54CDDA2
EBFC3F9D052C7758A6F920151B97AEAB6D3A0B3920BC6437A1265E65FCF1E047
354D5930EFA6110D47BE8A39D883239A1469140541ACD20A2B5635BD3CE86419
CA3A39F50CD4056725A0237446F2371EE2EC6DDE06A3E6FC2FA7518F9F846332
FD86B701B8F4E32E016D61B7048438512BCF771544C6377C7BBCF52BEE29A842
F79C13A69503B6C91BC8B55DCFE35979DBA6ACD6D857F40A9550E9A3F808E040
6CD2593E27AEBC3630015864D4A7A263E544EF59DCB0AAD8FF46E4C83DFC9596
BFC59AA922DA1E5C859409FEBE73257DE8959BD95546DBCDD762299ED93556D9
884B28D4E298A6F15DD0AF19538F3B47483D4278049E529D18E30C495BB9F145
AA8498B021353A1D9CC87E80012AD8D54A833D19A905F686EB067E804FC337D7
F6CB7A35B1E87E1EBB9BA01D168A9FCF5A2EE2B27DBC340A7FDABC26B5D05AC0
066358826098E180C01ED206C69E2D2D0EA4F377F72FC7AD810110E139744BAD
56B926CF8D227A618CE979AEA20291F01CE10FEBA0A8453F8D08806703F7DC3A
D40C4C50BEB4003A50A93D47C6A0292AF7E495B5E8B74F890EDC70A1A88DC4EC
5F432CA4115C8DE75537B1ABBC077CC35193D9D89E14BA1A491CE1CFE2F92348
83F8355B088C7D70C14B0A4DA04C3E228D17F56C66242677E8371A325FE85484
D675962D3701DCC4481C680B0C216DCE81E443FBB573657EAF95F54242EDCC6E
A28EF29CBA1086E248EEB02A9AE2723F18BD3F6689D3FE34D2DDC5E0A89CF088
95A9258500104A0F54856E78262EADB4783FAF64738C010C879B5DF2AB2C75AF
3F627D4D732D063B8BFABD79900DD0B361C8AC853B0AC32140C5A72F87F75615
D7768126BCD2D0A39550A05560EA3CAE52643E78D12ED3FFDABAF63D6C34F23E
F88EB95D1BD5E7D752B70DE88A0A754394D0CFF2C0F1587D67D00575A293226A
1C869868A24AB1D4C1C7BD12831318B67AFDF81B0F31F445172AA7CACBBC9FDE
66D6C83AA2E9D62B77559D2A689A435773591098E6983AA16300D383C5C500C7
F2490EF3E7B4C143C2B0AE41E89ACE54E22EF9C7275165A4EA69387E9C545A95
8C45B243429CCF33A01A10B281BE175049EE80B2817E82EE8478F7512C9EB5FE
03F6107766235AF5A4486330BA71F77694F2D75A9F03143A0EBC32C3FE2FA23A
37B6C98C04FE59A58F8D61A3284304C33E736176C0B10B21828079286D36B2AE
07CED3876AB6E6F1F31B193997BF814D29CDECD434116946813655355720B250
694790D7CC13947269C709E2C5F7EFDB94DA45DCC2F370FC1AA9DA9280E657D5
935BF29D05E77E04495AB2D1285F2EEA1716763AA30B002DC7958A0577C9FF9C
0665A3ABC872821C07A19721863508ECE9718D8C12C58669038AF89D95CE6958
08BDEE6B3589B382E96D95868BE144C8B694BBEF5BE90724DFB100EA14A82965
2A4BAC59E25E4739EF15753740E0AC3ADB3994784DB662C3A236EE86EDED4C0C
5DD7D4A5ACD0AD7EF8D135E6D9F2F03A7CB661ACD91BD522D423F6E8A2C21F94
839920BD6A2FE187130988D5125E777A8137E280407D03EAF5E49F4CC65C7B77
6001EA5C4548FE385DD71BBBD164B90D3A9074B4D8C0B02FF4707B30D4ED3CC6
9B7BBE6AC3CEF8602E5A7B5BCBF64CB9440D27E046981CDD174104F1BCB6CD84
D37C303DDA6FB6E4A54F08770C71D6B4B9AF21EFE23F51EB9EC044960AA3F36F
A598DC5FF02FF437E6C8C952032D0A941A04C063F5C742BE42E12B013D913DCC
BCAEBD6C6C932712E6AC9D5EC32A10F4790968139AAA242F02BC2ADB343BE79C
BAB0035CD1B418F711F9E33C3AAF1C191A4693C2D2340DCD58FBA35E88A0C828
4E7EC18091B71D431FC535044B9044C66FA223B00F79325891C54565692C6FBF
1FD92308DC410E4F08D31BE9E8506F6700BB65506735824610491C2ED15522E3
38FD65B6DA89A511B0B2B40B91C0E3DA4279F9B8D66B26DD60794CB341C920E8
3137DF5672DDC7E5567F2F41AE1BC4F29978991E9FDE58F70F5BD9745D13862D
6F63BD8F1A6DD2FD7043B4B230556833EC0337EDA5974F8B6A00AD796D7D8CBD
58C0B76492DE2B5E57191FF767F090ABF177DBBF50B32DFB9C9A0786F7E4BB99
288CEC31EB66DA2B38E0AEB718526447F2CCEFB117AC6493749075D0EEEFCB5D
739E6309AFDAF6E740C6EBF5D018E072C93755DC20D9183F9141F7E38D46509E
F419E01CA65C905E16BDC481464D868599B7652B5B809373F319EA309196B481
3AB808AB0F19723632C54844F5282B87289C70C1BD8D8EBA3354EDCABDF60A6E
69AB355F37A5E54074A6EC8DAFCBA12E66A26202CF97018A685F79945698490C
1476470B4DDBB304E597E3FD104AB132EAC5A70C011B45727022E9FFC58D47B2
1D76CBA8AA0F91DF6248F2D3921DC0142706785026EF6B48F3C83DE93415660A
CB88226DF2EE0B3F946C554E8E3BE8EFBEC07EFF5E78C057EF8133A0EA7CEC59
BA18C4244E4A1749A99DF30B1314AD587BFA4FFBA293D4256A2D1912C6FCD3E2
45B085CADB9ED389F1C0B683117CED486585BD4EFDE7DB062D79CE139F68709D
D4447350C3854464A81C69C250FD74D12F09F22D80DD34E421F389406782868E
674A6AB5F6BBE66DAEF1C9A3A0E28C2BCBA7021E02BEF732C658120225D32B24
14F522D5F2AFD00C79B7EA322108B98743EB7D43A124441F5E52D52B64E8E37D
3719AB5C0826CE6B4E70C38BFAB5FB86470CE72F6965F3E3514C316DB681FD29
1FA40CA6331D67EB7460E93641E485A1EB50E1BB995A62CECBE477FBEC6C43BA
6DBBF50732EF40AA7A5B810876E2A7D96D24B7BA2AC0C0BA441D21A2F8469E5F
45B44D4FA127027C6E19493F572FD20A0D8F793A1849B475346C5BDB3AF11039
4B9A639F15A440A4D06DE0DDA301900C1100984F185E997C51138278DF230507
CD2179500E79F82FF7AEC0371DDD6B0D65ABEC1BD59EBBD39EF3E48D01F567B6
687E2CD95E2B212A4694C0EC535254CCC976666C0DBAE677C88429B8E0FBE5B9
75552185516DEAF635286FCD2109A281D7D08E7DF435064AC17E0E637A06C23B
7E99AFDB72B79F262769095D70269CFADCD03872BCED4A89F36491D780FB32D3
5C02F3C90799EE8FD31F328786215EF766545A98DAA58B4D2F10F8F0B39A63BF
D65D461F1027B1327D3BA46B70E66610C2D181C49ADD07C91EDECB41FAA8F903
D3B0699BFBF3D416B1120E2A1274E05A413676422B2D25391C32230B84354A09
75E8DDCDF287564C299A482AA690B4F63B21FCFFD1AE0249D7B710D70C6D16BE
144F1083D31C9E3B35FE29BB4A9724A30983D773EC1347B12F8BE126F5F83E4B
A769C75C04106B25AE047513629A9796861A528A187ABC8C0BD9AC5E058F7B68
B76FC496F4C759DA4C29FAC6AA6AC5C102839F9AB75FE5EC51D1F2FD3FE3DE75
149A333C85B385BCE16CE86DD2B84B1E6E9EDE18629EADEB8860FCED73F8E640
14F0565C1DC16C6FB48F77A2AD3EE6C1F56C046E1D8AC9B74A896F9B7A5023A3
33FF03A5C61E6C26A9FAAE1BD756E04381DE6566DE8E36A2E0E443B9C3AE1054
3A105A1AA09AE13E772D088F74C94BC0521E7F61D2994F2E2CF13712726AE39D
9119D2468E7A279AD598AA8E572E459E5E3A4E1471FB219EFEFD642E4735B0E5
6F0D7B69410804ADC6F50846049A072A56965CBCA1F55A309A54413CE3764D60
3D0ADD3D3E26B6BCEBD0E0A6143F04F3374B422E421B1EA442C361EC50005915
0CDA554E24B211D155DD9C4C2FD09F5811711F7165799340B9A9D57683097119
1CD9EF2404012494B527D9854BF2CC36EDD424069B419B23B3CEB5CEDA53365A
A99FD44F56974B365966AF23BB5C1CA4ADB5FAEB48782F3B0E52D0B9162BD09A
DADC5E177121E33650F0F01F2BA4D311C12A9A62CF5E8E906A8254F9CDC05C9E
9AF844CC14633BD5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (urgent.dvi)
@start /Fa 136[40 1[40 1[40 40 2[40 40 40 40 40 1[40
40 2[40 40 2[40 3[40 1[40 1[40 11[40 4[40 6[40 18[40
46[{ TeXBase1Encoding ReEncodeFont }21 66.4179 /BeraSansMono-Roman
rf /Fb 138[40 40 1[40 3[40 6[40 1[40 66[40 34[{
 TeXBase1Encoding ReEncodeFont }7 66.4179 /BeraSansMono-Bold
rf /Fc 134[50 4[37 1[39 1[53 48 5[27 43[74 39[48 21[{
 T1Encoding ReEncodeFont }8 83.022 /SFBX1000 rf /Fd 134[44
3[46 32 33 33 1[46 42 46 69 23 1[25 23 46 1[25 37 46
37 46 42 68[46 28[{ T1Encoding ReEncodeFont }20 83.022
/SFRM1000 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 0 32 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 32 a 0 32 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 32 a 0 32
a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 32 a 0 TeXcolorgray 0 32 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 32 a 0 32 a
tx@Dict begin gsave CM STV CP newpath moveto 3.0 neg 0 rmoveto clip
setmatrix end
 0 32 a 0
802 2554 802 v 2554 32 a
currentpoint grestore moveto
 2554 32 a 845 61 a
tx@Dict begin  tx@NodeDict begin {6.8872 0.0 18.88428 9.44214 3.4436
} false /N@T-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 845 61 a
Fd(mail)1044 57 y Fc(\025)31 b(priorit)m(y=)p Fb("urgent")0
297 y
tx@Dict begin  tx@NodeDict begin {6.8872 0.0 20.3006 10.1503 3.4436
} false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 0 297 a Fd(from)84 268 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-0 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 84 268 a 12 533 a
tx@Dict begin  tx@NodeDict begin {10.8 3.90799 17.23203 8.61601 3.446
} false /N@T-0-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 12 533
a 32 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.90799 neg 13.43202 10.8 .5
Frame  gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial Fa(Me)84
505 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-0 /N@T-0-0-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 84 505 a 303 289 a
tx@Dict begin  tx@NodeDict begin {6.8872 1.94397 31.43677 15.71838
2.47162 } false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode
end  end
 303 289 a Fd(sub)5 b(ject)434
268 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-1 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 434 268 a 222 533 a
tx@Dict begin  tx@NodeDict begin {10.8 3.90799 50.94409 25.47205 3.446
} false /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 222 533 a 32 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.90799 neg 47.14409 10.8 .5
Frame  gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial Fa(Homeworks)434 505 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-1 /N@T-0-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 434 505
a 766 294 a
tx@Dict begin  tx@NodeDict begin {6.1493 0.0 8.88672 4.44336 3.07465
} false /N@T-0-2 16 {InitRnode } /NodeScale {} def NewNode end  end
 766 294 a Fd(to)803 268 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-2 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 803 268 a 712 533
a
tx@Dict begin  tx@NodeDict begin {10.8 3.90799 22.04803 11.02402 3.446
} false /N@T-0-2-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 712 533 a 31 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.90799 neg 18.24803 10.8 .5
Frame  gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
Fa(You)803 505 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-2 /N@T-0-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 803 505 a 1672 289 a
tx@Dict begin  tx@NodeDict begin {6.8872 1.94397 21.93909 10.96954
2.47162 } false /N@T-0-3 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1672 289 a Fd(b)r(o)r(dy)1763
268 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-3 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1763 268 a 961 534 a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 22.04803 11.02402 3.5 }
false /N@T-0-3-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 961 534 a 32 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 18.24803 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial 80 w Fa(A)1053 505 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-3 /N@T-0-3-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1053 505
a 1211 533 a
tx@Dict begin  tx@NodeDict begin {6.8872 0.0 41.10107 20.55054 3.4436
} false /N@T-0-3-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 1211 533 a Fd(de\034nition)1381 505 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-3 /N@T-0-3-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1381
505 a 1190 770 a
tx@Dict begin  tx@NodeDict begin {10.8 3.90799 46.12808 23.06404 3.446
} false /N@T-0-3-1-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1190 770 a 31 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.90799 neg 42.32808 10.8 .5
Frame  gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial Fa(deadline)1381 741 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-3-1 /N@T-0-3-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1381 741 a 1618 529
a
tx@Dict begin  tx@NodeDict begin {10.8 4.888 41.31207 20.65604 2.956
} false /N@T-0-3-2 16 {InitRnode } /NodeScale {} def NewNode end  end
 1618 529 a 32 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 4.888 neg 37.51207 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial
Fa(is[...])1790 505 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-3 /N@T-0-3-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1790 505 a 2028 525 a
tx@Dict begin  tx@NodeDict begin {6.8872 1.94397 39.5459 19.77295 2.47162
} false /N@T-0-3-3 16 {InitRnode } /NodeScale {} def NewNode end  end
 2028 525
a Fd(emphasis)2192 505 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-3 /N@T-0-3-3
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 2192 505 a 2000 770 a
tx@Dict begin  tx@NodeDict begin {10.8 3.90799 46.12808 23.06404 3.446
} false /N@T-0-3-3-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 2000 770
a 32 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.90799 neg 42.32808 10.8 .5
Frame  gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial Fa(homework)2192
741 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-3-3 /N@T-0-3-3-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 2192 741 a 2422 534 a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 12.41602 6.20801 3.5 } false
/N@T-0-3-4 16 {InitRnode } /NodeScale {} def NewNode end  end
 2422 534 a 32 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 8.61601 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial Fa(.)2474 505 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-3 /N@T-0-3-4
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 2474 505 a eop
end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 448 2880 a Fq(XML/A)m(ttributes)37 b(\(con)m(t\))589
2980 y Fr(It)30 b(is)g(p)s(ossible)g(to)h(attac)m(h)h(sev)m(eral)e
(attributes)i(to)e(a)h(giv)m(en)g(elemen)m(t,)h(lik)m(e)p
0 TeXcolorgray 0 TeXcolorgray 448 3154 a Fk(<mail)40
b Fh(priority="urgent")g(ack="yes")p Fk(>)528 3254 y(<from>Me</from>)
528 3354 y(<subject>Homeworks</subject>)528 3453 y(<to>You</to>)528
3553 y(<body>)528 3652 y(A)g(<definition>deadline</definition>)g(is)g
(a)g(due)g(date)f(for)h(your)448 3752 y(<emphasis>homework</emphasis>.)
528 3852 y(</body>)448 3951 y(</mail>)589 4139 y Fr(The)d(order)g(of)e
(the)i(attributes)g(matters.)58 b(An)m(y)36 b(elemen)m(t)i(can)f(ha)m
(v)m(e)g(attributes,)448 4252 y(including)32 b(empt)m(y)f(elemen)m(ts.)
448 4492 y Fq(XML/A)m(ttributes)37 b(\(con)m(t\))589
4605 y Fr(A)m(ttributes)29 b(are)e(considered)i(to)e(b)s(e)g(a)g(sp)s
(ecial)g(kind)h(of)f(no)s(de,)h(although)g(they)g(are)448
4718 y(not)j(often)g(represen)m(ted)h(as)e(suc)m(h)h(for)f(ro)s(om's)g
(sak)m(e.)p 0 TeXcolorgray 1920 5225 a(6)p 0 TeXcolorgray
eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 718 1057 a
@beginspecial 71 @llx 652 @lly 365 @urx 721 @ury 2940
@rwi @setspecial
%%BeginDocument: attr.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.994 Copyright 2014 Radical Eye Software
%%Title: attr.dvi
%%CreationDate: Wed Feb  4 15:57:02 2015
%%BoundingBox: 71 652 359 721
%%DocumentFonts: CMR10 CMBX10 CMTT10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E -o attr.ps attr.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2015.02.04:1557
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/05/15
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  0 0 moveto 1 0 rmoveto  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.06, 2014/05/19
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 876 2014-01-28 15:03:13Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMTT10
%!PS-AdobeFont-1.0: CMTT10 003.002
%%Title: CMTT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT10 known{/CMTT10 findfont dup/UniqueID known{dup
/UniqueID get 5000832 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT10 def
/FontBBox {-4 -233 537 696 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT10.) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 72 /H put
dup 77 /M put
dup 89 /Y put
dup 101 /e put
dup 103 /g put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E5ECEBA191DB82B3
7A69521B0C4D40495B5D9CE7A3AF33D17EE69979B82B715BAD8A5904C5DE0260
6C15950CCF6E188A0CDF841EB68E5A2F88253E382140F87C87E55C9EA93B8C89
14A36CDF630D6BE7CD36DBDCE22B21778E8648B97B7EC6742EB5114BDF0454B0
0EA7B1FE236C84C0E5308C871F67B973892890557AA12E00B2C20C71F516C397
3F3BBD14A1D0149CA064391056E45E9470FC7F6F556ABC82653B3C8049AB5CF4
BA83C8F2158C236B2FFD4208846013BAF4165E8BB8D334C8FF2E8D74AF5DAB2F
D44788869B08399421AAA900ECC6A2D594641C121660D4B5F512938994C18DD0
FCD9B008F68F0351D21ED735B2740CB1E0C1CCD25EB548C35B844601D98828DB
556F71D07E081A593FF12DAF83676492A0FFE16E95717A07082B43A966C1EE8F
8A59E1255E1705C43A23CF29A5E4A6547C93F1680A870EE7BAD8CF74D838CD5E
F806911D8FE4262ED8E7F5BC58B92C9C6D74F8AD45FBB021EC7E97393018B9DB
B1B84E7B243ADB05ADD3F1DB3692ADC5D47FEC7DF93080669E63281F1576B673
125EDF08016664BE73364F65389F7C3B66623AD1754ECBEF9E5CE6948D933787
A5674279ACB2EBECD3B4E6361419AB32028A27670C9F3E18B746A10B00AF6D77
4EC00E3BE521C02A99AE5BAA98F793EB1228952BE67934B91472E01AF7B816BC
56D7F19F631A1927846D800C107B1E9CBFF9D2DD513B4A8CE2E0DFD77B1ED178
E43FA7052765E9FAF89989D490D8FEF6C536EC0D4AE27A74F474B98DA9E6B92F
15E063DB260571979A5DE2423920CE1F59F56EB11E00E3BB9D466A8263E1E385
2014BEFDA8D1EA3EDA04BE32AEE6CD15C5C010A1DF7F705A2C0C18E87C8DCCE9
05D9163181CBA56C0FAC8C06A2990554C8E759D076B01BBEADE3B5FB8B551390
6C8E4A2A1C6E7D9C708614626F3770C0AB7DD2027469C77975C27576065862AD
04E5E50CEBE907E3E991FA0C627302C0E207B4D5992BEBAB5853AD1C0D271728
C76F40A79392ACCA7358F948AC65DC823CFDA59E1FF69CEBB6B7EC3CF21669E4
70D999508F9C49E2D9F8818CA53C977D93E15FBBBAF75B1E84F0BA62BCC4BAFA
4EEC82D804C8A8C0210F3E5E258BB1F6921AF02BA9861BAD5C3D5FC8CEFABA8A
A607E547B802096F7AEB09FBA99C83C9A494B94408DD607CA6561A6E6660C473
62CF8D35F31D052F6C6C8138A8E1430CBA7EA6973D6D510C1A06B3FBD79D9364
240C1A00272DA44B89A9FE8D5BF36DC1B5EBB4A78ADBE9C5EDB485F093D9517D
69E1AC9A8E6C9D7C324E3797CFEAD9A18E82E03F69B2CED7D5DDCD1A218BF2E2
ED2293AE999FE2A4B5213A10083EE0407BCF8007670B8C737EAB30311C868D84
121149ACB4A27F3ED6C0C181C98AAAF51B105F264B5672D7F745131ABAB5BEA4
0C9B43C0DD9116D6DC61F90BE72018F290D26D5E9D341055CAF09C9F45333CDB
D45B7954271767F638EEC499F7B53C2CC5774EA7A7F024C4CABFB93D9CB1856A
0C671A4ECA7C62EA5242648A84E7F3AFB9547A0AFC29593CFCE6D8B873A78157
D337CABD291431C0A2CE1F37E0CD7340567AC206FF98E4B5A6410F70F750451C
550EFB54AA259A1B236CA9CB730D2CEF125EC65D959441F7CC9768F777B44844
CC9842A307C72B740680ACBBF6AA35FA7A94825069BF7696ED81A371A9E5475A
9D997F2DFAD339AADF797F7E03E654234455AC3D17702A420EE0A597BA31BDE4
FEB8DBA7C61D311CC90441A620164DC22DC2D373973EF84CC553453AB1B3337F
7B39983B8DFFB3A9425F119B45C1CD37A76F905777B3154CA6200792F1759D06
E017890F4041A385F2238E3C48B6C8EE6F5258463FDBFF7AC762F6C4363926D6
50F004D473B7B7F73CA686B559C2885F1AA761653C727A77D73431E9D110E76A
2E55C68CD50F43997C9B2FC4710F8C8540909829E215678E63BB8363C4B8AF05
9986102BB36580D9CA95CD216B7C321822CB41B2E0422CD077F3B55E0246FDB2
44D5976F67296B5B0BE4B06F6E43535C21164E6C5089C3E9BA2D6B30888C57DE
49DC8D9D46C0D5EDC47ACF2C03B72DE3B69512508539019B759280BABEA12BC9
385308A0395C4CD33182A10A5A229743379C2075D82D8BFCE4A66E1AA087A091
8F5372684FA5037D1B92D50CD9CB4F50AD4F8EE7D51F1C9E63C721CB5B9BD011
6F0A8DD4FDCD2B008F223A1036D90F0F3B252487DE7898F9AFBB3A9D9CD49E0C
EF4ADAD5155A98D2125ED5A3D3907F67301649519419F33CD942E8DDEAC1BDA0
E90C431B198F646766A8FA9F8D1561B57E126EF604838C0C1966655CF31FB7EB
C8CCC434FC1C96046D38203E1791EC824A3D7AED85C029288D4608CA7668A2BE
484C99639F121845B22EEFCE0A3B808261921AA042AE19E641769E91277BEC29
4594082CCB3058F90FAC4A700A8A827ACA00FCF574ABC8EB7DBCECD97F2B22C0
0AA19E8739B81AF8C6F621D69B8E6F29BAE233FBA655A0AF5BDFD7F5C6B9167C
6BC7AB693D45EF2AD999F5DA3CEFA39BA48A17EE6D9F2C4DAB91AE3F0044DC3F
5D5506CE4675AA928B0092D6F173644F91295216D8BBB14CDDE0AD524A4D545C
1B5E284A3BF0396664081CFB4F186A84A0D24D61E82F4767C1E55A0642720CF3
909FA1AB8EAB78030B59BEA067DEDBD2F1D0340E790AB2777DB18248521934A8
BB38A58B7F633DEA4291B0D5D13E9A882C974697CC6D3B49E030C94EA29B5506
CC29C44D01B4751B453A46A9F6BF3BF135AE87A4CE232AF57B66578310DE41E0
2A6AC422117F1963C4D7CC306BD25A6E724E51921779F22F029733122E23E2F0
CB340008813ABB104380C80A492B3FC6D0BB07CB8D8409E9576891EF6E5C9D08
EB8320DFA31BAFFBD336D0C2BBC3D3B2D30368B9860768FC080D30569C7F7811
0EBEDA2962476113625EEB555490B8CE4C5F99D74ED10F738C61854CFF8B41C6
9402E56BE8856144A1A05D0B05F4CB7EF728B2F4F5A439F18C3B68CEFA41E59A
D8308ADC92EC1289DC84CF48D2CDEFF509A145BF945E1E00D552D329EBD2A7C4
21D58082CC8FA790E981F4AC8EAB99950678FD3A7DA3DF13778681B208DD71A0
7C3CBD0664B37C9EDC6B601D79A2C51FB54DAEE849F93209793849104E722D3F
52DFAF7047EEEDDFE744787A5801E4AC2C3D58EC5DDC15FCEE03990C53B0C57A
FC54F125A04C8E4A0ADAA725808C587E7DAFB9F784FA2875689979D316DC22BD
AA36B306A1ABCF907B63C6476737B746099973CAEA8C1E2C5C41F27E0F7DE8D7
F0D942E34E92F43FE902653D4D2EBB6F3B9F7928B1550A82AF234D45D028F429
067652BD3D391BF423AE72B9CB1E8D91E898161BE3A7849D456A861A2046711E
E934DC59442AE7D81661CE8EF727D8D7DDC0270E937E40F896AEAE6171661431
C1025C53172F9D366834BA0054FBFD84503FBAE328B6FDEA180F8EA35B1DA937
5CC3B8F00C206908C2FFFFA6A7AC6915D15EA44BDCF29E2BFCFD4A849535F19B
0D307C696BE8205C7D84B9C77F02EF27D911056EDBB4080E4D3ED72788666CAD
CD91B0ECE27A177DB23320A7FA9C31408B4D02D2A4B1CC6DDE1A6CAC3D8EC1EC
2226EC98E51046D1EC26FA20EE62D24747D83CF4941DCE5CCEEC0DBE387149CD
E05B19FFCAFC0D117F9A3E60DCD4C815228D98EF95EB559AD0ACC0D50FFDF714
56C3C812EA5ADBB013BBD956A7C4CC0ED7D3E25D5C9AF5E626F18297F75D4957
F5B0B33379114B903FE98BCF35C3FF76FEE1D9AEB711F2962276531F7380EE3F
E368720E0292A170A15C5539B1FC7BB954EE2624B504CB8C805B8D31AC38307F
0513606F09211AE64DAC447693B2A0AD15E9A64C34F5A911ECD0ABCA90E9791D
67C6BD202B0858EF96E7722305B8AC02B01AB1706CC6AE875A8DDD15EE349046
EAA65005E7866B506EDFB7A5A2AFD5C9E9DCC821A79EE9C1EA2C7BBA32A40BC7
CEC26DB1AC473C8C3960ACEC581B37D6569E8C8C42950BAB7930B65E1570E3F8
9A7FA719F1DCFDA45A3BF2AAB32C9A93BA3552608A61C623DE59BCB346E87EF5
9CF025A87803161221C5C1C6F6B3403712C76E9D755C7BD68D7F2DC03C14CDF0
C1BBED1D648B905B4B17037B7263C1EA7A7F06FAAC4E09E08483A8D714C19861
327CD9C32DDF850302DD6DDE24912D00C22ECDF3CDFB18FA831A41A7488EC203
F564CFE30D506F0829A96D35A7E09C3DCD107D589B627A15B55C5D6649126BEC
60B88C55ECCBB4E680265D9EAB4CE22965D3B1AF759B01ACB0D0E6C92B6B4EFD
A81E6A648708979487FC591CF09631310D46891423F4EC159A73E30D8DD147A4
B0EACF6D45D18CD16CEB8176F03ABCB41F2234747B9733C8FAF34AE5D43D3BA5
0CE0FACFC9B087F84FB6C68678BC6E76022B1526D6E5B3A48EC1A110BD75F45F
1C4DC6D39F254976453F57DF873B7D635C80C42026DE020E5BAFE0DA0D54D1E1
DC634D2621BA184347E5252F645A6A1DB7657C48124186F0E4C644077457C24D
55753C651A9A7B6349867641464B515B821349C795A645420508673B93750D0C
7A3B33EB1F09782033742AE8F3A23FC02284E6C03818FADD1731361542E3FA3E
75B8D52B668C3E18A4AE967D0FC3157083D952AFB8144D549E69EAAC51C279C5
E5D88A0D9D53013DFFB4352A1598FF84DCDE6FA32FC377306B9B92C0F96EE149
8CD55E7B2445B86CCA7A547FA732D52D59025129FD8C6333AC0DF4F0CFF6287E
F2036D5DBBB3B91B92F12FEBE0B61A313A4DB5A9CF0BB3DDB781A56FEBFFACCB
8CB9D1D3DBDBC4CB6AAE6769E470582403CB920630221B68BCB625CD4605FA8F
D3D5B7A1A28D15E44B38E92E906C138E72C15B86F64C38E23BF0440052A8C914
54397F49DBED99D0AF7CEA3B0A05FF37C2D7EAE1412567E6776333237C31E3C0
49949EC8BFD6E0F6446CE2D4DCD2C1524A288818CC5D159BF8463A847AE4A2B9
CC8C58F822804B81B13BF4F2DEB6229C4F51F093075581791D02C36A13B855A0
34900AA7CD4F1A797652656FE3A8425A38F421C4CC0ACA1CDD44FA6B31219276
1CDE1CD63D6A58CE705CB56CCA1260F9B86E989019071563A9B4C274A87558CA
6EF1660D574EDA276801F0057740E2C3B80D253D697736484D892CE1AB128B8A
DECD69712F5E70E895FBAA927E8194D792A04AB6CE205E04E38A433BBB793FB4
E8BBC4279D58A223C6673D909D6AFECD246E66A52F4CB35E5931D24C828489BD
4ECAF621A220D8ECF702BEB01C4FC7510197D3F6D15321EC87175ADBA6434ECD
2B5A306E91375CAD22CD94301763E4A8B981472890422C5488FCD523C9CB17DC
ED22FBF12D5F7525D0D6BCFE8CE85B0DFB1D6F989C267FFBA0A996D309E4A934
3DB54A9D29C88B9D55D7300DA3D46419256C5A07A2A529A8DE8BD1727281F5FE
97033D861E0531B14E811378EC1AF1CC7EE9BA2B07D935843D3053F673979F8C
FAFD59D555B56CE338F606747238B22BD62C42BB7238FEA335678D474A643570
A9E7B4970E8C541CE9DBC7BF70ED7BA33639D6744A18379455029E934C95E2EF
639C4848CE9A0879B51649FAB023A71782444B451F92A34CB8A124270CCF86D4
D18EEF5C1D2B2A29012613851C49F50702D63BACF95EE2AB4D72B375E0A62615
E0991E130A67ECBA9E05329B740708F1CB148724C3A6E5E3AEC1F88EBCA398D2
1CA8827C977D72734310233176D1AE26C55CF2CEACA62223315C28FCF6305C7E
A22414D4739A059F552F1F9372CCCA5FED4F9AC987942848EB498900269511F3
F408CBEA0659B954F5F1B18AE4FB270213646F9B28AE4439D2BA2D3E0AAAA780
5E530E4EFC8A060EB979E12191044509DA0C14397AFF949E12DC970658D5EAF5
4EA963F5BC1407A32F3837CA6A24B7F3D60EB8E6222B702E25ED903F9D21AE50
664A095009BDEAF4B78DAF94E5A55D48366CABF07791A1684B2F54EA69070844
4F031AF8DF416C2D3679F8BA038B0DC9DD0400CA6B34667BCBBC07E62C1668A8
35A8C57C9048A7227E672E89681B54D662079A189A9E96A3CA96D8DD10189B04
1DA49BA2729F1CA585B1BD5C467295285D52E47CA904235A1A3E48EFAE9EB6F6
01374125CE89D53C276858668CF45D2F092DDCAA52418E0BB94C2B8266B4D88A
5D911507BB1DDA3D8F6E7C14A91CA11AE799EC42E993098E18CADA70BD2A1D82
2C39326C6E3F9E84CD9758B9AE43D79BF99E6A0CD713E95B3D9B7DB90D127DE0
DAFEBF850CAAACBD860B5DEF2082F1ADA64B44B193C4A1417BE221FDCA36456C
BE5934C8CE3ED55AE3A11697C2D682B7D0F72D48976451D205783BE25DBD2507
39C14FFB4BB828DFD187104F38A7F11D5F0698C11E8C1D4F107CACE573FDC4B1
C56FDAE47024D6FD16A2FEABB434CA320300FC4B6C1B6CA08F76C60B7C08A665
99F404DBA8A2A1EB18EF6750E4EC186E31561A3F080BA6562967546715859481
7BA782940F5C5D06626D6F6A412CA7C13820EC7C1DF23E15E5829F698CF617BE
D940523E4EE4ADECEC48C24297DBAD528BA1DCE7AC335A1D15D55415B108EFC8
6D45030D27B3EA63B2B4CD771DBE66AE0218ABB1153D4B7482289D1313CEF184
5C960B1E3C3C953912CC6F4521D1E15636C1545EEE457EFB87B88C9E43CC2F38
6BC4BC96969F4FF28ABB06F4454C01CEF1B6DC538F1E832FC1666D977E5A881B
F72F1B4C7DD4BE167A5535F1163A0706F9A0B26400178DF8A128FB5EBE6A7B81
E478AD183EC06622B591337B9F1872AAEA356F4FC67EE767B34CB5A4D90702D9
39FB846947F4096FB3DCF16EC81455164783BA0B5D723060DAFF411B68307E81
7BEA1D9A47A5AA3D648E618C83C60F060029E6EC4D46B045FA7415BAB2AD0AA5
ED9C729C24136F6AF61E6409C0B5CA760B16225641E268A68CFB8260BBEAFC77
6626EBD97195E77CAB425CFB0096D805D9EE699E41680D095AE9FA10122A7882
2F00F495C9EB2102DF0D3E61833BC0A2E468C5CF7AB430FDB7C0BE3DF2C0D230
1580BAA25D65F599378D873165482A1FBB224AEA89C6BCCFBDBA42AE1C5DCF41
06969F585CD3B737D1388D6359F5468D88FCD2279BDB270F6A858FB7D2ABDEFE
5EE8FB79FA437F8F50237B92C307B73B0DCB808D07A9C3255CB9B3B17039CE5A
288103D05D132863FB522A02CEE3839EF9AF7F07D99732F0B8B384745369FB3E
7901166478F4A16076A1504C5E98D17408494E270BBF4470ED12B4332422679F
759F1D93984D7E506D16950DB6C2682FE1379EFFA6F6C95DD71F6E55BE3EF6AF
E0CB25388EEB436E6527806FC75484133F6E561DEB979D5C1FFEFDAF2A6D964E
03BAE0BD593C2992AD84569C81050F7A793C5263E50C2F50B98C4CC703EAE17A
6AEDAACE312DAFAF5278D125B6EFC5587484F61DAFF46B87B7C9B1EEDECA4859
314A9A9E2248467DE1E54D90DD671660B9040B3E0DD982260822177EFD757266
74A16C83A7FB168016A320D3DF3BD7726F1F4EC90EE5DFE810C96B099FD4368D
906AE4699049EFD37E8EF058D4B97BF71106445AADD4FC6E90615A0066823A36
673B8DE32322BBE861AE251226B4385AB28703B3A1F1BDB19C63B7B4970CE006
B2B4F4712D1AE15D95EE92B36A8CA51E29A9E54C316EB717DF445BD1A455E6F0
72AD540B306955B57675722E616E6075ECFF58FBACC2E1E6A60DB177C37546FF
0F7ED181F719AA57A9D2B7FCCE08F06041CB1AF30804A3CC34C06C6FBA8AED58
221577DFD3DD3B72EEC9C1B38F420DE5F118058C4CED71241433FEA5650A3F2F
C652BC22248C030713E6208B0243824F27494AB410CCC9D2D480917571300552
57815D95644A1B3FADB03DB2896A8BB113136337F88C41B0FEEE956668BAFC9B
EB325ECE7BA227DE03A9FA9242F6C6CB2F55A12A0B8BBADA91A7C1C1A1878975
82877753359D72B23BFC19B9068B03663A126AD84F84BBCB56CAFA473DD79345
95BD999C3A31DA2377FC5BF660106C2D4029B943D7E93FD4820BB64383828603
A74671D9C53731DDDBFA0A0B019593BF22319C02486B37FBCF420622EB34B4E3
DD2D6BD77D42D4F1646CD21FF22D64499E6F41E0452EA291471F6AE12C9B18AE
169BFE95EDB9C23A24EF78D329E59D6881F3F7FFEB68D9E086CD68696053E906
60DD35750A318B04CE4D3983CE3679E2524F1346CBA9E958A86DB67F479D8DB8
BD291EEDEC8689A98633C9302B82763D3C8145F36FF2BD15F19CBCE5F93259A6
C4A8CAD50B9186BF1462D51B82405E2DF06FD014028473D4A9BAD6B23814FBD7
BDE0558439D97094864E520391D337A6EA74FCED7961513691DC7010505C0F1C
9BDDF1747CA2F97096DC073C781162B11E7949C57EF2F4E1BD09F0CD7CAB7C63
DC721E0041BB3DDC3172FEA590380549E139F63151EBB25D9B1B174C5549F4B3
73D0C8429FC71B910C12D26D2489C6239BA362E5A3B9F67D361BF47CE98DA0B0
5BE6C356CB33BD7B26C60E59C9710FD0AEAAC88DB2E6D5109FDE9B405E97ED95
27026AFD8C09AA5C00E72B2A64F2F989A6D7AD7C875D0E0E051ACBDA0E9AAA9C
14A35280EAFE1FCB0328B9C4263703BD6BCB8F8D742049016DBF2EBE83E22175
FD33DE7F7281F8AA0BB145CE7E1F6D6055DCBF374AB4D6560B31C5BEE19B2C7C
3BD37B2B6300A083E7D1A12507FB481111D146FD2B6C69375E9E0B1B272B51BB
1829FEDEA2A48E4AC4B42F81DB73914A1F2AF8786E14A6C637964050BB229B28
B167355EE6F84A6ED6F6C0C6A0354592101A5A71706506E71315B27AA869B9E2
AEF564F2710EBCB7705A43DA4915B9ABACD63CAB3F1145725092F2F7F3C15296
DDB13A3D8F34A84DD42541141BEA8788C7F45F09194096200A65571E7C455D56
202343329F3C1A1D113CB87969B0370D0DDB829296DCB0F3791803732D18A9B4
687989E55BAAA158678817EEA27BB3C3E44EEECB46BAB3F7AD7840224B6F6FB7
4E2AF292CE5721CBA24721E4DF7EF63891D98E4EA24E48C2250ED19804608CC6
5AF016A23530626089978C8B14807D539C91F3FD1AFB8E35446EDAB21346AF2F
EA9981BEB773AB17B7DB1F34B3065E7DF448EF7C84CEB9EB82497EE7AF00BC8D
A24BAD85B931031D4916CBCB9AC7798E7A0AFA8DB1C0F3D5B711277788118931
9696D2B0B62635F8105FD9039DFAE90751B0752F65B4AD06777E01005BF25356
51B24F82D416E35ABDB0A3341082C0383256CB36700FBA1FCB5723D66953BD9D
0A313F39A6A3DAAD30374C078CBD60E4512240D64E725B774718D8325FC31ABF
C950508790F5A5BDD2DDC8AC150F6BA142E6C2CE6352A964659C86241FE188A2
B151D9D4FBA51E499C40A741F3FD02785FC4D548C25FD7C208C9EA3F52227E98
5040915B38A5F4DA3E1D4ECD4DD8B065AFF12C04F2719F7941EC91235F1FFDBE
C4EAA24AE07846C3B838068395AB4925C6A60E77A37D5DF5E032B5250E265C8A
8833130566DCF9937540E7664325ED428625D789FF8B6AF914A6B0E8A8454FBF
C25DE35B795BD2C570846FD6FDBE38E6E0CAE3BA06E443F0C4623B9815B8D3B0
937A62922FC625AE3CF4A4D2C34A38B9F346E5FBC1EC6ED3A7A0E86C8EB19DA9
03FE24988EBA6FC48DFDA481D252F9E2781F25A1CC327844E50E7B6771311093
20F68F07642289DFADB5710893373029D379D730FA17EDC57D407C381E6D01B4
7BEEA9E885689A0CDA1352A76032DF5CFADB42D376234C95111BABBBEDB83B50
455BEACD6EE8FBBA864F8F60F3A04FDF78BC053A65AE1FF5AA3B688FB3956BDB
DE2B424148C240618F25A58F8493FECF18F26BEE31EFB896C593F8580E2E0713
95EF9CAC30822D4A766B77AC9A0BA28813A37BE2B3731731A4379AC573D700B9
DDF3C781E15C91AD9BBAA154016A8F9713B3A6A2DC0B97C201B7F37B1C214875
FFA74224210AE75110A404433422AB94BD154B5989A564B903ED79389FC813BF
010C61173C9AC72D7488B7ACF4E7CABA713A8C3F39346F91568267D076EE4223
1A85126BCC4F7874A3CF0733EDCC62984AAB3D0040D33E6CBE366583E07E9DDF
8CBA2DB0A4009AA68933B45B45FE587CBF3BDBECDF932C36B2279FED21821626
D7601D36318DA1C6A15E9B8116791380E7F307677F9C2210E3C3D50DC9FD4CD6
4DE3DEBCB8DC9D18C5B3500E4769F9015628999062FEF74425735F3E57F2A5CA
A4F07C1637C4B440CDBFFE6FA7BC9BA01B7C61815B2A9AA6CBE4392D127D5249
6200378FA7E139AE385CCDA039D6392410B24FE98AF61A09FB4C9DAEE69D70D0
10C792BB0B48495F1B61C8EC65E25CFE03C6AB8AA3580EB3B95B855FCA02C0EB
0C06B35D98D68D7D14F3B9324DAFAD2380813AB11AFC7F1ED4DFE5EAEEC2C698
45EE911C4409F77AADAB84EBDF347A40FA5577100E860A87DBF9D1128894A1E7
4C97591BF405B5ABC3E8964648489BB48F2F72678052092DB3E0063C937B15D6
AC881E5611C2B4730B5997975E7277B1010DC5CEBFB513C93411E23E996A0D04
28041EF70DA78AF3C4598EE76DDB64A162439348C7DCDFAF3A1F3F333B2BCB01
2746205EC3BA815C37C8C00DC039CFC68480AC6039B23F35C99943E342168577
568CEFC5F504B3E1F900E1ABD0CF9BCC9129DB3853B8F11EFC3E87EAEAF0A9CB
4508405A7B5689734CAE5EAC789FB941C7455250F87626DD37D185CA821B5E0E
BB43D7868B329BFA090C4CFF3F1DE7F9A78D66BFA6C1F2241735D3484F274CB6
E4C91F55ED7362033456C54B6D69CFF950270D08F420F2704E4B4B3345A3F4B9
19A5955837811405ACB15F4DD47721E35DA54981E49540B1A1E050A8C99B96C4
DB4FB337C471C4E97E2BE90D59E00CCD0AD41A02A449A4005D07137922B4B095
2505FC380E749C75D0295FCA8085BA1CB28561DAEFF233F1DA230BB635FF1893
C0F910B1A8B8B42C1B0A34361A1D78E6FE6B369EF54B3744FC1A5D2021279191
70FF8EBAC9396171EBF32396554B4A53420C4AF6E9DEFECE660B6C766ED8BEB5
989175467386251D45D27360592598D99E1302008EDB254D14664E5CF5289160
E34FA55678BDA869EA5248792444303BE3EAB627B68D3A24D1FCB3B7C7789C62
4377F4488277A73FB83C8645262B0C146AFC808B0A2BD54442D961560293FAB0
EACF82843C227CE26575B754EB360BDADB50A26D8BC111B7E6C1CDED286BA2B3
697A7ACBA0260AA1A516EFA7221B73D4668E4F8B14307B7908EAFC6DD43D09B8
B7B67E6908A7215DF5B39FB97E5D23FB0C7E0E98FC38ECAD652E6D5E754B9A75
FE0D87A7E0F622C7BEC83FAF78B82419867E7980790ACD45795EB69AEB0FE480
4EBCE0D7643439B1437614A35EADA81A6FC5CC19428E8320C023D5B418C71E4F
925DB2218196BC2D006D0C7052DE0C29AD572CADCD350867388CC628DB8B05E6
BFF7758A29FC6A170E045B8AB41FA101741743FFB490EBE38395605E92B540EB
1533CD164079D63173BA5E6C71B61900F9A3E0DFCD69FAC4020E4916CC3C8AA2
52FCFC89796DBB1EFF7C3D9F3C7720E6FAE958A3558E05772C9658BBCD0D7820
3D624986C1A9EA65E42D972855F7736B877E39AD825F115A2AED73F04E330F1E
2677776A9C99361AD7174444875DF9D4B1D6A918349B69307F61CED8EDA1CF4B
856E0247344FE5113DD7A3F4D339A90831D49AAF84E0590829B6B43665A16142
31A9D379043FFBE666899D960F3A66E5C78774427395989ED3F131FC1AF9B340
570ABAA5918337EEF2072EF930B8878BDA828F93412DE405BFD70FD0099419E9
4B1E36F9334C1F3D0E87B5F14DBB23669799F9FDC5821F43C1C7A9BEC4B1E807
80C6A6F26532BDD8523F7FACDC4732B86156ED8455AA16371F9FA98012CAACCD
04E0350CB56B0222DC87127B43CBF040F8179F4DFAB7857D425B2D0A92941845
8B4A9DB84B0F374D93576DA60486AD3F12E532CFA812532FE23AE6E0ABB3519B
EE97EF0D2868AD8341E8BFFFE810F076D007DF1CA0183920E9FCAECF018E6A0A
540A86D5838D249A444F36B3B23C44ADEE32A62CB7A8324795FF32931EE1CF48
039A55E0C57EC7837AB0D8512B222A5ADFB2F02EBECDC069CF8574E12B5B6A8D
0339B8FF9A4977F78B856CA3E670E6D13BC51CA14493B13F3D13704623DFEADC
FB52302589988E2C2BF0047E5AC7371C3C82F004A7E747C631083F6889E12F22
09B1D0EF0FAD8C56232A240859A33EA16969A064EE20DA84EC89BC8BF02DCE73
1B0F27381109D2D1FC97D967F7B25C754A21C930BF37AD8BEA8E13F18081632C
E96A2AC98D76EB90FDDF6D49F9B5F4B25BA03B691B1C3D1F573438C2E383A924
EC3F3E005B1C2152186EB19CEEEE3ADB55D83D954358EB6715D2EF7FD172675F
A7B6D3AC669ADDCCDECF0B35F1B153827FD603A8B3EE15AC844BA583AE3595FE
F429F23ADBCB0900E83EF52FE81CEBD02F20904725D912DFC0685D1CA5944080
BE6245069076BED1B30E98437060C5CB853012A0655B2611F40941A18776D8D3
277491964529EFAFFEFC8DB4F3023E53883DC4C7097E4A029563A7E722BF893D
8661430C59BECD99617713CF7F5DB6BFC213337F4BF83D8057CF70C040C60824
B335BA82C37B0E4725C3C5C95D5CC65BADCAC434C21C25502B102FAC7BB0729C
594EC00E4355863D5AAC253275B6CFA3F058BBF61F6343CF78C40DE96175EB17
3948EFAF6D0CB31BD2D3E13F026546B6A8BD9D9858193BC19AFCBCE6E0BA2642
F14A651CFF24D1799AD4826A4D4DF24C2C2936E85C954630B3D4D56B7DCA88DE
702A0DFEDF6228354398E48463E07C8D4F8F97314A3749687C69AD4E25A93F37
EA8612A143086BD9640D3072DADB5D82DE5E4AC2450382BAEDF8BC85C7537BE4
D29E2AC47CAACE4A5ABDBBCF07D54A9E7800F5CA9D62127553EEA77972C7D15D
D34125F6DF1A558D39432520A0001C411FA789E269A438C2B89562D3A9CB1831
970C7FDC7E8A99DA7D031442B07A54FEF8B2C0843FA20CBFE600387C23F18FCA
541EC589E3B8B3A85C43E34D5F3F52E7F1147FAD9130413A00427DCD6FE2A06F
E7CA7E8EDEAE729FA7BF54D5415E74A488E5975C40F6C3B34D80A585A7D96B03
9C96958A637FED961C78CB559CE21D3302DB8039F661F72C75F2371B343924D1
99A2AB7C7FCB584499C25A3448887948FF0F022B43EF5AAAE11351951D662534
6DB7C1ECEDC91B88EDD31978E4E5AFF14521BCB4F6ED936674091E0C0DC31797
F1C935F32F168E047552F1FC56AAB2CB675F2AE052274AB7EB08A74056205BA5
A0B84485DFD7B4AF0BF0BB29E6A2DC3F289B2021F2225C44CCA0FB880FA321F3
1755DB3F61959EC9AD45A522ED5ECA2D653B4EB39C64B8D8F9749D7378F5D176
73D5375EDD2E559146DA2346DBFA3456F543334BA07A7428A88CAA730EFD1B66
DFB2378DB2DA822EFBE5137B983B1522ED1EEF8A77F063E368AA3F9CE42E4A1F
8C970E04139CAD2135FC90232B0A5A5EED4C8BD8EBA3BB9919F19508E97AA9B9
3E045EFEA3AEF05F9F0632
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 64 /at put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158168EE7932A2C9B7D7F820F327E4E36BF77D9D52F6CB8D69F1DA4C1DD1B6
646102107E5A6A7A6376AF4D646B3FCEE2C56EA5C8F822C5119642D7007672A5
DAF6F2D7D9F0C07E34D5594796765CBD5ECA4B65710166ADE5F16BE5F1C87748
1778614D372B043761D928D66FE1E2E484B8F621CA13423041FEE0B2198B6448
7D69075828A9A2D2C6C42CAB48A5E603E505000DC827A77589E9E467DD282E7B
19A3F0E4A1776137E6691C11ABFC0AE10F482C923F1DB8750517916D0CF98021
D62D14A9F93720FD8DF8130C7DB20FB32DEC251E549F1B1D6AD6711CEB82F98B
CE0ED3270530AED19349F2D24F25DF6072DB248D2216E1E57345254F8BD456F4
E2CD6D7E245B8498C6492CC61C89BDB6F166ADE6F53CBB05AD9C525C88B8E36A
D2CC04B812272BFA29CAC86A2CD6B10932B8C7DC93EC3ADFD8907C156B201BBE
82449691EC4A586C56374FD0A802437C8A24D4FCAE8C0C2997F1D2B8599AE175
94FFEADEE93F321F2CFF4F8A57077CF5501F09366FE54C9C44906B1BF7EC6920
AB9150DBBCA28B7C102B16D34D59ABBFFE9829704872B40D989D1E50808268FE
1114333EB0B8DB380446FF52B0253E8B04021A77721BBEA6A2F3E16D26DBAD38
0DC127CE49BA20D428A5A3242B22C914122894BBF64EDF8B2CEFE6F911B29394
A90B5FF3D87E0B12408E02D8BF42519E15DEE788BAF813EC0AE3E510D5B535D3

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA2776F927C4FD3E0920790A57DAEA08C5B
169A3E2309DA6BA8684A5D1DEE81415796E13DCF906FCDADB092047831B16841
B250CD148557D72DD7E683BF122B38E2C4F614E59B395D1D9823D7D5F126D932
14B50A37FCA7120F8F3A8E42134F1B6B0C248D56F247AA68FB941839F600F61C
14247EFF780BBA3E5198D37CED44DEEC3455048FC451BCDB48DC414AE5293A60
5A59877D6DFD21EAD729CDB7B378CEDD34262B37A194EDD0BDB24AA42649375B
491DC08F6B03DFEB517B2FC125DA9373AFAA94F4E4BC09510A73E079F4ABDD8F
93529E898B13ABCDE7322323B3A2A02A0BF388E89B4F529A66FA22D38E3EE342
54475A1989BFB7A119CF95750D5A18BB4FA9CDA30DB6F1AEF8AE8448BBC999C9
FD0D74DE9A17A3153617F07CACE92977B68FB5A1CFB29FD42494D5D2B9C1ED81
2F3CCEEC1BC079E837DDBB57C7E351F9925FB96349F8D9786D8E6FF03E9C4C1E
67DB235577B68003BA14073E2702296B284F803259283005D97035874D2B9AFD
4D3F29B4B1E6EDE30DDB9C68348CC174A091791FA74520C8614D4FB1125CBD6F
B9367559D715ED057FDF6DAAC180C7FA5CCEFD0C5878A91B20D4919792C03CA9
3AFC986C34C08358A3E85F241E3F8F815FCE7C8E07C2A4258E17D65823264049
3803D47C96A2745580EDC957AC4291730A840A2BADA50A28342A2B7093A3F731
4F4F656E974389E133C53F89D5DD6407BB98B211697941A927BC72A0956FA78E
2DC624B2C253F76778698BD1510D509244AB0465D4261E3AC31D77C4F755096B
50C9CD8103CFF51490796CF35B02E38BFB36CBF2E6D0D7304344C4523C369946
C3BAD318835D4707E90A0340BB7B6ABEBE9EF7E7FF54D1784AB514FAC0FDC8DE
B8DE95405811AB2F25F2391855929C2C452295D698C749DF868A962183036CEE
800D650FE2CD2E74C038665ECA680B173A27305874D4AEC967043DBCF9275F02
7D92A0AC4C098A5DA5939BFA435FE56060110EA1E9FF2BCC9C5E93964FD43199
8133454CF0A83B9946D6D2235AE3F345BEFA7D935A4FD76D7A9CF080E34D1983
6FAB58E2C907D4EC63F6431805A40EF837884510B1A8C7CF8F290F034784C81D
9FA6ED8ACCFF15B6ADA1CD0460591326B7A7A5FE7216BCE081EF42F0846374B5
0FF9F6FB8025D2DBEE17991FF93E7C09B55135397A77ECB051306B93C58A2598
60E294DF402A6F07B1FD679025022AFFEC2938452C72400B45A1A49F1DA9113A
BA4C4528E9DAB7F86323AE99A1932A49161F10A37FF2A4D56FAF883DB84F209D
76982A6131DE0B316E898A4C039154A90CA72991180F9EEA6E061E374D933FC3
EEC3A7A74C3F7A644397AB0E6E6FBC763397F77A67AC6BED95E5B204745C7348
8963490237F1891E70B91DE6319AEE208FA4BB4FFD701F911C28C635BA05034C
DB16A0D8D0709817DEF1984B2A07ED6A2570E297DAC4E203DD310887CAFFAE3D
BAB20452E4F4939FB12FD026E09A854470AF69D7264F7CA0638BC22042A7ACFC
EFE995FB7193935C675588D573450D75E0C853808E0E4622BC4FCA678FF6D5A1
99877F8F885D7EA660B092BD35D377D5E4F26BD524066A4A6ADE0F0F68271083
A92B4CBE809375826B436EEB03A7FA0C06885C53FA91C96212C16C1A798BC9C8
A243A6890CE85708302CC1587D2C48AA89062A791DBA7A9477D252DE0B76C531
672A4A8133C7156404AA533533A8B7C6FA9EAB5700A7F5DDAD62666C1392DB1C
74E802D1EE377E0CD8E0070F845D6ADAE9C01123EFAC57E90CED8990EBFBA1A0
944A1AED1901A4B4F3E62A97FC9686AEA33CBBC14A90191909AFAEA9BDCE7871
DFFC3E3A90589A8FC997026C3E21A2A96DFC49E9E51668B6F8363FD659036151
78CC9EBDB53403624894EEF9B605BC284E63B33DFF87C2D74E330F2A98859ECE
079E12D9A79FE6FD19ABBC9079A174C6AF59E146AF252B716B7D0F87823E33FD
56FD076CE810E65653239A0CC120B8E3F22CE2C0394C2F64C03AE9AEBBE0D0D3
F672B511952C6188864473D55BA693EB684CA43EC57BE6552010705ED42A0895
FA20820B07838E0D553E7E848A93FE1030865F7367A4887CC8CCDF267BE0AAEE
9C44C92E7CCA6B73E4D7927E4A59BB4D268C8E1699DAD5ADE2E20E3B174BD44F
F08CE791ABC08D01256B7CED1ED930244D8AE9FFF3F592BB136F41F11AFA8CC9
86D796C909DB6C5BF98E83DA93D05D9AF0A0DBD5145F0FAB274EA7A998893672
C3DEF7A7C353135CF2F50C3B857A413AB89751911BFD063FE071A2DC7981C826
878F7F08156920B7AD241AB7C0649ACE5CC03E255F0719A8F00553D8283829E6
F13A8BA831CCF5233AD8F26CF6173CB95EE29288F1DBF9A25B6D22FDFC5C4A95
BFA22D36D08F90A965C7707608D027B4FB3152D0220689B31933D20964580CE8
869EC398533F705E5010748DF70F7213002E5CEDD4066C77C176DFDF7A300E7D
BA63F051A19C88D083858C10A0A214317A29F0E926A1042B12A5A7E4CD3B517D
FE1339E4C6CE8676D6D41E7D115D84844299F577D83A9FE34FE4FAB54449EBD7
A849BE24D02AFF56B18DE5291CD328BED10A9B2A38795EA8B72598828BF88EF4
FF60B1C59E4118C4CD499B20534DB8189C2F31721890AA19B363E3FE8507FFE6
254A979DC5B8CAAE9DC6A960D12995838CFBBFE298B9C488A7583BF28FFD11DA
270D4AD28DBF991398241892453F5050DEA499563C86523C08C94F417CA51932
C361A3E43BE637B70B9966664E12EF4707F6B10831F5B38B66F88795A54D463A
07EAA36050E7E05468466DCD0393B2E5BB2497BD9B953699B115E29685AE8427
0C14F801EE0A58892C1708475900D2398306CC7D40B614FAD3B167A72440659B
CE68457E47444D12E3099D08F9FD56897BD4A6AC5AB2950B032A118CAAEF07EC
997F7C6FAE7E683DF32F12A3353AEF3EB31FDB34D6112890D7CCD72A1EB53C37
4AF8CFD63825370F299FF6DEEA7975BBCCDB71E1249029D3B50BC15F205ECA4A
D4668BFA073AAB9A0CEF8CD066CF54ED5E3235CA6EE3E17CA208450468258082
D6400021C593C2475286560F13B4FD088BD3BE37C68340564EF54CF5148975BB
EDDB76C699B6F9BFFEC81DAB7584D24400671CDB29E1D5167D0E2E82D385830E
AF3992E4D8C863BA71FD08582418F93AE4F1EF661692E37443B69E00A741EC50
87878B5E21214B74B124B5FE36BC5D810EBE1984408FE3160E3A68C5B2F1EA99
6FE71CF6D1E942BA939028270BD9114698BBFA84B046BE42C4C3B7CD9CEBF720
442AA36EF603E744CEBEBD55DD7C4163D3BD2B455AC2068A689886BF7951C91C
04D374AFFC815145D057831E7A79E0724AF4B5FB5B3309A4B36CA6CB9A4F1136
9A62791C64459E12E5EDEFDD95801AA9A29E72C1E086AD76C17DABFAE5FEF4FD
A4CA8200482DCE31A26B6C892BC1C5E6B9E85FC8F0B015ABD6E46364C8107B34
C9599D05A18086BAA934046276B43A0547B1CFBE1E6A72B7E90B23655FBBFC1B
8BECDAA44BAD51D16CCAB1C77DD732248930D88F4ACD122C080ED2C142BDA97E
33484674C9ED2EE4E72622525178A365DB471422304E09B970F1DA2700B4F74D
E2EA63E7EE6E48C93C1E39A7FBC9799B801FA05BD0C7796197EC9C0DA3480633
900B52BC5403358B8C8EFE202E3F43C310102FBDD1D081F24B7D89337D44F1D5
CB498C5A8F88B8F6E37D6D89420ABCD99F05705ED499CDB2604275A4E55A9CCF
0E949E8302896E648C186FF127F24347E7AC7533A13C112EE0047A6F32C2F87E
20CB5A988C6E6CCB9D65BB89AD6877E5821627B7B15D28165D7A92FCCDDB94C0
1BF2DB82716C17DE50B25F7149310718A7F54A73AF09D4877115351A5E65B9FE
B85C7D698316376B95D3169602BC41364BE5E462B4E214ACD4FE4FF7113AC27C
2368BE201C1F349DC381AE31D07EBE79A16E969A3110CEEB49670B5FDE8AB22B
1F1065D4F3E8332EE0FE9687A5CCD26090608280B67C56E01078AB418FBB21C8
06C6AB23607FF9D214418B06367AB66E6B7DCC566D0D71DABB6FB0B7D7F24B6B
BB4E849B3B675E9FC18622BEC54514886B19A0E879874B1169F6CAD3D4D8096F
80B49CA3444C571A059217621DF14A4CDB0FB2515A48F3DBCADD200E1A7A750C
62BEFD8C271F5044A07EEDF421EE943136063F078928E9FC04C68FEDC2D24C80
CA88FF3A6F6F7E1FB8D42EB3807F80C4AA8760AB427A685DBD758AA5DBCE22A6
9A52DE75B1E6C19B9C0E19848561F6AEE18F0C433F5340BFA11A106FDA69CE67
ED83827FB8EDDCE6C96D8B3178CCFF5E901E388E3763CEC70D39CC85FE788969
66AE54FD1BA80DA5E6AD35B96CD7786E301AFB95566766FA05F0EE35EC0A79A0
97DCC9CC2D57C1850231968DB38696E7125201CD95BAD055F507EDF56E380EF2
B29F99C41374648A950B4F6962D1F63BA24E872BEFA89905091CB28B2C188DC8
58F72B322D3C7DA09DC7F040AF69026670FCA4987F93E9FFC2486AD904D41024
12D317BD83A0B94A509AD471A92840FD5319956CB990C17BBA7A590382651F2C
4892E758DDC0F690AD2F85C668FD753CE14138C03FCC99A394E728111BF3B5E9
32617566116D25D34FB6F6F1DB1970EB5AF74F1700B4B54D503DE0AB632D57D1
2E01EF3C8E03DF0FC6F4C0258CD26E5B9EF345BF040B65F659C7607281B39C1C
70FE61EFBF2E2AE5DDC829DB85DEB38D0299868FC6636D15DE6AD75288106B77
DF40B7E9E8820170D12165C65AB1D670744531C9D0037C0A7877557203D5A8F7
B26B1A05BE09037BC95A05A3473F060BDAA63D852E24C276D124050A6D6062CD
8DB654A4CE504E01810F0E18141BCEC830D39AC1C6234A44235B0766AE0475BF
0139533A3981585DC65531418731BDF7E86CA04CF9ABDE6138B9DB6F83FE5571
93E62AF90FF024F7DD14C5CBF0774F806BF14ED768B080D38DB3B6C00992C255
C383062A975298DDE5A05C5005C2348C8EE110201581344C344A2B985C67FB81
96BDC0E91F92EC0D0F2059643A5D810547F018C5EBE769D8848EC2D650F77959
D5919815A926D7A60791A444412369D06C43683771518EA80E03369CED613079
08C439D888D12A973077FFFA099E902BDDA476308EAE0825FC1531AADA0D12C4
2F64C742027DF2BE18D2CB74C9320BB6CC15E49E99E1BD936DE516E02EC00A02
2B19924CB89C998063971D7F26866F5F6EC9BC2AC872D3ACF6FDD120F50D86DF
7445E82B058B669761EB9221A488511F69052B851D63D787818842EE41B04F76
F6B3831EF0CC2684F56C1C811512E2F6CDB84F07CAE3FCC12139E043B9938103
DC4FEEF4D25E769E4E96836089D6B61F1C21AD9D278150AC19B98E9B0A19207A
F01B9E6C94C2835270FEA4428F496A710FF36A002EF97CCA0673818A1840BDCA
34CED6570008A4416B9F1FEB572D25CD52BF50BAEA04E96DC81FC81EF8AE58C3
F8846FC70BD09332718F9877EC94A65607BA64DB6DFD06A2D179FFE8805D9993
34FAF891C2FEB1136F81120249B74191470B5F4977C58F6577F3794FB39D064B
15AFFD6B8C789402472C60F019C157F486A5FC35C7E233942FB7D9829D2B4FF2
02F79AAA866A8A7C28877CEB9C25A194F33CCF5844B7785360985DB2EFD00FC0
D0D37D794268C1EC4F80AFE537153D7DE68AD8E99200454B26DFDDE1DB9D106F
405E5E0A06BE9740A4CD8654C8C6F3F087FC66BEECC72F0AD37A417925AFAA4C
6AEA5AD13C354B0B1B7EAE30201CEAB82804B61AFF4B9AA8B6B0472A856D027F
1E8379C7A5658595D577EEC59D1ED9F530965D499997F40B0B4269E18C1E54F6
CDE11361C15E334358F7918E48981F69DF6A55DC8A4D57E359723338552C9C8B
762646F23AEA0BDB81374865DDED73791B7CA1B18DFF32B4AF6C96F583E2E055
7A7B4FE85D651A0F4B40DFFC82DE6B1A0984F1D7F475BB6F98815007DC5D8F85
90EE5672B7A6EA3FB757AA11ACAED7FC1E772307B6B60B989D9A197917C84D3B
635D9C48BAF572CA0B626D0A5CB11416BB44E7804D8DAD87F2680C5D9D0EB931
F233E25230595EACD26360B3D80D7C632901B26A418A150FE6086CA147B6C382
466D6A122E9399A7D4FA5A1513AAD090174C511EB16E1594A93E489194B0EE88
EB31ED11A4CD5CD38152C576858005D12C975C9A95D4152FA2E9DBF8E2637B39
276E193C64E948333E310F2CE32C60102BE0372D2B70EEC76B6A75C7150E0EB8
1AB8D44BD70E7AE13E369EC83C1E0C0DB60F25934B2420E7CC309C8C69F6BE35
8CDBCE8EF76ECF670212EB2E7FE36A8551B12E7761E6D557EAFD5ABBE58FB6E6
92092E75DA03FFC03BBE27CD61ED29311FB601E89D15AF5287CE2CA695582925
25F33245A8ED26BA7F8779DB4C71DB7DE99106E297CBBDA062B36E3AAE89DA70
60CF2BB7F05E73ADBB7DCD8E49BDD2520B7D2B0403160EB91C00436E173DF337
FDF359B14B958A4D4D40C21D764340A799E5C6C2C4C9A6BF69A7FB53D2DB7F47
3F24B27A6C4F62FC09AFFE7E14ABBF39BFF865F3CB4699F5ACDF6C817C689441
BBB3FC3D217A81CCF3C980E6747F4B9A9CD9EF7278A8215BFABBE4ACF08151DD
2F631DDFA451E6F36E87DFF15551E61A16D84BE3CE98D0E6F4A18F2B8D35F9F4
8DE6619C8FD76776CE493D95395773CFD4DB59587697FB0DBB17917CECF3969A
31EC6ED8FA00A1B25F2BC121CF38F3F8828F3C47BF00F358C3B1ABA3EF9D0A23
11796DB7E62FAE1F35FC26FB803838CB9D813ABC5B47D41132607594F25F469A
3DCC48EB980A108BED178E682411C0121ACE905DFCD30B85E7C7CD166DE07DF0
2A1B30E57B7B039CC3581E3604B17354E11238D3A8182FB058CF951EFE452513
806AC9F9B4A4556F56979772F5F97CA524D24761BE03E021D8C7CF3C5E8D187E
0AF45B0C8653887FEE95166F22EDE610AB262E78C0A53B6242CDFED2D5864B27
C7B59F6EFF26FE96C24BDBB4862DB295672C2B1CB540CDA8BB36E7942D17565D
F6D6F07BF268C311C36D9798A4995B77EB52C20FF8CFC12B9D6F74A7E2752C35
7EF7921B952DFFA30B0E4339F3D360C3727419578FF48F529B4594411023C4F9
1178A360186D9BEC213E203922B4633A5056EFE1EDDF11490315FFA212F1024C
D8E90552ABF5B59B55F63D2187084BB866257F6E66DBAA0DE2198BEF92534777
91D96E193E1615648B89EE5E795B8FEB3BCC22E3F6C34BFFCC3DC0A05EC0FB51
05E6F9EB944EE559F45B64AD52FD1D88B0BF7404A24825DD1FB6603093398364
675257F65BFD1F46F8C8DB869EF881AEC9EF83667229FEECADDB0080356E74FD
1BA46285B37018D5F3AB5598A7B375C38BF327E1C02FEC31CF582D0A3F6FFDBB
29E879977D42EC5E50A0A556F44A4FA5AFC5412730F600FAF11C1D4C2FC0004F
25330A9028949B6B83B3B7D9311BB9C8833C4395534C2BC37EAAEC0BE76A64D0
A4FF9255E436E811AF1AFC3341D3EE112E96962167EA7EBCA4320885B8E8B105
F7AAFC63B693A571DD28C2DCB03539D20E47A30B80314F1AF844EF931E07D3E1
F1F33C299AF86C2BA933BE7F93547F922343ADC7116A5327EEA30DA392B185E6
62334C0E5B131443D761E6F6E0E9A4BB87CCDD22B3D1ED516D177160AD40B680
714459A6B584E6F6410DF254D12C9F45DD90A4389A2C0F183A78396BA80B2E65
79945C526F18916580AA107ABE079EADDC0D67ADA0947F4F93B27B0DC60A185E
DEB2D265
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (attr.dvi)
@start /Fa 134[44 1[44 1[44 44 44 44 2[44 44 44 1[44
3[44 1[44 11[44 11[44 4[44 72[{}15 83.022 /CMTT10 rf
/Fb 191[74 64[{}1 83.022 /CMBX10 rf /Fc 134[44 3[46 32
33 33 1[46 42 1[69 23 44 25 23 2[25 37 46 37 46 42 3[23
1[23 44[23 46[{}21 83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 0 29 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 29 a 0 29 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 29 a 0 29
a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 29 a 0 TeXcolorgray 0 29 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 29 a 0 29 a
tx@Dict begin gsave CM STV CP newpath moveto 3.0 neg 0 rmoveto clip
setmatrix end
 0 29 a 0
562 2386 562 v 2386 29 a
currentpoint grestore moveto
 2386 29 a 1142 58 a
tx@Dict begin  tx@NodeDict begin {6.94444 0.0 18.88895 9.44447 3.47221
} false /N@T-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 1142 58
a Fc(mail)0 286 y
tx@Dict begin  tx@NodeDict begin {6.94444 1.94444 41.77782 20.8889
2.5 } false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 0 286 a Fb(@)p Fc(priorit)n(y)173 265
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-0 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 173 265 a 43 515 a
tx@Dict begin  tx@NodeDict begin {5.53575 2.22223 31.49973 15.74986
1.65675 } false /N@T-0-0-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 43 515 a Fa(urgent)173 501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-0 /N@T-0-0-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 173
501 a 524 294 a
tx@Dict begin  tx@NodeDict begin {6.94444 0.0 23.38887 11.69443 3.47221
} false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 524 294 a Fb(@)p Fc(ac)n(k)621 265 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-1 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end

621 265 a 556 510 a
tx@Dict begin  tx@NodeDict begin {4.30554 2.22223 15.74986 7.87492
1.04166 } false /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 556 510 a Fa(yes)621 501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-1 /N@T-0-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 621 501
a 895 294 a
tx@Dict begin  tx@NodeDict begin {6.94444 0.0 20.30562 10.1528 3.47221
} false /N@T-0-2 16 {InitRnode } /NodeScale {} def NewNode end  end
 895 294 a Fc(from)980 265 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-2 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 980 265 a 905
530 a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 18.09991 9.04996 3.5 } false
/N@T-0-2-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 905 530 a 31 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 14.29991 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial
Fa(Me)980 501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-2 /N@T-0-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 980 501 a 1329 286 a
tx@Dict begin  tx@NodeDict begin {6.94444 1.94444 31.44449 15.72224
2.5 } false /N@T-0-3 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1329 286 a Fc(sub)5
b(ject)1460 265 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-3 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1460 265 a 1232 530 a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 54.8496 27.42479 3.5 } false
/N@T-0-3-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 1232 530 a 31
w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 51.04959 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial Fa(Homeworks)1460
501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-3 /N@T-0-3-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1460 501 a 1925 291 a
tx@Dict begin  tx@NodeDict begin {6.15079 0.0 8.88892 4.44446 3.0754
} false /N@T-0-4 16 {InitRnode } /NodeScale {} def NewNode end  end
 1925 291 a Fc(to)1961 265
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-4 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1961 265 a 1864 530 a
tx@Dict begin  tx@NodeDict begin {10.8 3.8 23.34987 11.67493 3.5 }
false /N@T-0-4-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 1864 530 a 32 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  0.4 true 3.8 neg 3.8 neg 19.54987 10.8 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial Fa(You)1961 501 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-4 /N@T-0-4-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1961 501 a
2175 286 a
tx@Dict begin  tx@NodeDict begin {6.94444 1.94444 21.94453 10.97226
2.5 } false /N@T-0-5 16 {InitRnode } /NodeScale {} def NewNode end
 end
 2175 286 a Fc(b)r(o)r(dy)2267 265 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-5 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 2267 265
a 2209 501 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray    /Lineto /lineto load def 0  setlinejoin false
pop 0.5 41.37427 31.99725 0 -90 mul 6.94446 -6.3 Triangle  gsave 0.8
SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial Fc([...])p
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 448 1230 a Fr(Note)25 b(the)g(sym)m(b)s(ol)g
Fp(@)f Fr(preceding)i(the)f(attribute)h(name,)h(whic)m(h)f
(distinguishes)f(it)g(from)448 1343 y(elemen)m(t)37 b(no)s(des.)53
b(A)m(t)35 b(a)f(giv)m(en)i(tree)f(lev)m(el,)h(the)f(attribute)h(no)s
(des)f(are)g(placed)g Fg(b)-5 b(efor)g(e)448 1456 y Fr(the)31
b(elemen)m(t)h(no)s(des.)448 1693 y Fq(XML/A)m(ttributes)37
b(\(con)m(t\))589 1806 y Fr(The)31 b(declaration)h(can)f(hold)g(sev)m
(eral)g(attributes,)g(b)s(esides)f Fn(version)p Fr(,)f(lik)m(e)p
0 TeXcolorgray 0 TeXcolorgray 448 1979 a Fn(<?xml)43
b(version="1.0")e(encoding="UTF-8"?>)448 2092 y(<?xml)i(version='1.1')e
(encoding="US-ASCII"?>)448 2205 y(<?xml)i(version=)f('1.0')h
(encoding='iso-8859-1'?>)448 2378 y Fr(The)36 b(enco)s(ding)f(is)f(the)
h Fq(c)m(haracter)41 b(enco)s(ding)36 b Fr(of)e(the)h
Fp(XML)f Fr(do)s(cumen)m(t,)j(whic)m(h)f(is)448 2491
y(particularly)c(useful)e(when)h(using)h Fp(unico)s(de)g
Fr(or)e(some)h(Asian)f(fon)m(ts.)589 2693 y(Note)c(that)h(the)f
(attributes)h(m)m(ust)f(b)s(e)g(in)f(lo)m(w)m(ercase,)k(the)d
Fg(value)34 b Fr(of)26 b(the)g(attributes)448 2805 y(can)31
b(b)s(e)f(enclosed)h(in)g(single)f(or)h(double)g(quotes.)589
3007 y(In)h(the)h(case)f(of)f Fn(version)g Fr(and)h Fn(encoding)p
Fr(,)f(only)h(some)g(standardized)i(v)-5 b(alues)32 b(are)448
3119 y(v)-5 b(alid.)448 3357 y Fq(XML/Escaping)36 b(c)m(haracters)589
3470 y Fr(All)25 b(programming)j(languages)e(o\033er)f(strings)g(of)g
(c)m(haracters)h(to)g(the)f(programmer)448 3583 y(to)35
b(use.)51 b(F)-8 b(or)35 b(instance,)h(in)e Fp(C)p Fr(,)g(the)h
(strings)f(are)g(enclosed)h(b)s(et)m(w)m(een)h(double)f(quotes:)448
3696 y Fn("abc")p Fr(.)589 3897 y(Th)m(us,)25 b(if)c(the)h(string)g
(con)m(tains)h(double-quotes,)i(w)m(e)d(m)m(ust)h(tak)m(e)f(care)g(of)
28 b Fq(escaping)448 4010 y Fr(them,)c(so)c(the)h(compiler)h(\(more)f
(precisely:)36 b(the)21 b(parser\))g(can)g(distinguish)h(the)f(double-)
448 4122 y(quotes)31 b(in)f(the)h(con)m(ten)m(ts)h(from)e(the)h
(enclosing)g(double-quotes.)589 4324 y(In)25 b Fp(C)p
Fr(,)g(c)m(haracter)h(escaping)g(is)f(ac)m(hiev)m(ed)h(b)m(y)f(adding)h
(a)f(bac)m(kslash)g(just)g(b)s(efore)g(the)448 4437 y(c)m(haracter,)33
b(e.g.,)e Fn("He)43 b(said:)f(\\"Hello!\\".")28 b Fr(is)i(a)g(v)-5
b(alid)31 b Fp(C)f Fr(string.)589 4638 y(In)35 b Fp(XML)p
Fr(,)f(there)h(is)f(a)h(similar)g(problem.)54 b(The)35
b(attribute)h(v)-5 b(alues)35 b(can)g(either)g(b)s(e)448
4751 y(enclosed)g(b)m(y)f(single)h(or)f(double)h(quotes.)52
b(If)33 b(the)i(latter,)h(the)e(double-quotes)h(in)g(the)448
4863 y(con)m(ten)m(ts)i(need)f(escaping;)j(if)c(the)h(former,)h(the)f
(quotes)f(need)h(escaping.)57 b(Problems)448 4976 y(also)31
b(stem)f(from)h(the)f(c)m(haracters)i(used)f(for)f(the)g(mark-up.)p
0 TeXcolorgray 1920 5225 a(7)p 0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 448 573 a Fq(XML/Escaping)36 b(c)m(haracters)g(\(con)m
(t\))589 672 y Fr(F)-8 b(or)31 b(example,)h(the)e(follo)m(wing)i
(elemen)m(t)p 0 TeXcolorgray 0 TeXcolorgray 448 842 a
Fk(<problem>For)40 b(all)g(integer)g(n,)g(we)g(have)g(n)g(<)g(n)g(+)g
(1.</problem>)589 1011 y Fr(is)27 b(not)h(v)-5 b(alid)27
b(b)s(ecause)g(the)h(text)f(b)s(et)m(w)m(een)i(the)e(tags)g(con)m
(tains)i(the)e(c)m(haracter)i(\020)8 b Fn(<)p Fr(\021,)448
1110 y(whic)m(h)32 b(is)e(confused)h(b)m(y)f(the)h Fp(XML)e
Fr(parsers)i(with)g(the)f(\(exp)s(ected\))h(start)g(of)f(a)g(tag:)p
0 TeXcolorgray 0 TeXcolorgray 448 1279 a Fk(<problem>For)40
b(all)g(integer)g(n,)g(we)g(have)g(n)g Fh(<)g Fk(n)g(+)g(1.</problem>)
589 1448 y Fr(The)d Fp(XML)e Fr(w)m(a)m(y)h(to)g(escap)s(e)g(this)g(c)m
(haracter)h(is)f(to)f(use)h(instead)g(the)g(sp)s(ecial)g(se-)448
1548 y(quence)31 b(of)f(c)m(haracters)i Fn(&lt;)d Fr(so)h(the)h
(previous,)g(corrected,)h(elemen)m(t)g(b)s(ecomes)p 0
TeXcolorgray 0 TeXcolorgray 448 1717 a Fk(<valid>For)40
b(all)g(integer)g(n,)g(we)g(have)g(n)g Fh(&lt;)g Fk(n)g(+)g(1.</valid>)
448 1956 y Fq(XML/Prede\034ned)c(named)e(en)m(tities)589
2069 y Fr(The)d(sequence)g Fn(&lt;)e Fr(is)h(called)h(a)g
Fq(prede\034ned)j(named)g(en)m(tit)m(y)p Fr(.)589 2277
y(Suc)m(h)e(en)m(tities)f(alw)m(a)m(ys)p 0 TeXcolorgray
560 2459 a(1.)p 0 TeXcolorgray 46 w(start)f(with)h(an)g(amp)s(ersand)g
(\()p Fn(&)p Fr(\),)p 0 TeXcolorgray 560 2645 a(2.)p
0 TeXcolorgray 46 w(con)m(tin)m(ue)h(with)f(a)f(prede\034ned)i(name)f
(\(here,)h Fn(lt)p Fr(\),)p 0 TeXcolorgray 560 2830 a(3.)p
0 TeXcolorgray 46 w(end)e(with)h(a)g(semi-colon)g(\()p
Fn(;)p Fr(\).)448 3013 y(The)d(c)m(hoice)h(of)f(the)g(amp)s(ersand)g
(to)g(mark)f(the)h(start)g(of)f(a)h(prede\034ned)h(named)g(en)m(tit)m
(y)448 3126 y(en)m(tails)j(that)e(this)h(v)m(ery)f(c)m(haracter)i(m)m
(ust)f(itself)f(b)s(e)g(escap)s(ed...)589 3334 y(So)h(one)g(m)m(ust)g
(alw)m(a)m(ys)g(use)f Fn(&amp;)f Fr(instead.)448 3573
y Fq(XML/Prede\034ned)36 b(named)e(en)m(tities)i(\(con)m(t\))589
3686 y Fr(There)f(are)f(some)g(other)h(c)m(haracters)g(whic)m(h)g(can)g
Fg(sometimes)41 b Fr(cause)34 b(a)g(problem)448 3799
y(to)d Fp(XML)e Fr(parsers)i(\(as)f(opp)s(osed)g(to)h(alw)m(a)m(ys)g
(create)g(a)g(problem,)g(as)f Fn(<)g Fr(and)h Fn(&)f
Fr(do\).)589 4007 y(A)f(summary)h(of)f(all)h(the)f(prede\034ned)i
(named)g(en)m(tities)f(is)f(giv)m(en)h(in)g(the)g(follo)m(wing)448
4120 y(table.)p 0 TeXcolorgray 0 TeXcolorgray 987 4205
1912 8 v 1037 4309 a(Character)101 b(En)m(tit)m(y)115
b(Mandatory)p 987 4363 1912 5 v 1211 4468 a Fn(&)273
b(&amp;)143 b Fr(alw)m(a)m(ys)1211 4581 y Fn(<)273 b(&lt;)187
b Fr(alw)m(a)m(ys)1211 4694 y Fn(>)273 b(&gt;)187 b Fr(in)30
b(attribute)i(v)-5 b(alues)1211 4807 y Fn(")273 b(&quot;)99
b Fr(in)30 b(double-quoted)i(strings)1211 4920 y Fn(')273
b(&apos;)99 b Fr(in)30 b(single-quoted)i(strings)p 987
4976 1912 8 v 0 TeXcolorgray 1920 5225 a(8)p 0 TeXcolorgray
eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 448 573 a Fq(XML/Prede\034ned)36 b(named)e(en)m(tities)i
(\(con)m(t\))589 664 y Fr(Consider)p 0 TeXcolorgray 0
TeXcolorgray 448 830 a Ff(<?xml)g(version="1.0")g(encoding="UTF-8"?>)
448 922 y(<escaping>)520 1013 y(<amp>&amp;</amp>)520
1104 y(<lt>&lt;</lt>)520 1196 y(<quot>&quot;</quot>)520
1287 y(<quot)g(attr="&quot;">"</quot>)520 1378 y(<apos)g
(attr='&apos;'>&apos;</apos>)520 1469 y(<apos>'</apos>)520
1561 y(<gt>&gt;</gt>)520 1652 y(<gt)g(attr="&gt;">></gt>)520
1743 y(<other>&#100;</other>)520 1835 y(<other>&#x00E7;</other>)448
1926 y(</escaping>)448 2166 y Fq(XML/Prede\034ned)g(n)m(um)m(b)s(ered)d
(en)m(tities)589 2279 y Fr(The)e(t)m(w)m(o)f(last)g(en)m(tities)h(are)f
Fq(prede\034ned)j(n)m(um)m(b)s(ered)g(en)m(tities)d Fr(b)s(ecause)g
(they)448 2392 y(denote)22 b(c)m(haracters)f(b)m(y)g(using)f(their)h
Fp(unico)s(de)h Fr(co)s(de)e(\(whic)m(h)i(ranges)f(from)f
Fe(0)h Fr(to)f Fe(65)p Fd(;)15 b Fe(536)p Fr(\).)589
2605 y(Chec)m(k)32 b(out)e Fn(http://www.unicode.org/)25
b Fr(for)31 b Fp(unico)s(de)p Fr(.)589 2817 y(If)k(the)h(co)s(de)g(is)f
(giv)m(en)h(in)g(decimal)g(\(i.e.,)i(using)d(base)h Fe(10)p
Fr(\),)i(it)d(is)h(in)m(tro)s(duced)h(b)m(y)448 2930
y Fn(&#)p Fr(,)30 b(e,g,)h Fn(&#100)p Fr(.)589 3143 y(If)g(the)h(co)s
(de)g(is)f(giv)m(en)h(in)g(hexadecimal)h(\(i.e.,)g(using)f(base)f
Fe(16)p Fr(\),)i(it)f(is)f(in)m(tro)s(duced)448 3255
y(b)m(y)g Fn(&#x)p Fr(,)e(e.g.,)i Fn(&#x00E7)p Fr(.)448
3496 y Fq(XML/User-de\034ned)47 b(in)m(ternal)f(en)m(tities)h(and)f(do)
s(cumen)m(t)f(t)m(yp)s(e)i(declara-)448 3608 y(tions)589
3721 y Fr(It)25 b(can)h(b)s(e)e(anno)m(ying)j(to)e(use)g(n)m(um)m(b)s
(ers)h(to)g(refer)f(to)g(c)m(haracters,)j(esp)s(ecially)d(if)g(one)448
3834 y(considers)31 b(that)g Fp(unico)s(de)h Fr(requires)e(four)g
(digits.)589 4047 y(T)-8 b(o)26 b(mak)m(e)g(life)e(easier,)j(it)e(is)f
(p)s(ossible)h(to)g(bind)g(a)g(name)h(to)f(an)g(en)m(tit)m(y)h
(represen)m(ting)448 4160 y(a)31 b(c)m(haracter:)42 b(a)30
b Fq(user-de\034ned)k(in)m(ternal)h(en)m(tit)m(y)p Fr(.)589
4372 y(They)42 b(are)f(called)h(in)m(ternal)g(b)s(ecause)f(their)h
(de\034nition)g(m)m(ust)g(b)s(e)e(in)h(the)h(same)448
4485 y(do)s(cumen)m(t)32 b(where)f(they)g(are)f(used.)p
0 TeXcolorgray 1920 5225 a(9)p 0 TeXcolorgray eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XML/User-de\034ned)47 b(in)m(ternal)f(en)m
(tities)h(and)f(do)s(cumen)m(t)f(t)m(yp)s(e)i(declara-)448
686 y(tions)35 b(\(con)m(t\))589 799 y Fr(F)-8 b(or)28
b(example,)g(it)f(is)g(easier)g(to)g(use)f Fn(&n;)g Fr(instead)i(of)e
Fn(&#241)p Fr(,)h(esp)s(ecially)f(if)h(the)g(text)448
912 y(is)j(in)h(Spanish)g(\(this)f(represen)m(ts)i(the)e(letter)h
Fn(\361)p Fr(\).)589 1124 y(This)j(kind)g(of)f(en)m(tit)m(y)i(m)m(ust)g
(b)s(e)e(declared)i(in)f(the)g Fq(do)s(cumen)m(t)k(t)m(yp)s(e)h
(declara-)448 1237 y(tion)p Fr(,)g(whic)m(h)f(is)f(lo)s(cated,)i(if)e
(an)m(y)-8 b(,)39 b(just)e(after)g(the)g(declaration)i
Fn(<?xml)k(...)g(?>)36 b Fr(and)448 1350 y(b)s(efore)31
b(the)f(ro)s(ot)h(elemen)m(t.)448 1590 y Fq(XML/User-de\034ned)47
b(in)m(ternal)f(en)m(tities)h(and)f(do)s(cumen)m(t)f(t)m(yp)s(e)i
(declara-)448 1703 y(tions)35 b(\(con)m(t\))589 1816
y Fr(A)30 b(do)s(cumen)m(t)i(t)m(yp)s(e)f(declaration)h(is)e(made,)h
(from)f(left)g(to)h(righ)m(t,)h(of)p 0 TeXcolorgray 560
2003 a(1.)p 0 TeXcolorgray 46 w(an)e(op)s(ening)h(tag)g
Fn(<!DOCTYPE)p Fr(,)p 0 TeXcolorgray 560 2191 a(2.)p
0 TeXcolorgray 46 w(the)f(ro)s(ot)h(elemen)m(t)h(name,)p
0 TeXcolorgray 560 2379 a(3.)p 0 TeXcolorgray 46 w(the)e(c)m(haracter)j
Fn([)p Fr(,)p 0 TeXcolorgray 560 2566 a(4.)p 0 TeXcolorgray
46 w(the)d(named)i(c)m(haracter)g(en)m(tit)m(y)f(declarations,)p
0 TeXcolorgray 560 2754 a(5.)p 0 TeXcolorgray 46 w(the)f(closing)h(tag)
g Fn(]>)448 2994 y Fq(XML/User-de\034ned)47 b(in)m(ternal)f(en)m
(tities)h(and)f(do)s(cumen)m(t)f(t)m(yp)s(e)i(declara-)448
3107 y(tions)35 b(\(con)m(t\))589 3220 y Fr(A)30 b(named)i(c)m
(haracter)g(en)m(tit)m(y)g(declaration)g(is)e(made,)h(from)f(left)g(to)
h(righ)m(t,)g(of)p 0 TeXcolorgray 560 3408 a(1.)p 0 TeXcolorgray
46 w(the)f(op)s(ening)h(tag)g Fn(<!ENTITY)p Fr(,)p 0
TeXcolorgray 560 3595 a(2.)p 0 TeXcolorgray 46 w(the)f(en)m(tit)m(y)i
(name,)p 0 TeXcolorgray 560 3783 a(3.)p 0 TeXcolorgray
46 w(the)e(n)m(um)m(b)s(ered)j(c)m(haracter)f(en)m(tit)m(y)g(b)s(et)m
(w)m(een)g(double-quotes,)p 0 TeXcolorgray 560 3970 a(4.)p
0 TeXcolorgray 46 w(the)e(closing)h(tag)g Fn(>)448 4158
y Fr(F)-8 b(or)31 b(example:)p 0 TeXcolorgray 0 TeXcolorgray
448 4346 a Fn(<!ENTITY)42 b(n)i("&#241;">)p 0 TeXcolorgray
1898 5225 a Fr(10)p 0 TeXcolorgray eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XML/User-de\034ned)47 b(in)m(ternal)f(en)m
(tities)h(and)f(do)s(cumen)m(t)f(t)m(yp)s(e)i(declara-)448
686 y(tions)35 b(\(con)m(t\))589 799 y Fr(A)30 b(complete)i(example:)p
0 TeXcolorgray 0 TeXcolorgray 448 986 a Fn(<?xml)43 b(version="1.0"?>)
448 1099 y(<!DOCTYPE)f(spain)h([)536 1212 y(<!ENTITY)f(n)h("&#241;">)
448 1325 y(]>)448 1438 y(<spain>)448 1551 y(Viva)g(Espa&n;a!)448
1664 y(</spain>)448 1851 y Fr(One)34 b(can)f(think)g(suc)m(h)h(an)f(en)
m(tit)m(y)h(as)f(b)s(eing)g(a)g(macro)h(in)f Fp(CPP)p
Fr(,)f(the)h Fp(C)f Fr(prepro)s(cessor)448 1964 y(language.)448
2204 y Fq(XML/User-de\034ned)47 b(in)m(ternal)f(en)m(tities)h(and)f(do)
s(cumen)m(t)f(t)m(yp)s(e)i(declara-)448 2317 y(tions)35
b(\(con)m(t\))589 2430 y Fr(It)30 b(is)f(p)s(ossible)g(to)h(extend)g
(user-de\034ned)h(in)m(ternal)h(en)m(tities)e(to)g(denote)h(an)m(y)f(c)
m(har-)448 2543 y(acter)h(string,)g(not)g(just)f(a)g(single)h(c)m
(haracter.)589 2756 y(T)m(ypically)-8 b(,)29 b(if)d(one)h(wishes)g(to)g
(rep)s(eat)g(a)f(piece)h(of)g(text,)g(lik)m(e)g(a)g(compan)m(y)g(name)h
(or)448 2869 y(a)j(p)s(erson's)g(name,)h(a)f(go)s(o)s(d)g(idea)g(is)g
(to)g(giv)m(e)h(a)f(name)g(to)h(this)e(string)i(and,)g(wherev)m(er)448
2981 y(one)f(w)m(an)m(t)h(its)e(con)m(ten)m(ts,)i(an)f(en)m(tit)m(y)h
(with)e(the)h(giv)m(en)g(name)g(is)f(put)h(instead.)589
3194 y(The)h(syn)m(tax)e(for)h(the)g(declaration)i(is)d(the)h(same,)g
(but)h(more)f(c)m(haracters)h(are)g(put)448 3307 y(b)s(et)m(w)m(een)g
(double-quotes.)42 b(F)-8 b(or)31 b(example,)p 0 TeXcolorgray
0 TeXcolorgray 448 3495 a Fn(<!ENTITY)42 b(univ)h("Konkuk)g
(University">)448 3607 y(<!ENTITY)f(motto)h("<spain>Viva)e
(Espa&n;a!</spain>">)448 3720 y(<!ENTITY)h(n)i("&#241;">)448
3960 y Fq(XML/External)37 b(en)m(tities)589 4073 y Fr(Sometimes)i(the)e
Fp(XML)f Fr(do)s(cumen)m(t)j(needs)e(to)h(include)g(other)g
Fp(XML)e Fr(do)s(cumen)m(ts)448 4186 y(and)e(cop)m(ying)g(the)g
(external)g(do)s(cumen)m(ts)g(once)g(is)f(not)h(a)f(go)s(o)s(d)g
(strategy)-8 b(,)35 b(since)e(this)448 4299 y(a)m(v)m(oids)f(k)m
(eeping)f(trac)m(k)g(of)f(the)h(ev)m(olution)g(of)f(these)h(external)g
(do)s(cumen)m(ts.)589 4512 y(F)-8 b(ortunately)g(,)49
b Fp(XML)43 b Fr(allo)m(ws)h(to)g(sp)s(ecify)f(the)g(inclusion)i(of)e
(other)h Fp(XML)f Fr(do)s(cu-)448 4625 y(men)m(ts)35
b(b)m(y)g(means)f(of)41 b Fq(external)f(en)m(tities)p
Fr(.)53 b(The)35 b(declaration)h(of)e(these)g(en)m(tities)h(is)448
4738 y(as)30 b(follo)m(ws:)p 0 TeXcolorgray 560 4925
a(1.)p 0 TeXcolorgray 46 w(an)g(op)s(ening)h(tag)g Fn(<!ENTITY)p
Fr(,)p 0 TeXcolorgray 1898 5225 a(11)p 0 TeXcolorgray
eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 560 573 a Fr(2.)p 0 TeXcolorgray
46 w(the)30 b(en)m(tit)m(y)i(name,)p 0 TeXcolorgray 560
757 a(3.)p 0 TeXcolorgray 46 w(the)e(k)m(eyw)m(ord)i
Fn(SYSTEM)p Fr(,)p 0 TeXcolorgray 560 940 a(4.)p 0 TeXcolorgray
46 w(the)e(full)h(name)g(of)f(the)g Fp(XML)g Fr(\034le)g(b)s(et)m(w)m
(een)i(double-quotes,)p 0 TeXcolorgray 560 1124 a(5.)p
0 TeXcolorgray 46 w(the)e(closing)h(tag)g Fn(>)448 1363
y Fq(XML/External)37 b(en)m(tities)e(\(con)m(t\))589
1476 y Fr(F)-8 b(or)31 b(example,)p 0 TeXcolorgray 0
TeXcolorgray 448 1654 a Fn(<?xml)43 b(version="1.0"?>)448
1767 y(<!DOCTYPE)f(longdoc)g([)536 1879 y(<!ENTITY)g(part1)h(SYSTEM)f
("p1.xml">)536 1992 y(<!ENTITY)g(part2)h(SYSTEM)f("p2.xml">)536
2105 y(<!ENTITY)g(part3)h(SYSTEM)f("p3.xml">)448 2218
y(]>)448 2331 y(<longdoc>)536 2444 y(The)h(included)f(files)h(are:)536
2557 y(&part1;)536 2670 y(&part2;)536 2783 y(&part3;)448
2896 y(</longdoc>)448 3134 y Fq(XML/External)37 b(en)m(tities)e(\(con)m
(t\))589 3247 y Fr(A)m(t)42 b(parsing)g(time,)i(the)e(external)g(en)m
(tities)g(are)f(fetc)m(hed)i(and)e(copied)h(in)m(to)h(the)448
3360 y(main)31 b Fp(XML)f Fr(do)s(cumen)m(t,)i(replacing)f(the)g(en)m
(tit)m(y)-8 b(.)589 3565 y(Therefore)22 b(the)f(included)h(parts)f
(cannot)h(con)m(tain)g(an)m(y)f(prolog,)i(i.e.,)h(the)d
Fp(XML)e Fr(dec-)448 3678 y(laration)25 b Fn(<?xml)43
b(...)g(?>)23 b Fr(and)h(the)g(do)s(cumen)m(t)h(t)m(yp)s(e)e
(declaration)i Fn(<!DOCTYPE)42 b(...)h(]>)p Fr(,)448
3790 y(if)30 b(an)m(y)-8 b(.)589 3995 y Fp(XML)37 b Fr(pro)s(cessors)f
(are)h(required,)j(when)e(reading)g(an)f(external)h(en)m(tit)m(y)-8
b(,)40 b(to)d(cop)m(y)448 4108 y(v)m(erbatim)28 b(the)f(con)m(ten)m(t)i
(of)d(the)h(referred)h(external)f(do)s(cumen)m(t,)i(and)e(then)h(parse)
e(it)h(as)448 4221 y(if)e(it)h(alw)m(a)m(ys)g(b)s(elonged)g(to)f(the)h
(master)g(do)s(cumen)m(t)h(\(that)f(is,)g(the)f(one)h(whic)m(h)h(imp)s
(orts)448 4334 y(the)k(others\).)448 4572 y Fq(XML/Unparsed)k(en)m
(tities)h(and)f(notations)589 4685 y(Unparsed)44 b(en)m(tities)39
b Fr(allo)m(w)h(to)f(refer)f(to)h(a)f(binary)h(ob)5 b(jects,)41
b(lik)m(e)e(images,)i(or)448 4798 y(some)31 b(text)f(whic)m(h)i(is)e
(not)g Fp(XML)p Fr(,)g(lik)m(e)h(a)f(program.)42 b(They)30
b(are)h(declared)h(b)m(y)p 0 TeXcolorgray 560 4976 a(1.)p
0 TeXcolorgray 46 w(the)e(op)s(ening)h(tag)g Fn(<!ENTITY)p
Fr(,)p 0 TeXcolorgray 1898 5225 a(12)p 0 TeXcolorgray
eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 560 573 a Fr(2.)p 0 TeXcolorgray
46 w(the)30 b(en)m(tit)m(y)i(name,)p 0 TeXcolorgray 560
760 a(3.)p 0 TeXcolorgray 46 w(the)e(k)m(eyw)m(ord)i
Fn(SYSTEM)p Fr(,)p 0 TeXcolorgray 560 948 a(4.)p 0 TeXcolorgray
46 w(the)e(full)h(name)g(of)f(the)g(non-)p Fp(XML)g Fr(external)i
(\034le)e(b)s(et)m(w)m(een)i(double-quotes,)p 0 TeXcolorgray
560 1136 a(5.)p 0 TeXcolorgray 46 w(the)e(k)m(eyw)m(ord)i
Fn(NDATA)p Fr(,)p 0 TeXcolorgray 560 1323 a(6.)p 0 TeXcolorgray
46 w(a)e(notation)i(\(the)e(kind)h(of)f(the)g(\034le\),)p
0 TeXcolorgray 560 1511 a(7.)p 0 TeXcolorgray 46 w(the)g(closing)h(tag)
g Fn(>)448 1751 y Fq(XML/Unparsed)k(en)m(tities)h(and)f(notations)g
(\(con)m(t\))589 1851 y Fr(Had)k(w)m(e)g(used)f(external)h(en)m
(tities,)j(the)c(included)i(ob)5 b(ject)38 b(had)h(b)s(een)g(copied)g
(in)448 1950 y(place)31 b(of)f(the)h(reference)g(and)g(parsed)g(as)f
Fp(XML)f Fr(\026)i(whic)m(h)g(it)g(is)f(not.)41 b(Consider)p
0 TeXcolorgray 0 TeXcolorgray 448 2125 a Fk(<?xml)f(version="1.0"?>)448
2224 y(<!DOCTYPE)g(doc)g([)528 2324 y(<!NOTATION)g(gif)648
2424 y(SYSTEM)g("CompuServe)g(Graphics)g(Interchange)g(Format)f(87a">)
528 2523 y(<!ENTITY)h(picture)g(SYSTEM)g("picture.gif")g(NDATA)g(gif>)
528 2623 y(<!ENTITY)g(me)g("Christian)g(Rinderknecht">)448
2722 y(]>)448 2822 y(<doc>)528 2922 y(<para>The)g(following)g(element)g
(refers)g(to)g(my)g(picture:</para>)528 3021 y(<graphic)g
(image="picture")g(alt="A)g(picture)g(of)g(&me;"/>)448
3121 y(</doc>)448 3361 y Fq(XML/Unparsed)35 b(en)m(tities)h(and)f
(notations)g(\(con)m(t\))589 3474 y Fr(Notice)d(the)f(notation)h(\020)8
b Fn(gif)p Fr(\021,)30 b(whic)m(h)j(is)d(the)h(kind)g(of)g(the)g
(unparsed)h(en)m(tit)m(y)-8 b(.)44 b(No-)448 3587 y(tations)31
b(m)m(ust)g(b)s(e)f(de\034ned)i(in)e(the)h(do)s(cumen)m(t)h(t)m(yp)s(e)
e(declarations)i(as)p 0 TeXcolorgray 560 3774 a(1.)p
0 TeXcolorgray 46 w(the)e(op)s(ening)h(tag)g Fn(<!NOTATION)p
Fr(,)p 0 TeXcolorgray 560 3962 a(2.)p 0 TeXcolorgray
46 w(the)f(notation)i(name,)p 0 TeXcolorgray 560 4150
a(3.)p 0 TeXcolorgray 46 w(the)e(k)m(eyw)m(ord)i Fn(SYSTEM)p
Fr(,)p 0 TeXcolorgray 560 4337 a(4.)p 0 TeXcolorgray
46 w(a)i(description)h(of)f(the)g(kind)g(of)g(unparsed)h(en)m(tit)m(y)h
(the)e(notation)h(refers)f(to)h(\(it)676 4450 y(can)30
b(b)s(e)g(a)h Fp(MIME)e Fr(t)m(yp)s(e,)h(an)h(URL,)f(plain)h
(English...\))p 0 TeXcolorgray 560 4638 a(5.)p 0 TeXcolorgray
46 w(the)f(closing)h(tag)g Fn(>)p 0 TeXcolorgray 1898
5225 a Fr(13)p 0 TeXcolorgray eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XML/Unparsed)35 b(en)m(tities)h(and)f
(notations)g(\(con)m(t\))589 686 y Fr(Notice)c(also)g(that)f(unparsed)i
(en)m(tities)p 0 TeXcolorgray 585 868 a Fo(\017)p 0 TeXcolorgray
46 w Fr(m)m(ust)g(b)s(e)g(used)g(as)f(attribute)i(v)-5
b(alues)32 b(\(in)g(our)h(example,)g(the)f(attribute)h(name)676
981 y(is)d(\020)8 b Fn(image)p Fr(\021\),)p 0 TeXcolorgray
585 1166 a Fo(\017)p 0 TeXcolorgray 46 w Fr(are)21 b(names)h(\(\020)8
b Fn(picture)p Fr(\021\),)22 b(instead)g(of)f(the)h(usual)g(en)m(tit)m
(y)g(syn)m(tax)g(\(\020)8 b Fn(&picture;)p Fr(\021\).)448
1405 y Fq(XML/Unparsed)35 b(en)m(tities)h(and)f(notations)g(\(con)m
(t\))589 1518 y Fr(This)c(example)g(is)f Fq(not)g Fr(w)m(ell-formed.)p
0 TeXcolorgray 0 TeXcolorgray 448 1700 a Fn(<?xml)43
b(version="1.0"?>)448 1813 y(<!DOCTYPE)f(doc)h([)536
1926 y(<!NOTATION)e(jpeg)i(SYSTEM)g("image/jpeg">)536
2039 y(<!ENTITY)f(pic)h("pictures/me.jpeg")d(NDATA)j(jpeg>)448
2152 y(]>)448 2265 y(<doc>)536 2378 y(&pic;)448 2491
y(</doc>)448 2730 y Fq(XML/A)37 b(summary)c(of)h(all)h(kinds)f(of)g(en)
m(tities)p 0 TeXcolorgray 0 TeXcolorgray 1089 3637 a
@beginspecial 71 @llx 627 @lly 276 @urx 721 @ury 2050
@rwi @setspecial
%%BeginDocument: entities.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.994 Copyright 2014 Radical Eye Software
%%Title: entities.dvi
%%CreationDate: Wed Feb  4 15:57:05 2015
%%BoundingBox: 71 627 280 721
%%DocumentFonts: CMR10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E -o entities.ps entities.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2015.02.04:1557
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/05/15
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  0 0 moveto 1 0 rmoveto  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.06, 2014/05/19
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 876 2014-01-28 15:03:13Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 45 /hyphen put
dup 97 /a put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F43F9A1290E91C463895BD12E8A831DAD661EF23CB9AD2C26CFB26
71B72D15270CD8CB1D59CA2D9DE884C96BB923B1EC8208BD7DCEAB0FC2293629
2AA1F72C6B470701C381E335C2364CFCEBACDD20CA36182CA7E70AFF5B14B02B
75CBD0738E35DAD8E60CB3DA4DDED557FF9ED386DA52D10615E700751C842FBC
85D89C0E713F556814E051C6CEFE7E83C2F379B88A801DDA565BE73013DD56D9
44D97798564787AE6D5A6A9FB777EEB850C7481B4A353EB9279731512C9B95D3
2ACA3A0D44585E55AFD968135F6492A9381FA2D126CF50373AB7D47B509AE6F5
C4B100BE8334ABE2268DAFB7983BF339540A8D8280F3576CDCD4F21408AA7D95
D50A7C1599E62D4FCAB001D5F9DA84FA530B88F2FE36B36F9968B5CF9FDBFA11
DCA0E08D087C4C5F4D744BFBA60FC22E964CE10AF512C228F4CFC3DB21E38CFE
AC11748F9B23F33426BC4AE3F026AA8178364704446D3A12157DE158671515E8
FA0324852EFF0888FD90913D77B6417FEE8C039C12D8CCF516AA5E9AE60CDF64
8F9677A2701944FEE0E51FD5BEB501509F73CE26568F78981B480F688646A5C8
C563B8FAACF6D61C1D0A16CA68A4AF96E6F89370958884EE230DCBAB3E90B348
F1657F327D698A8A222DE58623B2B82E6F39A572823382D6DBF390F03121A932
BFA4FA7A2247EE3C628F9A334F62DF98CEC11E91273A1462E6E80A7B58F0B3A7
1010CE8BC3CBC4698763770EDBD721E66C5852C838BC3BDB4D669E857C728060
5EDB2F5960CAD59B4B3B349146BE16B93600F1254FBAE5E548E490AD28B1CC9A
B2133D79D6F030D91F1C967EB2D468C50DF812D8CF9F07F4648192A7EF6EFE72
6C526DE1A99350025F131D697CC0ACDE8CCD15659B544BBB3612697568EA0D83
DDD7E1D83FAE2FDECFF5AFC95518DF8CEE4B9E59CE2420515A0042EF7592DEE5
2E10D424859429DCB4ECEC7DD282636A3D07044AF41C0A3FC132DB99C17A6E74
7D024BC3297C403B5E2704963ADF87B75E8CDE74E37C9AB7F35D50296B0B418C
5D08CF057ECDBAD28147DAC67EB875748BAE25E19474B782F24BF7ED544AE148
467180DC2293FA812D804F479EEF9C03F89E026963830B08E9BED0FDF83EDA2A
CD3D3B279ED66EB955E260AF1DCB0E8959857A5B2FDF4AD90CAAF7A0B9449559
4710F7BB631D9C72C9D1037A698BEC695D0E254EE44384CDBF724CDF871CE1B9
5B1A738E62B64B42242C18F5BCEF3BBC0BBCDFF50A96C971445D731DF9B83A7A
1136A9CE8747794446CB7232023DFC1D7D4C4FAF55E151C39FEF8B47E45C5AA5
F99198A39BE62AF7CFBAB277B8A66C8413AF5F059D8D3F20870038B6EA3C5E41
A3E6E6EAE70E64E165C15797687C7632A189CF44A025208FBB7013739A349082
F6530C501595FEE183738BEF36982B7B69468B12590B6EEA0E1A19CD13962231
7F5DFD2EFBDF0C204AD90CAAF7A0B94495594710F7BB631D9C72C82FC752771E
B050A697558AC6062ACD9C0C1E624A4E47978D228C684452513CBFC52EA63C63
19DEB18F99421D5845A65F73AED95051BDBD5B304D90B664CE6B192C1FB3F7B5
290C219E9172B0107883EE596FEF286C526C0195133CAE87C919D97B0DD0851E
10A21034A28CC98941257FBC1D848962774285A0E73867601A1637CF348B0D6B
F5D5EF773DE3E6DEC83053CD18E028C0F89777FC5FD2466683B7E3A8F532477B
7D1D800310CC42F926DD71C9A3B8E838C9B7BFAEE46118DD59B27327C7D9DCE2
C7380B706D44E4C7424CD243B89EEF73565F3D0D2AF2B6269854BB3F271F2DD8
6AAD6EBD2BC01221F7E40C7D1876219DFC6D2A49D4B3B533E62AACAC1B0345E4
382775B31B54F16384D540D3DEE4362C088B4A87F839B81B3020A69E6B42B95B
0ADFEECAF8FEDBD08C8D3E795D653EC04001FEEF497C62EF530D8F58F1BD5C33
9C08B8EB5C40FA17A94FFFE3D9F9FDC1C6A4C6B3D05BCF9C2F8EA6C1F74EC124
B18C36B00FAA7F1960E093850D9540A865FDD788EFEA7AA7F1951439FA447362
47CBAA5E8CD9EE3A92E8BA1A591CC29164C7ECBC1E9C2FC154BEA826E96D9B7A
B5FA825587FFD6DC574B681B70697C0E98140013BE8383DE10D2A09145627E8D
039CDFCC5990A998A118C05492501D27DAD12D2932709A4036EF0FDA00CEDD04
64FED1AD46D97550C614A3CF420C755562C1C3314567C88BE224461D2789F5F4
EE59EE00EF2E83D00DF9A847490B82EE2C62096BBAFFB905CD432197FCCE5217
C8D138D9E07E71EEA1B900DCA5B54A71495EBECDFD0353655C34FAD74652FA0B
5D8575997D6B8AEB962E3F435310503EC62542BA2EE7AC8F2DDDB015D9A513FB
2A7553DFA52A2E666E4453B5C1480F493B78D3E0F22EE87A671C701ADBC0B67A
0FCA41838CEB488F11399D1F8020F4C3ECD7CC083DF0A62868922105F2FA4C4A
9C5F4E216CB762BA1573E6C3E4083E48CEC9BA623D7424874ED58846EFDBA2E1
0DF6B834EDE12F6C6C9B5B2153B097CC1A4C2A0A4C758285BADF331E56D1D0C5
59476BE27587887B504BF74F8C54911CEF4D7E65ADC8CE164246B800BB580D75
F5873A6F37F20600EC1B165F0C489DCD4968EF31ADF2BCA5E306B5516027A9F3
D2F24E14D191A136FAD0C22A1771AF31FA95258B6F3E16D2E913C378A9B0A3B1
2ADD0E6C97457D5BFDA26103BF14E81BF98A30B01C3277E46725716ED08312A4
BE62C8C48029C562D9F08098FF6D397A6764651ED180DD93E65C3ECADF13FC5B
361866E58D91567BA100533E5C7E3CC5C40B8E50E25511B0A04FA4A80796D1CF
982026ABC08C6BC62C6E8826219353F0D8541B4326BD6BEB604ADA78C2C28767
5D7315C171C75B827EC97A2B61FA13260046568A3365B3C1540A217BA415752B
A310AFFA57355A971BB4DB6022426EE46C1BAC4BF42914947DFA87EDCC6CC1CC
AB3BCE4A26C32A540E572281C6B3CCF5869E16ED1792A53D1736A4285BA60DAB
3979F4E2AE969B7ABA98EB37CB2C2A8EA5326178611E14178FA25C0FF5F0D840
032F95D39F257C5FFEFDF1E301120E16295B17CF8CDBB25AF54BD452D1FE2B0C
17120104F8B05840EF7B3457F381C6E89A1F4596190651F4823978E268FA95F9
473A6C91D7EEBEE33B147E8721C6DE9F479A073B19F41FDAE352B796FB00FD10
B7D14C6386ED3663746BAD22158F02C6799A08E5610646BFADD34DCEA7FA9227
5CB75F44FC0D155C1E04055D6F81AE5E20A9E98ADD7D22CD6E4153DA1EFE6296
246F26ABC2AECA993FD694EEA5F729B45BE307232F92731C10C3330672C95849
DE956486C96942AD652B9188F2FFA1495493978229AEBD88E1EFC7ADD58BA85D
4FB629D14A2F2603D8DC8F44F667800BCB0EB3F6336428FCD9CB086222C9FDEA
7DE13ADF46393E0DF8E3C7ADC327457BAE54CDA11B7C316065BB27BBFF3DD6A7
946B87377A7F70F555DFBA6D3AB7D0D813F31A7439E787616872D64DD21AC528
CFF0BA4D34C1025FE62CF4345D6FE1D0FEAAE9BDF79A904D22773633F194C04D
86BB5CB4DAECE9542D7ADFB2EF67FB6AFC6817389380C4CC3086C97F627DA315
8F7BE4811B2898D889A581E800D7E2489AFF8E90CC84B97D4563011D573272F0
FB07221090C0E7A4138F9EBEEE69A065DCECFD7FEEA91C4EF9E7BE75D17891F3
E7B39DB81EFE3885AF0FCC8E68F4871C9810B0EFE3A5A955A29700E849D89BB4
9E7AAC72A3567BD51157F10E4D89CE828025EBB002595259959A74B524FE36B2
2B94CC97BD68A456A3903FB9C207756E9B47B13623A92DF6514AA436CFE9FD3E
0F18E5441B84B03DDE6E5F256AD4965A4A9FA9324A4485D6B131BB530FB7A320
8050AF6346AFDFF46860ECC45928C39D9583BF26F182DDA0E24333EA43CA3BE8
87CFFB45DFB6F13E4573B577F678E72B7DEAE1E7A883B615B9DFA92F8C86B98A
3636EB7F99EB8FA8061CE24B14F175B6904BACEA086E00BA1411FB347D44FED4
CCD2D249ECF4B2955D3F149C505E21B70F61F0507AE5F1CED45ECA48708A942F
2AFCA28E436F147743FD43B5F1925991842E095672EC360E59B8AC09210EF652
F9DF613A7F209F3401F03AE41229C000CB435E139C353385C10F7478DA0B3E1C
3B8720FDE908AAC548615EE430B5A1258CC3EC2C32E73C8688B29F7BB217E85D
84DC359E760404D55B39988AA981D6F01CFA932C9BAFD0A85F121B97D9B993D9
ABBB0EB0910F1BC02472E528053EC0414F8E48DE2A45C9C5862822348F19521C
86309B1265E1B2E4AB3AD7068662681170201BF6C6D4C6DC876B5E9BAE13406B
6F7E6FAFF8F73C4784300033C50F2EF0AE98DDD02135A7ACDD708280CE6738C0
64623750F2F2C56E891BE4DE36467D1684F369256541358AB8F2C86F7A86DDE5
923306359D7AC1CA6583EFE2A91E14FADA9B40531122AC58C560111C4ADE26B1
7E16A83105D97035874D2B9A5B0DF39BA9768EB40A69010A69B4B764474809D1
587752C1E92112822965F59BA91732BC52BB3AF765A62579569815A3C535B948
0ADE269F1C0997F50AEEBDED11E099170C67EE75891F19EEBC69EE24426F941D
940B92DCB0E29B6B3F79828E3F115238871ED4C72ADA17DD03BFE690B726F412
C120565977C178484CA66010E05A853B2324C8B2C4B6EE8EAF62815C71E1DC9C
7B2C5BB4D820B1DB4E22AEE81138DABDF20BD679C4C387F7BD2EFEE0C76935AD
A4F81CE04EF8C1753519CA11D6E07036D99E70BF736C1C4E189050A45E22CC9A
68ABAF68C3C80349D62075CFC2BE5A1068309FCBD277CD39F39558A16E8B74F8
20AFBBC820DA883E0CC8AC72C57A853F122B1511CDC60276D4D0BC39DCFBB8B3
6B10BB705603C9A1BD9B0A580FD98762F541FF4ED7519B815FE5FEB9A5BB26EB
DC398842269CFB15A37D91FF72D7916622F56B1F1E6E18C08A283861D5CEB617
A0B1B15B59DC7360B240D5336EC9BB37102881D693842D33E0F762907B63C39C
42FACDE5F5A7D0309E6F48F3DB41AB20C94F14EADF131C4E94E280BF1B4820C0
D61D457F1C4AF0C7B6AF40FE985673A6901C24F24F27F7CC72123C6B892C4030
5A9F24842C0E954B4A6DA6617E9A44384AE6E09A724CD4DC885AA98A372F6259
112F698D3485EC4B178BA5B31A393C8DA546A598B814D640B449F6CBCD0EE082
BB75D6992D98C5E240D6957D61BBCE8250F2BA64D6E33D81C55DF8D0803F5D44
FB7C96360833C115AE0AE47F87DB77E5A67F6E005739A9FBD9D832E9F701F4E7
370524319FA010FBACD6116136A4189D074D4F6C5B716D2D7783124A18553B1E
25A9ABAF5A791ED16F4A17326EC87A1BBDDB816F9612EBC8D9CA42ED3E9C46B8
F6E40F5E91089968FC613FD5A9C0A02DF059CBA19CD8B18461E4C9C80747CA1F
381741E9F5E04AF1FD26ACCABAC4279B1A6EC1D63F0A7F8B965A690BF87572C7
00C71235F4B76C158A6B41DD6EF9549E2E2D11D94679817F5D40C5AA86F01FBE
85CD1FD4D38E935D7A183A9069E671887359DD297D91DC63B1BDC8E4409C47E1
9E8F2827466E3C9FBE6A97D8BF28B1BE5FFDF788A53EE6EA99E41CB17C0D2628
78099C131B3E051E1E4EF2DDFC98A0DA97810E9236532DD4BD95F2565CF42535
1F1858D1C52F9309704F103BC3DC7FCC3434696A66EF5AAC872EE0A618F86741
12D5266448DFAEE6C25939EE90A123DA52901D7CE5CB0B4906A4F7BE8033CDA8
3633AA2340FC41C937D3762DE970E3206FE660E6FD8EC4F0E1A9A8DB219F4AAD
C9ED293A7FA362E4D790B208BF465237D3489A3B4134A6DD2323D70F6BC69961
BEB634A60D1F3BC1BDD7F6966A7FC117C7C0066F6D1C99ED7A96F5AD564145A3
9989F07A1B99337DB2DCA1552EB8A8C3E96EF153686448A7D5E1A7759201ABA1
CEE54ECBB30DF9FD52991A6FD83B1866939E8182891D7174C33191485E7B0118
286B41B0FBDAE16DBED77B028366F428F109BE3653C3D2BC3054E3C9DD19DF68
68C67BC0D8564AF5403640E83220E108057ABB754BFC774FCC38DFBFEA0938AC
CC56580AF90359C9FB56E1A94B1369029E46553A8A85B8F34AFEE1097FE428B4
6D9008C7CE62B1692CB20B46E39EBC9CAB74F69F7AC6BC93F3453F72614E82CA
D77F7EC9E798B1AD2BA8CE480B62AEF6E2E977ACD4F58256A9782738E70CF3EF
00ECEE936BB52CFAB3472A50C3741F88779F6F0B455856B201848CB34221DC6D
7E3108D2371A8FA05EF30852C5A91FBB5E0518E6986DC85A05D04492A5A4EAE5
1FA50933B2DE3D04A485A82DC03E32470A37288CA08255BCDF7E1BAA5D9A3D9F
F8E1D216A91F5D3DCABA5ACB0FAA916FC6175BC1C0CF92041E8D84EC4C3976D4
AB943BEEEB8D74EF86F54E8076FC219F2729546ADD0FFDFD6F6401DACBD63E0B
1FCCCDB664E8CBAD114B039564A5398347C21B0D99DF61FEB13AAE4E7E0B7472
C14B5FFCF05B1E00A07EED080BAAAEFCE6D2CDFD3F308359BD179C14C705B9D2
6E532CE3A1AAFFD309B623E8F437D799E0A3612B962416212DB93DD40A7DAACC
C2A045D82239F566F00978DB6D931A7523B02A8BE9742EC701B68DB401485CB6
617F19A7D5118A7BC0AEAD1C126F1C6F15FA533274DB46C6B6C974F67D59FDD7
4E95C0B15CF8370796A191279E636F83D5381FF665916E4E238C5C04D9AB14CD
26273FB366E07C9A474B68CFB16F2D3BF0BA72D9576B6E8BAC48AEA13EB1BCCB
72D6E2DD788CE50FE2FBBD91FF7027E9E06477B61A7735C36B68ABB600D6274D
9F1F793409EB52B8E1D7FC05BD13D08D1BB1DA642142215EB7EA3D494A1E4797
B8C23F7E437C80A4F54BDAD6545EC7E3B67D8CF2BCDB1C73B91EA60CED57C750
18559DD0F713FBABFFAC965ED71736140A9126625C10E4D4EFF0E78D06E30146
235B5EAACE57D4A674034055515E91B4DA8901A04DACF33AACC2E1F15B057A57
FD5A775C32940F8FF75DD414716675905BD9F010540A4CF71DF786EF8168BD54
01A33B1B2844903A2111C9A4EF2597526DA5EC3F591A82D395908159CC2F7D97
44B5FC19F9C37543023AD52AA407A377FCEAE88C346494DEACB36DEB3EAB05CD
6EB54F5E81B0546F9BEACDD0F6AFE90FE4DB281D56F964539D5075D9DB8E74FD
98FA511F4DF87343A46CB6CC2FAA73FB4CD1B3933636320389E535F6F8122FF5
2D4B5CE75E714B57391E3B11EA8E1A40B03857A8029128DBCFF046B47835C30C
62F83BDEDE22C60BAF979AF73FE4048D114062470A6DF2723A3954D355F862D4
B1BB70E013D68580784633E5270203536170A1355ADBDBEBB003EE7F379EE28F
2977042C867417C52179A113738E8007D7023C2D4A24EDA27FAD91B2BD260EA1
FFC1C5C1984E903373F7A385F6F43BA155A1D188563669A11740FA279D7BE885
FD9F9C018A0428986805AF91A25A648D4D5F65475F39FE0DD300141444783CA5
2EB9D105542317ABDCA457AC931444
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (entities.dvi)
@start /Fa 135[44 2[46 32 33 33 1[46 1[46 69 23 2[23
3[37 46 1[46 42 51[28 32[46 12[{}16 83.022 /CMR10 rf
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 0 30 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 30 a 0 30 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 30 a 0 30
a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 30 a 0 TeXcolorgray 0 30 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 30 a 0 30 a
tx@Dict begin gsave CM STV CP newpath moveto 3.0 neg 0 rmoveto clip
setmatrix end
 0 30 a 0
764 1730 765 v 1730 30 a
currentpoint grestore moveto
 1730 30 a 1028 55 a
tx@Dict begin  tx@NodeDict begin {6.67859 0.0 31.44449 15.72224 3.01385
} false /N@T-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 1028 55
a Fa(en)n(tities)723 292 y
tx@Dict begin  tx@NodeDict begin {6.94444 1.94444 28.41672 14.20836
3.01385 } false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 723 292 a Fa(parsed)841 267
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-0 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 841 267 a 171 528 a
tx@Dict begin  tx@NodeDict begin {6.94444 1.94444 45.02786 22.51393
3.01385 } false /N@T-0-0-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 171 528 a Fa(prede\014ned)358 503
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-0 /N@T-0-0-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 358 503 a 0 764 a
tx@Dict begin  tx@NodeDict begin {6.94444 0.0 28.88896 14.44447 3.01385
} false /N@T-0-0-0-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 0 764 a Fa(named)120 739 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 120 739
a 417 764 a
tx@Dict begin  tx@NodeDict begin {6.94444 0.0 43.08342 21.5417 3.01385
} false /N@T-0-0-0-1 16 {InitRnode } /NodeScale {} def NewNode end
 end
 417 764 a Fa(n)n(um)n(b)r(ered)596 739 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-0-0 /N@T-0-0-0-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end

596 739 a 1106 528 a
tx@Dict begin  tx@NodeDict begin {6.94444 0.0 52.30563 26.15282 3.01385
} false /N@T-0-0-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 1106 528 a Fa(user-de\014ned)1323
503 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-0 /N@T-0-0-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1323 503 a 952 764 a
tx@Dict begin  tx@NodeDict begin {6.94444 0.0 33.63896 16.81947 3.01385
} false /N@T-0-0-1-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 952 764 a Fa(in)n(ternal)1091
739 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-0-1 /N@T-0-0-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1091 739 a 1408 764 a
tx@Dict begin  tx@NodeDict begin {6.94444 0.0 35.30563 17.65282 3.01385
} false /N@T-0-0-1-1 16 {InitRnode } /NodeScale {} def NewNode end
 end
 1408 764 a Fa(external)1555
739 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-0-1 /N@T-0-0-1-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1555 739 a 1313 292 a
tx@Dict begin  tx@NodeDict begin {6.94444 1.94444 39.52786 19.76393
3.01385 } false /N@T-0-2 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1313 292 a Fa(unparsed)1477
267 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-2 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1477 267 a eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 448 3876 a(XML/Unparsed)h(c)m(haracter)h(data)589
3989 y Fr(It)30 b(is)g(sometimes)h(tiresome)g(to)f(ha)m(v)m(e)i(to)e
(escap)s(e)g(c)m(haracters,)i(i.e.,)f(use)f(c)m(haracter)448
4102 y(en)m(tities.)589 4310 y(T)-8 b(o)42 b(a)m(v)m(oid)h(the)e(need)h
(of)e(escaping,)45 b(there)d(is)f(a)g(sp)s(ecial)g(construct:)63
b Fq(CD)m(A)-9 b(T)g(A)448 4423 y(sections)31 b Fr(\(short)g(for)f
(\020Character)i(D)m(A)-8 b(T)g(A\021\),)32 b(made)f(of)p
0 TeXcolorgray 560 4605 a(1.)p 0 TeXcolorgray 46 w(an)f(op)s(ening)h
(tag)g Fn(<!CDATA[)p Fr(,)p 0 TeXcolorgray 560 4791 a(2.)p
0 TeXcolorgray 46 w(some)f(text)g(without)i(escaping)f(and)g(without)g
(the)g(sequence)g Fn(]]>)p Fr(,)p 0 TeXcolorgray 560
4976 a(3.)p 0 TeXcolorgray 46 w(a)f(closing)h(tag)f Fn(]]>)p
Fr(.)p 0 TeXcolorgray 1898 5225 a(14)p 0 TeXcolorgray
eop end
%%Page: 15 15
TeXDict begin 15 14 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fr(F)-8 b(or)31 b(example)p
0 TeXcolorgray 0 TeXcolorgray 448 736 a Fn(<para>A)43
b(test)f(in)i(C:)536 848 y(<c>)p Fl(<!CDATA[)p Fn(if)d(\(x)i(<)h(y\))f
(return)g(&r;)p Fl(]]>)p Fn(</c>)448 961 y(</para>)448
1197 y Fq(XML/In)m(ternal)36 b(linking)589 1310 y Fr(Consider)f(a)e(do)
s(cumen)m(t)i(represen)m(ting)h(a)d(tec)m(hnical)j(b)s(o)s(ok,)d(lik)m
(e)h(a)g(textb)s(o)s(ok.)49 b(It)448 1423 y(is)34 b(common)h(to)g
(\034nd)f(cross-references)h(in)f(suc)m(h)h(kind)f(of)g(b)s(o)s(oks,)g
(i.e.,)h(references)g(in)448 1536 y(some)c(c)m(hapters)g(to)g(other)g
(c)m(hapters)h(or)e(sections,)h(or)f(bibliographical)j(en)m(tries.)589
1728 y(One)27 b(easy)e(w)m(a)m(y)i(to)e(ac)m(hiev)m(e)j(this)d(is)h(to)
g(use)f(some)h(attributes)h(as)e(lab)s(els)h(and)g(some)448
1841 y(attributes)32 b(as)e(references.)589 2034 y(The)h(problem)h(is)e
(that)h(the)f(writer)h(is)f(then)h(in)g(c)m(harge)h(of)e(c)m(hec)m
(king)i(whether)p 0 TeXcolorgray 585 2196 a Fo(\017)p
0 TeXcolorgray 46 w Fr(a)e(giv)m(en)h(lab)s(el)f(is)g(unique)h(in)g
(the)f(whole)h(do)s(cumen)m(t,)p 0 TeXcolorgray 585 2374
a Fo(\017)p 0 TeXcolorgray 46 w Fr(ev)m(ery)f(reference)h(is)f(link)m
(ed)h(to)g(a)f(lab)s(el.)448 2609 y Fq(XML/In)m(ternal)36
b(linking)e(\(con)m(t\))589 2722 y Fp(XML)c Fr(pro)m(vides)i(a)e(w)m(a)
m(y)i(to)f(ensure)g(that)g(an)m(y)g(v)-5 b(alidating)32
b(parser)f(will)g(c)m(hec)m(k)h(this)448 2835 y(kind)f(of)f(in)m
(ternal)i(linking)f(automatically:)42 b(using)32 b Fn(ID)d
Fr(and)i Fn(IDREF)p Fr(.)589 3028 y(The)j(former)g(is)e(the)i(kind)f
(of)g(all)g(the)g(\(attribute\))i(lab)s(els)e(and)h(the)f(latter)h(is)f
(the)448 3141 y(kind)e(of)f(all)g(the)h(\(attribute\))h(references.)589
3333 y(The)i(attributes)f(used)g(either)h(as)e(lab)s(el)h(or)g
(reference)g(m)m(ust)g(b)s(e)g(declared)h(in)f(the)448
3446 y Fn(DOCTYPE)c Fr(section)i(using)h Fn(ATTLIST)p
Fr(.)448 3682 y Fq(XML/In)m(ternal)k(linking/Lab)s(els)589
3795 y Fr(F)-8 b(or)31 b(the)g(lab)s(els,)f(use)p 0 TeXcolorgray
560 3957 a(1.)p 0 TeXcolorgray 46 w(an)g(op)s(ening)h(tag)g
Fn(<!ATTLIST)p Fr(,)p 0 TeXcolorgray 560 4135 a(2.)p
0 TeXcolorgray 46 w(the)f(name)h(of)f(the)h(elemen)m(t)h(b)s(eing)f
(lab)s(elled,)p 0 TeXcolorgray 560 4313 a(3.)p 0 TeXcolorgray
46 w(the)f(names)h(of)f(the)h(lab)s(el)f(attributes)i(separated)f(b)m
(y)f(spaces,)p 0 TeXcolorgray 560 4490 a(4.)p 0 TeXcolorgray
46 w(the)g(k)m(eyw)m(ord)i Fn(ID)p Fr(,)p 0 TeXcolorgray
560 4668 a(5.)p 0 TeXcolorgray 46 w(the)g(k)m(eyw)m(ord)i
Fn(#REQUIRED)c Fr(if)i(the)h(elemen)m(t)h(m)m(ust)f(alw)m(a)m(ys)g(b)s
(e)f(lab)s(elled,)i(other-)676 4781 y(wise)c Fn(#IMPLIED)p
Fr(,)p 0 TeXcolorgray 560 4959 a(6.)p 0 TeXcolorgray
46 w(a)g(closing)h(tag)f Fn(>)p 0 TeXcolorgray 1898 5225
a Fr(15)p 0 TeXcolorgray eop end
%%Page: 16 16
TeXDict begin 16 15 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XML/In)m(ternal)36 b(linking/References)589
686 y Fr(F)-8 b(or)31 b(the)g(references,)g(use)p 0 TeXcolorgray
560 837 a(1.)p 0 TeXcolorgray 46 w(an)f(op)s(ening)h(tag)g
Fn(<!ATTLIST)p Fr(,)p 0 TeXcolorgray 560 1010 a(2.)p
0 TeXcolorgray 46 w(the)f(name)h(of)f(the)h(referring)g(elemen)m(t,)p
0 TeXcolorgray 560 1183 a(3.)p 0 TeXcolorgray 46 w(the)f(names)h(of)f
(the)h(reference)g(attributes)g(separated)h(b)m(y)e(spaces,)p
0 TeXcolorgray 560 1356 a(4.)p 0 TeXcolorgray 46 w(the)g(k)m(eyw)m(ord)
i Fn(IDREF)p Fr(,)p 0 TeXcolorgray 560 1529 a(5.)p 0
TeXcolorgray 46 w(the)k(k)m(eyw)m(ord)h Fn(#REQUIRED)d
Fr(if)h(the)i(elemen)m(t)g(m)m(ust)g(alw)m(a)m(ys)g(carry)f(a)g
(reference,)676 1642 y(otherwise)31 b Fn(#IMPLIED)p Fr(,)p
0 TeXcolorgray 560 1815 a(6.)p 0 TeXcolorgray 46 w(a)f(closing)h(tag)f
Fn(>)448 2048 y Fq(XML/In)m(ternal)36 b(linking)e(\(con)m(t\))589
2148 y Fr(F)-8 b(or)31 b(example,)p 0 TeXcolorgray 0
TeXcolorgray 448 2285 a Fk(<?xml)40 b(version='1.0'?>)448
2385 y(<!DOCTYPE)g(map)g([)528 2485 y(<!ATTLIST)g(country)g(code)120
b(ID)160 b(#REQUIRED>)528 2584 y(<!ATTLIST)40 b(country)g(name)120
b(CDATA)40 b(#REQUIRED>)528 2684 y(<!ATTLIST)g(country)g(border)g
(IDREF)g(#IMPLIED>)448 2783 y(]>)448 2883 y(<map>)528
2983 y(<country)g(code="uk")g(name="United)g(Kingdom")g(border="ie"/>)
528 3082 y(<country)g(code="ie")g(name="Ireland")g(border="uk"/>)448
3182 y(</map>)448 3515 y Fq(XML/Commen)m(ts)589 3628
y Fr(It)28 b(is)g(p)s(ossible)g(to)h(include)g(commen)m(ts)h(in)e(an)g
Fp(XML)g Fr(do)s(cumen)m(t.)41 b(They)29 b(are)f(made)448
3741 y(of)p 0 TeXcolorgray 560 3892 a(1.)p 0 TeXcolorgray
46 w(an)i(op)s(ening)h(tag)g(\020)8 b Fn(<!--)p Fr(\021,)p
0 TeXcolorgray 560 4065 a(2.)p 0 TeXcolorgray 46 w(some)30
b(text)g(without)i(the)f(sequence)f(\020)8 b Fn(--)p
Fr(\021,)p 0 TeXcolorgray 560 4238 a(3.)p 0 TeXcolorgray
46 w(a)30 b(closing)h(tag)f(\020)8 b Fn(-->)p Fr(\021.)448
4375 y(F)-8 b(or)31 b(example)p 0 TeXcolorgray 0 TeXcolorgray
448 4513 a Fk(<p>Our)40 b(store)g(is)g(located)g(at</p>)448
4613 y Fh(<!-)g Fk(<address>Eunpyeong-gu,)g(Seoul</address>)g
Fh(->)448 4712 y Fk(<address>Gangnam-gu,)g(Seoul</address>)589
4863 y Fr(Con)m(trary)35 b(to)f(programming)h(languages,)g(commen)m(ts)
g(are)f Fq(not)f Fr(ignored)h(b)m(y)g(the)448 4976 y(parsers)d(and)f
(are)h(no)s(des)f(of)g(the)h Fp(XML)e Fr(tree.)p 0 TeXcolorgray
1898 5225 a(16)p 0 TeXcolorgray eop end
%%Page: 17 17
TeXDict begin 17 16 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XML/Namespaces)589 686 y
Fr(Eac)m(h)32 b Fp(XML)d Fr(do)s(cumen)m(t)j(de\034nes)e(its)g(o)m(wn)h
(elemen)m(t)h(tags,)e(w)m(e)h(can)f(call)h(its)e Fg(vo)-5
b(c)g(ab-)448 799 y(ulary)p Fr(.)589 989 y(In)23 b(case)g(w)m(e)h(use)e
(external)i(en)m(tities)g(whic)m(h)g(refer)f(to)g(other)h
Fp(XML)e Fr(do)s(cumen)m(t)j(using,)448 1101 y(b)m(y)45
b(coincidence,)50 b(the)44 b(same)h(tags,)j(w)m(e)d(end)g(with)f(an)h
(am)m(biguit)m(y)h(in)f(the)f(master)448 1214 y(do)s(cumen)m(t.)589
1404 y(A)22 b(go)s(o)s(d)g(w)m(a)m(y)h(to)f(a)m(v)m(oid)i(these)e(name)
h(clashes)f(it)g(to)g(use)g Fq(namespaces)p Fr(.)39 b(A)21
b(names-)448 1517 y(pace)36 b(is)f(a)h(user-de\034ned)h(annotation)g
(of)e(eac)m(h)i(elemen)m(t)g(tag)f(names)g(and)g(attribute)448
1630 y(names.)589 1820 y(Therefore,)30 b(if)e(t)m(w)m(o)i
Fp(XML)e Fr(do)s(cumen)m(ts)h(use)f(t)m(w)m(o)i(di\033eren)m(t)g
(namespaces,)f(i.e.,)h(t)m(w)m(o)448 1933 y(di\033eren)m(t)39
b(tag)f(annotations,)i(there)f(is)e(no)g(w)m(a)m(y)i(to)e(mix)h(their)g
(elemen)m(ts)g(when)h(im-)448 2046 y(p)s(orting)f(one)g(do)s(cumen)m(t)
g(in)m(to)h(the)e(other,)j(b)s(ecause)d(eac)m(h)i(elemen)m(t)f(tag)g
(carries)g(an)448 2159 y(extra)31 b(sp)s(ecial)f(annotation)i(whic)m(h)
g(is)e(di\033eren)m(t.)448 2393 y Fq(XML/Namespaces)38
b(\(con)m(t\))589 2493 y Fr(The)28 b(de\034nition)g(of)e(a)h(namespace)
h(can)f(b)s(e)f(done)i(at)e(the)i(lev)m(el)f(of)f(an)m(y)h(elemen)m(t)i
(b)m(y)448 2593 y(using)i(a)f(sp)s(ecial)h(attribute)g(with)g(the)g
(follo)m(wing)h(syn)m(tax:)p 0 TeXcolorgray 0 TeXcolorgray
448 2739 a Fk(xmlns:)p Fc(prefix)40 b Fk(=)g(")p Fc(URL)p
Fk(")589 2885 y Fr(where)33 b Fg(pr)-5 b(e\034x)44 b
Fr(is)32 b(the)g(space)h(name)f(and)h Fg(URL)e Fr(\()p
Fg(Universal)j(R)-5 b(esour)g(c)g(e)37 b(L)-5 b(o)g(c)g(ation)7
b Fr(\))448 2984 y(p)s(oin)m(ts)39 b(to)f(a)g(w)m(eb)h(page)g
(describing)g(in)g(natural)g(language)g(\(e.g.,)i(in)d(English\))i(the)
448 3084 y(namespace.)p 0 TeXcolorgray 0 TeXcolorgray
448 3230 a Fk(<?xml)g(version="1.0"?>)448 3330 y(<)p
Fh(syllabus:)p Fk(journal)488 3429 y Fh(xmlns:syllabus)p
Fk(="http://konkuk.ac.kr/~rinderkn/syllabus.html">)488
3529 y(<)p Fh(syllabus:)p Fk(date>26)g(August)g(2006</)p
Fh(syllabus:)p Fk(date>)488 3629 y(<)p Fh(syllabus:)p
Fk(subject)g Fh(syllabus:)p Fk(hard="no">)568 3728 y(XML)g(and)g
(company</)p Fh(syllabus:)p Fk(subject>)488 3828 y(<)p
Fh(syllabus:)p Fk(abstract>)568 3927 y(We)g(will)g(study)g(XML,)g
(XPath)g(and)g(XSLT.</)p Fh(syllabus:)p Fk(abstract>)448
4027 y(</)p Fh(syllabus:)p Fk(journal>)448 4262 y Fq(XML/Namespaces)e
(\(con)m(t\))589 4375 y Fr(The)k(scop)s(e)g(of)f(a)h(namespace,)j
(i.e.,)g(the)d(part)g(of)f(the)h(do)s(cumen)m(t)h(where)g(it)e(is)448
4488 y(usable,)27 b(applies)f(to)g(the)g(subtree)g(whose)f(ro)s(ot)h
(is)f(the)h(elemen)m(t)h(declaring)g(the)e(names-)448
4600 y(pace.)589 4777 y(By)32 b(default,)h(if)f(the)h(pre\034x)f(is)g
(missing,)h(the)g(elemen)m(t)g(and)g(all)f(its)g(sub-elemen)m(ts)448
4877 y(without)g(pre\034x)f(b)s(elong)g(to)f(the)h(namespace.)42
b(So,)31 b(the)g(previous)g(example)g(could)g(b)s(e)448
4976 y(simply)g(rewritten)p 0 TeXcolorgray 1898 5225
a(17)p 0 TeXcolorgray eop end
%%Page: 18 18
TeXDict begin 18 17 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 448 573
a Fk(<?xml)40 b(version="1.0"?>)448 672 y(<journal)g
Fh(xmlns)p Fk(="http://konkuk.ac.kr/~rinderkn/syllabus.html">)488
772 y(<date>26)g(August)g(2006</date>)488 872 y(<subject)g
(hard="no">XML)g(and)g(company</subject>)488 971 y(<abstract>We)g(will)
g(study)g(XML,)g(XPath)g(and)g(XSLT.</abstract>)448 1071
y(</journal>)589 1259 y Fr(Note)31 b(that)g(the)f(colon)i(is)d(missing)
i(in)f(the)h(namespace)h(attribute.)448 1499 y Fq
(XML/Namespaces/Example)589 1612 y Fr(An)22 b(example)h(of)f(a)m(v)m
(oided)h(clash)g(name.)38 b(File)22 b Fn(fruits.xml)e
Fr(con)m(tains)j Fp(HTML)f Fr(co)s(de:)p 0 TeXcolorgray
0 TeXcolorgray 448 1799 a Fn(<table>)536 1912 y(<tr>)623
2025 y(<td>Bananas</td>)623 2138 y(<td>Oranges</td>)536
2251 y(</tr>)448 2364 y(</table>)448 2551 y Fr(File)31
b Fn(furniture.xml)c Fr(con)m(tains)32 b(a)e(description)i(of)e(pieces)
g(of)g(furniture:)p 0 TeXcolorgray 0 TeXcolorgray 448
2739 a Fn(<table>)536 2852 y(<name>Round)41 b(table</name>)536
2965 y(<wood>Oak</wood>)448 3078 y(</table>)448 3318
y Fq(XML/Namespaces/Example)d(\(con)m(t\))589 3431 y
Fr(The)31 b(master)g(do)s(cumen)m(t)h Fn(main.xml)c Fr(includes)j(b)s
(oth)g(\034les:)p 0 TeXcolorgray 0 TeXcolorgray 448 3618
a Fn(<?xml)43 b(version="1.0"?>)448 3731 y(<!DOCTYPE)f(eclectic)g([)536
3844 y(<!ENTITY)g(part1)h(SYSTEM)f("fruits.xml">)536
3957 y(<!ENTITY)g(part2)h(SYSTEM)f("furniture.xml">)448
4070 y(]>)448 4183 y(<eclectic>)536 4296 y(&part1;)536
4409 y(&part2;)448 4522 y(</eclectic>)448 4709 y Fr(The)30
b(problem)h(is)f(that)g Fn(table)e Fr(has)i(a)f(di\033eren)m(t)i
(meaning)g(in)f(the)g(t)m(w)m(o)h(included)g(\034les,)448
4822 y(so)f(they)h(should)f(not)h(b)s(e)f(confused:)41
b(this)30 b(is)g(a)h(clash)f(name.)p 0 TeXcolorgray 1898
5225 a(18)p 0 TeXcolorgray eop end
%%Page: 19 19
TeXDict begin 19 18 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XML/Namespaces/Example)38
b(\(con)m(t\))589 686 y Fr(The)31 b(solution)g(consists)f(in)h(using)f
(t)m(w)m(o)i(di\033eren)m(t)g(namespaces.)41 b(First)p
0 TeXcolorgray 0 TeXcolorgray 448 872 a Fn(<html:table)h
(xmlns:html="http://www.w3.org)o(/TR/h)o(tml4)o(/">)536
985 y(<html:tr>)623 1098 y(<html:td>Bananas</html:td>)623
1211 y(<html:td>Oranges</html:td>)536 1323 y(</html:tr>)448
1436 y(</html:table>)448 1622 y Fr(Second)p 0 TeXcolorgray
0 TeXcolorgray 448 1808 a Fn(<f:table)g
(xmlns:f="http://www.e-shop.com/f)o(urnit)o(ures)o(/">)536
1921 y(<f:name>Round)f(table</f:name>)536 2034 y(<f:wood>Oak</f:wood>)
448 2147 y(</f:table>)448 2387 y Fq(XML/Namespaces/Example)d(\(con)m
(t\))589 2500 y Fr(But)27 b(this)g(is)f(a)g(hea)m(vy)h(solution...)40
b(F)-8 b(ortunately)g(,)30 b(namespaces)d(can)g(b)s(e)f(defaulted:)p
0 TeXcolorgray 0 TeXcolorgray 448 2686 a Fn(<table)43
b(xmlns="http://www.w3.org/TR/h)o(tml4/)o(">)536 2799
y(<tr>)623 2912 y(<td>Bananas</td>)623 3025 y(<td>Oranges</td>)536
3138 y(<tr>)448 3251 y(</table>)448 3437 y Fr(Second)p
0 TeXcolorgray 0 TeXcolorgray 448 3623 a Fn(<table)g
(xmlns="http://www.e-shop.com/)o(furni)o(tures)o(/">)536
3736 y(<name>Round)e(table</name>)536 3848 y(<wood>Oak</wood>)448
3961 y(</table>)448 4201 y Fq(XML/Namespaces/Example)d(\(con)m(t\))589
4314 y Fr(The)31 b(t)m(w)m(o)h(kinds)e(of)g(tables)h(can)f(b)s(e)g
(mixed.)41 b(F)-8 b(or)31 b(example)p 0 TeXcolorgray
0 TeXcolorgray 448 4525 a Fn(<mix)43 b(xmlns:html="http://www.w3.org/T)
o(R/htm)o(l4/")667 4638 y(xmlns:f="http://www.e-shop.com/)o(furni)o
(tures)o(/">)448 4751 y(<html:table>)448 4863 y(...)536
4976 y(<f:table>)p 0 TeXcolorgray 1898 5225 a Fr(19)p
0 TeXcolorgray eop end
%%Page: 20 20
TeXDict begin 20 19 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fn(...)536 686 y(</f:table>)448
799 y(...)448 912 y(<html:table>)448 1024 y(</mix>)448
1230 y Fr(Note)35 b(that)g(elemen)m(t)h Fn(mix)e Fr(has)g(no)h
(namespace)h(asso)s(ciated)f(\(it)f(is)g(neither)i Fn(html)e
Fr(nor)448 1343 y Fn(f)p Fr(\).)448 1582 y Fq(XML/Namespaces/Un)m
(binding)i(and)e(rebinding)589 1681 y Fr(It)c(is)g(p)s(ossible)g(to)h
(un)m(bind)h(or)e(rebind)h(a)g(pre\034x)f(namespace:)p
0 TeXcolorgray 0 TeXcolorgray 448 1849 a Fk(<?xml)40
b(version="1.1"?>)448 1949 y(<x)g(xmlns:n1="http://www.w3.org">)528
2049 y(<n1:a/>)g(<!--)g(valid;)g(the)g(prefix)g(n1)g(is)g(bound)g(to)
1048 2148 y(http://www.w3.org)g(-->)608 2248 y(<x)g(xmlns:n1="">)688
2347 y(<n1:a/>)g(<!--)g(invalid;)g(the)g(prefix)g(n1)g(is)g(not)g
(bound)f(here)h(-->)688 2447 y(<x)g(xmlns:n1="http://www.w3.org">)768
2547 y(<n1:a/>)g(<!--)g(valid;)g(the)g(prefix)g(n1)g(is)g(bound)f
(again)h(-->)688 2646 y(</x>)568 2746 y(</x>)448 2846
y(</x>)448 3085 y Fq(XML/Namespaces/Un)m(binding)c(the)f(default)g
(namespace)p 0 TeXcolorgray 0 TeXcolorgray 448 3276 a
Fk(<?xml)40 b(version='1.0'?>)448 3376 y(<Beers>)528
3476 y(<table)g(xmlns='http://www.w3.org/1999/xhtml'>)608
3575 y(<!--)g(default)g(namespace)g(is)g(now)g(XHTML)g(-->)608
3675 y(<th><td>Name</td><td>Origin</td><td>Description</td></th>)608
3775 y(<tr>)688 3874 y(<!--)g(Unbinding)g(XHTML)g(namespace)g(inside)g
(table)f(cells)h(-->)688 3974 y(<td><brandName)g
(xmlns="">Huntsman</brandName></td>)688 4073 y(<td><origin)g
(xmlns="">Bath,)g(UK</origin></td>)688 4173 y(<td><details)g(xmlns="">)
928 4273 y(<class>Bitter</class>)928 4372 y(<hop>Fuggles</hop>)928
4472 y(<pro>Wonderful)g(hop,)g(good)g(summer)g(beer</pro>)928
4572 y(<con>Fragile;)g(excessive)g(variance)g(pub)g(to)f(pub</con>)848
4671 y(</details></td>)608 4771 y(</tr>)528 4870 y(</table>)448
4970 y(</Beers>)p 0 TeXcolorgray 1898 5225 a Fr(20)p
0 TeXcolorgray eop end
%%Page: 21 21
TeXDict begin 21 20 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XML/Namespaces/More)38 b(name)d(scoping)p
0 TeXcolorgray 0 TeXcolorgray 448 772 a Fk(<?xml)40 b(version="1.0")g
(encoding="UTF-8"?>)448 872 y(<!--)g(initially,)g(the)g(default)g
(namespace)g(is)g("books")g(-->)448 971 y(<book)g
(xmlns='http://loc.gov/books')608 1071 y
(xmlns:isbn='http://isbn.org/0-395-36341-6')608 1171
y(xml:lang="en")g(lang="en">)528 1270 y(<title>Cheaper)g(by)g(the)g
(Dozen</title>)528 1370 y(<isbn:number>1568491379</isbn:number>)528
1469 y(<notes>)608 1569 y(<!--)g(make)g(HTML)g(the)g(default)g
(namespace)808 1669 y(for)g(a)g(hypertext)g(commentary)g(-->)608
1768 y(<p)g(xmlns='http://www.w3.org/1999/xhtml'>)768
1868 y(This)g(is)g(also)g(available)768 1968 y(<a)g
(href="http://www.w3.org/">online</a>.)608 2067 y(</p>)528
2167 y(</notes>)448 2267 y(</book>)448 2507 y Fq(XML/Namespaces/A)m
(ttributes)589 2619 y Fr(F)-8 b(or)29 b(example,)h(eac)m(h)f(of)f(the)h
Fn(bad)f Fr(empt)m(y-elemen)m(t)j(tags)d(is)g(in)m(v)-5
b(alid)30 b(in)e(the)h(follo)m(w-)448 2732 y(ing:)p 0
TeXcolorgray 0 TeXcolorgray 448 2920 a Fn(<!--)43 b(http://www.w3.org)d
(is)k(bound)e(to)i(n1)f(and)g(n2)h(-->)448 3033 y(<x)g
(xmlns:n1="http://www.w3.org")580 3146 y(xmlns:n2="http://www.w3.org")
37 b(>)536 3259 y(<bad)43 b(a="1")174 b(a="2"/>)217 b(<!--)43
b(invalid)f(-->)536 3372 y(<bad)h(n1:a="1")f(n2:a="2"/>)85
b(<!--)43 b(invalid)f(-->)448 3485 y(</x>)448 3725 y
Fq(XML/Namespaces/A)m(ttributes)c(\(con)m(t\))589 3824
y Fr(Ho)m(w)m(ev)m(er,)33 b(eac)m(h)f(of)e(the)h(follo)m(wing)h(is)e(v)
-5 b(alid,)31 b(the)g(second)g(b)s(ecause)g Fq(the)36
b(default)448 3924 y(namespace)g(do)s(es)f(not)f(apply)g(to)h
(attribute)h(names)p Fr(:)p 0 TeXcolorgray 0 TeXcolorgray
448 4098 a Fk(<!--)k(http://www.w3.org)g(is)g(bound)g(to)g(n1)g(and)g
(is)g(the)g(default)f(-->)448 4198 y(<x)h(xmlns:n1="http://www.w3.org")
568 4298 y(xmlns="http://www.w3.org")g(>)528 4397 y(<good)g(a="1")g
(b="2"/>)160 b(<!--)40 b(valid)g(-->)528 4497 y(<good)g(a="1")g
(n1:a="2"/>)g(<!--)g(valid)g(-->)448 4596 y(</x>)p 0
TeXcolorgray 1898 5225 a Fr(21)p 0 TeXcolorgray eop end
%%Page: 22 22
TeXDict begin 22 21 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XML/Namespaces)38 b(\(con)m(t\))589
686 y Fr(Namespaces)31 b(will)g(b)s(e)f(v)m(ery)g(imp)s(ortan)m(t)i
(when)f(learning)i Fp(XSL)-8 b(T)p Fr(.)589 898 y(Although)32
b(namespaces)f(are)f(declared)i(as)e(attributes,)i(they)e(are)h(presen)
m(t)g(in)g(the)448 1011 y Fp(XML)k Fr(tree)i(corresp)s(onding)g(to)f
(the)g(do)s(cumen)m(t)i(as)d(a)h(sp)s(ecial)g(no)s(de,)i(di\033eren)m
(t)f(from)448 1124 y(the)31 b(attribute)h(no)s(des.)448
1364 y Fq(XML/Pro)s(cessing)j(instructions)589 1477 y
Fr(In)d(some)h(exceptional)g(cases,)f(it)h(ma)m(y)f(b)s(e)g(useful)g
(to)g(include)i(in)e(an)g Fp(XML)g Fr(do)s(cu-)448 1590
y(men)m(t)g(some)e(data)h(that)g(is)f(targeted)i(to)e(a)g(sp)s
(eci\034c)h Fp(XML)e Fr(pro)s(cessor.)589 1803 y(This)35
b(data)h(is)e(then)i(em)m(b)s(edded)g(in)f(a)g(sp)s(ecial)g(elemen)m
(t,)j(and)d(the)g(data)h(itself)e(is)448 1915 y(called)25
b(a)f Fq(pro)s(cessing)j(instruction)c Fr(b)s(ecause)i(it)f(tells)g(to)
g(a)h(sp)s(eci\034c)f(pro)s(cessor,)h(e.g.,)448 2028
y Fp(Saxon)p Fr(,)32 b(what)f(to)g(do)f(at)h(this)f(p)s(oin)m(t.)589
2241 y(The)h(syn)m(tax)g(is)p 0 TeXcolorgray 0 TeXcolorgray
448 2429 a Fn(<?)p Fm(target)42 b(data)p Fn(?>)448 2616
y Fr(The)28 b Fg(tar)-5 b(get)37 b Fr(is)27 b(a)g(string)h(supp)s(osed)
f(to)g(b)s(e)g(recognised)i(b)m(y)e(a)g(sp)s(eci\034c)h
Fp(XML)e Fr(pro)s(cessor)448 2729 y(and)41 b(the)f Fg(data)47
b Fr(is)39 b(then)h(used)g(b)m(y)g(this)g(pro)s(cessor.)69
b(Note)40 b(that)g(the)g(data)h(ma)m(y)f(b)s(e)448 2842
y(absen)m(t)32 b(and)e(that)h(it)g(con)m(tains)g(attributes.)42
b(F)-8 b(or)31 b(example:)p 0 TeXcolorgray 0 TeXcolorgray
448 3030 a Fn(<?xml)43 b(version="1.0"?>)448 3270 y Fq(XML/Chec)m(king)
36 b(the)f(w)m(ell-formedness)589 3383 y Fr(All)d Fp(XML)f
Fr(pro)s(cessors)h(m)m(ust)g(c)m(hec)m(k)h(whether)g(the)g(input)f(do)s
(cumen)m(t)i(satisfy)d(the)448 3496 y Fg(syntactic)-5
b(al)41 b Fr(requiremen)m(ts)31 b(of)f(a)h(w)m(ell-formed)h
Fp(XML)d Fr(do)s(cumen)m(t.)589 3708 y(In)h(particular,)p
0 TeXcolorgray 585 3896 a Fo(\017)p 0 TeXcolorgray 46
w Fr(elemen)m(t)e(tags)e(m)m(ust)h(b)s(e)f(closed,)i(except)f(for)f
(empt)m(y)h(elemen)m(ts)h(\(this)e(has)h(to)f(b)s(e)676
4009 y(con)m(trasted)32 b(with)e Fp(HTML)p Fr(\),)p 0
TeXcolorgray 585 4196 a Fo(\017)p 0 TeXcolorgray 46 w
Fr(the)20 b(prede\034ned)i(en)m(tities)g(m)m(ust)e(b)s(e)g(really)h
(prede\034ned)h(\(unico)s(des)f(are)f(c)m(hec)m(k)m(ed\),)p
0 TeXcolorgray 585 4384 a Fo(\017)p 0 TeXcolorgray 46
w Fr(in)m(ternal)32 b(en)m(tities)f(m)m(ust)g(b)s(e)f(declared)i(in)e
(the)h(prolog,)g(etc.)448 4572 y Fq(V)-9 b(alidating)33
b Fr(pro)s(cessors)c(also)h(c)m(hec)m(k)h(that)g(the)f(external)h(en)m
(tities)g(are)f(found)g(\(their)448 4684 y(w)m(ell-formedness)j(is)e(c)
m(hec)m(k)m(ed)i(after)f(they)f(ha)m(v)m(e)i(b)s(een)e(inserted)h(in)f
(the)h(master)g(do)s(c-)448 4797 y(umen)m(t\).)p 0 TeXcolorgray
1898 5225 a(22)p 0 TeXcolorgray eop end
%%Page: 23 23
TeXDict begin 23 22 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XML/Chec)m(king)36 b(the)f(w)m
(ell-formedness)f(\(con)m(t\))589 686 y Fr(There)h(are)f(sev)m(eral)h
Fp(XML)e Fr(parsers)h(a)m(v)-5 b(ailable)35 b(for)e(free)h(on)g(the)g
(in)m(ternet,)j(imple-)448 799 y(men)m(ted)32 b(in)f(sev)m(eral)g
(languages.)589 1011 y(Most)24 b(of)g(them)i(are)e(actually)h
(libraries)g(\(API\))g(for)f(the)h(programmer)h(of)e(an)h
Fp(XML)p Fr(-)448 1124 y(handling)32 b(application)g(w)m(ould)g(need)f
(to)f(link)g(with.)589 1337 y(The)24 b(textb)s(o)s(ok)f(pro)m(vides)g
(a)h(v)m(ery)f(basic)g(standalone)h(parser,)h Fn(dbstat.pl)p
Fr(,)e(written)448 1450 y(in)42 b Fp(P)m(erl)p Fr(,)i(whic)m(h)e(pro)m
(vides)g(also)f(some)g(statistics)g(ab)s(out)h(the)f(do)s(cumen)m(t)i
(\(lik)m(e)f(the)448 1562 y(n)m(um)m(b)s(er)32 b(of)e(elemen)m(ts)i(of)
e(di\033eren)m(t)h(kinds\).)589 1775 y(There)h(is)e(another,)h(more)g
(complete,)h(parser)f(called)g Fn(xmllint)p Fr(.)p 0
TeXcolorgray 1898 5225 a(23)p 0 TeXcolorgray eop end
%%Page: 24 24
TeXDict begin 24 23 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XHTML)589 686 y Fr(The)26
b Fq(eXtensible)j(Hyp)s(er-T)-9 b(ext)29 b(Markup)f(Language)e
Fr(\()p Fj(XHTML)p Fr(\))g(is)e(a)h(sub-)448 799 y(set)34
b(of)40 b Fp(XML)33 b Fr(so)h(that)g(it)g(b)s(ecomes)g(v)m(ery)g(close)
g(to)g Fj(HTML)k(4.01)p Fr(,)d(the)f(language)h(for)448
912 y(sp)s(ecifying)30 b(w)m(eb)h(pages.)589 1092 y(The)36
b(user-agen)m(ts,)h(e.g.,)g(w)m(eb)f(bro)m(wsers,)h(are)e(encouraged)i
(to)e(accept)g Fp(XHTML)p Fr(.)448 1205 y(If)d(this)g(p)s(olicy)g(b)s
(ecomes)g(widespread,)i(it)f(will)f(enable)h(the)g(follo)m(wing)h(step)
e(of)g(using)448 1318 y(full)f Fp(XML)p Fr(.)589 1498
y(See)g(the)g(W3C)f(Recommendations)i(for)e Fp(XHTML)g
Fr(and)h Fp(HTML)f Fr(at)p 0 TeXcolorgray 0 TeXcolorgray
680 1646 a Fn(http://www.w3.org/TR/xhtml1/)24 b
(http://www.w3.org/TR/html401/)448 1879 y Fq(XHTML/Global)36
b(Structure)589 1978 y Fr(All)31 b Fp(XHTML)e Fr(\034le)i(con)m
(taining)h(English)g(should)e(ha)m(v)m(e)i(the)e(follo)m(wing)i
(pattern:)p 0 TeXcolorgray 0 TeXcolorgray 448 2113 a
Fk(<?xml)40 b(version="1.0")g(encoding=")p Fc(encoding)p
Fk("?>)448 2212 y(<!DOCTYPE)g(html)608 2312 y(PUBLIC)g("-//W3C//DTD)g
(XHTML)g(1.0)g(Strict//EN")608 2411 y
("http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">)448
2511 y(<html)g(xmlns="http://www.w3.org/1999/xhtml")688
2611 y(xml:lang="en")g(lang="en">)528 2710 y(<head>)608
2810 y(<title>)p Fc(the)g(title)g(of)g(the)g(window)s
Fk(</title>)528 2910 y(</head>)528 3009 y(<body>)648
3109 y Fc(...contents)g(and)g(markup...)528 3208 y Fk(</body>)448
3308 y(</html>)448 3541 y Fq(XHTML/Headings)589 3640
y Fr(Elemen)m(ts)29 b Fn(h1)p Fr(,)f Fn(h2)p Fr(,)f(...,)i
Fn(h6)d Fr(allo)m(w)j(six)e(kinds)g(of)g(headers,)h(of)f(decreasing)i
(fon)m(t)f(size.)448 3740 y(Consider)j(the)g(follo)m(wing)h(do)s(cumen)
m(t:)p 0 TeXcolorgray 0 TeXcolorgray 448 3874 a Fk(<?xml)40
b(version="1.0")g(encoding="UTF-8"?>)448 3974 y(<!DOCTYPE)g(html)g
(PUBLIC)g("-//W3C//DTD)g(XHTML)g(1.0)g(Strict//EN")848
4073 y("http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">)448
4173 y(<html)g(xmlns="http://www.w3.org/1999/xhtml")688
4273 y(xml:lang="en")g(lang="en">)528 4372 y(<head><title>Comparing)g
(heading)g(sizes</title></head>)528 4472 y(<body>)608
4572 y(<h1>The)g(biggest</h1>)608 4671 y(<h2>Just)g(second</h2>)608
4771 y(<h3>Even)g(smaller</h3>)528 4870 y(</body>)448
4970 y(</html>)p 0 TeXcolorgray 1898 5225 a Fr(24)p 0
TeXcolorgray eop end
%%Page: 25 25
TeXDict begin 25 24 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XHTML/T)-9 b(ext)p 0 TeXcolorgray
585 785 a Fo(\017)p 0 TeXcolorgray 46 w Fr(The)22 b(empt)m(y)g(elemen)m
(t)h Fn(<br/>)e Fr(is)g(in)m(terpreted)j(b)m(y)e(user-agen)m(ts)h(as)e
(a)g Fq(line)k(break)p Fr(;)p 0 TeXcolorgray 585 973
a Fo(\017)p 0 TeXcolorgray 46 w Fr(elemen)m(t)f Fn(em)e
Fr(marks)h(text)g(to)g(b)s(e)g Fq(emphasized)f Fr(\(e.g.,)j(b)m(y)e
(using)g(an)h(italic)f(fon)m(t\);)p 0 TeXcolorgray 585
1161 a Fo(\017)p 0 TeXcolorgray 46 w Fr(elemen)m(t)42
b Fn(strong)d Fr(marks)i(text)g(to)g(b)s(e)f(emphasized)i(stronger)g
(than)f(with)h Fn(em)676 1274 y Fr(\(e.g.,)31 b(b)m(y)f(using)h(a)f(b)s
(old)g(fon)m(t\);)p 0 TeXcolorgray 585 1461 a Fo(\017)p
0 TeXcolorgray 46 w Fr(elemen)m(t)i Fn(p)d Fr(delimits)j(a)e
Fq(paragraph)p Fr(.)448 1701 y Fq(XHTML/Lists)589 1814
y Fr(There)i(are)e(three)h(kinds)f(of)g(lists:)p 0 TeXcolorgray
560 2002 a(1.)p 0 TeXcolorgray 46 w(unordered)h(lists;)p
0 TeXcolorgray 560 2189 a(2.)p 0 TeXcolorgray 46 w(ordered)g(lists;)p
0 TeXcolorgray 560 2377 a(3.)p 0 TeXcolorgray 46 w(lists)e(of)h
(de\034nitions.)448 2617 y Fq(XHTML/Unordered)35 b(lists)589
2730 y Fr(Unordered)h(lists)e(are)g(the)h(w)m(ell-kno)m(wn)i
(\020bullet)e(lists\021,)g(where)g(eac)m(h)g(line)g(is)f(dis-)448
2843 y(pla)m(y)m(ed)e(after)f(an)f(inden)m(tation)j(follo)m(w)m(ed)f(b)
m(y)e(a)h(bullet,)g(lik)m(e)g(the)f(follo)m(wing.)p 0
TeXcolorgray 585 3031 a Fo(\017)p 0 TeXcolorgray 46 w
Fr(elemen)m(t)i Fn(ul)d Fr(con)m(tains)j(an)e(unordered)i(list;)p
0 TeXcolorgray 585 3218 a Fo(\017)p 0 TeXcolorgray 46
w Fr(elemen)m(t)g Fn(li)d Fr(\(\020list)i(item\021\))g(con)m(tains)h
(an)e(item)h(in)g(the)f(list.)448 3458 y Fq(XHTML/Unordered)35
b(lists/Example)589 3571 y Fr(T)-8 b(ry)p 0 TeXcolorgray
0 TeXcolorgray 448 3759 a Fn(<h3>The)43 b(ingredients:</h3>)448
3872 y(<ul>)536 3985 y(<li>100)f(g.)h(flour,</li>)536
4098 y(<li>10)f(g.)i(sugar,</li>)536 4211 y(<li>1)f(cup)g(of)g
(water,</li>)536 4323 y(<li>2)g(eggs,</li>)536 4436 y(<li>salt)f(and)h
(pepper.</li>)448 4549 y(</ul>)p 0 TeXcolorgray 1898
5225 a Fr(25)p 0 TeXcolorgray eop end
%%Page: 26 26
TeXDict begin 26 25 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XHTML/Ordered)36 b(lists)589
686 y Fr(Ordered)c(lists)e(are)h(lists)f(whose)h(items)g(are)g(in)m
(tro)s(duced)h(b)m(y)e(an)h(inden)m(tation)i(fol-)448
799 y(lo)m(w)m(ed)f(b)m(y)f(a)f(n)m(um)m(b)s(er,)i(in)f(increasing)g
(order,)g(lik)m(e)g(the)g(follo)m(wing.)p 0 TeXcolorgray
560 986 a(1.)p 0 TeXcolorgray 46 w(elemen)m(t)h Fn(ol)d
Fr(con)m(tains)j(the)f(ordered)g(list,)p 0 TeXcolorgray
560 1174 a(2.)p 0 TeXcolorgray 46 w(elemen)m(t)h Fn(li)d
Fr(is)h(the)h(same)f(as)g(in)h(unordered)h(lists.)448
1414 y Fq(XHTML/Ordered)k(lists/Example)589 1527 y Fr(T)-8
b(ry)p 0 TeXcolorgray 0 TeXcolorgray 448 1715 a Fn(<h3>Procedure:</h3>)
448 1827 y(<ol>)536 1940 y(<li>Mix)42 b(dry)h(ingredients)f
(thoroughly;</li>)536 2053 y(<li>Pour)g(in)h(wet)g(ingredients;</li>)
536 2166 y(<li>Mix)f(for)h(10)h(minutes;</li>)536 2279
y(<li>Bake)e(for)h(one)g(hour)g(at)g(300)h(degrees.</li>)448
2392 y(</ol>)448 2632 y Fq(XHTML/Lists)37 b(of)d(de\034nitions)589
2745 y Fr(A)28 b(list)g(of)g(de\034nition)h(is)f(a)g(list)g(whose)h
(items)f(are)h(in)m(tro)s(duced)g(b)m(y)g(a)f(few)g(w)m(ords)h(in)448
2858 y(a)i(b)s(old)f(fon)m(t)h(follo)m(w)m(ed)h(b)m(y)f(the)f(con)m
(ten)m(ts)i(of)e(the)h(item)g(itself.)40 b(Consider)p
0 TeXcolorgray 448 3046 a Fq(hac)m(k)m(er)p 0 TeXcolorgray
106 w Fr(A)30 b(clev)m(er)i(programmer.)p 0 TeXcolorgray
448 3233 a Fq(nerd)p 0 TeXcolorgray 0 TeXcolorgray 448
3421 a(geek)p 0 TeXcolorgray 107 w Fr(A)e(tec)m(hnically)i(brigh)m(t)f
(but)g(so)s(cially)f(mis\034t)h(p)s(erson.)448 3661 y
Fq(XHTML/Lists)37 b(of)d(de\034nitions)g(\(con)m(t\))589
3774 y Fr(The)d(elemen)m(ts)h(in)m(v)m(olv)m(ed)g(are)p
0 TeXcolorgray 585 3961 a Fo(\017)p 0 TeXcolorgray 46
w Fn(dl)d Fr(\(\020de\034nition)j(list\021\),)f(whic)m(h)h(con)m(tains)
f(the)g(whole)g(list)f(of)g(de\034nitions;)p 0 TeXcolorgray
585 4149 a Fo(\017)p 0 TeXcolorgray 46 w Fn(dt)f Fr(\(\020de\034nition)
j(term\021\),)g(whic)m(h)f(con)m(tains)h(ev)m(ery)f(term)g(to)f(b)s(e)g
(de\034ned;)p 0 TeXcolorgray 585 4337 a Fo(\017)p 0 TeXcolorgray
46 w Fn(dd)20 b Fr(\(\020de\034nition)j(description\021\),)i(whic)m(h)e
(con)m(tains)f(ev)m(ery)g(de\034nitition)h(of)e(a)g(term.)p
0 TeXcolorgray 1898 5225 a(26)p 0 TeXcolorgray eop end
%%Page: 27 27
TeXDict begin 27 26 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XHTML/Lists)37 b(of)d(de\034nitions)g
(\(con)m(t\))589 672 y Fr(The)d(example)g(b)s(efore)g(corresp)s(onds)f
(to)p 0 TeXcolorgray 0 TeXcolorgray 448 847 a Fk(<h3>Excerpt:</h3>)448
946 y(<dl>)528 1046 y(<dt><strong>hacker</strong></dt>)608
1146 y(<dd>A)40 b(clever)g(programmer.</dd>)528 1245
y(<dt><strong>nerd</strong></dt>)528 1345 y
(<dt><strong>geek</strong></dt>)608 1445 y(<dd>A)g(technically)g
(bright)g(but)g(socially)g(misfit)g(person.</dd>)448
1544 y(</dl>)448 1784 y Fq(XHTML/T)-9 b(ables)589 1897
y Fr(A)25 b Fq(table)i Fr(is)e(a)g(rectangle)i(divided)f(in)m(to)g
(smaller)g(rectangles,)i(called)e Fq(cells)p Fr(,)h(whic)m(h)448
2010 y(con)m(tain)32 b(atomic)g(pieces)e(of)g(data.)589
2223 y(When)35 b(read)h(v)m(ertically)-8 b(,)37 b(cells)e(are)g(said)g
(to)g(b)s(elong)g(to)g Fq(columns)p Fr(,)f(whilst)h(hori-)448
2336 y(zon)m(tally)-8 b(,)32 b(they)f(b)s(elong)g(to)f
Fq(ro)m(ws)p Fr(.)589 2548 y(A)41 b(ro)m(w)g(or)g(a)f(column)i(can)f
(ha)m(v)m(e)h(a)e Fq(header)p Fr(,)k(i.e.,)f(a)e(cell)g(at)g(their)g(b)
s(eginning)448 2661 y(con)m(taining)33 b(a)d(name)h(in)g(b)s(old)f
(face.)589 2874 y(A)25 b(table)h(can)f(ha)m(v)m(e)h(a)f
Fq(caption)p Fr(,)h(whic)m(h)g(is)f(a)g(short)g(text)g(describing)h
(the)f(con)m(ten)m(ts)448 2986 y(of)30 b(the)h(table)g(and)g(displa)m
(y)m(ed)h(just)d(ab)s(o)m(v)m(e)i(it,)g(lik)m(e)g(a)f(title.)589
3199 y(Columns)i(can)e(b)s(e)g(divided)h(themselv)m(es)g(in)m(to)h
(sub-columns,)f(when)g(needed.)448 3439 y Fq(XHTML/T)-9
b(ables)38 b(\(con)m(t\))p 0 TeXcolorgray 0 TeXcolorgray
1363 3652 a Fg(A)32 b(test)h(table)g(with)f(mer)-5 b(ge)g(d)35
b(c)-5 b(el)5 b(ls)p 1182 3681 1522 4 v 1180 3794 4 113
v 1638 3794 V 1638 3794 V 1849 3760 a Fq(A)-12 b(v)m(erage)p
2414 3794 V 262 w(Red)p 2702 3794 V 1640 3797 777 4 v
1180 3907 4 113 v 1638 3907 V 1690 3873 a(heigh)m(t)p
2019 3907 V 100 w(w)m(eigh)m(t)p 2414 3907 V 100 w(ey)m(es)p
2702 3907 V 1182 3910 1522 4 v 1180 4023 4 113 v 1278
3989 a(Males)p 1638 4023 V 230 w Fr(1.9)p 2019 4023 V
227 w(0.003)p 2414 4023 V 157 w(40\045)p 2702 4023 V
1182 4026 1522 4 v 1180 4139 4 113 v 1232 4105 a Fq(F)j(emales)p
1638 4139 V 184 w Fr(1.7)p 2019 4139 V 227 w(0.002)p
2414 4139 V 157 w(43\045)p 2702 4139 V 1182 4143 1522
4 v 448 4313 a Fq(Males)38 b Fr(and)g Fq(F)-9 b(emales)38
b Fr(are)f(ro)m(w)h(headers.)60 b(The)38 b(column)g(headers)f(are)g
Fq(A)-12 b(v)m(erage)p Fr(,)448 4426 y Fq(Red)37 b(ey)m(es)p
Fr(,)d Fq(heigh)m(t)e Fr(and)h Fq(w)m(eigh)m(t)p Fr(.)46
b(The)33 b(column)g Fq(A)-12 b(v)m(erage)34 b Fr(spans)e(t)m(w)m(o)i
(columns;)448 4539 y(in)d(other)g(w)m(ords,)g(it)g(con)m(tains)g(t)m(w)
m(o)h(sub-columns,)f Fq(heigh)m(t)g Fr(and)f Fq(w)m(eigh)m(t)p
Fr(.)589 4652 y(The)h(caption)h(reads)e(\020)8 b Fg(A)32
b(test)h(table)g(with)f(mer)-5 b(ge)g(d)35 b(c)-5 b(el)5
b(ls)i Fr(\021.)p 0 TeXcolorgray 1898 5225 a(27)p 0 TeXcolorgray
eop end
%%Page: 28 28
TeXDict begin 28 27 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XHTML/T)-9 b(ables)38 b(\(con)m(t\))p
0 TeXcolorgray 585 775 a Fo(\017)p 0 TeXcolorgray 46
w Fr(Elemen)m(t)44 b Fn(table)e Fr(con)m(tains)i(the)g(table;)50
b(its)42 b(attribute)i Fn(border)e Fr(sp)s(eci\034es)h(the)676
888 y(width)36 b(of)f(the)g(table)h(b)s(orders,)h(i.e.,)g(of)e(the)h
(lines)f(separating)i(the)e(cells)h(from)676 1001 y(the)30
b(rest.)p 0 TeXcolorgray 585 1185 a Fo(\017)p 0 TeXcolorgray
46 w Fr(Elemen)m(t)i Fn(caption)c Fr(con)m(tains)k(the)f(caption.)p
0 TeXcolorgray 585 1369 a Fo(\017)p 0 TeXcolorgray 46
w Fr(Elemen)m(t)h Fn(th)d Fr(\(\020table)i(header\021\))h(con)m(tains)f
(a)f(ro)m(w)h(or)g(column)g(header,)g(i.e.,)g(the)676
1482 y(title)f(of)g(the)h(ro)m(w)g(of)f(column)i(in)e(b)s(old)h(t)m(yp)
s(e.)p 0 TeXcolorgray 585 1666 a Fo(\017)p 0 TeXcolorgray
46 w Fr(Elemen)m(t)h Fn(td)d Fr(\(\020table)i(data\021\))g(con)m(tains)
g(the)f(data)h(of)e(a)h(cell)h(\(if)e(not)i(a)f(header\).)p
0 TeXcolorgray 585 1850 a Fo(\017)p 0 TeXcolorgray 46
w Fr(Elemen)m(t)36 b Fn(tr)e Fr(\(\020table)h(ro)m(w\021\))h(con)m
(tains)f(a)g(ro)m(w,)h(i.e.,)g(a)e(series)g(of)41 b Fn(td)33
b Fr(elemen)m(ts,)676 1963 y(p)s(erhaps)d(starting)h(with)g(a)f
Fn(th)g Fr(elemen)m(t.)448 2202 y Fq(XHTML/T)-9 b(ables)38
b(\(con)m(t\))589 2301 y Fr(The)31 b(corresp)s(onding)i
Fp(HTML)d Fr(co)s(de)g(is)p 0 TeXcolorgray 0 TeXcolorgray
448 2467 a Fk(<table)40 b(border="1">)528 2567 y(<caption><em>A)g(test)
g(table)g(with)g(merged)g(cells</em></caption>)528 2666
y(<tr><th)g(rowspan="2"/>)688 2766 y(<th)g(colspan="2">Average</th>)688
2866 y(<th)g(rowspan="2">Red<br/>eyes</th>)528 2965 y(</tr>)528
3065 y(<tr><th>height</th><th>weight</th></tr>)528 3164
y(<tr><th>Males</th><td>1.9</td><td>0.003</td><td>40\045</td></tr>)528
3264 y(<tr><th>Females</th>)688 3364 y(<td>1.7</td>)688
3463 y(<td>0.002</td>)688 3563 y(<td>43\045</td>)528
3663 y(</tr>)448 3762 y(</table>)448 4001 y Fq(XHTML/T)-9
b(ables)38 b(\(con)m(t\))589 4114 y Fr(Notice)31 b(the)g(attributes)g
Fl(rowspan)e Fr(and)i Fl(colspan)d Fr(of)i(the)h Fn(th)f
Fr(elemen)m(t.)589 4319 y(A)m(ttribute)24 b Fn(rowspan)d
Fr(allo)m(ws)j(to)e(sp)s(ecify)g(ho)m(w)i(man)m(y)f(ro)m(ws)g(the)g
(curren)m(t)h(cell)f(spans.)448 4432 y(F)-8 b(or)31 b(example,)h(the)e
(\034rst)h(ro)m(w,)g(i.e.,)g(the)g(one)g(on)f(the)h(top-left)g(corner,)
g(is)f(empt)m(y)h(and)448 4545 y(co)m(v)m(ers)h(t)m(w)m(o)f(ro)m(ws)g
(b)s(ecause)g Fn(<th)43 b(rowspan="2"/>)p Fr(.)589 4751
y(A)m(ttribute)37 b Fn(colspan)c Fr(allo)m(ws)i(to)g(sp)s(ecify)f(ho)m
(w)h(man)m(y)h(columns)f(the)g(curren)m(t)i(cell)448
4863 y(spans.)j(F)-8 b(or)28 b(example,)h(the)f(second)g(cell)g(\(righ)
m(t)h(next)e(to)h(the)g(\034rst)g(one\))g(con)m(tains)h(the)448
4976 y(text)21 b(\020)8 b Fq(A)-12 b(v)m(erage)p Fr(\021)29
b(and)20 b(co)m(v)m(ers)i(t)m(w)m(o)f(columns)g(b)s(ecause)g
Fn(<th)43 b(colspan="2">Average</th>)p Fr(.)p 0 TeXcolorgray
1898 5225 a(28)p 0 TeXcolorgray eop end
%%Page: 29 29
TeXDict begin 29 28 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 589 573 a Fr(Notice)31 b(the)g(line)g(break)g
Fn(<br/>)f Fr(in)g(the)h(third)h(cell)f(\(\034rst)f(ro)m(w,)i(last)f
(column\))g(and)448 686 y(ho)m(w)i Fq(heigh)m(t)d Fr(and)h
Fq(w)m(eigh)m(t)g Fr(are)f(automatically)i(at)f(the)g(righ)m(t)g
(place.)448 926 y Fq(XHTML/Hyp)s(erlinks)589 1039 y Fr(Hyp)s(erlinks)c
(in)h Fp(XHTML)f Fr(are)g(sp)s(eci\034cied)h(b)m(y)g(the)g(elemen)m(t)h
(\020)8 b Fn(a)p Fr(\021)35 b(with)28 b(its)f(manda-)448
1152 y(tory)k(attribute)g Fn(href)p Fr(.)589 1351 y(F)-8
b(or)31 b(example,)h(consider)f(the)f(follo)m(wing)i(h)m(yp)s(erlink)f
(to)f(the)h(author's)g(w)m(eb)g(page:)p 0 TeXcolorgray
0 TeXcolorgray 448 1525 a Fk(<a)40 b
(href="http://konkuk.ac.kr/~rinderkn/">See)g(my)g(web)f(page.</a>)448
1765 y Fq(XHTML/V)-9 b(alidation)589 1878 y Fr(Just)46
b(lik)m(e)f Fp(XML)f Fr(do)s(cumen)m(ts,)50 b Fp(XHTML)44
b Fr(do)s(cumen)m(ts)i(can)g(b)s(e)e(and)i(should)f(b)s(e)448
1991 y(v)-5 b(alidated)32 b(b)s(efore)e(b)s(eing)g(published)i(on)e
(the)h(w)m(eb)g(or)g(distributed.)589 2204 y(The)g(page)g
Fn(http://validator.w3.org/)25 b Fr(allo)m(ws)31 b(y)m(ou)g(to)g(do)f
(that.)p 0 TeXcolorgray 1898 5225 a(29)p 0 TeXcolorgray
eop end
%%Page: 30 30
TeXDict begin 30 29 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(DTD)589 686 y Fr(W)-8 b(e)35
b(sa)m(w)f(at)g(page)g(10)g(that)h(the)f Fq(Do)s(cumen)m(t)k(T)m(yp)s
(e)h(Declaration)34 b Fr(ma)m(y)g(con-)448 799 y(tain)k(markup)g(whic)m
(h)g(constrains)g(the)f Fp(XML)f Fr(do)s(cumen)m(t)j(it)e(b)s(elongs)g
(to)g(\(elemen)m(ts,)448 912 y(attributes)32 b(etc.\).)589
1124 y(The)i(con)m(ten)m(t)h(of)e(a)g(Do)s(cumen)m(t)h(T)m(yp)s(e)f
(Declaration)i(is)d(made)i(of)f(a)g Fq(Do)s(cumen)m(t)448
1237 y(T)m(yp)s(e)39 b(De\034nition)p Fr(,)33 b(abbreviated)i
Fp(DTD)p Fr(.)e(So)h(the)f(former)h(is)f(the)h(con)m(tainer)h(of)f(the)
448 1350 y(latter.)589 1562 y(It)j(is)f(p)s(ossible)h(to)g(ha)m(v)m(e)h
(all)f(or)g(part)g(of)g(the)g Fp(DTD)f Fr(in)h(a)g(separate)h(\034le,)h
(usually)448 1675 y(with)31 b(the)g(extension)g(\020)8
b Fn(.dtd)p Fr(\021.)448 1915 y Fq(DTD/A)m(ttribute)35
b(lists)589 2028 y Fr(W)-8 b(e)43 b(already)h(sa)m(w)g
Fq(attribute)50 b(lists)43 b Fr(at)f(page)i(15)f(when)g(setting)g(up)g
(in)m(ternal)448 2141 y(linking.)589 2354 y(In)33 b(general,)i(the)e
Fn(ATTLIST)e Fr(can)i(b)s(e)g(used)g(to)g(sp)s(ecify)f(an)m(y)h(kind)g
(of)f(attributes)i(of)448 2467 y(an)d(elemen)m(t,)h(not)f(just)e(lab)s
(el)i(and)g(references.)589 2666 y(Consider)h(the)e(attribute)i
(declarations)g(for)e(elemen)m(t)i Fn(memo)p Fr(:)p 0
TeXcolorgray 0 TeXcolorgray 448 2840 a Fk(<!ATTLIST)40
b(memo)848 2940 y(ident)240 b(CDATA)400 b(#REQUIRED)848
3040 y(security)120 b(\(high)40 b(|)g(low\))120 b("high")848
3139 y(keyword)160 b(NMTOKEN)320 b(#IMPLIED>)589 3327
y Fn(CDATA)32 b Fr(stands)h(for)g Fq(c)m(haracter)38
b(data)c Fr(and)g(represen)m(ts)g(an)m(y)f(string.)49
b(A)32 b Fq(named)448 3440 y(tok)m(en)39 b Fr(\()p Fn(NMTOKEN)p
Fr(\))f(is)g(a)h(string)g(starting)g(with)h(a)e(letter)i(and)f(whic)m
(h)h(ma)m(y)f(con)m(tain)448 3553 y(letters,)31 b(n)m(um)m(b)s(ers)h
(and)f(certain)g(punctuation.)448 3793 y Fq(DTD/Elemen)m(t)k
(declarations)589 3906 y Fr(In)27 b(order)h(for)f(a)g(do)s(cumen)m(t)i
(to)e(b)s(e)g(v)-5 b(alidated,)29 b(whic)m(h)g(requires)e(more)h
(constrain)m(ts)448 4019 y(than)f(to)f(b)s(e)g(merely)h(w)m
(ell-formed,)i(all)d(the)h(elemen)m(ts)g(used)f(m)m(ust)h(b)s(e)f
(declared)h(in)g(the)448 4131 y Fp(DTD)p Fr(.)589 4344
y(The)39 b(name)f(of)g(eac)m(h)h(elemen)m(t)g(m)m(ust)g(b)s(e)e(asso)s
(ciated)h(a)g Fq(con)m(ten)m(t)44 b(mo)s(del)p Fr(,)39
b(i.e.,)448 4457 y(a)34 b(description)g(of)f(what)i(it)e(is)g(allo)m(w)
m(ed)j(to)d(con)m(tain,)j(in)e(terms)f(of)g(textual)h(data)g(and)448
4570 y(sub-elemen)m(ts)e(\(mark-up\).)589 4782 y(This)i(is)g(ac)m(hiev)
m(ed)i(b)m(y)e(means)g(of)g(the)g Fp(DTD)g Fn(ELEMENT)e
Fr(declarations.)53 b(There)35 b(are)448 4895 y(\034v)m(e)c(kinds)f(of)
g(con)m(ten)m(t)j(mo)s(dels.)p 0 TeXcolorgray 1898 5225
a(30)p 0 TeXcolorgray eop end
%%Page: 31 31
TeXDict begin 31 30 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(DTD/Elemen)m(t)35 b(declarations)g(\(con)m
(t\))589 686 y Fr(The)c(\034rst)g(kind)f(is)g(the)h Fq(empt)m(y)j
(elemen)m(t)p Fr(:)p 0 TeXcolorgray 0 TeXcolorgray 448
864 a Fn(<!ELEMENT)42 b(padding)g(EMPTY>)448 1042 y Fr(The)31
b(second)g(is)f(elemen)m(ts)h(with)g Fq(no)k(con)m(ten)m(t)g
(restriction)p Fr(:)p 0 TeXcolorgray 0 TeXcolorgray 448
1221 a Fn(<!ELEMENT)42 b(open)h(ALL>)448 1399 y Fr(The)31
b(third)g(is)f(elemen)m(ts)i(con)m(taining)h Fq(only)h(text)p
Fr(:)p 0 TeXcolorgray 0 TeXcolorgray 448 1577 a Fn(<!ELEMENT)42
b(emphasis)g(\(#PCDATA\)>)448 1755 y Fr(whic)m(h)32 b(means)f
Fq(parsed-c)m(haracter)k(data)p Fr(.)448 1994 y Fq(DTD/Elemen)m(t)g
(declarations)g(\(con)m(t\))589 2093 y Fr(The)c(fourth)g(is)f(elemen)m
(ts)i(con)m(taining)h Fq(only)h(elemen)m(ts)p Fr(:)p
0 TeXcolorgray 0 TeXcolorgray 448 2258 a Fk(<!ELEMENT)40
b(section)g(\(title,)g(para+\)>)448 2358 y(<!ELEMENT)g(chapter)g
(\(title,)g(section+\)>)448 2458 y(<!ELEMENT)g(report)g(\(title,)g
(subtitle?,)g(\(section+)g(|)g(chapter+\)\)>)589 2636
y Fr(where)32 b Fn(title)p Fr(,)d Fn(subtitle)f Fr(and)j
Fn(para)e Fr(are)i(elemen)m(ts.)589 2828 y(The)g(last)g(is)e(elemen)m
(ts)j(con)m(taining)i Fq(b)s(oth)g(text)i(and)e(elemen)m(ts)p
Fr(:)p 0 TeXcolorgray 0 TeXcolorgray 448 2993 a Fk(<!ELEMENT)40
b(para)g(\(#PCDATA)g(|)g(emphasis)g(|)g(ref\)+>)589 3171
y Fr(where)32 b Fn(emphasis)c Fr(and)j Fn(ref)e Fr(are)i(elemen)m(t)h
(names.)448 3409 y Fq(DTD/Elemen)m(t)j(declarations)g(\(con)m(t\))589
3522 y Fr(The)27 b(tec)m(hnique)h(to)f(de\034ne)h(the)e(con)m(ten)m(t)j
(mo)s(del)e(is)f(similar)h(to)g Fq(regular)j(expres-)448
3635 y(sions)p Fr(.)40 b(Suc)m(h)31 b(an)g(expression)f(can)h(b)s(e)f
(made)h(up)g(b)m(y)f(com)m(bining)j(the)e(follo)m(wing:)p
0 TeXcolorgray 585 3813 a Fo(\017)p 0 TeXcolorgray 46
w Fn(\()p Fd(e)762 3827 y Fb(1)801 3813 y Fn(,)44 b Fd(e)931
3827 y Fb(2)970 3813 y Fn(,)g(...,)f Fd(e)1319 3827 y
Fa(n)1366 3813 y Fn(\))28 b Fr(represen)m(ts)h(the)f(elemen)m(ts)i
(represen)m(ted)g(b)m(y)e Fd(e)3025 3827 y Fb(1)3065
3813 y Fr(,)g(follo)m(w)m(ed)676 3926 y(b)m(y)i(the)h(elemen)m(ts)g
(represen)m(ted)i(b)m(y)d Fd(e)1974 3940 y Fb(2)2044
3926 y Fr(etc.)41 b(un)m(til)31 b Fd(e)2480 3940 y Fa(n)2528
3926 y Fr(;)p 0 TeXcolorgray 585 4110 a Fo(\017)p 0 TeXcolorgray
46 w Fd(e)718 4124 y Fb(1)801 4110 y Fn(|)44 b Fd(e)931
4124 y Fb(2)1001 4110 y Fr(represen)m(ts)31 b(the)g(elemen)m(ts)g
(represen)m(ted)h(b)m(y)f Fd(e)2599 4124 y Fb(1)2669
4110 y Fr(or)f Fd(e)2821 4124 y Fb(2)2861 4110 y Fr(;)p
0 TeXcolorgray 585 4294 a Fo(\017)p 0 TeXcolorgray 46
w Fn(\()p Fd(e)p Fn(\))g Fr(represen)m(ts)h(the)g(elemen)m(ts)g
(represen)m(ted)h(b)m(y)f Fd(e)p Fr(;)p 0 TeXcolorgray
585 4478 a Fo(\017)p 0 TeXcolorgray 46 w Fd(e)p Fn(?)40
b Fr(represen)m(ts)31 b(the)g(elemen)m(ts)h(represen)m(ted)g(b)m(y)e
Fd(e)h Fr(or)f(none;)p 0 TeXcolorgray 585 4662 a Fo(\017)p
0 TeXcolorgray 46 w Fd(e)p Fn(+)f Fr(represen)m(ts)i(the)f(non-empt)m
(y)h(rep)s(etition)g(of)e(the)h(elemen)m(ts)h(represen)m(ted)h(b)m(y)
676 4775 y Fd(e)p Fr(;)p 0 TeXcolorgray 585 4959 a Fo(\017)p
0 TeXcolorgray 46 w Fd(e)718 4974 y Fn(*)792 4959 y Fr(represen)m(ts)f
(the)g(rep)s(etition)g(of)f(the)h(elemen)m(ts)h(represen)m(ted)g(b)m(y)
e Fd(e)p Fr(.)p 0 TeXcolorgray 1898 5225 a(31)p 0 TeXcolorgray
eop end
%%Page: 32 32
TeXDict begin 32 31 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(DTD/Elemen)m(t)35 b(declarations)g(\(con)m
(t\))589 686 y(W)-9 b(arning.)67 b Fr(When)39 b(mixing)h(text)f(and)h
(elemen)m(ts,)i(the)e(only)f(p)s(ossible)g(regular)448
799 y(expression)31 b(is)f(either)p 0 TeXcolorgray 0
TeXcolorgray 448 986 a Fn(\(#PCDATA\))448 1174 y Fr(or)p
0 TeXcolorgray 0 TeXcolorgray 448 1362 a Fn(\(#PCDATA)42
b(|)i(...\))1106 1377 y(*)448 1602 y Fq(DTD/In)m(ternal)34
b(and)h(external)g(subsets)589 1715 y Fr(The)21 b(part)g(of)f(a)h
Fp(DTD)f Fr(whic)m(h)h(is)f(included)i(in)e(the)h(same)f(\034le)h(as)f
(the)h Fp(XML)e Fr(do)s(cumen)m(t)448 1827 y(it)31 b(applies)g(to)f(is)
g(called)h(the)g Fq(in)m(ternal)k(subset)p Fr(.)40 b(See)31
b(again)g(the)g(example)g(page)g(16.)589 2040 y(The)37
b(part)f(of)g(a)g Fp(DTD)g Fr(whic)m(h)h(is)e(in)i(an)f(indep)s(enden)m
(t)i(\034le)e(\()p Fn(.dtd)p Fr(\))f(is)h(called)h(the)448
2153 y Fq(external)f(subset)p Fr(.)589 2365 y(If)30 b(there)g(is)g(no)g
(in)m(ternal)i(subset)e(and)h(ev)m(erything)g(is)f(in)g(the)g(external)
h(subset)f(w)m(e)448 2478 y(ha)m(v)m(e)i(a)e(declaration)i(lik)m(e)p
0 TeXcolorgray 0 TeXcolorgray 448 2666 a Fn(<!DOCTYPE)42
b(some)1062 2649 y(_)1106 2666 y(root)1282 2649 y(_)1326
2666 y(element)e(SYSTEM)j("some.dtd">)448 2906 y Fq(DTD/V)-9
b(alidating)35 b(parsers)589 3019 y Fr(In)23 b(order)g(to)g(v)-5
b(alidate)24 b(an)f Fp(XML)f Fr(do)s(cumen)m(t,)j(its)e
Fp(DTD)f Fr(m)m(ust)i(completely)g(describ)s(e)448 3132
y(the)31 b(elemen)m(ts)h(and)e(attributes)i(used.)589
3344 y(This)f(is)f(not)h(mandatory)g(when)g(w)m(ell-formedness)h(is)e
(required.)589 3557 y(Therefore,)h(the)e(example)h(page)g(16)f(is)g(w)m
(ell-formed)i(but)f(not)f(v)-5 b(alid)29 b(in)h(the)f(sense)448
3670 y(ab)s(o)m(v)m(e,)j(b)s(ecause)e(the)h(elemen)m(ts)g
Fn(map)f Fr(and)h Fn(country)d Fr(are)j(not)g(declared.)589
3882 y(F)-8 b(or)31 b(example:)p 0 TeXcolorgray 0 TeXcolorgray
448 4070 a Fn(<!ELEMENT)42 b(map)218 b(\(country+\)>)448
4183 y(<!ELEMENT)42 b(country)g(EMPTY>)448 4371 y Fr(w)m(ould)32
b(b)s(e)e(su\036cien)m(t)i(to)e(v)-5 b(alidate)31 b(the)g(do)s(cumen)m
(t.)p 0 TeXcolorgray 1898 5225 a(32)p 0 TeXcolorgray
eop end
%%Page: 33 33
TeXDict begin 33 32 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XSL)-9 b(T)589 686 y Fr(Giv)m(en)31
b(one)g(or)f(sev)m(eral)h Fp(XML)f Fr(do)s(cumen)m(ts,)h(it)g(ma)m(y)g
(b)s(e)f(useful)p 0 TeXcolorgray 585 854 a Fo(\017)p
0 TeXcolorgray 46 w Fr(to)g(searc)m(h)h(for)f(information)i(in)f(the)f
(do)s(cumen)m(ts,)p 0 TeXcolorgray 585 1034 a Fo(\017)p
0 TeXcolorgray 46 w Fr(to)c(output)i(what)f(is)f(found)h(in)g(a)g
(format)g(suitable)g(for)g(another)g(application)i(or)676
1147 y(reader.)448 1315 y(so)20 b(one)h(needs)g Fp(XSL)-8
b(T)20 b Fr(\()p Fq(eXtensible)k(St)m(ylesheet)h(Language)f(T)-9
b(ransformations)p Fr(\).)589 1512 y(An)31 b Fp(XSL)-8
b(T)30 b Fr(pro)s(cessor)p 0 TeXcolorgray 585 1680 a
Fo(\017)p 0 TeXcolorgray 46 w Fr(reads)g(an)h Fp(XML)e
Fr(do)s(cumen)m(t,)p 0 TeXcolorgray 585 1859 a Fo(\017)p
0 TeXcolorgray 46 w Fr(an)h Fp(XSL)-8 b(T)30 b Fr(\034le,)448
2027 y(and)h(applies)g(the)g(transformations)g(to)g(the)f
Fp(XML)g Fr(and)g(the)h(result)g(is)f(prin)m(ted)i(out.)448
2264 y Fq(XSL)-9 b(T/Saxon)589 2377 y Fr(I)30 b(recommend)i(the)f(op)s
(en)f(source,)h Fp(Java)p Fr(-based,)i Fp(XSL)-8 b(T)30
b Fr(pro)s(cessor)g(a)m(v)-5 b(ailable)32 b(at)p 0 TeXcolorgray
0 TeXcolorgray 448 2545 a Fn(http://sourceforge.net/projects/)o(saxo)o
(n/fil)o(es/Sa)o(xon-)o(HE/9.)o(3/)448 2658 y
(saxonhe9-3-0-4j.zip/download)448 2826 y Fr(Its)e(name)h(is)f
Fp(Saxon)p Fr(.)42 b(Y)-8 b(ou)30 b(only)h(need)g(the)f(arc)m(hiv)m(e)i
Fn(saxon9he.jar)p Fr(.)589 3023 y(The)f(command-line)i(syn)m(tax)d(for)
g(using)i Fp(Saxon)g Fr(is)p 0 TeXcolorgray 0 TeXcolorgray
676 3191 a Fn(java)43 b(-jar)f(saxonhe9.jar)g(-o)h Fm(output)f(doc)p
Fn(.xml)h Fm(trans)p Fn(.xsl)448 3359 y Fr(If)30 b(no)g
Fm(output)f Fr(\034le)i(is)f(sp)s(eci\034ed,)g(the)h(output)g(is)f(the)
h(terminal.)448 3595 y Fq(XSL)-9 b(T)589 3708 y Fr(An)40
b Fp(XSL)-8 b(T)39 b Fr(\034le)h(is)g(actually)g(an)g
Fp(XML)f Fr(do)s(cumen)m(t,)k(in)d(the)g(sense)f(that)i
Fp(XML)d Fr(is)448 3821 y(b)s(oth)30 b(the)g(infrastructure)h(and)f
(its)g(con)m(ten)m(ts,)h(whic)m(h)g(is)f(in)m(terpreted)h(b)m(y)f(some)
g(other)448 3934 y(application.)589 4131 y(F)-8 b(or)40
b(example,)h(if)e(w)m(e)g(use)g(an)f(elemen)m(t)j Fn(<book>)c
Fr(in)i(an)g Fp(XML)e Fr(do)s(cumen)m(t,)43 b Fp(XML)448
4244 y Fr(itself)f(do)s(es)g(not)h(imply)f(that)h(this)g(elemen)m(t)h
(mo)s(dels)e(a)g(b)s(o)s(ok:)64 b(some)42 b(application)448
4357 y(using)31 b(the)g(do)s(cumen)m(t)g(p)s(erhaps)g(will)g(precisely)
f(do)h(that.)589 4554 y(One)45 b(can)f(think)f(of)50
b Fp(XML)43 b Fr(as)g(syn)m(tactic)i(rules)e(\(see)h(page)g(22\),)k
(but)c(with)g(no)448 4667 y(seman)m(tics)32 b(attac)m(hed)g(to)e(the)h
(constructs.)589 4863 y(An)42 b Fp(XSL)-8 b(T)42 b Fr(do)s(cumen)m(t)i
(is)e(th)m(us)g Fp(XML)g Fr(with)g(a)g(sp)s(ecial)h(in)m(terpretation)h
(\(whic)m(h)448 4976 y(mak)m(es)31 b(it)f Fp(XSL)-8 b(T)p
Fr(\).)p 0 TeXcolorgray 1898 5225 a(33)p 0 TeXcolorgray
eop end
%%Page: 34 34
TeXDict begin 34 33 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XSL)-9 b(T/Empt)m(y)36 b(transformation)589
672 y Fr(F)-8 b(or)23 b(reason)f(explained)h(later,)h
Fp(XSL)-8 b(T)21 b Fr(do)s(cumen)m(ts)i(require)f(the)g(usage)g(of)g(a)
f(names-)448 772 y(pace,)31 b(usually)h Fn(xsl)p Fr(,)e(de\034ned)h(at)
f Fk(http://www.w3.org/1999/XSL/Transform)p 0 TeXcolorgray
0 TeXcolorgray 448 946 a(<?xml)40 b(version="1.0")g(encoding="UTF-8"?>)
448 1046 y(<xsl:transform)g(version="2.0")1008 1146 y
(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
1245 y(<xsl:output)g(method="text"/>)448 1345 y(</xsl:transform>)589
1533 y Fr(Note)29 b(the)f(\034rst)g(line)g(of)g(this)g(transformation,)
i(whic)m(h)f(sa)m(ys)f(that)g(this)g(is)g(an)g Fp(XML)448
1645 y Fr(do)s(cumen)m(t.)42 b(The)29 b(second)g(line)g(declares)h(the)
f(namespace)h(for)e Fp(XSL)-8 b(T)29 b Fr(and)g(mak)m(es)g(use)448
1758 y(of)c(an)g Fp(XSL)-8 b(T)24 b Fr(tag)h(name,)i
Fn(transform)p Fr(,)d(whic)m(h)i(means)f(that)g(the)g(in)m
(terpretation)j(of)c(this)448 1871 y Fp(XML)30 b Fr(is)f(done)i
(according)g(to)f Fp(XSL)-8 b(T)p Fr(.)31 b(The)f(v)m(ersion)h(of)36
b Fp(XSL)-8 b(T)30 b Fr(is)f(declared)j(to)e(b)s(e)g
Fn(2.0)p Fr(.)448 2111 y Fq(XSL)-9 b(T/Empt)m(y)36 b(transformation)d
(\(con)m(t\))589 2211 y Fr(Assume)d(the)h(follo)m(wing)i
Fp(XML)d Fr(do)s(cumen)m(t)h(to)g(b)s(e)f(transformed:)p
0 TeXcolorgray 0 TeXcolorgray 448 2385 a Fk(<?xml)40
b(version="1.0")g(encoding="UTF-8"?>)448 2585 y(<cookbook>)528
2684 y(<title>XSLT)g(Cookbook</title>)528 2784 y(<author>Salvatore)g
(Mangano</author>)528 2884 y(<chapter>XPath</chapter>)528
2983 y(<chapter>Selecting)g(and)g(Traversing</chapter>)528
3083 y(<chapter>XML)g(to)g(Text</chapter>)528 3182 y(<chapter>XML)g(to)
g(XML</chapter>)528 3282 y(<chapter>XML)g(to)g(HTML</chapter>)448
3382 y(</cookbook>)448 3622 y Fq(XSL)-9 b(T/Empt)m(y)36
b(transformation)d(\(con)m(t\))589 3735 y Fr(The)j(result)g(of)f
(applying)h(the)f(empt)m(y)h(transformation)h(page)f(34)f(to)g(this)h
(do)s(cu-)448 3848 y(men)m(t)c(yields)p 0 TeXcolorgray
0 TeXcolorgray 536 4035 a Fn(XSLT)43 b(Cookbook)536 4148
y(Salvatore)f(Mangano)536 4261 y(XPath)536 4374 y(Selecting)g(and)h
(Traversing)536 4487 y(XML)g(to)g(Text)536 4600 y(XML)g(to)g(XML)536
4713 y(XML)g(to)g(HTML)p 0 TeXcolorgray 1898 5225 a Fr(34)p
0 TeXcolorgray eop end
%%Page: 35 35
TeXDict begin 35 34 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XSL)-9 b(T/Empt)m(y)36 b(transformation)d
(\(con)m(t\))589 686 y Fr(Note)27 b(that)f(if)g(the)g(elemen)m(t)i
Fn(<xsl:output)42 b(method="text"/>)22 b Fr(w)m(ere)27
b(missing,)h(the)448 799 y(output)37 b(w)m(ould)g(b)s(e)f(considered)h
Fp(XML)d Fr(and)j Fn(<?xml)42 b(...?>)35 b Fr(w)m(ould)i(b)s(e)e
(outputted)j(b)m(y)448 912 y(default.)589 1122 y(Then)27
b(it)f(prin)m(ts)h(the)g(con)m(ten)m(ts)g(of)f(the)g(text)h(no)s(des)e
(of)h(the)g(input)h Fp(XML)e Fr(do)s(cumen)m(t)448 1235
y Fg(in)32 b(the)h(same)f(or)-5 b(der)p Fr(.)589 1446
y(More)39 b(precisely)-8 b(,)42 b(the)d(order)g(corresp)s(onds)h(to)e
(a)h(pre\034x)g(tra)m(v)m(ersal:)59 b(this)38 b(is)h(the)448
1559 y(implicit)31 b(tra)m(v)m(ersal)f(supp)s(orted)g(b)m(y)h
Fp(XSL)-8 b(T)29 b Fr(pro)s(cessors,)g(also)g(called)h
Fq(do)s(cumen)m(t)j(or-)448 1672 y(der)p Fr(.)40 b(The)30
b(rationale)h(is)f(that)g(since)g(the)g(aim)g(is)f(often)h(to)g
(rewrite)h(a)f(do)s(cumen)m(t)h(in)m(to)448 1785 y(another,)h(this)e
(tra)m(v)m(ersal)i(corresp)s(onds)f(to)f(the)h(order)g(in)f(whic)m(h)i
(the)f(input)g(is)f(read.)589 1996 y(The)h(attributes)h(are)e(not)h
(copied)g(b)m(y)g(default.)448 2236 y Fq(XSL)-9 b(T/Matc)m(hing)589
2348 y Fr(More)31 b(precisely)-8 b(,)31 b(the)g(concepts)g(underlying)i
Fp(XSL)-8 b(T)30 b Fr(transformations)h(are)p 0 TeXcolorgray
585 2534 a Fo(\017)p 0 TeXcolorgray 46 w Fr(an)f(implicit)i(pre\034x)e
(tra)m(v)m(ersal)i(of)e(the)h Fp(XML)e Fr(tree,)p 0 TeXcolorgray
585 2721 a Fo(\017)p 0 TeXcolorgray 46 w Fr(eac)m(h)i(elemen)m(t)h(is)e
(matc)m(hed)i(against)f(a)f Fq(template)p Fr(,)p 0 TeXcolorgray
585 2908 a Fo(\017)p 0 TeXcolorgray 46 w Fr(as)g(a)g(result,)h(some)f
(output)h(ma)m(y)g(b)s(e)f(pro)s(duced.)448 3093 y(A)k(template)h(allo)
m(ws)f(to)g(iden)m(tify)h(an)f(elemen)m(t)h(b)m(y)f(sp)s(ecifying)g(a)f
(part)i(of)e(it,)i(lik)m(e)f(its)448 3206 y(name,)d(some)g(of)f(its)g
(attribute)i(names)e(etc.)589 3417 y(When)36 b(a)f(template)i(iden)m
(ti\034es)g(an)e(input)h(elemen)m(t,)j(one)c(sa)m(ys)g(it)h
Fq(matc)m(hes)g Fr(the)448 3530 y(elemen)m(t.)589 3741
y(If)c(no)i(template)g(matc)m(hes)g(the)f(curren)m(t)h(no)s(de,)g(the)f
(c)m(hildren)i(no)s(des)e(are)g(visited)448 3854 y(and)f(tried)h(for)e
(matc)m(hing.)46 b(T)-8 b(ext)33 b(no)s(des)e(implicitly)i(matc)m(h)g
(and)f(their)g(con)m(ten)m(ts)i(are)448 3967 y(prin)m(ted)e(\(this)f
(is)f(the)g(default)h(b)s(eha)m(viour\).)448 4206 y Fq(XSL)-9
b(T/Matc)m(hing)37 b(\(con)m(t\))589 4306 y Fr(Consider)32
b(the)e(follo)m(wing)j Fp(XSL)-8 b(T)31 b Fr(transformation)p
0 TeXcolorgray 0 TeXcolorgray 448 4478 a Fk(<?xml)40
b(version="1.0")g(encoding="UTF-8"?>)448 4578 y(<xsl:transform)g
(version="2.0")1008 4677 y
(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
4777 y(<xsl:output)g(method="text"/>)528 4877 y(<xsl:template)g
(match="chapte">A)g(chapter.</xsl:template>)448 4976
y(</xsl:transform>)p 0 TeXcolorgray 1898 5225 a Fr(35)p
0 TeXcolorgray eop end
%%Page: 36 36
TeXDict begin 36 35 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 589 573 a Fr(Note)36 b(the)h Fp(XSL)-8
b(T)36 b Fr(prede\034ned)h(elemen)m(t)h Fn(template)p
Fr(,)d(whic)m(h)i(de\034nes)g(a)e(template,)448 686 y(and)43
b(its)f(prede\034ned)j(attribute)e Fn(match)p Fr(,)i(whose)e(v)-5
b(alue)42 b(is)g(the)h(elemen)m(t)h(name)g(one)448 799
y(wishes)31 b(to)f(matc)m(h)i(in)e(the)h(input)g Fp(XML)f
Fr(do)s(cumen)m(t.)589 912 y(The)c(con)m(ten)m(t)h(of)e(the)h(template)
g(is)f(output)h(only)g(if)e(a)i Fn(chapte)d Fr(\()p Fq(wrong)28
b(sp)s(elling)q Fr(\))448 1024 y(elemen)m(t)k(is)e(matc)m(hed)i
(\(i.e.,)f(found\).)448 1265 y Fq(XSL)-9 b(T/Matc)m(hing)37
b(\(con)m(t\))589 1377 y Fr(The)48 b(result)g(of)f(applying)i(the)e
(previous)h(transformation)h(to)f(the)f(do)s(cumen)m(t)448
1490 y(page)31 b(34)g(is)p 0 TeXcolorgray 0 TeXcolorgray
536 1678 a Fn(XSLT)43 b(Cookbook)536 1791 y(Salvatore)f(Mangano)536
1904 y(XPath)536 2017 y(Selecting)g(and)h(Traversing)536
2130 y(XML)g(to)g(Text)536 2243 y(XML)g(to)g(XML)536
2355 y(XML)g(to)g(HTML)589 2543 y Fr(b)s(ecause)24 b(the)h(template)g
(matc)m(hed)g(no)f(no)s(de)g(in)g(the)h(input)f(tree,)i(but)e
Fq(text)k(no)s(des)448 2656 y(alw)m(a)m(ys)36 b(implicitly)d(matc)m(h)p
Fr(.)448 2896 y Fq(XSL)-9 b(T/Matc)m(hing)37 b(\(con)m(t\))589
2996 y Fr(Let)d(us)e(try)h(to)f(matc)m(h)i(also)f(the)g(ro)s(ot)g
(elemen)m(t)h(and)f(try)f(the)h(next)g(transforma-)448
3095 y(tion.)p 0 TeXcolorgray 0 TeXcolorgray 448 3270
a Fk(<?xml)40 b(version="1.0")g(encoding="UTF-8"?>)448
3369 y(<xsl:transform)g(version="2.0")1008 3469 y
(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
3569 y(<xsl:output)g(method="text"/>)528 3668 y(<xsl:template)g
(match="cookbook">Chapters:</xsl:template>)448 3768 y(</xsl:transform>)
589 3955 y Fr(The)31 b(result)g(is)f(no)m(w:)p 0 TeXcolorgray
0 TeXcolorgray 448 4143 a Fn(Chapters:)589 4331 y Fr(Wh)m(y?)448
4571 y Fq(XSL)-9 b(T/Applying)35 b(sev)m(eral)g(templates)589
4684 y Fr(The)j(reason)g(is)g(that)g(when)g(a)f(template)i(matc)m(hes)g
(the)f(curren)m(t)h(elemen)m(t,)i(this)448 4797 y(elemen)m(t)35
b(is)d(transformed)i(and)f(the)g(pre\034x)g(tra)m(v)m(ersal)h(go)s(es)e
(on)h Fg(without)i(visiting)f(the)448 4910 y(childr)-5
b(en)34 b(of)e(the)h(curr)-5 b(ent)33 b(element)p Fr(.)p
0 TeXcolorgray 1898 5225 a(36)p 0 TeXcolorgray eop end
%%Page: 37 37
TeXDict begin 37 36 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 589 573 a Fr(Therefore,)43 b(after)d(the)f(elemen)m(t)i
Fn(cookbook)d Fr(is)h(matc)m(hed,)k(the)d Fp(XSL)-8 b(T)39
b Fr(pro)s(cessor)448 686 y(ignores)23 b(ev)m(erything)g(else)f(since)h
(it)f(is)f(the)i(ro)s(ot)f(elemen)m(t)i(\(hence,)h(no)d(elemen)m(t)i
Fn(chapter)448 799 y Fr(is)30 b(matc)m(hed\).)589 998
y(In)c(order)i(to)e(try)g(to)h(matc)m(h)h(the)e(c)m(hildren)i(elemen)m
(ts)g(of)e(a)g(matc)m(hed)j(elemen)m(t,)g(one)448 1098
y(m)m(ust)i(tell)g(so)f(the)h(pro)s(cessor)f(b)m(y)h(using)f(the)h(sp)s
(ecial)f(empt)m(y)h(elemen)m(t)p 0 TeXcolorgray 0 TeXcolorgray
448 1272 a Fk(<xsl:apply-templates/>)589 1460 y Fr(The)38
b(meaning)g(of)f(all)g(the)g Fp(XSL)-8 b(T)37 b Fr(elemen)m(ts)h(is)f
(implicitly)h(relativ)m(e)g(to)f(the)g(last)448 1572
y(matc)m(hed)32 b(elemen)m(t,)g(called)g(the)e Fq(con)m(text)36
b(no)s(de)p Fr(.)448 1813 y Fq(XSL)-9 b(T/Applying)35
b(sev)m(eral)g(templates)h(\(con)m(t\))589 1912 y Fr(The)31
b(follo)m(wing)h(transformation)p 0 TeXcolorgray 0 TeXcolorgray
448 2086 a Fk(<?xml)40 b(version="1.0")g(encoding="UTF-8"?>)448
2186 y(<xsl:transform)g(version="2.0")1008 2286 y
(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
2385 y(<xsl:output)g(method="text"/>)528 2485 y(<xsl:template)g
(match="cookbook">)608 2585 y(<xsl:apply-templates/>)528
2684 y(</xsl:template>)448 2784 y(</xsl:transform>)589
2972 y Fr(instructs)g(the)f Fp(XSL)-8 b(T)39 b Fr(pro)s(cessor)g(to)h
(matc)m(h)g(the)g(ro)s(ot)f(elemen)m(t)h Fn(cookbook)d
Fr(and)448 3084 y(then)31 b(try)f(to)h(apply)f(an)m(y)h(a)m(v)-5
b(ailable)32 b(template)f(to)g(the)g(c)m(hild)g(elemen)m(ts,)h(i.e.,)f
Fn(chapter)448 3197 y Fr(elemen)m(ts.)448 3437 y Fq(XSL)-9
b(T/Applying)35 b(sev)m(eral)g(templates)h(\(con)m(t\))589
3550 y Fr(Since)i(there)g(is)e(no)i(template)g(matc)m(hing)i
Fn(chapter)35 b Fr(elemen)m(ts,)40 b(their)e(c)m(hild)g(text)448
3663 y(no)s(des)30 b(will)h(b)s(e)f(prin)m(ted.)589 3876
y(The)h(result)g(is)f(no)m(w:)p 0 TeXcolorgray 0 TeXcolorgray
536 4063 a Fn(XSLT)43 b(Cookbook)536 4176 y(Salvatore)f(Mangano)536
4289 y(XPath)536 4402 y(Selecting)g(and)h(Traversing)536
4515 y(XML)g(to)g(Text)536 4628 y(XML)g(to)g(XML)536
4741 y(XML)g(to)g(HTML)p 0 TeXcolorgray 1898 5225 a Fr(37)p
0 TeXcolorgray eop end
%%Page: 38 38
TeXDict begin 38 37 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XSL)-9 b(T/Applying)35 b(sev)m(eral)g
(templates)h(\(con)m(t\))589 686 y Fr(What)31 b(if)g(w)m(e)g(do)g(not)g
(w)m(an)m(t)h(to)f(prin)m(t)h(the)f(name)g(of)f(the)h(b)s(o)s(ok)f(and)
h(the)g(author's)448 799 y(name?)589 995 y(The)24 b(\034rst)f(solution)
h(consists)e(in)h(adding)h(t)m(w)m(o)h(templates)e(matc)m(hing)i(the)f
(elemen)m(ts)448 1094 y(to)31 b(b)s(e)f(ignored)h(and)g(do)g(nothing)g
(\(empt)m(y)i Fn(template)28 b Fr(elemen)m(ts\):)p 0
TeXcolorgray 0 TeXcolorgray 448 1265 a Fk(<xsl:template)40
b(match="cookbook">)528 1364 y(<xsl:apply-templates/>)448
1464 y(</xsl:template>)448 1663 y(<xsl:template)g(match="title"/>)448
1863 y(<xsl:template)g(match="author"/>)448 2102 y Fq(XSL)-9
b(T/Applying)35 b(sev)m(eral)g(templates)h(\(con)m(t\))589
2215 y Fr(When)29 b(sev)m(eral)g(templates)g(do)g(the)g(same)f(thing)h
(\(or)g(do)g(nothing\),)h(it)e(is)g(p)s(ossible)448 2328
y(to)k(write)f(do)m(wn)i(only)e(one)h Fn(template)d Fr(elemen)m(t)k
(with)e(a)g Fn(match)f Fr(attribute)j(con)m(taining)448
2441 y(all)e(the)g(elemen)m(t)h(names)e(to)h(b)s(e)f(matc)m(hed.)589
2637 y(F)-8 b(or)31 b(example,)h(instead)e(of)p 0 TeXcolorgray
0 TeXcolorgray 448 2807 a Fk(<xsl:template)40 b(match="title"/>)448
2907 y(<xsl:template)g(match="author"/>)589 3077 y Fr(one)31
b(can)g(write)p 0 TeXcolorgray 0 TeXcolorgray 448 3248
a Fk(<xsl:template)40 b(match="title|author"/>)589 3431
y Fr(The)c(sym)m(b)s(ol)f(\020)8 b Fn(|)p Fr(\021)42
b(means)35 b(\020or\021)43 b(and)35 b(this)g(kind)g(of)42
b Fn(match)33 b Fr(attribute)k(is)d(called)i(a)448 3544
y Fq(disjunctiv)m(e)e(pattern)p Fr(.)448 3784 y Fq(XSL)-9
b(T/Selecting)36 b(c)m(hildren)e(to)h(b)s(e)g(matc)m(hed)589
3897 y Fr(The)30 b(second)g(solution)g(consists)f(in)h(sp)s(ecifying)f
(that)h(only)f(some)h(c)m(hild)h(elemen)m(ts)448 4009
y(of)f(a)h(giv)m(en)g(con)m(text)g(no)s(de)g(should)f(b)s(e)g(matc)m
(hed)i(against)f(the)g(a)m(v)-5 b(ailable)32 b(templates.)589
4219 y(This)i Fq(selection)f Fr(of)g(the)h(required)g(c)m(hildren)h(is)
d(done)i(b)m(y)g(means)f(of)g(the)g Fn(select)448 4332
y Fr(attribute)f(of)e(the)h Fn(apply-templates)c Fr(elemen)m(t.)589
4541 y(The)h(con)m(ten)m(t)h(of)d(the)h(attribute)h(is)f(the)g(name)g
(of)g(the)g(c)m(hildren,)i(relativ)m(ely)f(to)f(the)448
4654 y(con)m(text)32 b(no)s(de.)589 4863 y(Therefore,)h(the)e
Fn(select)e Fr(attribute)j(ev)-5 b(aluates)31 b(to)g(a)g
Fq(sequence)36 b(of)f(no)s(des)30 b Fr(\(the)448 4976
y(c)m(hildren\))j(to)d(the)h(matc)m(hed)h(in)e(do)s(cumen)m(t)i(order.)
p 0 TeXcolorgray 1898 5225 a(38)p 0 TeXcolorgray eop
end
%%Page: 39 39
TeXDict begin 39 38 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XSL)-9 b(T/Selecting)36 b(c)m(hildren)e(to)
h(b)s(e)g(matc)m(hed)g(\(con)m(t\))589 672 y Fr(Consider)d(the)e(follo)
m(wing)j Fp(XSL)-8 b(T)31 b Fr(transformation)p 0 TeXcolorgray
0 TeXcolorgray 448 829 a Fk(<?xml)40 b(version="1.0")g
(encoding="UTF-8"?>)448 929 y(<xsl:transform)g(version="2.0")1008
1029 y(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
1128 y(<xsl:output)g(method="text"/>)528 1228 y(<xsl:template)g
(match="cookbook">)608 1328 y(<xsl:apply-templates)g
(select="chapter"/>)528 1427 y(</xsl:template>)448 1527
y(</xsl:transform>)448 1764 y Fq(XSL)-9 b(T/Selecting)36
b(c)m(hildren)e(to)h(b)s(e)g(matc)m(hed)g(\(con)m(t\))589
1877 y Fr(The)c(result)g(is)f(no)m(w)p 0 TeXcolorgray
0 TeXcolorgray 448 2047 a Fn(XPathSelecting)41 b(and)i(TraversingXML)e
(to)i(TextXML)g(to)g(XMLXML)g(to)g(HTML)589 2303 y Fr(Note)34
b(that)h(only)e(the)i(c)m(hapter)g(titles)f(ha)m(v)m(e)h(b)s(een)f
(prin)m(ted,)i(not)e(the)g(b)s(o)s(ok)f(title,)448 2416
y(nor)26 b(the)g(author's)g(name.)40 b(This)26 b(is)f(due)h(to)g(the)f
(selection)i(of)32 b Fn(chapter)23 b Fr(elemen)m(ts)k(only)-8
b(.)589 2614 y(Note)30 b(also)g(that)g(the)g(text)g(no)s(des)g(of)f
(the)h(selected)h(c)m(hapters)g(ha)m(v)m(e)g(b)s(een)e(prin)m(ted)448
2727 y(without)22 b(spacing.)38 b(This)20 b(is)g(due)h(to)f(ha)m(ving)i
(a)e(sequence)h(of)f(no)s(des)g(to)g(apply)h(templates)448
2840 y(to.)589 3039 y(Let)31 b(us)f(impro)m(v)m(e)i(the)f(prin)m(ting.)
448 3275 y Fq(XSL)-9 b(T/Selecting)36 b(c)m(hildren)e(to)h(b)s(e)g
(matc)m(hed)g(\(con)m(t\))589 3375 y Fr(Since)21 b(w)m(e)h(w)m(an)m(t)f
(to)g(handle)g(explicitly)g(ho)m(w)g(the)g(c)m(hildren)h(of)k
Fn(chapter)19 b Fr(are)i(prin)m(ted,)448 3475 y(w)m(e)31
b(need)g(to)g(ha)m(v)m(e)g(a)g(dedicated)g(template)h(matc)m(hing)i
Fn(chapter)p Fr(:)p 0 TeXcolorgray 0 TeXcolorgray 448
3632 a Fk(<xsl:template)40 b(match="chapter">)448 3731
y(...)448 3831 y(</xsl:template>)589 4001 y Fr(No)m(w,)31
b(when)g(the)g(con)m(text)h(no)s(de)e(is)g Fn(chapter)p
Fr(,)f(w)m(e)i(w)m(an)m(t)h(to)e(prin)m(t)i(its)e(text)g(no)s(de.)448
4238 y Fq(XSL)-9 b(T/Selecting)36 b(c)m(hildren)e(to)h(b)s(e)g(matc)m
(hed)g(\(con)m(t\))589 4351 y Fr(The)c Fp(XSL)-8 b(T)31
b Fr(elemen)m(t)h(that)e(creates)h(a)g(text)f(no)s(de)g(is)p
0 TeXcolorgray 0 TeXcolorgray 1768 4521 a Fn(value-of)448
4691 y Fr(This)h(elemen)m(t,)h(lik)m(e)f Fn(apply-templates)26
b Fr(has)31 b(a)f Fn(select)f Fr(attribute.)589 4877
y(Since)i(the)g(text)f(no)s(des)g(whic)m(h)h(are)g(c)m(hildren)h(of)k
Fn(chapter)28 b Fr(\(there)j(is)f(only)g(one)h(b)m(y)448
4976 y(c)m(hapter,)h(actually\))g(are)e(to)h(b)s(e)f(selected,)h(w)m(e)
g(write)p 0 TeXcolorgray 1898 5225 a(39)p 0 TeXcolorgray
eop end
%%Page: 40 40
TeXDict begin 40 39 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 448 573
a Fk(<xsl:template)40 b(match="chapter">)528 672 y(<xsl:value-of)g
(select="text\(\)"/>)448 772 y(</xsl:template>)589 960
y Fr(The)35 b(expression)g Fn(text\(\))e Fr(denotes)h
Fq(all)h Fr(the)f(text)h(no)s(des)f(whic)m(h)i(are)e(c)m(hildren)i(of)
448 1073 y(the)f(con)m(text)g(no)s(de)f Fn(chapter)p
Fr(,)f(i.e.,)i(the)f(curren)m(t)i(c)m(hapter.)52 b(The)35
b(e\033ect)f(of)40 b Fn(value-of)448 1186 y Fr(here)31
b(is)f(th)m(us)h(to)g(duplicate)g(the)g(selected)g(text)f(no)s(de.)448
1426 y Fq(XSL)-9 b(T/Selecting)36 b(c)m(hildren)e(to)h(b)s(e)g(matc)m
(hed)g(\(con)m(t\))589 1539 y Fr(Unfortunately)-8 b(,)35
b(this)d(c)m(hanges)h(nothing,)i(b)s(ecause)d Fn(apply-templates)d
Fr(serialises)448 1651 y(the)i(results)f(of)g(the)h(matc)m(hings)h(as)e
(a)g(sequence)h(of)f(strings)g(with)h(no)g(in)m(ter-spaces.)589
1864 y(The)j(solution)f(is)f(th)m(us)h(to)g(force)g(a)g
Fq(new)k(line)32 b Fr(after)h(getting)h(the)f(v)-5 b(alue)33
b(of)f(eac)m(h)448 1977 y(text)f(no)s(de.)589 2176 y(This)g(can)g(b)s
(e)f(done)h(b)m(y)f(means)h(of)f(the)h(elemen)m(t)p 0
TeXcolorgray 0 TeXcolorgray 448 2351 a Fk(<xsl:text>&#10;</xsl:text>)
589 2538 y Fr(The)f(n)m(um)m(b)s(ered)i(en)m(tit)m(y)f
Fn(&#10;)d Fr(corresp)s(onds)i(to)g(the)f(new)h(line)g(c)m(haracter)i
(in)e(the)448 2651 y Fp(ASCI)s(I)p Fr(.)589 2864 y(The)h
Fp(XSL)-8 b(T)31 b Fr(elemen)m(t)h Fn(text)d Fr(can)i(b)s(e)f(used)g
(to)h(write)g(text)f(v)m(erbatim.)589 3076 y(It)h(is)f(useful)g(when)h
(the)g(complex)g(rules)g(of)37 b Fp(XML)29 b Fr(ab)s(out)i(space)g(c)m
(haracters)h(ha)m(v)m(e)448 3189 y(to)f(b)s(e)f(b)s(en)m(t.)448
3429 y Fq(XSL)-9 b(T/F)g(rom)36 b Fj(XML)f Fq(to)g Fj(XHTML)589
3542 y Fr(One)23 b(application)i(of)j Fp(XML)p Fr(,)22
b(serv)m(er-side,)j(is)d(to)g(generate)i Fp(XHTML)e Fr(or,)i(in)f
(general,)448 3655 y Fp(HTML)p Fr(.)589 3867 y(F)-8 b(ollo)m(wing)38
b(a)d(clien)m(t's)h(request)f(for)f(a)h(w)m(eb)h(page,)h(the)e(w)m(eb)h
(serv)m(er)f(retriev)m(es)h(its)448 3980 y(con)m(ten)m(t)29
b(as)c Fp(XML)h Fr(\(stored)g(in)g(a)h(database,)h(for)d(instance\))i
(and)g(runs)f(an)g Fp(XSL)-8 b(T)27 b Fr(trans-)448 4093
y(formation,)43 b(dep)s(ending)e(p)s(erhaps)f(on)f(the)h(clien)m(t's)h
(user-agen)m(t)g(\(e.g.,)i(the)d(kind)f(of)448 4206 y(bro)m(wser\))32
b(or)f(displa)m(y)h(device)f(\(e.g.,)g(a)g(mobile)h(device)f(with)h(a)e
(small)h(screen)g(or)g(lim-)448 4319 y(ited)25 b(n)m(um)m(b)s(er)g(of)f
(colours\))h(to)f(pro)s(duce)g(\(p)s(erhaps)h(dedicated\))g
Fp(HTML)p Fr(,)f(whic)m(h)h(is)e(then)448 4432 y(sen)m(t)31
b(bac)m(k)g(to)g(the)f(clien)m(t.)589 4645 y(This)35
b(w)m(a)m(y)-8 b(,)38 b(the)d(con)m(ten)m(t)i(of)d(the)i(page)f(\()p
Fp(XML)f Fr(sp)s(eci\034es)h(semi-structured)h(data,)448
4757 y(without)26 b(a)e(sp)s(eci\034c)g(in)m(terpretation\))k(is)c
(stored)g(indep)s(enden)m(tly)i(of)e(an)m(y)h(presen)m(tation)448
4870 y(st)m(yle)31 b(\()p Fp(HTML)f Fr(sp)s(eci\034es)g(b)s(oth)g(con)m
(ten)m(ts)i(and)f(st)m(yle\).)p 0 TeXcolorgray 1898 5225
a(40)p 0 TeXcolorgray eop end
%%Page: 41 41
TeXDict begin 41 40 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XSL)-9 b(T/F)g(rom)36 b Fj(XML)f
Fq(to)g Fj(XHTML)g Fq(\(con)m(t\))589 686 y Fr(The)28
b(\034rst)f(step)g(when)h(designing)f(an)h Fp(XSL)-8
b(T)27 b Fr(st)m(ylesheet)g(\(i.e.,)h(transformation)h(or)448
799 y(transform\))i(to)g(pro)s(duce)g Fp(XHTML)e Fr(is)h(to)h(write)g
(an)f(instance)i(of)d(exp)s(ected)i(output.)589 1011
y(Once)c(the)g(shap)s(e)f(of)g(the)g(general)h(output)g(is)f(clearly)h
(in)f(mind,)i(think)e(bac)m(kw)m(ards)448 1124 y(to)31
b(the)g(input)g(and,)f(b)m(y)h(doing)g(so,)f(write)h(the)g
(transformation.)589 1337 y(T)-8 b(ec)m(hnically)g(,)33
b(the)d(di\036cult)m(y)h(in)f(the)g Fp(XSL)-8 b(T)30
b Fr(comes)g(from)g(managing)h(the)f(names-)448 1450
y(paces:)41 b(one)31 b(for)f(the)h Fp(XSL)-8 b(T)30 b
Fr(elemen)m(ts)i(and)e(one)h(for)f(the)h Fp(XHTML)f Fr(elemen)m(ts.)448
1690 y Fq(XSL)-9 b(T/F)g(rom)36 b Fj(XML)f Fq(to)g Fj(XHTML)g
Fq(\(con)m(t\))589 1789 y Fr(First,)c(the)g(start)f(of)g(the)h
Fp(XSL)-8 b(T)30 b Fr(st)m(ylesheet)h(m)m(ust)g(b)s(e)p
0 TeXcolorgray 0 TeXcolorgray 448 1964 a Fk(<xsl:output)528
2063 y(method="xhtml")528 2163 y(doctype-public="-//W3C//DTD)40
b(XHTML)g(1.0)g(Strict//EN")528 2263 y(doctype-system=)608
2362 y("http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd")528
2462 y(indent="yes"/>)448 2702 y Fq(XSL)-9 b(T/F)g(rom)36
b Fj(XML)f Fq(to)g Fj(XHTML)p Fq(/Example)589 2815 y
Fr(Let)29 b(us)e(try)g(to)h(transform)g(the)g Fp(XML)e
Fr(page)j(34)e(in)m(to)i(some)e Fp(XHTML)g Fr(displa)m(y)m(ed)i(as)589
3027 y Fq(XSL)-9 b(T)36 b(Co)s(okb)s(o)s(ok)29 b Fg(by)k(Salvator)-5
b(e)33 b(Mangano)p 0 TeXcolorgray 560 3215 a Fr(1.)p
0 TeXcolorgray 46 w(XP)m(ath)p 0 TeXcolorgray 560 3403
a(2.)p 0 TeXcolorgray 46 w(Selecting)e(and)g(T)-8 b(ra)m(v)m(ersing)p
0 TeXcolorgray 560 3590 a(3.)p 0 TeXcolorgray 46 w(XML)30
b(to)g(T)-8 b(ext)p 0 TeXcolorgray 560 3778 a(4.)p 0
TeXcolorgray 46 w(XML)30 b(to)g(XML)p 0 TeXcolorgray
560 3965 a(5.)p 0 TeXcolorgray 46 w(XML)g(to)g(HTML)448
4153 y(Also,)g(the)h(title)g(of)f(the)h(bro)m(wser)g(windo)m(w)h
(should)f(b)s(e)f(\020XSL)-8 b(T)31 b(Co)s(okb)s(o)s(ok\021.)448
4393 y Fq(XSL)-9 b(T/F)g(rom)36 b Fj(XML)f Fq(to)g Fj(XHTML)p
Fq(/Example)g(\(con)m(t\))589 4493 y Fr(First,)c(w)m(e)g(m)m(ust)g
(decide)g(that)g(the)g Fp(XHTML)e Fr(should)i(lo)s(ok)f(as)g(follo)m
(ws.)p 0 TeXcolorgray 0 TeXcolorgray 448 4667 a Fk(<?xml)40
b(version="1.0")g(encoding="UTF-8"?>)448 4767 y(<!DOCTYPE)g(html)528
4866 y(PUBLIC)g("-//W3C//DTD)g(XHTML)g(1.0)g(Strict//EN")528
4966 y("http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">)p
0 TeXcolorgray 1898 5225 a Fr(41)p 0 TeXcolorgray eop
end
%%Page: 42 42
TeXDict begin 42 41 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fk(<html)40 b
(xmlns="http://www.w3.org/1999/xhtml")688 672 y(xml:lang="en")g
(lang="en">)568 772 y(<head>)688 872 y(<meta)g
(http-equiv="Content-Type")928 971 y(content="text/html;)g
(charset=UTF-8"/>)688 1071 y(<title>XSLT)g(Cookbook</title>)568
1171 y(</head>)568 1270 y(<body>)688 1370 y(<h2>XSLT)g(Cookbook</h2>)
688 1469 y(<p><em>by)g(Salvatore)g(Mangano</em></p>)448
1708 y Fq(XSL)-9 b(T/F)g(rom)36 b Fj(XML)f Fq(to)g Fj(XHTML)p
Fq(/Example)g(\(con)m(t\))p 0 TeXcolorgray 0 TeXcolorgray
688 1900 a Fk(<h3>Table)40 b(of)g(contents</h3>)688 2000
y(<ol>)808 2099 y(<li>XPath</li>)808 2199 y(<li>Selecting)g(and)g
(Traversing</li>)808 2298 y(<li>XML)g(to)g(Text</li>)808
2398 y(<li>XML)g(to)g(XML</li>)808 2498 y(<li>XML)g(to)g(HTML</li>)688
2597 y(</ol>)568 2697 y(</body>)448 2797 y(</html>)448
3035 y Fq(XSL)-9 b(T/F)g(rom)36 b Fj(XML)f Fq(to)g Fj(XHTML)p
Fq(/Example)g(\(con)m(t\))589 3148 y Fr(Therefore,)c(it)e(b)s(ecomes)g
(clear)h(that)g(the)f(infrastructure)i(of)d(the)i Fp(XHTML)p
Fr(,)e(made)448 3261 y(of)37 b(the)g Fp(XML)g Fr(pro)s(cessing)g
(instruction,)j Fp(XHTML)c Fr(elemen)m(ts)j Fn(html)p
Fr(,)e Fn(head)f Fr(and)i Fn(body)p Fr(,)448 3374 y(should)31
b(b)s(e)f(output)h(\034rst.)589 3582 y(Then,)h(the)e(title)h(and)g
(author.)589 3789 y(The)g(last)g(part)f(b)s(eing)h(the)g(ordered)g
(list)f(of)g(c)m(hapters.)448 4028 y Fq(XSL)-9 b(T/F)g(rom)36
b Fj(XML)f Fq(to)g Fj(XHTML)p Fq(/Example)g(\(con)m(t\))589
4141 y Fr(F)-8 b(rom)22 b(this)e(analysis,)i(w)m(e)f(deduce)g(the)g
(follo)m(wing)h(structure)f(for)f(the)h Fp(XSL)-8 b(T)20
b Fr(st)m(ylesheet.)p 0 TeXcolorgray 585 4322 a Fo(\017)p
0 TeXcolorgray 46 w Fr(A)31 b(template)j(to)e(matc)m(h)h(the)g(ro)s(ot)
f(elemen)m(t,)i Fn(cookbook)p Fr(,)d(is)h(needed)h(to)f(output)676
4435 y(the)g Fp(XHTML)f Fr(elemen)m(ts)i Fn(html)p Fr(,)e
Fn(head)p Fr(,)g Fn(body)g Fq(and)h Fr(the)g Fn(title)p
Fr(,)f Fn(author)f Fq(and)i Fr(an)676 4548 y Fg(empty)38
b Fp(XHTML)29 b Fr(elemen)m(t)j Fn(ol)p Fr(.)p 0 TeXcolorgray
585 4733 a Fo(\017)p 0 TeXcolorgray 46 w Fr(Another)42
b(template)i(is)d(needed)i(to)f(matc)m(h)h(the)g Fn(chapter)d
Fr(elemen)m(ts)j(and)g(\034ll)676 4846 y(the)27 b(empt)m(y)i
Fp(XHTML)d Fr(elemen)m(t)j Fn(ol)d Fr(with)i(the)f(list)g(items)g
(corresp)s(onding)h(to)g(the)676 4959 y(c)m(hapters.)p
0 TeXcolorgray 1898 5225 a(42)p 0 TeXcolorgray eop end
%%Page: 43 43
TeXDict begin 43 42 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XSL)-9 b(T/F)g(rom)36 b Fj(XML)f
Fq(to)g Fj(XHTML)p Fq(/Example)g(\(con)m(t\))p 0 TeXcolorgray
0 TeXcolorgray 448 724 a Fk(<xsl:template)40 b(match="cookbook">)528
823 y(<html)g(xmlns="http://www.w3.org/1999/xhtml")768
923 y(xml:lang="en")g(lang="en">)608 1023 y(<head>)688
1122 y(<title><xsl:value-of)g(select="title/text\(\)"/></title>)608
1222 y(</head>)608 1322 y(<body>)688 1421 y(<h2><xsl:value-of)g
(select="title/text\(\)"/></h2>)688 1521 y(<p>)768 1620
y(<em>by)g(<xsl:value-of)g(select="author/text\(\)"/></em>)688
1720 y(</p>)688 1820 y(<h3>Table)g(of)g(contents</h3>)688
1919 y(<ol>)768 2019 y(<xsl:apply-templates)g(select="chapter"/>)688
2119 y(</ol>)608 2218 y(</body>)528 2318 y(</html>)448
2417 y(</xsl:template>)448 2650 y Fq(XSL)-9 b(T/F)g(rom)36
b Fj(XML)f Fq(to)g Fj(XHTML)p Fq(/Example)g(\(con)m(t\))589
2763 y Fr(Notice)c(the)g Fn(select)e Fr(v)-5 b(alues)30
b(\020)8 b Fn(title/text\(\))p Fr(\021)35 b(and)c(\020)8
b Fn(author/text\(\))p Fr(.\021)589 2943 y(T)-8 b(o)43
b(understand)g(the)g(meaning)g(of)e(suc)m(h)i(expressions,)h(one)f(m)m
(ust)f(decomp)s(ose)448 3056 y(them)31 b(step)g(b)m(y)f(step.)41
b(Let)31 b(us)f(consider)h(the)f(\034rst)h(one)g(as)f(an)g(example.)589
3237 y(First,)e Fn(title)d Fr(as)h(an)h(expression)g(means)f(\020all)h
(the)g(c)m(hild)h(elemen)m(ts)g(of)e(the)h(con)m(text)448
3349 y(no)s(de.\021)76 b(So,)42 b(in)e(general,)j(this)c(is)g(a)g
(sequence)h(of)f(no)s(des,)j(but)e(here)g(the)g(sequence)448
3462 y(con)m(tains)32 b(only)e(one)h(no)s(de.)589 3643
y(Then)h Fn(.../text\(\))d Fr(means)i(\020all)g(the)g(text)g(no)s(des)g
(whic)m(h)h(are)f(c)m(hildren)i(of)k Fq(ev)m(ery)448
3756 y Fr(elemen)m(t)26 b(in)e(the)h(previous)f(sequence.\021)46
b(In)24 b(this)g(case,)h(the)g Fn(title)d Fr(elemen)m(ts)k(ha)m(v)m(e)f
(only)448 3869 y(one)31 b(text)f(no)s(de)h(as)f(a)g(c)m(hild.)448
4101 y Fq(XSL)-9 b(T/Selecting)36 b(c)m(hildren)e(to)h(b)s(e)g(matc)m
(hed)g(\(con)m(t\))589 4201 y Fr(In)30 b(this)h(case,)f(it)h(is)f(p)s
(ossible)g(to)g(write)p 0 TeXcolorgray 0 TeXcolorgray
448 4335 a Fk(<xsl:value-of)40 b(select="title"/>)589
4469 y Fr(instead)31 b(of)p 0 TeXcolorgray 0 TeXcolorgray
448 4603 a Fk(<xsl:value-of)40 b(select="title/text\(\)"/>)589
4751 y Fr(The)33 b(former)g(means)f(\020)8 b Fq(all)32
b Fr(the)h(text)f(no)s(des)g(descendan)m(t)i(of)e(the)g
Fn(title)f Fr(elemen)m(t,)448 4863 y(whic)m(h)e(are)f(the)g(c)m
(hildren)h(of)e(the)h(con)m(text)h(no)s(de.\021)47 b(But)28
b(since)g(there)g(is)f(only)h(one)g(text)448 4976 y(no)s(de)j(b)s(elo)m
(w)h Fn(title)p Fr(,)d(it)i(means)f(the)h(same)g(as)f(the)g(selection)h
Fn(title/text\(\))p Fr(.)p 0 TeXcolorgray 1898 5225 a(43)p
0 TeXcolorgray eop end
%%Page: 44 44
TeXDict begin 44 43 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XSL)-9 b(T/F)g(rom)36 b Fj(XML)f
Fq(to)g Fj(XHTML)p Fq(/Example)g(\(con)m(t\))589 672
y Fr(Let)e(us)f(resume)h(our)f(st)m(ylesheet.)47 b(Another)33
b(template)g(is)f(needed)h(for)f(the)h(c)m(hap-)448 772
y(ters:)p 0 TeXcolorgray 0 TeXcolorgray 448 946 a Fk(<xsl:template)40
b(match="chapter">)528 1046 y(<li)g
(xmlns="http://www.w3.org/1999/xhtml">)608 1146 y(<xsl:value-of)g
(select="text\(\)"/>)528 1245 y(</li>)448 1345 y(</xsl:template>)589
1533 y Fr(Note)i(here)g(the)g(obligation)h(to)e(sp)s(ecify)f(the)i
Fp(XHTML)f Fr(namespace)h(as)f(default)448 1645 y(in)j(the)h
Fp(XHTML)e Fn(li)g Fr(elemen)m(t.)83 b(Otherwise)45 b(it)f(will)h(b)s
(e)e(output)i(without)g(names-)448 1758 y(pace,)30 b(instead)f(of)f(ha)
m(ving)i(the)f Fp(XHTML)f Fr(namespace)i(implicitly)-8
b(.)41 b(In)28 b(other)h(w)m(ords,)h(if)448 1871 y(one)24
b(writes)g Fn(<li>)f Fr(instead)h(of)f Fn(<li)43 b
(xmlns="http://www.w3.org/1999/)o(xhtm)o(l">)p Fr(,)19
b(the)448 1984 y(output)28 b(will)g(b)s(e)f Fn(<li)43
b(xmlns="">)p Fr(,)26 b(b)s(ecause)h(the)g Fp(XHTML)g
Fr(namespace)h(is)f(the)g(default)448 2097 y(for)j(the)h(em)m(b)s
(edding)i Fn(html)d Fr(elemen)m(t.)448 2337 y Fq(XSL)-9
b(T/F)g(rom)36 b Fj(XML)f Fq(to)g Fj(XHTML)p Fq(/Example)g(\(con)m(t\))
589 2450 y Fr(The)28 b(last)f(step)f(consists)h(in)g(c)m(hec)m(king)i
(the)e(conformit)m(y)h(to)f Fp(XHTML)f Fr(b)m(y)h(means)g(of)448
2563 y(the)k(W3C)f(v)-5 b(alidator)32 b(a)m(v)-5 b(ailable)31
b(at)p 0 TeXcolorgray 0 TeXcolorgray 1417 2751 a Fn
(http://validator.w3.org/)448 2991 y Fq(XSL)-9 b(T/V)g(ariables)589
3090 y Fr(Sometimes)42 b(it)f(is)f(handy)h(to)f(de\034ne)i
Fq(v)-6 b(ariables)40 b Fr(to)h(hold)g(some)g(in)m(termediary)448
3190 y(result.)g(Consider)p 0 TeXcolorgray 0 TeXcolorgray
448 3364 a Fk(<?xml)f(version="1.0")g(encoding="iso-8859-1"?>)448
3464 y(<xsl:transform)g(version="2.0")1008 3564 y
(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
3663 y(<xsl:output)g(method="text"/>)528 3763 y(<xsl:template)g
(match="/">)608 3862 y(<xsl:variable)g(name="v")g(select="0"/>)608
3962 y(<xsl:variable)g(name="w")g(select="1)g(+)g($v"/>)608
4062 y(<xsl:value-of)g(select="$w"/>)528 4161 y(</xsl:template>)448
4261 y(</xsl:transform>)448 4501 y Fq(XSL)-9 b(T/V)g(ariables)37
b(\(con)m(t\))589 4614 y Fr(The)31 b Fn(match)e Fr(expression)i
Fn("/")e Fr(means:)41 b("the)31 b(do)s(cumen)m(t)h(ro)s(ot".)p
0 TeXcolorgray 0 TeXcolorgray 949 4802 a Fq(The)j(do)s(cumen)m(t)f(ro)s
(ot)g(is)h(not)f(the)h(ro)s(ot)g(elemen)m(t)p Fr(.)p
0 TeXcolorgray 1898 5225 a(44)p 0 TeXcolorgray eop end
%%Page: 45 45
TeXDict begin 45 44 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fr(The)31 b(latter)g(is)f(the)h(unique)g
(elemen)m(t)g(at)g(the)g(ro)s(ot)f(of)g(the)h Fp(XML)e
Fr(tree,)i(e.g.,)g Fn(cookbook)448 686 y Fr(is)f(the)h(ro)s(ot)f
(elemen)m(t)i(of)e(the)h(do)s(cumen)m(t)h(page)f(34.)589
898 y(The)24 b(former)f(is)f(the)h(implicit)h(no)s(de)f(that)g(con)m
(tains)h(all)f(the)g(elemen)m(ts)h(in)f(the)g Fp(XSL)-8
b(T)448 1011 y Fr(\034le.)41 b(It)30 b(is)g(not)h(written.)589
1224 y(Therefore,)36 b(the)e(ro)s(ot)g(elemen)m(t)h(is)f(alw)m(a)m(ys)g
(a)g(c)m(hild)h(of)e(the)i(do)s(cumen)m(t)g(ro)s(ot)e(and)448
1337 y Fn("/")d Fr(matc)m(hes)h(an)m(y)h Fp(XML)e Fr(do)s(cumen)m(t.)
589 1549 y(Also,)g Fn("/)906 1564 y(*)950 1549 y(")g
Fr(matc)m(hes)h(an)m(y)g(ro)s(ot)f(elemen)m(t.)448 1789
y Fq(XSL)-9 b(T/V)g(ariables)37 b(\(con)m(t\))589 1902
y Fr(The)d(v)-5 b(ariable)35 b Fn(v)e Fr(is)g(set)g(to)h(the)g
(selected)g(v)-5 b(alue)34 b Fn(0)p Fr(.)50 b(Note)34
b(that)g(it)f(is)g(p)s(ossible)h(to)448 2015 y(select)d(basic)f(t)m(yp)
s(es,)h(lik)m(e)f(in)m(tegers,)i(not)f(just)f(no)s(des.)589
2228 y(Also,)e(as)f(v)-5 b(ariable)28 b Fn(w)f Fr(demonstrates)h(it,)g
(it)g(is)f(p)s(ossible)g(to)g(select)h(the)f(con)m(ten)m(ts)i(of)448
2341 y(another)j(v)-5 b(ariable)32 b(b)m(y)f(pre\034xing)g(its)g(name)h
(with)f(the)g(sym)m(b)s(ol)g Fn($)p Fr(,)g(and)g(then)g(op)s(erate)448
2453 y(on)g(it)f(as)g(an)h(arithmetic)h(expression,)e(e.g.,)h
Fn("1)44 b(+)f($v")p Fr(.)589 2666 y Fq(Imp)s(ortan)m(t:)j(V)-9
b(ariables)36 b(in)e Fj(XSL)-8 b(T)34 b Fq(are)h(imm)m(utable)p
Fr(.)589 2879 y(In)30 b(other)g(w)m(ords,)h(their)f(v)-5
b(alue)30 b(cannot)h(b)s(e)f(c)m(hanged.)42 b(That)30
b(explains)g(wh)m(y)g(there)448 2991 y(is)g(no)h(assignmen)m(t)g(on)g
(v)-5 b(ariables,)31 b(lik)m(e)f Fn(a)44 b(=)g(a)f(+)h(1;)29
b Fr(in)i Fp(C)p Fr(.)448 3232 y Fq(XSL)-9 b(T/Conditionals)589
3344 y Fr(It)42 b(is)g(p)s(ossible)f(to)i(c)m(ho)s(ose)f(a)g(sequence)g
(of)g(no)s(des)g(rather)h(than)f(another)h(one,)448 3457
y(based)31 b(on)f(a)h(giv)m(en)g(criterion.)589 3657
y(The)j(pure)g Fp(XSL)-8 b(T)33 b Fr(w)m(a)m(y)h(to)f(ac)m(hiev)m(e)i
(this)e(is)g(b)m(y)g(means)h(of)f(the)g Fn(if)p Fr(,)h
Fn(choose)p Fr(,)e Fn(when)448 3756 y Fr(and)f Fn(otherwise)d
Fr(elemen)m(ts.)42 b(Consider)31 b(\034rst)g(the)f(input)p
0 TeXcolorgray 0 TeXcolorgray 448 3931 a Fk(<?xml)40
b(version='1.0')g(encoding='iso-8859-1'?>)448 4030 y(<numbers>)528
4130 y(<num>18</num>)528 4229 y(<num>-1.3</num>)528 4329
y(<num>3</num>)528 4429 y(<num>5</num>)528 4528 y(<num>23</num>)448
4628 y(</numbers>)p 0 TeXcolorgray 1898 5225 a Fr(45)p
0 TeXcolorgray eop end
%%Page: 46 46
TeXDict begin 46 45 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XSL)-9 b(T/Conditionals)35
b(\(con)m(t\))589 686 y Fr(Let)27 b(us)f(output)h(all)g(the)f(text)g
(no)s(des)g(in)h(order,)g Fq(separated)k(b)m(y)f(a)g(comma)p
Fr(.)39 b(But)448 799 y(the)31 b(last)f(string)h(m)m(ust)g(not)g(b)s(e)
f(follo)m(w)m(ed)i(b)m(y)e(a)h(comma,)g(i.e.,)g(w)m(e)g(exp)s(ect)p
0 TeXcolorgray 0 TeXcolorgray 1549 986 a Fn(18,)43 b(-1.3,)f(3,)i(5,)f
(23)448 1161 y Fr(The)31 b(solution)g(is)p 0 TeXcolorgray
0 TeXcolorgray 448 1335 a Fk(<xsl:template)40 b(match="num">)528
1435 y(<xsl:value-of)g(select="text\(\)"/>)528 1534 y(<xsl:if)g
(test="position\(\))g(ne)g(last\(\)">)608 1634 y(<xsl:value-of)g
(select="',)g('"/>)528 1733 y(</xsl:if>)448 1833 y(</xsl:template>)448
2073 y Fq(XSL)-9 b(T/Conditionals)35 b(\(con)m(t\))589
2186 y Fr(Notice)40 b(the)f Fp(XSL)-8 b(T)39 b Fr(elemen)m(t)i
Fn(if)d Fr(and)h(its)g Fn(test)f Fr(attribute.)68 b(The)39
b(v)-5 b(alue)39 b(of)g(this)448 2299 y(attribute)44
b(is)e(ev)-5 b(aluated)43 b(to)g(either)g Fn(true\(\))e
Fr(or)h Fn(false\(\))f Fr(\026)h(or)h(a)f(dynamic)h(error)448
2412 y(happ)s(ens.)74 b(If)40 b(the)i(v)-5 b(alue)41
b(is)g(true,)k(then)d(the)f(c)m(hildren)i(of)48 b Fn(if)40
b Fr(are)i(computed)g(and)448 2525 y(outputted)32 b(\(here,)f(a)g
(comma\).)589 2737 y(The)i(comma)g(m)m(ust)g(b)s(e)f(written)i(in)e(a)g
Fq(string)p Fr(,)h(i.e.,)g(enclosed)g(in)f(single)h(quotes:)448
2850 y Fn(',)44 b(')p Fr(.)589 3063 y(The)f(conditional)h(expression)e
(is)g Fn(position\(\))f(ne)j(last\(\))p Fr(.)74 b(The)43
b(comparison)448 3176 y(op)s(erator)h(is)e Fn(ne)p Fr(,)j(whic)m(h)f
(means)e(\020not)i(equal\021.)77 b(The)43 b(built-in)h(function)f
Fn(position)448 3289 y Fr(returns)28 b(the)f(in)m(teger)i(index)e(of)f
(the)i(con)m(text)g(no)s(de)f(in)g(the)g(sequence)h(where)g(it)f(comes)
448 3402 y(from)33 b(\(\034rst)g(no)s(de)g(has)g(index)g(1\).)48
b(Here,)34 b(the)f(con)m(text)h(no)s(de)f(corresp)s(onds)g(to)g(a)g
Fn(num)448 3514 y Fr(elemen)m(t)f(in)f(the)f(sequence)h(of)f(all)h(the)
f(c)m(hildren)i(of)e(the)h(elemen)m(t)h(ro)s(ot)e Fn(numbers)p
Fr(.)448 3755 y Fq(XSL)-9 b(T/Conditionals)35 b(\(con)m(t\))589
3854 y Fr(If)30 b(one)h(w)m(an)m(ts)g(to)g(see)f(the)h(explicit)g
(sequence)f(of)g(no)s(des)g Fn(num)p Fr(,)g(su\036ces)g(to)h(write)p
0 TeXcolorgray 0 TeXcolorgray 448 4029 a Fk(<xsl:template)40
b(match="numbers">)528 4128 y(<xsl:apply-templates)g(select="num"/>)448
4228 y(</xsl:template>)589 4415 y Fr(The)c(other)g(built-in)g(function)
g(is)f Fn(last)p Fr(,)g(whic)m(h)i(returns)f(the)f(last)g(index)h(of)f
(the)448 4528 y(con)m(text)d(no)s(de)e(in)h(the)f(original)i(sequence)f
(it)f(b)s(elongs)g(to.)589 4741 y(Th)m(us,)39 b(a)e(comma)g(is)f
(outputted)i(if,)g(and)f(only)f(if,)i(the)e(curren)m(t)i(n)m(um)m(b)s
(er)h(is)d(not)448 4854 y(the)31 b(last.)p 0 TeXcolorgray
1898 5225 a(46)p 0 TeXcolorgray eop end
%%Page: 47 47
TeXDict begin 47 46 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XSL)-9 b(T/Conditionals)35
b(\(con)m(t\))589 686 y Fr(Imagine)c(no)m(w)h(that)f(w)m(e)g(w)m(an)m
(t)p 0 TeXcolorgray 0 TeXcolorgray 1527 873 a Fn(18,)43
b(-1.3,)g(3,)g(5,)g(23.)448 1061 y Fr(That)32 b(is)f(to)g(sa)m(y)-8
b(,)31 b(w)m(e)h(w)m(an)m(t)h(to)e(terminate)h(the)g(comma-separated)h
(list)e(b)m(y)g(a)g(p)s(erio)s(d.)448 1174 y(W)-8 b(e)40
b(w)m(ould)g(need)g(a)f Fn(else)f Fr(elemen)m(t,)43 b(but)d(it)f(do)s
(es)g(not)g(exist)g(and)h(a)f(more)h(general)448 1287
y(construct)32 b(is)e(needed:)41 b(w)m(e)31 b(can)g(no)f(longer)i(use)e
Fn(if)p Fr(.)448 1527 y Fq(XSL)-9 b(T/Conditionals)35
b(\(con)m(t\))589 1627 y Fr(The)c(solution)g(is)f(no)m(w:)p
0 TeXcolorgray 0 TeXcolorgray 448 1801 a Fk(<xsl:template)40
b(match="num">)528 1901 y(<xsl:value-of)g(select="text\(\)"/>)528
2000 y(<xsl:choose>)608 2100 y(<xsl:when)g(test="position\(\))g(ne)g
(last\(\)">)688 2199 y(<xsl:value-of)g(select="',)g('"/>)608
2299 y(</xsl:when>)608 2399 y(<xsl:otherwise>)688 2498
y(<xsl:value-of)g(select="'.'"/>)608 2598 y(</xsl:otherwise>)528
2698 y(</xsl:choose>)448 2797 y(</xsl:template>)448 3037
y Fq(XSL)-9 b(T/T)g(emplate)37 b(parameters)589 3150
y Fr(Sometimes)32 b(it)e(is)g(useful)g(that)h(templates)h(b)s(e)e(pro)m
(vided)h(parameters.)589 3363 y(Imagine)e(that)g(w)m(e)g(ha)m(v)m(e)g
(a)f(do)s(cumen)m(t)h(in)f Fp(XML)g Fr(describing)h(part)f(of)g(the)h
(table)f(of)448 3476 y(con)m(ten)m(ts)36 b(of)e(a)g(b)s(o)s(ok,)h(with)
f Fn(chapter)f Fr(and)h Fn(section)f Fr(elemen)m(ts.)53
b(Eac)m(h)36 b(c)m(hapter)f(and)448 3589 y(section)c(con)m(tains)h(a)e
(\034rst)g(c)m(hild)i Fn(title)p Fr(.)589 3801 y(W)-8
b(e)30 b(w)m(an)m(t)h(to)f(output)g(an)f(unordered)i
Fp(XHTML)e Fr(list)g(of)g(the)h(c)m(hapter)h(and)e(section)448
3914 y(titles)24 b(with)g(a)g(t)m(wist:)38 b(the)23 b(title)i(should)f
(b)s(e)f(annotated)i(with)f(the)g(depth)g(of)g(the)f(paren)m(t)448
4027 y(c)m(hapter)32 b(or)e(section.)40 b(Chapters)31
b(ha)m(v)m(e)g(depth)f(1,)g(then)h(c)m(hild)g(sections)f(ha)m(v)m(e)g
(depth)h(2)448 4140 y(etc.)448 4380 y Fq(XSL)-9 b(T/T)g(emplate)37
b(parameters)f(\(con)m(t\))589 4480 y Fr(An)31 b(excerpt)f(of)g(the)h
(input:)p 0 TeXcolorgray 0 TeXcolorgray 448 4654 a Fk(<chapter>)528
4753 y(<title>Instances)40 b(and)g(schemas</title>)528
4853 y(<section>)608 4953 y(<title>Using)g(the)g(instance)g
(attributes</title>)p 0 TeXcolorgray 1898 5225 a Fr(47)p
0 TeXcolorgray eop end
%%Page: 48 48
TeXDict begin 48 47 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 528 573 a Fk(</section>)528 672 y(<section>)608
772 y(<title>Schema)40 b(processing</title>)608 872 y(<section>)688
971 y(<title>Validation</title>)608 1071 y(</section>)608
1171 y(<section>)688 1270 y(<title>Augmenting)g(the)g(instance</title>)
608 1370 y(</section>)528 1469 y(</section>)448 1569
y(</chapter>)448 1809 y Fq(XSL)-9 b(T/T)g(emplate)37
b(parameters)f(\(con)m(t\))589 1922 y Fr(The)31 b(corresp)s(onding)h
(exp)s(ected)e(result:)p 0 TeXcolorgray 585 2110 a Fo(\017)p
0 TeXcolorgray 46 w Fr([1])g(Instances)g(and)h(sc)m(hemas)p
0 TeXcolorgray 778 2297 a Fq(\025)p 0 TeXcolorgray 46
w Fr([2])f(Using)g(the)h(instance)g(attributes)p 0 TeXcolorgray
778 2443 a Fq(\025)p 0 TeXcolorgray 46 w Fr([2])f(Sc)m(hema)i(pro)s
(cessing)p 0 TeXcolorgray 955 2590 a Fo(\003)p 0 TeXcolorgray
46 w Fr([3])e(V)-8 b(alidation)p 0 TeXcolorgray 955 2719
a Fo(\003)p 0 TeXcolorgray 46 w Fr([3])30 b(Augmen)m(ting)i(the)f
(instance)448 2959 y Fq(XSL)-9 b(T/T)g(emplate)37 b(parameters)f(\(con)
m(t\))589 3059 y Fr(W)-8 b(e)29 b(need)g(to)f(pass)g(do)m(wn)h(the)g
(tree)f(the)h(depth,)h(output)f(the)f(titles)h(at)f(this)g(depth)448
3158 y(\(whic)m(h)k(are)f(all)f(siblings\))h(and)g(apply)f(further)h
(templates)h(on)e(the)h(c)m(hildren:)p 0 TeXcolorgray
0 TeXcolorgray 448 3333 a Fk(<xsl:template)40 b
(match="section|chapter">)528 3432 y(<xsl:param)g(name="depth"/>)528
3532 y(<li)g(xmlns="http://www.w3.org/1999/xhtml">)608
3632 y(<xsl:value-of)g(select="concat\('[',$depth,'])g(',title\)"/>)608
3731 y(<xsl:if)g(test="not\(empty\(section\)\)">)688
3831 y(<ul><xsl:apply-templates)g(select="section">)928
3931 y(<xsl:with-param)g(name="depth")g(select="$depth)f(+)h(1"/>)848
4030 y(</xsl:apply-templates></ul>)608 4130 y(</xsl:if>)528
4229 y(</li>)448 4329 y(</xsl:template>)448 4569 y Fq(XSL)-9
b(T/T)g(emplate)37 b(parameters)f(\(con)m(t\))589 4682
y Fr(Note)i(the)f(new)i Fp(XSL)-8 b(T)37 b Fr(elemen)m(t)i
Fn(param)d Fr(and)i(its)f(attribute)h Fn(name)p Fr(.)60
b(It)37 b(de\034nes)h(a)448 4795 y(parameter)32 b(to)f(the)f(template.)
p 0 TeXcolorgray 1898 5225 a(48)p 0 TeXcolorgray eop
end
%%Page: 49 49
TeXDict begin 49 48 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 589 573 a Fr(The)37 b(function)g Fn(concat)d
Fr(tak)m(es)j(an)f(arbitrary)h(n)m(um)m(b)s(er)g(of)f(argumen)m(ts,)j
(ev)-5 b(aluate)448 686 y(them,)31 b(transform)g(them)g(in)m(to)h
(strings)e(and)h(join)f(the)h(strings)f(together,)i(in)e(order.)589
898 y(Note)22 b(that)f(the)h(elemen)m(t)h Fn(apply-templates)17
b Fr(is)k(not)g(empt)m(y)h(an)m(ymore:)37 b(it)22 b(con)m(tains)448
1011 y(a)36 b(new)h Fp(XSL)-8 b(T)35 b Fr(elemen)m(t)i(named)f
Fn(with-param)p Fr(,)e(whic)m(h)j(carries)f(attributes)g
Fn(name)e Fr(and)448 1124 y Fn(select)p Fr(.)56 b(This)35
b(de\034nes)i(an)f(argumen)m(t,)j(i.e.,)e(a)f(sequence)g(of)g(no)s(des)
f(or)h(basic)g(t)m(yp)s(es)448 1237 y(passed)31 b(to)f(the)h(c)m
(hildren.)589 1450 y(The)h(v)-5 b(alue)32 b(of)f(the)h
Fn(name)e Fr(attribute)j(m)m(ust)f(b)s(e)f(the)g(same)h(as)f(the)h(one)
f(de\034ned)i(b)m(y)448 1562 y(the)e(attribute)h Fn(name)d
Fr(in)h(the)h(called)g(template)h(\(with)f(elemen)m(t)h
Fn(param)p Fr(\).)448 1803 y Fq(XSL)-9 b(T/Selecting)36
b(no)s(des)p 0 TeXcolorgray 0 TeXcolorgray 448 1994 a
Ff(<?xml)g(version="1.0")g(encoding="UTF-8"?>)448 2085
y(<menu>)520 2176 y(<entrees)g(title="Starters">)592
2267 y(<dish)g(id="1")g(price="8.95">Crab)g(Cakes</dish>)592
2359 y(<dish)g(id="2")g(price="9.95">Jumbo)g(Prawns</dish>)592
2450 y(<dish)g(id="3")g(price="10.95">Smoked)g(Salmon</dish>)520
2541 y(</entrees>)520 2633 y(<main)g(title="Main)g(course">)592
2724 y(<dish)g(id="4")g(price="19.95">Grilled)g(Salmon</dish>)592
2815 y(<dish)g(id="5")g(price="17.95">Seafood)g(Pasta</dish>)592
2907 y(<dish)g(id="6")g(price="16.95">Linguini)g(al)g(Pesto</dish>)520
2998 y(</main>)520 3089 y(<desserts)g(title="Sweet)g(End">)592
3181 y(<dish)g(id="7")g(price="6.95">Dame)g(Blanche</dish>)592
3272 y(<dish)g(id="8")g(price="5.95">Chocolat)g(Mousse</dish>)520
3363 y(</desserts>)448 3455 y(</menu>)448 3695 y Fq(XSL)-9
b(T/Selecting)36 b(no)s(des)f(\(con)m(t\))589 3808 y
Fp(XSL)-8 b(T)27 b Fr(allo)m(ws)g(the)g(selection)g(of)f(an)m(y)h(no)s
(de)f(in)h(a)f(sequence)h(b)m(y)f(putting)i(the)f(index)448
3921 y(of)g(the)h(no)s(de,)g(follo)m(wing)g(do)s(cumen)m(t)h(order,)f
(b)s(et)m(w)m(een)h(square)e(brac)m(k)m(ets)i(or)e(using)h(the)448
4034 y Fn(position)h Fr(function.)589 4246 y(F)-8 b(or)21
b(example,)j(to)c(select)h(the)f(third)h(dish)g(in)f
Fn(entrees)p Fr(:)34 b Fn("/menu/entrees/dish[3]")448
4359 y Fr(or)21 b Fn(/menu/entrees/dish[position\(\))38
b(eq)43 b(3])p Fr(.)37 b(Remem)m(b)s(er)22 b(that)f(the)g(\034rst)g(no)
s(de)g(has)448 4472 y(alw)m(a)m(ys)32 b(index)e Fe(1)p
Fr(.)589 4684 y(This)24 b(kind)g(of)f(notation)i(is)f(a)g(sp)s(ecial)f
(case)h(of)30 b Fq(predicate)p Fr(,)c(whic)m(h)f(w)m(e)f(shall)g(study)
448 4797 y(more)31 b(in)g(detail)g(later.)p 0 TeXcolorgray
1898 5225 a(49)p 0 TeXcolorgray eop end
%%Page: 50 50
TeXDict begin 50 49 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 589 573 a Fq(Exercise.)53 b Fr(Prop)s(ose)35
b(a)f(transformation)i(that)f(prin)m(ts)g Fn(Today's)42
b(menu)33 b Fr(follo)m(w)m(ed)448 686 y(b)m(y)27 b(the)f(third)h
Fg(entr)-5 b(e)g(e)p Fr(,)29 b(the)e(\034rst)f(main)h(dish)f(and)h(the)
f(last)h(dessert,)g(on)f(di\033eren)m(t)i(lines)448 799
y(and)j(preceded)h(b)m(y)e(a)h(dash.)448 1035 y Fq(XSL)-9
b(T/Selecting)36 b(attributes)589 1135 y Fr(Let)j(us)g(sa)m(y)f(that)h
(the)g(dessert)f(of)g(da)m(y)h(is)f(the)h(second)g(on)f(the)h(men)m(u)h
(page)f(49)448 1234 y(and)g(that)g(w)m(e)g(w)m(an)m(t)h(to)f(kno)m(w)g
(its)f(price.)65 b(This)39 b(information)g(is)f(stored)h(as)f(an)h(at-)
448 1334 y(tribute)33 b(no)s(de,)g(not)f(as)g(a)g(text)g(no)s(de,)g(so)
g(w)m(e)h(need)f(a)g(sp)s(ecial)g(construct)h Fn(@)f
Fr(as)f(in)i(the)448 1433 y(transformation)p 0 TeXcolorgray
0 TeXcolorgray 448 1587 a Fk(<?xml)40 b(version="1.0")g
(encoding="UTF-8"?>)448 1687 y(<xsl:transform)g(version="2.0")1008
1787 y(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
1886 y(<xsl:output)g(method="text"/>)528 1986 y(<xsl:template)g
(match="menu">)648 2086 y(Dessert)g(of)g(the)g(Day:)648
2185 y(<xsl:value-of)g(select="desserts/dish[2]")g(/>)648
2285 y(Price:)g(<xsl:value-of)g(select="desserts/dish[2]/@price")f(/>)
528 2384 y(</xsl:template>)448 2484 y(</xsl:transform>)448
2720 y Fq(XSL)-9 b(T/Selecting)36 b(attributes)g(\(con)m(t\))589
2833 y Fr(The)31 b(result)g(is)p 0 TeXcolorgray 0 TeXcolorgray
667 3000 a Fn(Dessert)42 b(of)i(the)f(Day:)667 3113 y(Chocolat)f
(Mousse)667 3226 y(Price:)h(5.95)589 3477 y Fr(Note)c(that)h
(attributes)g(of)e(a)h(giv)m(en)h(elemen)m(t)g(m)m(ust)g(ha)m(v)m(e)g
(di\033eren)m(t)g(names,)h(so)448 3590 y(selecting)31
b Fn("@foo")e Fr(results)i(either)g(in)f(one)h(or)f(no)h(attribute.)448
3826 y Fq(XSL)-9 b(T/Using)35 b(wildcards)589 3926 y
Fr(Wildcards)29 b(can)f(b)s(e)g(used)g(to)g(select)g(no)s(des)g(whose)g
(names)g(do)g(not)h(matter,)g(e.g.,)p 0 TeXcolorgray
0 TeXcolorgray 448 4080 a Fk(<?xml)40 b(version="1.0")g
(encoding="UTF-8"?>)448 4179 y(<xsl:transform)g(version="2.0")1008
4279 y(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
4379 y(<xsl:output)g(method="text"/>)528 4478 y(<xsl:template)g
(match="menu">)648 4578 y(Dessert)g(of)g(the)g(Day:)648
4677 y(<xsl:value-of)g(select=")1528 4690 y(*)1568 4677
y([3]/dish[2]")g(/>)648 4777 y(Price:)g(<xsl:value-of)g(select=")1808
4790 y(*)1848 4777 y([3]/dish[2]/@)2368 4790 y(*)2408
4777 y([2]")f(/>)528 4877 y(</xsl:template>)448 4976
y(</xsl:transform>)p 0 TeXcolorgray 1898 5225 a Fr(50)p
0 TeXcolorgray eop end
%%Page: 51 51
TeXDict begin 51 50 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 589 573 a Fr(giv)m(es)31 b(the)g(same)f(result)h(as)f
(the)g(transform)h(page)g(50.)448 813 y Fq(XSL)-9 b(T/Lo)s(cation)37
b(paths)589 926 y Fr(A)27 b Fq(lo)s(cation)k(path)c Fr(con)m(tains)h
Fq(test)k(no)s(des)27 b Fr(and,)h(optionally)-8 b(,)29
b Fq(predicates)p Fr(.)40 b(F)-8 b(or)448 1039 y(example,)p
0 TeXcolorgray 0 TeXcolorgray 448 1226 a Fn(/menu/)712
1241 y(*)756 1226 y([3]/dish[2]/@)1328 1241 y(*)1372
1226 y([2])448 1414 y Fr(is)32 b(a)h(lo)s(cation)g(path;)i
Fn(menu)p Fr(,)1438 1429 y Fn(*)1482 1414 y Fr(,)e Fn(dish)e
Fr(and)i Fn(@)1969 1429 y(*)2045 1414 y Fr(are)g(no)s(de)g(tests)f(and)
h Fn([3])f Fr(and)h Fn([2])f Fr(are)448 1527 y(predicates.)448
1767 y Fq(XSL)-9 b(T/)p Fd(n)p Fq(-th)35 b(no)s(de)589
1867 y Fr(Let)c(us)f(try)h(to)f(select)h(the)f(sixth)g(dish)h(in)f(the)
h(do)s(cumen)m(t)h(using)e(the)h(transform)p 0 TeXcolorgray
0 TeXcolorgray 448 2041 a Fk(<?xml)40 b(version="1.0")g
(encoding="UTF-8"?>)448 2141 y(<xsl:transform)g(version="2.0")1008
2240 y(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
2340 y(<xsl:output)g(method="text"/>)528 2439 y(<xsl:template)g
(match="menu">)608 2539 y(-<xsl:value-of)g(select=")1528
2552 y(*)1568 2539 y(/dish[6]"/>)g(</xsl:template>)448
2639 y(</xsl:transform>)589 2826 y Fr(The)d(output)g(con)m(tains)g(no)f
(dishes!)57 b(Wh)m(y?)g(Because)36 b Fn(value-of)e Fr(select)i(no)g
(ele-)448 2939 y(men)m(t...)60 b(Indeed,)38 b(the)f(lo)s(cation)f(path)
1834 2954 y Fn(*)1878 2939 y(/dish[6])e Fr(do)s(es)i
Fq(not)g Fr(yield)g(the)h(sixth)f(dish)448 3052 y(no)s(de)31
b(in)f(the)h(men)m(u)h(but,)f(instead,)g(the)f(\034rst)h(dish)f(in)h
(the)f(men)m(u)i(whic)m(h)g(is)e(the)g(sixth)448 3165
y(c)m(hild)i(of)e(an)m(y)h(paren)m(t.)448 3405 y Fq(XSL)-9
b(T/)p Fd(n)p Fq(-th)35 b(no)s(de)g(\(con)m(t\))589 3505
y Fr(In)k(other)h(w)m(ords,)i(the)d(expression)1859 3520
y Fn(*)1903 3505 y(/dish[6])e Fr(actually)j(means)2930
3520 y Fn(*)2974 3505 y(/\(dish[6]\))p Fr(,)448 3604
y(i.e.)53 b(the)35 b(sixth)f(elemen)m(t)i(in)e(all)h(paren)m(t)h(con)m
(texts)f(whic)m(h)h(are)e(c)m(hildren)i(of)e(the)h Fn(menu)448
3704 y Fr(elemen)m(t,)i(th)m(us)d(there)g(is)g(no)g(matc)m(hed)h(no)s
(de.)51 b(What)34 b(w)m(e)g(w)m(an)m(t)i(is)d Fn(\()2859
3719 y(*)2903 3704 y(/dish\)[6])p Fr(,)f(as)448 3804
y(in)f(the)f(transform)p 0 TeXcolorgray 0 TeXcolorgray
448 3978 a Fk(<?xml)40 b(version="1.0")g(encoding="UTF-8"?>)448
4078 y(<xsl:transform)g(version="2.0")1008 4177 y
(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
4277 y(<xsl:output)g(method="text"/>)528 4377 y(<xsl:template)g
(match="menu">)608 4476 y(-<xsl:value-of)g(select="\()1568
4489 y(*)1608 4476 y(/dish\)[6]"/>)528 4576 y(</xsl:template>)448
4675 y(</xsl:transform>)p 0 TeXcolorgray 1898 5225 a
Fr(51)p 0 TeXcolorgray eop end
%%Page: 52 52
TeXDict begin 52 51 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XSL)-9 b(T/Inserting)35 b(elemen)m(ts)h
(\(con)m(t\))589 672 y Fr(Consider)31 b(t)m(w)m(o)g(do)s(cumen)m(ts)g
(with)f(the)g(same)g(con)m(ten)m(t)h(but)f(di\033eren)m(t)h(structure:)
p 0 TeXcolorgray 0 TeXcolorgray 448 847 a Fk(<?xml)40
b(version="1.0")g(encoding="UTF-8"?>)448 946 y(<cars>)528
1046 y(<car)g(model="Matiz")g(manufacturer="Daewoo"/>)528
1146 y(<car)g(model="Sonata")g(manufacturer="Hyundai"/>)448
1245 y(</cars>)589 1420 y Fr(and)p 0 TeXcolorgray 0 TeXcolorgray
448 1594 a Fk(<?xml)g(version="1.0")g(encoding="UTF-8"?>)448
1694 y(<cars>)528 1793 y(<car>)608 1893 y
(<model>Matiz</model><manufacturer>Daewoo</manufacturer>)528
1993 y(</car>)528 2092 y(<car>)608 2192 y
(<model>Sonata</model><manufacturer>Hyundai</manufacturer>)528
2291 y(</car>)448 2391 y(</cars>)448 2631 y Fq(XSL)-9
b(T/Inserting)35 b(elemen)m(ts)h(\(con)m(t\))589 2731
y Fr(Using)i(the)f(same)h(tec)m(hnique,)i(w)m(e)e(can)g(mak)m(e)g(a)f
(transform)h(that)g(con)m(v)m(erts)h(the)448 2830 y(\034rst)34
b(car)h(list,)g(i.e.)52 b(using)34 b(attributes,)i(in)m(to)f(the)f
(second)h(one,)g(i.e.)52 b(using)34 b(elemen)m(ts.)448
2930 y(Consider)p 0 TeXcolorgray 0 TeXcolorgray 448 3104
a Fk(<?xml)40 b(version="1.0")g(encoding="UTF-8"?>)448
3204 y(<xsl:transform)g(version="2.0")528 3304 y
(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
3403 y(<xsl:output)g(method="xml")g(indent="yes"/>)528
3602 y(<xsl:template)g(match="cars">)608 3702 y(<cars>)688
3802 y(<xsl:apply-templates/>)608 3901 y(</cars>)528
4001 y(</xsl:template>)448 4241 y Fq(XSL)-9 b(T/Inserting)35
b(elemen)m(ts)h(\(con)m(t\))p 0 TeXcolorgray 0 TeXcolorgray
528 4440 a Fk(<xsl:template)k(match="car">)608 4540 y(<car>)688
4640 y(<xsl:apply-templates)g(select="attribute\(\)"/>)608
4739 y(</car>)528 4839 y(</xsl:template>)p 0 TeXcolorgray
1898 5225 a Fr(52)p 0 TeXcolorgray eop end
%%Page: 53 53
TeXDict begin 53 52 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 528 573 a Fk(<xsl:template)40 b(match="@model">)608
672 y(<model>)688 772 y(<xsl:value-of)g(select="."/>)608
872 y(</model>)528 971 y(</xsl:template>)448 1208 y Fq(XSL)-9
b(T/Inserting)35 b(elemen)m(ts)h(\(con)m(t\))p 0 TeXcolorgray
0 TeXcolorgray 528 1383 a Fk(<xsl:template)k(match="@manufacturer">)608
1483 y(<manufacturer>)688 1583 y(<xsl:value-of)g(select=".")g(/>)608
1682 y(</manufacturer>)528 1782 y(</xsl:template>)448
1882 y(</xsl:transform>)448 2118 y Fq(XSL)-9 b(T/Inserting)35
b(elemen)m(ts)h(\(con)m(t\))589 2218 y Fr(Notice)31 b(the)g
Fp(XSL)-8 b(T)30 b Fr(elemen)m(t)i Fn(value-of)d Fr(when)i(matc)m(hing)
h(an)e(attribute:)p 0 TeXcolorgray 0 TeXcolorgray 448
2372 a Fk(<xsl:template)40 b(match="@model">)528 2472
y(...)g(<xsl:value-of)g(select="."/>)g(...)448 2571 y(</xsl:template>)
589 2739 y Fr(Selecting)j Fn(".")c Fr(is)i(the)g(only)f(w)m(a)m(y)i(to)
f(get)g(the)g(attribute)h(v)-5 b(alue,)44 b(in)c(particular)448
2852 y Fn(text\(\))29 b Fr(do)s(es)h(not)h(w)m(ork)g(b)s(ecause)f
(attributes)i(are)e(di\033eren)m(t)i(from)e(elemen)m(ts.)589
3049 y(F)-8 b(or)31 b(instance,)f(the)g(empt)m(y)g(transformation)h(do)
s(es)f(not)f(prin)m(t)i(the)f(attribute)h(v)-5 b(al-)448
3162 y(ues)31 b(b)s(ecause)f(they)g(are)h(considered)h(di\033eren)m(t)f
(from)g(text)f(no)s(des.)448 3398 y Fq(XSL)-9 b(T/Inserting)35
b(elemen)m(ts)h(\(con)m(t\))589 3511 y Fr(Applying)31
b(it)g(to)f(the)h(\034rst)f(car)h(list)f(page)h(52)f(yields)p
0 TeXcolorgray 0 TeXcolorgray 448 3679 a Fn(<?xml)43
b(version="1.0")e(encoding="UTF-8"?>)448 3792 y(<cars>)536
3905 y(<car>)711 4018 y(<model>Matiz</model>)711 4131
y(<manufacturer>Daewoo</manufact)o(urer>)580 4244 y(</car>)536
4357 y(<car>)711 4470 y(<model>Sonata</model>)711 4583
y(<manufacturer>Hyundai</manufac)o(turer)o(>)580 4695
y(</car>)448 4808 y(</cars>)589 4976 y Fr(whic)m(h)32
b(is)e(exactly)g(the)h(second)g(car)g(list)f(\(same)g(page\).)p
0 TeXcolorgray 1898 5225 a(53)p 0 TeXcolorgray eop end
%%Page: 54 54
TeXDict begin 54 53 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XSL)-9 b(T/Inserting)35 b(elemen)m(ts)h
(\(con)m(t\))589 672 y Fr(The)22 b(name)g(of)e(the)h(inserted)h(elemen)
m(ts)g(w)m(as)g(un)m(til)g(no)m(w)g(written)g(in)f(the)g(transform,)448
772 y(but)44 b(it)g(is)f(p)s(ossible)g(to)h(insert)f(elemen)m(ts)i
(whose)f(names)g(are)g(made)g(at)f(run-time.)448 872
y(Consider)p 0 TeXcolorgray 0 TeXcolorgray 448 1046 a
Fk(<?xml)d(version="1.0")g(encoding="UTF-8"?>)448 1146
y(<xsl:transform)g(version="2.0")1008 1245 y
(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
1345 y(<xsl:output)g(method="xml")g(indent="yes"/>)528
1445 y(<xsl:template)g(match="cars">)608 1544 y
(<models><xsl:apply-templates/></models>)528 1644 y(</xsl:template>)528
1743 y(<xsl:template)g(match="car">)608 1843 y(<xsl:element)g
(name="{@manufacturer}">)688 1943 y(<xsl:value-of)g(select="@model"/>)
608 2042 y(</xsl:element>)g(</xsl:template>)448 2142
y(</xsl:transform>)448 2382 y Fq(XSL)-9 b(T/Inserting)35
b(elemen)m(ts)h(\(con)m(t\))589 2495 y Fr(Notice)30 b(that)f(elemen)m
(t)i Fk(<xsl:element)39 b(name="td">Matiz</xsl:element>)29
b Fr(is)f(equiv-)448 2608 y(alen)m(t)39 b(to)e Fk(<td>Matiz</td>)p
Fr(.)61 b(Also,)39 b(remem)m(b)s(er)f(the)g(braces)g(around)g
Fn(@manufacturer)448 2721 y Fr(to)31 b(select)f(the)h(attribute)h
Fq(v)-6 b(alue)p Fr(:)41 b Fn({@manufacturer})p Fr(.)589
2933 y(Then,)32 b(the)e(result)h(of)f(applying)h(it)f(to)h(the)g
(\034rst)f(car)h(list)f(page)h(52)f(yields)p 0 TeXcolorgray
0 TeXcolorgray 448 3121 a Fn(<?xml)43 b(version="1.0")e
(encoding="UTF-8"?>)448 3234 y(<models>)536 3347 y
(<Daewoo>Matiz</Daewoo>)536 3460 y(<Hyundai>Sonata</Hyundai>)448
3573 y(</models>)448 3813 y Fq(XSL)-9 b(T/Inserting)35
b(elemen)m(ts)h(\(con)m(t\))589 3926 y Fr(In)i(the)h(transform)g(page)f
(52)h(w)m(e)g(had)f(a)h(template)g(for)f(eac)m(h)h(attribute)h(\()p
Fn(model)448 4038 y Fr(and)31 b Fn(manufacturer)p Fr(\).)589
4251 y(It)e(w)m(ould)h(b)s(e)f(b)s(etter)g(to)g(ha)m(v)m(e)h(only)f
(one)g(template)h(for)f(all)g(the)g(attributes,)i(since)448
4364 y(w)m(e)h(pro)s(cess)e(them)i(in)e(the)i(same)e(w)m(a)m(y)-8
b(,)33 b(i.e.,)e(insert)g(in)g(the)g(output)h(an)f(elemen)m(t)h(with)
448 4477 y(the)g(same)f(name)h(as)f(the)h(attribute)h(and)e(with)h(a)f
(text)h(no)s(de)f(whose)h(con)m(ten)m(ts)h(is)e(the)448
4590 y(same)g(as)f(the)g(attribute)i(v)-5 b(alue.)589
4802 y(W)d(e)34 b(need)g(a)g(function)g(named)h Fn(name)d
Fr(whic)m(h)j(returns)f(the)g(name)g(of)f(the)h(con)m(text)448
4915 y(no)s(de)d(when)g(called)g(as)f Fn(name\(\))p Fr(.)p
0 TeXcolorgray 1898 5225 a(54)p 0 TeXcolorgray eop end
%%Page: 55 55
TeXDict begin 55 54 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XSL)-9 b(T/Inserting)35 b(elemen)m(ts)h
(\(con)m(t\))589 672 y Fr(Consider)p 0 TeXcolorgray 0
TeXcolorgray 448 847 a Fk(<?xml)k(version="1.0")g(encoding="UTF-8"?>)
448 946 y(<xsl:transform)g(version="2.0")1008 1046 y
(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
1146 y(<xsl:output)g(method="xml")g(indent="yes"/>)528
1245 y(<xsl:template)g(match="cars">)608 1345 y
(<cars><xsl:apply-templates/></cars></xsl:template>)528
1445 y(<xsl:template)g(match="car">)608 1544 y
(<car><xsl:apply-templates)g(select="attribute\(\)"/></car>)528
1644 y(</xsl:template>)528 1743 y(<xsl:template)g
(match="attribute\(\)">)608 1843 y(<xsl:element)g(name="{name\(\)}">)
688 1943 y(<xsl:value-of)g(select="."/>)608 2042 y(</xsl:element>)528
2142 y(</xsl:template>)448 2242 y(</xsl:transform>)448
2482 y Fq(XSL)-9 b(T/Inserting)35 b(elemen)m(ts)h(\(con)m(t\))589
2595 y Fr(Applying)31 b(it)g(to)f(the)h(\034rst)f(car)h(list)f(page)h
(52)f(yields)h(the)f(second)h(car)g(list:)p 0 TeXcolorgray
0 TeXcolorgray 448 2782 a Fn(<?xml)43 b(version="1.0")e
(encoding="UTF-8"?>)448 2895 y(<cars>)536 3008 y(<car>)711
3121 y(<model>Matiz</model>)711 3234 y(<manufacturer>Daewoo</manufact)o
(urer>)580 3347 y(</car>)536 3460 y(<car>)711 3573 y
(<model>Sonata</model>)711 3686 y(<manufacturer>Hyundai</manufac)o
(turer)o(>)580 3798 y(</car>)448 3911 y(</cars>)448 4151
y Fq(XSL)-9 b(T/Inserting)35 b(elemen)m(ts)h(\(con)m(t\))589
4243 y Fr(W)-8 b(e)34 b(can)g(ev)m(en)f(generalize)i(the)f(transform)f
(and)h(mak)m(e)g(it)f(w)m(ork)h(on)f(an)m(y)h(kind)f(of)448
4334 y(do)s(cumen)m(t,)f(b)m(y)e(con)m(v)m(erting)j(ev)m(ery)d
(attribute)h(in)m(to)h(an)e(elemen)m(t)i(of)d(the)i(same)f(name.)448
4425 y(Consider)p 0 TeXcolorgray 0 TeXcolorgray 448 4591
a Ff(<?xml)36 b(version="1.0")g(encoding="UTF-8"?>)448
4683 y(<xsl:transform)g(version="2.0")952 4774 y
(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)520
4865 y(<xsl:output)g(method="xml")g(indent="yes"/>)520
4957 y(<xsl:template)g(match="element\(\)">)p 0 TeXcolorgray
1898 5225 a Fr(55)p 0 TeXcolorgray eop end
%%Page: 56 56
TeXDict begin 56 55 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 592 573 a Ff(<xsl:element)36 b(name="{name\(\)}">)664
664 y(<xsl:apply-templates)g(select="element\(\)|attribute\(\)"/>)592
756 y(</xsl:element>)520 847 y(</xsl:template>)520 938
y(<xsl:template)g(match="attribute\(\)">)592 1029 y(<xsl:element)g
(name="{name\(\)}">)664 1121 y(<xsl:value-of)g(select="."/>)592
1212 y(</xsl:element>)520 1303 y(</xsl:template>)448
1395 y(</xsl:transform>)448 1635 y Fq(XSL)-9 b(T/Inserting)35
b(elemen)m(ts)h(\(con)m(t\))589 1748 y Fr(Apply)31 b(it)f(to)h(the)f
(\034rst)h(car)f(list)g(page)h(52)g(yields)f(the)h(second)g(car)f(list)
g(again:)p 0 TeXcolorgray 0 TeXcolorgray 448 1935 a Fn(<?xml)43
b(version="1.0")e(encoding="UTF-8"?>)448 2048 y(<cars>)580
2161 y(<car>)711 2274 y(<model>Matiz</model>)711 2387
y(<manufacturer>Daewoo</manufact)o(urer>)580 2500 y(</car>)580
2613 y(<car>)711 2726 y(<model>Sonata</model>)711 2839
y(<manufacturer>Hyundai</manufac)o(turer)o(>)580 2952
y(</car>)448 3064 y(</cars>)448 3305 y Fq(XSL)-9 b(T/Inserting)35
b(attributes)589 3396 y Fr(Inserting)d(attributes)g(is)e(akin)h(to)g
(inserting)h(elemen)m(ts.)44 b(Consider)31 b(the)h(straigh)m(t-)448
3487 y(forw)m(ard)p 0 TeXcolorgray 0 TeXcolorgray 448
3653 a Ff(<?xml)k(version="1.0")g(encoding="UTF-8"?>)448
3745 y(<xsl:transform)g(version="2.0")952 3836 y
(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)520
3927 y(<xsl:output)g(method="xml")g(indent="yes"/>)520
4019 y(<xsl:template)g(match="cars">)592 4110 y(<table)g(border="1")g
(width="500">)664 4201 y(<xsl:apply-templates/>)592 4293
y(</table>)520 4384 y(</xsl:template>)520 4475 y(<xsl:template)g
(match="car">)592 4567 y(<tr)g(bgcolor="#dddddd">)664
4658 y(<xsl:apply-templates)g(select="attribute\(\)"/>)592
4749 y(</tr>)520 4840 y(</xsl:template>)520 4932 y(<xsl:template)g
(match="attribute\(\)">)p 0 TeXcolorgray 1898 5225 a
Fr(56)p 0 TeXcolorgray eop end
%%Page: 57 57
TeXDict begin 57 56 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 592 573 a Ff(<td>)36 b(<xsl:value-of)g(select="."/>)g
(</td>)520 664 y(</xsl:template>)448 756 y(</xsl:transform>)448
996 y Fq(XSL)-9 b(T/Inserting)35 b(attributes)h(\(con)m(t\))589
1095 y Fr(Instead)31 b(of)f(writing)p 0 TeXcolorgray
0 TeXcolorgray 448 1270 a Fk(<xsl:template)40 b(match="car">)528
1369 y(<tr)g(bgcolor="#dddddd">)608 1469 y(<xsl:apply-templates)g
(select="attribute\(\)"/>)528 1568 y(</tr>)448 1668 y(</xsl:template>)
589 1842 y Fr(one)31 b(can)g(write)p 0 TeXcolorgray 0
TeXcolorgray 448 2017 a Fk(<xsl:template)40 b(match="car">)528
2116 y(<tr>)608 2216 y(<xsl:attribute)g
(name="bgcolor">#dddddd</xsl:attribute>)608 2316 y
(<xsl:apply-templates)g(select="attribute\(\)"/>)528
2415 y(</tr>)448 2515 y(</xsl:template>)448 2755 y Fq(XSL)-9
b(T/Inserting)35 b(attributes)h(\(con)m(t\))589 2846
y Fr(Con)m(v)m(erting)41 b(the)f(second)f(car)g(list)g(to)g(the)g
(\034rst)g(one)g(is)g(th)m(us)g(ac)m(hiev)m(ed)i(b)m(y)e(the)448
2938 y(transform)p 0 TeXcolorgray 0 TeXcolorgray 448
3104 a Ff(<?xml)d(version="1.0")g(encoding="UTF-8"?>)448
3195 y(<xsl:transform)g(version="2.0")952 3286 y
(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)520
3378 y(<xsl:output)g(method="xml")g(indent="yes"/>)520
3469 y(<xsl:template)g(match="cars">)592 3560 y
(<cars><xsl:apply-templates/></cars>)g(</xsl:template>)520
3652 y(<xsl:template)g(match="car">)592 3743 y
(<car><xsl:apply-templates/></car>)g(</xsl:template>)520
3834 y(<xsl:template)g(match="element\(\)">)592 3926
y(<xsl:attribute)g(name="{name\(\)}">)664 4017 y(<xsl:value-of)g
(select="text\(\)")g(/>)592 4108 y(</xsl:attribute>)520
4200 y(</xsl:template>)448 4291 y(</xsl:transform>)448
4531 y Fq(XSL)-9 b(T/Inserting)35 b(attributes)h(\(con)m(t\))589
4644 y Fr(Note)c(that)g(the)g(last)f(template)i(matc)m(hes)g
Fn("element\(\)")p Fr(,)c(whic)m(h)k(means,)f(in)f(gen-)448
4757 y(eral,)g(\020an)m(y)g(elemen)m(t)h(no)s(de.\021)p
0 TeXcolorgray 1898 5225 a(57)p 0 TeXcolorgray eop end
%%Page: 58 58
TeXDict begin 58 57 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 589 573 a Fr(The)25 b Fp(XSL)-8 b(T)24
b Fr(pro)s(cessor)f(alw)m(a)m(ys)i(select)f(the)g(\034rst)g(template)h
(matc)m(hing)h(the)e(curren)m(t)448 686 y(no)s(de)40
b(\(elemen)m(t)i(or)e(attribute\))i(most)e(precisely)-8
b(,)43 b(so)d(templates)h(m)m(ust)f(b)s(e)g(ordered)448
799 y(carefully)-8 b(.)589 1011 y(Therefore,)25 b(here,)e(the)f
(template)h(matc)m(hing)g Fn(element\(\))c Fr(will)j(matc)m(h)h(an)m(y)
e(elemen)m(t)448 1124 y(no)s(de)27 b(whose)g(name)h(is)e(neither)i
Fn(car)e Fr(nor)h Fn(cars)p Fr(,)g(b)s(ecause)g(of)f(the)i(t)m(w)m(o)g
(\034rst)f(templates.)448 1364 y Fq(XSL)-9 b(T/Cop)m(ying)35
b(elemen)m(ts)589 1477 y Fr(Sometimes)h(one)g(w)m(an)m(ts)g(to)f(cop)m
(y)g(an)g(elemen)m(t)h(from)f(the)g(source)h(do)s(cumen)m(t)g(to)448
1590 y(the)31 b(output.)589 1789 y(One)c(w)m(a)m(y)h(is)e(the)h
(so-called)g Fq(shallo)m(w)j(cop)m(y)p Fr(,)d(i.e.)40
b(the)26 b Fg(c)-5 b(ontext)31 b(no)-5 b(de)29 b(and)g(its)f(text)448
1889 y(no)-5 b(des)45 b Fr(are)38 b(copied)g(but)f(neither)i(the)e(c)m
(hildren)i(elemen)m(t)g(no)s(des)e(nor)g(the)h(attribute)448
1989 y(no)s(des:)p 0 TeXcolorgray 0 TeXcolorgray 448
2163 a Fk(<xsl:copy>)i(...)g(</xsl:copy>)589 2337 y Fr(or)p
0 TeXcolorgray 0 TeXcolorgray 448 2512 a Fk(<xsl:copy/>)589
2699 y Fr(In)30 b(the)f(latter,)i(the)f(con)m(text)h(no)s(de)e(is)g
(copied)i(without)f(mo)s(di\034cation,)i(whilst,)e(in)448
2812 y(the)h(former,)g(attributes)g(and)g(c)m(hildren)h(elemen)m(ts)g
(can)e(b)s(e)h(added.)448 3052 y Fq(XSL)-9 b(T/Cop)m(ying)35
b(elemen)m(ts)h(\(con)m(t\))589 3152 y Fr(Consider)c(the)e(simple)h
(template)p 0 TeXcolorgray 0 TeXcolorgray 448 3326 a
Fk(<xsl:template)40 b(match="car">)528 3426 y(<xsl:copy/>)448
3525 y(</xsl:template>)589 3700 y Fr(When)31 b(matc)m(hing)p
0 TeXcolorgray 0 TeXcolorgray 448 3874 a Fk(<car>)528
3974 y(<model>Matiz</model>)528 4073 y
(<manufacturer>Daewoo</manufacturer>)448 4173 y(</car>)589
4347 y Fr(pro)s(duces)p 0 TeXcolorgray 0 TeXcolorgray
448 4522 a Fk(<car/>)p 0 TeXcolorgray 1898 5225 a Fr(58)p
0 TeXcolorgray eop end
%%Page: 59 59
TeXDict begin 59 58 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XSL)-9 b(T/Cop)m(ying)35
b(elemen)m(ts)h(\(con)m(t\))589 672 y Fr(Consider)c(the)e(template)p
0 TeXcolorgray 0 TeXcolorgray 448 847 a Fk(<xsl:template)40
b(match="car">)528 946 y(<xsl:copy>)608 1046 y(<xsl:attribute)g
(name="model">Matiz</xsl:attribute>)608 1146 y(<xsl:attribute)g
(name="manufacturer">Daewoo</xsl:attribute>)528 1245
y(</xsl:copy>)448 1345 y(</xsl:template>)589 1519 y Fr(whic)m(h,)32
b(when)f(matc)m(hing)h(the)f(same)g(elemen)m(t,)h(no)m(w)f(pro)s(duces)
p 0 TeXcolorgray 0 TeXcolorgray 448 1694 a Fk(<car)40
b(model="Matiz")g(manufacturer="Daewoo">)448 1934 y Fq(XSL)-9
b(T/Cop)m(ying)35 b(elemen)m(ts)h(\(con)m(t\))589 2033
y Fr(There)29 b(is)e(a)h(w)m(a)m(y)g(to)g(cop)m(y)g(the)g(no)s(de)g
(and)g(the)f(whole)i(subtree)f(b)s(elo)m(w)g(it)g(b)m(y)g(using)448
2133 y(the)j Fp(XSL)-8 b(T)30 b Fr(elemen)m(t)i Fn(copy-of)p
Fr(.)39 b(Consider)p 0 TeXcolorgray 0 TeXcolorgray 448
2307 a Fk(<?xml)h(version="1.0")g(encoding="UTF-8"?>)448
2407 y(<xsl:transform)g(version="2.0")1008 2507 y
(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)448
2606 y(<xsl:template)g(match="cars">)528 2706 y(<xsl:copy-of)g
(select="."/>)448 2805 y(</xsl:template>)448 2905 y(</xsl:transform>)
589 3093 y Fr(When)31 b(applied)g(to)g(either)g(the)g(car)f(lists)g
(page)h(52)g(yields)f(the)h(same)f(do)s(cumen)m(t.)448
3333 y Fq(XSL)-9 b(T/Cop)m(ying)35 b(elemen)m(ts)h(\(con)m(t\))589
3432 y Fr(If)21 b(the)g(selection)h(in)f(the)g Fn(copy-of)f
Fr(elemen)m(t)i(is)f(a)g(no)s(de)g(set,)i Fg(al)5 b(l)24
b(the)g(no)-5 b(des)24 b(and)g(their)448 3532 y(subtr)-5
b(e)g(es)35 b(wil)5 b(l)32 b(b)-5 b(e)33 b(c)-5 b(opie)g(d)34
b(verb)-5 b(atim)34 b(to)e(the)h(output)p Fr(.)41 b(F)-8
b(or)31 b(example,)g(the)g(transform)p 0 TeXcolorgray
0 TeXcolorgray 448 3706 a Fk(<?xml)40 b(version="1.0")g
(encoding="UTF-8"?>)448 3806 y(<xsl:transform)g(version="2.0")1008
3906 y(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
4005 y(<xsl:template)g(match="cars">)608 4105 y(<xsl:copy>)688
4205 y(<xsl:copy-of)g(select="car[1]|car[2]"/>)608 4304
y(</xsl:copy>)528 4404 y(</xsl:template>)448 4503 y(</xsl:transform>)
589 4691 y Fr(will)31 b(also)g(en)m(tirely)g(cop)m(y)g(the)g(car)f
(list)h(to)f(the)h(output.)p 0 TeXcolorgray 1898 5225
a(59)p 0 TeXcolorgray eop end
%%Page: 60 60
TeXDict begin 60 59 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XSL)-9 b(T/Cop)m(ying)35
b(elemen)m(ts)h(\(con)m(t\))589 672 y Fr(It)44 b(is)g(often)g(useful)g
(to)h(cop)m(y)f(v)m(erbatim)i(the)e(source)h(do)s(cumen)m(t)h
Fg(exc)-5 b(ept)47 b(some)448 772 y(p)-5 b(arts)p Fr(.)40
b(T)-8 b(o)27 b(ac)m(hiev)m(e)h(this,)f(w)m(e)g(cannot)g(use)g
Fn(copy-of)p Fr(.)37 b(So,)28 b(\034rst,)f(w)m(e)g(need)g(to)g
(de\034ne)g(an)448 872 y(iden)m(tit)m(y)j(transform)f(and)g(then)g(mo)s
(dify)f(it)h(to)f(tak)m(e)h(in)m(to)h(accoun)m(t)g(some)e(exceptions.)
448 971 y(First)j(try)p 0 TeXcolorgray 0 TeXcolorgray
448 1146 a Fk(<?xml)40 b(version="1.0")g(encoding="UTF-8"?>)448
1245 y(<xsl:transform)g(version="2.0")1008 1345 y
(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
1445 y(<xsl:output)g(method="xml")g(indent="yes"/>)528
1544 y(<xsl:template)g(match="element\(\)">)608 1644
y(<xsl:copy>)688 1743 y(<xsl:apply-templates)g(select="node\(\)"/>)608
1843 y(</xsl:copy>)528 1943 y(</xsl:template>)448 2042
y(</xsl:transform>)448 2282 y Fq(XSL)-9 b(T/Cop)m(ying)35
b(elemen)m(ts)h(\(con)m(t\))589 2395 y Fr(Notice)30 b(the)g(function)g
Fn(node)f Fr(whose)g(call)h Fn("node\(\)")p Fr(,)e(allo)m(ws)i(the)g
(selection)g(of)g(the)448 2508 y(c)m(hild)45 b(elemen)m(t)h
Fq(and)e Fr(c)m(hild)h(text)f(no)s(des.)81 b(\()p Fn("element\(\)")41
b Fr(w)m(ould)k(select)g(only)f(the)448 2621 y(c)m(hild)28
b(elemen)m(t)g(no)s(des,)f Fn("text\(\)")d Fr(only)i(the)h(c)m(hild)g
(text)f(no)s(des,)h(and)g Fn(".")e Fr(the)i(con)m(text)448
2734 y(no)s(de.\))589 2947 y(When)i(applied)g(to)g(the)f(second)h(car)g
(list)f(page)h(52,)g(w)m(e)g(get)f(the)h(same)f(do)s(cumen)m(t,)448
3060 y(but)j(when)g(applied)g(to)g(the)g(\034rst)f(car)h(list)f(\(same)
h(page\))g(it)f(yields)p 0 TeXcolorgray 0 TeXcolorgray
448 3247 a Fn(<?xml)43 b(version="1.0")e(encoding="UTF-8"?>)448
3360 y(<cars>)536 3473 y(<car/>)536 3586 y(<car/>)448
3699 y(</cars>)589 3886 y Fr(b)s(ecause)31 b Fn("node\(\)")d
Fr(do)s(es)i(not)h(matc)m(h/select)h(attribute)g(no)s(des.)448
4127 y Fq(XSL)-9 b(T/Cop)m(ying)35 b(elemen)m(ts)h(\(con)m(t\))589
4239 y Fr(The)30 b(relationship)h(b)s(et)m(w)m(een)g(the)e(di\033eren)m
(t)i(tests)e(or)g(t)m(yp)s(es)g(can)h(b)s(e)f(summarised)448
4352 y(in)i(a)f(tree:)p 0 TeXcolorgray 0 TeXcolorgray
626 4938 a @beginspecial 71 @llx 654 @lly 422 @urx 721
@ury 3159 @rwi @setspecial
%%BeginDocument: tests.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.994 Copyright 2014 Radical Eye Software
%%Title: tests.dvi
%%CreationDate: Wed Feb  4 15:57:11 2015
%%BoundingBox: 71 654 422 721
%%DocumentFonts: CMTT10 CMTI10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E -o tests.ps tests.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2015.02.04:1557
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/05/15
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  0 0 moveto 1 0 rmoveto  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.06, 2014/05/19
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 876 2014-01-28 15:03:13Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMTI10
%!PS-AdobeFont-1.0: CMTI10 003.002
%%Title: CMTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI10 known{/CMTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000828 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI10 def
/FontBBox {-35 -250 1124 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI10.) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /e put
dup 105 /i put
dup 109 /m put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5FD29DA32D34C95E
2AB2ADB3F60EEB0600C8ADE15A2380DE10AC5AAD585FBD13097B1A7E8E210D4A
EE96785449E07F0C8EBC2EC5EFBFD0897DFDC15E5BFAC9584D8DE95C5AB288CD
8AD8B9BEF0B8E5F887B3B0B331542FC8184DCCB753DB6ACEEF98B85756B988DF
CAF1AE0DBE7D37D5F44A2E760AAE3A5197C27B15E32275A64946C3E4D0476FD2
7FDE148C788DD2106F7C825E270588AC05B57E625AB17BDD02306F9E5FC851DC
32A5A6EDC43C770A71419B2C0C8074EF3F222C8A2097CD81A91F333A521B3A09
482A4FE1CB231CE344AD126AA284C3280AAC3AD162CF0EE241BFB4C8F20502FF
118507F5D1B5FD898571015E73E5CF2281085072E00D401F6F59761EEC3E8381
1F26F75DB66C504AB6BABA87D121B1E7040A07AA2FE01F80DBC246CC03C4B2DC
C2A715980C52B7F96BC1A78FCC7F4F52EEED5F705E08FC1E5BBFCAD121FA88AA
8EBE58172C162AF409DBB0728F14923ED02A65EA24E5D52B6AD07777455A70A4
61833D3789C719BA92E901232599767E423D5AD9C807670BE0E7B5CFF8256A20
C7BF7214FFE0342809570F5966A2C43E784F35015D9040BA34FEAB6A6F089504
3A40A9E9D711A2721D3F4998371430FB3C94BFC619559B97D49627BB630F4B70
9D0A8FE4E916235335C3962F3CFDB04C4A3CF714DB5E260F4E66FFF2F27CEF2A
D4AA26BBCAED23B8BDC98F8F453BA27AD7758537561E766B82DC3032E92A9EB0
125D98A22C5466AF069BF72A9BFA052A8628FEC6A6AD0B711DFFEDE3AA2D7CE8
34EA487038EF50F953B8B4471CBA6FC3C53877EC1BC94582B1123EDF44B4056A
30F49394BDE22CDAD7F01951C7013D26979277D18EFA594E8F4F2B5E615187D9
39E842EC28461B9ABA52020A127D2CB9002A673A435B13C10602EEFDBBA6BD49
9DDEAB9E68D655443A5C2492BA061C1391A51592BA8C353A6F6A0708E8860184
2B5D031D2CAB87D618E9F6F7A0BF3F66B3FD5A25BB91F7F1F5F99CFF56EFF4FF
0A35C55658001ED2E97B26C869292F6274D433A5443179DBB8EE987196306348
3F9E87C6422AFFDD30080C9AC4EE7FE5E2DCBFEE4974331F4AAE479FD8806D4D
9C2B85FC69EB0453AD827A1E767E5C484BDFBF5C8D6E2B3C96298B390F22D757
802643A79D5E29CF3AEDF0E12CFBECA4663444FC87F2027571DBA9ECF688BF28
FF0DDB3AEDBA0FB28447CB4B5D5205F40C1E7A525FD7373392EEFFD910AC82D0
98E71660A1B3227C4A2592F3E853CA4CDF64DF19A52582E167234F4036FAAAB9
5446BE102DE2BF43E82F0112C2A20F15A3F92C6571AC761665A905362C4F8BDF
AC8705519C99862CD9C0D75113C4AB5FBB83C880E46B82715B5628890D9103AD
A2329638B95D93C4DECDC5E6C588C9D5183EE6FC28FAF9825F02DCA567306D93
5440987A81B51EE7291107A08F201C609FEF91A8F0587E8B13D4BAF74A5A6815
DE9E4441F46AF8E1DDDFA2D611C889614040B144A5EC064DEE4638C04EAB2E37
4CA8F50FB8C4D65BB296DCCCD39F1F554CFBED96670A91F515CA10EF896874BC
8EF48C6447752C70FF5A06F928DB55586354076773BFF7E94C4C3A7A1C1F421B
A9B4E3936EC26E0C19BBBFC90F021E877F54B62108F6DD1C7F6D5B8E64FC9362
E173F01BF2904B7E5A08B3543611562C2714099DE7D4FA330DB148B560A9601F
42A84452811CE213DCE782A0D7809CFD954D6BC1EBF2BA4D1B18F50FA8174C96
3E0120E266AD5DDB40B3F6798AC28CDC5C3C4BC34583528F5B5DC8A222B80B59
A3A93DC715D061EC6915E6E6E21A25425C25E8747C60F170D61047108826F96F
7830E220C108B441B6EA3198E33C49BAD8D43086E49F5A2BC7958A1A8CD011C4
49045193394696EC3DDD0BE084E8F2E9F0B9496F035C0DEC1CE11409DF566428
D50043CFF5CDD1092F6E0807E660B68163BCA738E8D98FC6EE3F713164CD204C
0BA84FFF4F33F47BC31750B448603D7ADB9AE92FA91AEBBBEC0DCD66980E6955
CEB425ED07115B24E40F53B29B9D840842EAC691B4F591F866DF27556474B485
1C6F53DD72499847109B16C7093984A6B8487D4F3870DD517945CD90E648C1BB
8A6861E540FCF9D75B984B5009B5CC760CBE297042C240DD624111670B703388
6FE6FC0E89C6B4C88F51DFF3913D0CC1FB4770C8CBEADD4B86393605C0B6C468
83CA5594754411B6FC331EF56D7CD6D247FAE42E966583C29239A8F862348D29
60B177984B6B957E733DB4D275015691D91443BBB13C2DA96097A29733CDB284
42F89C85A7A743338C9DD3BBC4EE53F695E5163E6E1ABE5791ABF100B198B9B2
1C21E2FA2FB4AFE7F9BB2D381260CDD3A2CC05BF513AA1E80ED69FA27BC5ED5A
21445BF00BC2F997B356D94AF13736C6D3B0613EB6F4CD96A685FEB672661DCA
206105EDC3CA07900676EB2FAB37F48D2E8207BDE1463894DA3C5B1488AC1EE9
D39DAF691648048F5D7A384B8927F8DA2BE3602669F71D80686E427F395134E7
7ADCC611BA91AD4B7A0237213C60CF2C905359C90795230344FC3C50A22BD44B
55B2044792509F50F5C21F53D9F9E9F063ADBED3AB99E2613B23334FE8DF70B4
6120F2EDF69F50BE793EE145B9FF9C73179DE640FC2ACEB5C6617F918CEEB762
4CD81E665B2E544864D13230B058717B207D3CC5D6647D5343DB4D0356082392
871EFFA896631A7E0D6477942B632074A9A4EF7B09D4701B1639BAAB4E03A40E
9B54A7A4F845CD63F88831EBFA4FB847847CB98F3455CB5957F2E0A0F5623645
DBB5C5564C7F8B117D6E27E65C0F3EA81AE67B4AE4B201E7C4FB0A8364FE53F5
41A7CE8F834C2C4B322809B353A5E63BBA7BF3B7DC1A85EA700BD287C2BD3FC8
2832B0BB4695FC937FF5EF06FCD87DCE6DE793C2B1EE10E6450352C17726155F
220D550B1759E15AB2C1D5968E52C8080CD280E99D3CCC0E80C2EF8BBFD96001
A226FEED7311EFB4B67F424B557A877379A15BCA54780F0CD2CCA00400B9B39D
981C6B552AFD2506D1B23618FA9AE6D8143CD7198A8482CB416CCE62B992347F
337D505A4078713BBD91E5535BD58EF0351EBDCD749CC24D4AD39F8CECD7D6C8
139756680A4C03A58B3374CEC658D30160AE4863A3938A891BB59CBE02BB451B
1BA4B2B6E68AB61DEB85F95E3C909B8B66E220B9F18280161C279F10F7093CDC
100A53D542F071CC0A5AF834DC1D18738F5DD62A5573E884E1FFD22BD810828A
1EA47F8218C15A2E97CBC609927DA3CC2B802EA4A0D7EB57627C135E3B065905
F97597D818A2C5CC6F328AD25AD11FA50F1E4FE637980B7474D6F85A521892FB
72989AABEBE02A2D0EFE88A6F67AC29F5D8DDFEDAAF465C439983C6B84389FF7
A6434462BEB7B07DBE4BBA61ACD4A60C55B5C0AAE527DE381DFECA2E6BAFDC8D
310364ECB42CAFF72BA93C067B2F02D1CA7C34AE7CDC46787A0E234C8BE8A928
7A6F3DDE0338FAD532A9886E8E3525B85DD39364AB03EC4C0DD25DC179CC1989
1BE232E387E857C78332D834679195E10F1E7B87B7966DA3B2238F53D1E13FE2
8F55ED6A92A750C7250C9B91E29796621E7E9520373214D7DA81B2875A986D33
80382AFF6DE1F829F048E57664D9C4ACE91E4684A51023943A4964AB5657D610
3A5405EFD4CFD1EBA684243E15093C9667797BB47617B66054EE02C41FFEC45C
C1BAE8AD56B00D323FCB1D2744F061FA16E161988741A319B1564E04BA210996
4F9F02A3268CABE450D166A763F5284954564A1C86B76544C5F5ACDFE0D758DB
865A1CFCF9FE8CD5F9C3B2998C56468FD52DF8EE60C6935A3D221EAEC7714E3B
301371C7DDA0B03A2416238F2B47BAD3A2C5021C886DF51C695AF9C87A864B48
3BB3FE0B355EED5454B59B25A0D8A1B8CBD356C24F64D9B55E16C30C011365C9
1E0380753BA3EDC0868788D5F50B9353D0227BCEE1BE36998B2622C0759BD66B
E4444250589F9CEDE766D8B940770CB6B89503E925B35C00CBEC2873D2DC4A29
0823FB7A3717B69A7DEDBAAECC067949932728E89BEECAA91DE3AF9BF070B9C0
30EEFA8C0A55C8388CAA2F0515915C98E67FA095BB98967D14B0DCAFA9622E4E
2E0EBFC768D80585ACDF28D8A5C2B6EE2FE7AAF62FFB90F569F84A0903996DF0
C1D5723366C436E4088F3E2BB9B47F9789052A71CF5C49908CDC1DDA194BFB89
14D7E3D7D4D72A150FD6FFD8303E9DE5A97A71B808B8BDF2AE466F31BF5D7A4A
44F81230BBE2B456A221E2F72A8B59F8FEA8D31F8A005A5BD93B9F49CFDC3DCC
CE2B67090460F632271C7157BDC2F05BC2749FD562FC28682A616A52D1B67654
DF78B7843A9EC26A7DE2EB168F874904C2915B97534B2D4D9F74A9573A771D34
9F7BC855E8F794621BF6AD471BCC347E2DF5F620F5C209E33A4CBF1EA85AEA87
4492A77342DD33EF615FF34037D660B713C908786D9022051B825226545827A3
2AD1B05D654DB6E6D261B4E8AF0933AD1F0FCFC7201E1A7C1B4199F160C38676
21ABA2DDF1CEB655B3EC3226E0B122976EEA998F7A5241F062E54AD1DFD6ED26
47C99A439E0AE95415059179867CDD3F0FF751F3141309F40E00A6C7C28433E4
F649BCD5DAA64177580E05C495EE7BCBCC5FBF104DAF360CC2711386655B26F9
D349D887EEB32ADE595241560FD5924A1745A22E6A01DB9C285EF14596EBFF0F
03F36EB2E0A7C3864F819EF7B0855121292D49482F046A55CD7271FE03F02EA5
886864D9D8EC22A68C23089EAEFFF03DED6484D8C341861EF8B6FD3C5BDF5AC8
352DA4E13A1E30D0CB71E090E9CFB9AB2CAFD0CA7C34AE7D8E3B2EB4666834BD
9CCD1AC2108348AFEF6071796F4BB2FFA4A67ED917E76A109FA2DC2A30D744A0
9AE653A748C1D18FB52595D84E87F1C1FB6B2F32667FE203262C66627AEFFED3
92B23861E5EB238BB4EDCE09DAE1C65BAFC198CDD1B45D42CDF93E16BB82D35F
821E9E49067E966AFAB2AB52928F8DD6359984071FC37AA652FB834A09E5BD93
3AFAE161140E74C6531E413E8FBBFC42BFE8A464B71EB1D8CAA93B33D7BCC3B0
47C7EEFCD3E9FCF26FF9441DD9BDE68D77AD7251C06BBB9A2103049E8827CAF0
F26BEF33F656A690235DEEC623CC519AFA82DE2AE16FB99F780FD7D8290DA40B
9B604AEF36B529FD184239E7D50561A07428D28E51B55546590A1AEAD4B7F2B1
AB8C5B9022C1FA03E33F8F409B24911AB8BFCF6EF4A8E415263C789F89063E71
C0910DC20347469380B7FC1EEB87D4CED7F4A361E58B61C91AFCABA35C03F978
B9FB5257C31657EE48504C355CE893FE3C553274C641DBC4004F5D5B879CC5ED
D3F21F867F6DF054127067DE86189F0B59A1B90FDABCDFEE61423609D888EEFD
F4A1367129962110C651D9481CEDDB8C5C2576A59AED64E95F7ED042AEAE2F7E
81AC0C408E593DC30DCAC334EDE9EE27D932B98F040DDCD195D6155607DD2038
970EB78221A94C52BD4F0EAC65F1FC10E5DAA93C17266F351669CAE56F42B68C
6D01E1EA03AE554D63CE76D800FDD9CFD89F80A241EAEFF7EDFA41794EA25CE7
97BD5028464D2CD45B53834B4AEF8BF0B9E7C6ECDEACEC887E8790A47A93F668
A9095E5FA1116A122C0E5B74E2226C654D3187C6CFD8807917820423DA3EC1DE
AA020EEEF2280C44A15209EE2F3FC1776875308CEAD38571E7BF889F287E4594
971A83605E0B4169D4A23EE790515223DF8724054EDAD905F57918FC0BC64F96
514B4BF7DC9BA79E763C22C977FB6146B10D26FEA1BAA7BAF21312F78D1625A7
8E242D743471DB5821408AB786E4A7EA9D35E30E85533C617689F95758FB2C7C
392E759C299DCCE36689686DE0C4DCE32649493650BA194A6208C5EAB670B170
3F2C70BF0EF0E3BE2FB0A79224FF4ECECD6BB3388C6D06867A0E5E3DB93C1B2F
464C23E44D3132E7D4086E3B59B1D13F49EB4772DEDF8EDC4F603217233FB7BE
C13C28648E9AA51D53F11FB896839F97AEDD8834BCA53CB0021AE91FD8E95E2E
F8A094093AF556B9639F508A401542B06821FF9DE1A745FE9AC5CACD5E8E1053
911442FC15CA5333751ABFE2C617D38FA1DC332BFEF44AE569DC631C93EC54D6
261583A695F5A392867A57F59B741EFCD2DCFECBC55D1EA5F2317601C9DFE9ED
D1EA466210FFA905A8F85BD58B98991BEA58DFD1CDED5C9B086D42CCE632DADA
147941917B879139E016B0DDEB8446BA017FC8EE5A354533D667B0835F5D027D
C2D580C16B80B3D05CC92C0465CAE077729F0A15B2DAFC89DCD349B3F81D0516
C65526EB5C10E45A8A85D716EE35FB9AB201FD7C89ADE5AD925A174169DA20FB
61E96C73A143DF964C20589EF24A0FCFE6195317F2FA0D2249C0D8E649C3D9AD
FF13332EA2E4C9CD36D8443EC8F027B61CEF92C6A6B72DD4ACBACC16E429A9A3
F5F29C1631360E32F8C1C93ACB22F810B86D2969A7480F486F62F8488BEEC74C
2C1AF13BB92BC578E8CD30BEA6BC8CB68ED730F54CED0167605FA76AD7B7E88C
7AE7688E598F91C471BD65A542E96D64B1EAF19FB4F1234308C48C2DC86E2193
11ABDB4C6189C6F201627C693691A86DD07FF55C30FDB3F72381E09C6080FD7C
9182762E5001E30F52A216E0B71E4D2D4E2F3B20F95DF3A11FDB2D2B5B5FAA66
C46226D5E0C77066349770514E5675550FAC9394FB27CD2C2F974F1FD58C04A3
1EF53A8AB3B2202CCA1CEFA66228E1480A0709436C44BD3319C40CF888AE4692
5DBBB52B15CF3A518F627F672135A24D5DB9B2EBEF04C860AECF231EBB5A3BF5
6DCCD5E72FE4B6DD29E896691868A7DE4120AD06AC573F5608B8449B38E71CA0
EB5CDA3F942482EA7973661170F81DC88D54DD5B92323F46F833DFA757107E9E
F62A47CC50FAA1B68ED535C3E0E1073532A05ED339C8D70B3B9864808ABACD23
AA95E9FDA43D54C66A675FA074E0A5B8777D3C07850A09087F36852B5351F35D
8BC4DDFCA35CF29CD5E3DE118A741FAC4DED36847F2E2C6CFE08669301722D94
376F540982958074E7F1383C409652F6C99DA39FE90B38221E75BC1ECB93ABF6
B00F410A0C5651DB418566AB350FDA1789AFD88286AF3BCB42B98386F7BC144B
02DEB8940D20A6B3062F0C4244EABC50923390064F1D027A8BACC3DE45156E56
4A942D1B87F1C4A76B0D4D6801AE792CCAE3009BF25368B31B6AD5476FBD3BFF
9759EF463EF5E78E10B7BF64005B2ABE0E8813950A08A1808587A98E0021D0DD
751AD515E8278F1A0759E85D8A084490BBB0F8206484AA36388B1013643D3198
3509078847BDAE08E76FA5BF3E3A73C323CE093DCC148E3C02C2DE1E26C94D5A
40EC8308ECB02FF7DD04EC1005A2A0DC74D4E587F10A3EF349E828F69FD38962
2F0C74D5DAB3ED6CC9F97008ACCE74C086A503948DEF1AAF58FC8BEC703CD360
D32098A56AC776B1BD08442052A2A4EF6C8798F7CDC102AF1A2009657254762A
0793F79A39DCD6ADBAA5EC84A7ED6018BBE727E5D477893D84F157074B24C13E
8D4881C7DF8ADC13EBA0D89745EF93B7616EC5355600BB0D2B630AABA3CF2946
AFFD0B2B724EF0F28393F3CB6A4DCBBA655E3D6E27F87E6D8BE12A15D35E1E75
D36532B9C5000C06A58822444593A1038EEB23C7AFC9EEE3907DF8232322B09B
230015E014F1B4CEB866234266440AD3686E30ABD086CF9C0926E711F0757925
5DEB3D39C8E6D6F0C05A364A0DBF90F6E32CD28887F7E237E04093E07A94C973
462254BC1B1586AAC29FC7F15A80FB5993ED22E79A0FB5BF0F7362CFA24BB2F3
D4EF7D39E1902C53053C27E2AA49C4DE54A05AFB1AA6C7CCFBD9F72150DE259A
BEBFCA5C7E828BE667E9C72222B84C4C79C2DEB885A69861DDB635B02814BAAD
9672A14E50D6A2A236AB35C6DCBFA1165F47F8F52B0787EB4B70BFE3CAA8B511
A630E8148A51C1394C7C321156CF52EE7BFE07B6C354CB65782464D2BE42C0D8
14EAFBE88DA3D5C90614F22E02626ABD343F3AC0A9698AE84CB97F1CC421D34F
98B69FF4C335B95F4222A8BAB77662B4A57A4B574265A679334D5EBCB073FF69
66BD9322B1C2253AE85AB38889B26761BA509C7F638C6CBC4BBCDBBBF4BFE1AE
855973129978F707C87462B67509FE6EEFB5E0949674C34768F001827F12F1BA
77AE866711077C30DC0E40C2D8A6EF4D85355E596E26B675E8D223D4E55C3580
5B79260E90985DA5E5B2F43DE7713D5E67080D2843D44A3585E078615BEA476C
88233D241D3A427F9B1AD26ECD535E46C137084A835CD816CCA936D0011C53E7
B33D5B50ED7BF3F41289F48E394BDC963EB1AFD6F14F0C146E0F13B03E76B389
8AD8E81E41F14D1682A113D8BA1482D9DDFDE71208AFC351B62E028C3D50BE01
FC9CD5D5F36E28DADB469201F41E9F39098B65E43FD1227A26F6FF812CE452F8
B5476C28FC1B1B3E5FEF3A3B94CD552E29288AB0A3ABCEAAEACBD2D5E9001579
738029B0E7F635C6C4962340187558084D9CD408EF7FDCE23F465AFCAA8EAAC4
8855BF64EC9BC75371A98095CB51BE7FF107E4C6C2107D887716F94563768073
B8C4238F51C1E63C279B23DE3DF51F656B90880333880515945253BE08582F17
8F405B52C4D828BC4629665F1C31F622A6C37348B410CCC9D2D4809175713005
5257815D95644A1F6C6A937F6451A79F4041BAF258454D6B3527F0C277F2CAFD
659D29178A79EC1713E439B6E14230F38C5A955473C09068553725AB22AC7B97
225329305F9C492D4A12AC1F8ABEFA3D85BF7B6D19D5CE8031E1273A9000C813
9BAF088951C2DCEF7124B93EC6EE9F5D1BD504FC7BB2C643439EFCCB1509849B
07DB6D77D6124D75B84C9804AC607A6777F03F68D8F370F21DC09778880C3CE4
E08BC8EB4F995A09CD0BFA5D0695EBF7538738092BC8541D0EB393022F25FA35
FD5EED52EBF1AEEE57274D422F9BA22A2D2F33159E66AB7D8607B409619E79F2
42CF52E618AC0DAB32ACB1E9DF2747FD308450AE73A669C769F09BADF82680C9
A03C07A68FAF6F861D116590111A828CBB7AC9803CA61B4AF6E20E1A1DF7AB71
FE6C3B631AC27BC4A201D3DB59DE93BAB932D29D4AD34B30AA263EC3394B9D86
7BEDB265D7302EA0C8821BF6939FE8DE7A25A880A44149B2F8CF7A97022B1CEF
ED7F469FF9D80EAE0270140E52AE0A405B44EC65415AAD9CEE8BCB0EF0BA9FA2
FCC1ED7D71C011BB1B8637E9F3732BEEEE337D7A640E0872AF52F15F096C38CD
221BCC55C376A0B27C2D7E75B9D0E872EC8A24698876F55DF6BA2B3C2AF31A5E
A97FACD8FE7A3E25627DB8E8AB0F66314FDF313BE178F091A66B3516F4FCFEBC
F177EBC599BE67C34C21E1CDF3F279C1676C28CC20D4B833ECBA42A1A2496A73
5411CC13803AFD1AFB40064F95BB594587308837294C3B2B9461F7E70FADA948
AC921599508E4CC0D352889A710C52001C0DC9F7B2B12407FF03BB27ACAF188C
8B53CE665EF5099A34F5C46A42CDD940430EBEEA77118C47CF5AE84CFA3FD3ED
6E3C770D6CEE2B19BAF9CAC04EA64C738703CB333E5D812BE98E67D61158A2BA
24C9E0FFB85720FFA917996C8163BADBE10421E3B32D87496CB253BB2920A8D6
F988DFBB6C36847563FCC467AED9A23B4F12FCEE066AF0850472675DFF3675F0
0A84ABB4A78DED1FBC1A837A8856E6F4347ABC96E9EFCF2B3189518B692F0AEB
B6C98BC2B59C21F485C6AB3BA3021D359D678CFC908FC86C7C7433BCE9F251CC
E2BA3D4C35DEFCC3D264DD4A61AD24BFD1D0AE575F7BBDBB349FB1313D3EF9F8
64BEF628C01EDC4986C61367A69C7744BB22C874680878627A8EAB07F62B51F1
DC4D93F432302958BA26F86709595342D8A4AEE8E0A79144C357CEADEE9EAF59
FA4BB1579AAD546894775687793BBD7D067C8133C014B1A92E463B988FF874A3
D205F4A26437267EBCCE232BF7DE58C49D98D63E059DBC7BAF0F317384CF8A0E
DEBA6E8F41BDA2FF7CC6B6E6B39564D311DE28C99A02F9576D33F4E1AD0BC032
50AFAAA43B4C20F21B9A2779CF4519193CFA149C47142D79A139C575FE513F7D
D40E66C801AEC8E40D8691857B920B0653AFDB5AA6082991917EA2F937CC38FF
F1DE37D246877E39A5DF4B383D5D854ECB051D6587CBE62A897EB27EC3C358F7
20B41417E038E25107E8D1F3A38D5999C4E093127BAD109FEB63CD174304B23F
D0594DDB2D5866433B8BB02A317355A6FD702C6FFCC0CABE36614AE1BE25EA2D
49ED7F3A5C07EA47E1E539DF844E8D5E3EFDBD150E12EC134F9AACA944DCED16
AC3F655084AC0730B0113FEE8091B3CC204E9874ED767EE5BB808DF966D156F0
FD743E467EB4368D643CB7D82B71D514FE8931A20D5F8F0A57BBCC6FEC2BE8DD
DF280FA4C1A725FD2A07CE2971DA1DDEE103799FC94156E974681FF4BD31DF48
96B0FD1944BDE2A84D1827EB0392A31CAC105AD929866E4E75E568D8B058C857
A2C7BCBCDFD171F1B5BDD82ABFF5D3F4D2E7242C41EC0ABD45C107451ED59C2E
85D6488196DA046480708F08F710AB8EECBC7823AB52D193CA975A6CB3BA43B2
5EBC0EF66752756B983F4BD65023FF7C727640BF47BCDECAEF63CAE81DCE49B3
2A78B8C5F0434E48ECE7C260E28720A698E43B4937A8506B5C984DEFEF9C9C97
D27D979178D98E5132A1D7105191ADF2A72F6F7868F0E066E1CD53234BF66AFC
6A54BA1E2AA5499847AE5026961E5008D91642C075EEAB3880F7147B853392D2
D29CC66C6B622F993BA7E8CA2254C9441843106C61FFBB5F292DFA490DEA81A4
105B168D570BF0F2737C2656B0325704D2212D383F89AE813F939BFF93C18B8A
C78CAAE3800C8F77935FDC995F03EFFA8B638D438EAE852351A115D94C0E01EA
7D22B606671E779169C4EAF81087F0D2F72C6945D14E8AAF379F864EB5A00F1E
9BC28FDFD0608919286902080788408189DDAD3E71A7E4E5965B493E59F2B437
F8455D9A1410831FAFC4C6895EBCB69BF97F9849079E9F91B6279D58724E87D9
71B6C8AAE5D13D2EE6E48D65771ED58DF654301EB10223D5CCEE7BADDB9BDB6B
B3F21A280B96F381818FFA03F782653089E1F573CED1D70786AC1B95F076A4C6
E81ECFB124478ECF4CB2928900A29ACE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTT10
%!PS-AdobeFont-1.0: CMTT10 003.002
%%Title: CMTT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT10 known{/CMTT10 findfont dup/UniqueID known{dup
/UniqueID get 5000832 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT10 def
/FontBBox {-4 -233 537 696 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT10.) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 58 /colon put
dup 97 /a put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E5ECEBA191DB82B3
7A69521B0C4D40495B5D9CE7A3AF33D17EE69979B82B715BAD8A5904C5DE0260
6C15950CCF6E188A0CDF841EB68E5A2F88253E382140F87C87E55C9EA93B8C89
14A36CDF630D6BE7CD36DBDCE22B21778E8648B97B7EC6742EB5114BDF0454B0
0EA7B1FE236C84C0E5308C871F67B973892890557AA12E00B2C20C71F516C397
3F3BBD14A1D0149CA064391056E45E9470FC7F6F556ABC82653B3C8049AB5CF4
BA83C8F2158C236B2FFD4208846013BAF4165E8BB8D334C8FF2E8D74AF5DAB2F
D44788869B08399421AAA900ECC6A2D594641C121660D4B5F512938994C18DD0
FCD9B008F68F0351D21ED735B2740CB1E0C1CCD25EB548C35B844601D98828DB
556F71D07E081A593FF12DAF83676492A0FFE16E95717A07082B43A966C1EE8F
8A59E1255E1705C43A23CF29A5E4A6547C93F1680A870EE7BAD8CF74D838CD5E
F806911D8FE4262ED8E7F5BC58B92C9C6D74F8AD45FBB021EC7E97393018B9DB
B1B84E7B243ADB05ADD3F1DB3692ADC5D47FEC7DF93080669E63281F1576B673
125EDF08016664BE73364F65389F7C3B66623AD1754ECBEF9E5CE6948D933787
A5674279ACB2EBECD3B4E6361419AB32028A27670C9F3E18B746A10B00AF6D77
4EC00E3BE521C02A99AE5BAA98F793EB1228952BE67934B91472E01AF7B816BC
56D7F19F631A1927846D800C107B1E9CBFF9D2DD513B4A8CE2E0DFD77B1ED178
E43FA7052765E9FAF89989D490D8FEF6C536EC0D4AE27A74F474B98DA9E6B92F
15E063DB260571979A5DE2423920CE1F59F56EB11E00E3BB9D466A8263E1E385
2014BEFDA8D1EA3EDA04BE32AEE6CD15C5C010A1DF7F705A2C0C18E87C8DCCE9
05D9163181CBA56C0FAC8C06A2990554C8E759D076B01BBEADE3B5FB8B551390
6C8E4A2A1C6E7D9C708614626F3770C0AB7DD2027469C77975C27576065862AD
04E5E50CEBE907E3E991FA0C627302C0E207B4D5992BEBAB5853AD1C0D271728
C76F40A79392ACCA7358F948AC65DC823CFDA59E1FF69CEBB6B7EC3CF21669E4
70D999508F9C49E2D9F8818CA53C977D93E15FBBBAF75B1E84F0BA62BCC4BAFA
4EEC82D804C8A8C0210F3E5E258BB1F6921AF02BA9861BAD5C3D5FC8CEFABA8A
A607E547B802096F7AEB09FBA99C83C9A494B94408DD607CA6561A6E6660C473
62CF8D35F31D052F6C6C8138A8E1430CBA7EA6973D6D510C1A06B3FBD79D9364
240C1A00272DA44B89A9FE8D5BF36DC1B5EBB4A78ADBE9C5EDB485F093D9517D
69E1AC9A8E6C9D7C324E3797CFEAD9A18E82E03F69B2CED7D5DDCD1A218BF2E2
ED2293AE999FE2A4B5213A10083EE0407BCF8007670B8C737EAB30311C868D84
121149ACB4A27F3ED6C0C181C98AAAF51B105F264B5672D7F745131ABAB5BEA4
0C9B43C0DD9116D6DC61F90BE72018F290D26D5E9D341055CAF09C9F45333CDB
D45B7954271767F638EEC499F7B53C2CC5774EA7A7F024C4CABFB93D9CB1856A
0C671A4ECA7C62EA5242648A84E7F3AFB9547A0AFC29593CFCE6D8B873A78157
D337CABD291431C0A2CE1F37E0CD7340567AC206FF98E4B5A6410F70F750451C
550EFB54AA259A1B236CA9CB730D2CEF125EC65D959441F7CC9768F777B44844
CC9842A307C72B740680ACBBF6AA35FA7A94825069BF7696ED81A371A9E5475A
9D997F2DFAD339AADF797F7E03E654234455AC3D17702A420EE0A597BA31BDE4
FEB8DBA7C61D311CC90441A620164DC22DC2D373973EF84CC553453AB1B3337F
7B39983B8DFFB3A9425F119B45C1CD37A76F905777B3154CA6200792F1759D06
E017890F4041A385F2238E3C48B6C8EE6F5258463FDBFF7AC762F6C4363926D6
50F004D473B7B7F73CA686B559C2885F1AA761653C727A77D73431E9D110E76A
2E55C68CD50F43997C9B2FC4710F8C8540909829E215678E63BB8363C4B8AF05
9986102BB36580D9CA95CD216B7C321822CB41B2E0422CD077F3B55E0246FDB2
44D5976F67296B5B0BE4B06F6E43535C21164E6C5089C3E9BA2D6B30888C57DE
49DC8D9D46C0D5EDC47ACF2C03B72DE3B69512508539019B759280BABEA12BC9
385308A0395C4CD33182A10A5A229743379C2075D82D8BFCE4A66E1AA087A091
8F5372684FA5037D1B92D50CD9CB4F50AD4F8EE7D51F1C9E63C721CB5B9BD011
6F0A8DD4FDCD2B008F223A1036D90F0F3B252487DE7898F9AFBB3A9D9CD49E0C
EF4ADAD5155A98D2125ED5A3D3907F67301649519419F33CD942E8DDEAC1BDA0
E90C431B198F646766A8FA9F8D1561B57E126EF604838C0C1966655CF31FB7EB
C8CCC434FC1C96046D38203E1791EC824A3D7AED85C029288D4608CA7668A2BE
484C99639F121845B22EEFCE0A3B808261921AA042AE19E641769E91277BEC29
4594082CCB3058F90FAC4A700A8A827ACA00FCF574ABC8EB7DBCECD97F2B22C0
0AA19E8739B81AF8C6F621D69B8E6F29BAE233FBA655A0AF5BDFD7F5C6B9167C
6BC7AB693D45EF2AD999F5DA3CEFA39BA48A17EE6D9F2C4DAB91AE3F0044DC3F
5D5506CE4675AA928B0092D6F173644F91295216D8BBB14CDDE0AD524A4D545C
1B5E284A3BF0396664081CFB4F186A84A0D24D61E82F4767C1E55A0642720CF3
909FA1AB8EAB78030B59BEA067DEDBD2F1D0340E790AB2777DB18248521934A8
BB38A58B7F633DEA4291B0D5D13E9A882C974697CC6D3B49E030C94EA29B5506
CC29C44D01B4751B453A46A9F6BF3BF135AE87A4CE232AF57B66578310DE41E0
2A6AC422117F1963C4D7CC306BD25A6E724E51921779F22F029733122E23E2F0
CB340008813ABB104380C80A492B3FC6D0BB07CB8D8409E9576891EF6E5C9D08
EB8320DFA31BAFFBD336D0C2BBC3D3B2D30368B9860768FC080D30569C7F7811
0EBEDA2962476113625EEB555490B8CE4C5F99D74ED10F738C61854CFF8B41C6
9402E56BE8856144A1A05D0B05F4CB7EF728B2F4F5A439F18C3B68CEFA41E59A
D8308ADC92EC1289DC84CF48D2CDEFF509A145BF945E1E00D552D329EBD2A7C4
21D58082CC8FA790E981F4AC8EAB99950678FD3A7DA3DF13778681B208DD71A0
7C3CBD0664B37C9EDC6B601D79A2C51FB54DAEE849F93209793849104E722D3F
52DFAF7047EEEDDFE744787A5801E4AC2C3D58EC5DDC15FCEE03990C53B0C57A
FC54F125A04C8E4A0ADAA725808C587E7DAFB9F784FA2875689979D316DC22BD
AA36B306A1ABCF907B63C6476737B746099973CAEA8C1E2C5C41F27E0F7DE8D7
F0D942E34E92F43FE902653D4D2EBB6F3B9F7928B1550A82AF234D45D028F429
067652BD3D391BF423AE72B9CB1E8D91E898161BE3A7849D456A861A2046711E
E934DC59442AE7D81661CE8EF727D8D7DDC0270E937E40F896AEAE6171661431
C1025C53172F9D366834BA0054FBFD84503FBAE328B6FDEA180F8EA35B1DA937
5CC3B8F00C206908C2FFFFA6A7AC6915D15EA44BDCF29E2BFCFD4A849535F19B
0D307C696BE8205C7D84B9C77F02EF27D911056EDBB4080E4D3ED72788666CAD
CD91B0ECE27A177DB23320A7FA9C31408B4D02D2A4B1CC6DDE1A6CAC3D8EC1EC
2226EC98E51046D1EC26FA20EE62D24747D83CF4941DCE5CCEEC0DBE387149CD
E05B19FFCAFC0D117F9A3E60DCD4C815228D98EF95EB559AD0ACC0D50FFDF714
56C3C812EA5ADBB013BBD956A7C4CC0ED7D3E25D5C9AF5E626F18297F75D4957
F5B0B33379114B903FE98BCF35C3FF76FEE1D9AEB711F2962276531F7380EE3F
E368720E0292A170A15C5539B1FC7BB954EE2624B504CB8C805B8D31AC38307F
0513606F09211AE64DAC447693B2A0AD15E9A64C34F5A911ECD0ABCA90E9791D
67C6BD202B0858EF96E7722305B8AC02B01AB1706CC6AE875A8DDD15EE349046
EAA65005E7866B506EDFB7A5A2AFD5C9E9DCC821A79EE9C1EA2C7BBA32A40BC7
CEC26DB1AC473C8C3960ACEC581B37D6569E8C8C42950BAB7930B65E1570E3F8
9A7FA719F1DCFDA45A3BF2AAB32C9A93BA3552608A61C623DE59BCB346E87EF5
9CF025A87803161221C5C1C6F6B3403712C76E9D755C7BD68D7F2DC03C14CDF0
C1BBED1D648B905B4B17037B7263C1EA7A7F06FAAC4E09E08483A8D714C19861
327CD9C32DDF850302DD6DDE24912D00C22ECDF3CDFB18FA831A41A7488EC203
F564CFE30D506F0829A96D35A7E09C3DCD107D589B627A15B55C5D6649126BEC
60B88C55ECCBB4E680265D9EAB4CE22965D3B1AF759B01ACB0D0E6C92B6B4EFD
A81E6A648708979487FC591CF09631310D46891423F4EC159A73E30D8DD147A4
B0EACF6D45D18CD16CEB8176F03ABCB41F2234747B9733C8FAF34AE5D43D3BA5
0CE0FACFC9B087F84FB6C68678BC6E76022B1526D6E5B3A48EC1A110BD75F45F
1C4DC6D39F254976453F57DF873B7D635C80C42026DE020E5BAFE0DA0D54D1E1
DC634D2621BA184347E5252F645A6A1DB7657C48124186F0E4C644077457C24D
55753C651A9A7B6349867641464B515B821349C795A645420508673B93750D0C
7A3B33EB1F09782033742AE8F3A23FC02284E6C03818FADD1731361542E3FA3E
75B8D52B668C3E18A4AE967D0FC3157083D952AFB8144D549E69EAAC51C279C5
E5D88A0D9D53013DFFB4352A1598FF84DCDE6FA32FC377306B9B92C0F96EE149
8CD55E7B2445B86CCA7A547FA732D52D59025129FD8C6333AC0DF4F0CFF6287E
F2036D5DBBB3B91B92F12FEBE0B61A313A4DB5A9CF0BB3DDB781A56FEBFFACCB
8CB9D1D3DBDBC4CB6AAE6769E470582403CB920630221B68BCB625CD4605FA8F
D3D5B7A1A28D15E44B38E92E906C138E72C15B86F64C38E23BF0440052A8C914
54397F49DBED99D0AF7CEA3B0A05FF37C2D7EAE1412567E6776333237C31E3C0
49949EC8BFD6E0F6446CE2D4DCD2C1524A288818CC5D159BF8463A847AE4A2B9
CC8C58F822804B81B13BF4F2DEB6229C4F51F093075581791D02C36A13B855A0
34900AA7CD4F1A797652656FE3A8425A38F421C4CC0ACA1CDD44FA6B31219276
1CDE1CD63D6A58CE705CB56CCA1260F9B86E989019071563A9B4C274A87558CA
6EF1660D574EDA276801F0057740E2C3B80D253D697736484D892CE1AB128B8A
DECD69712F5E70E895FBAA927E8194D792A04AB6CE205E04E38A433BBB793FB4
E8BBC4279D58A223C6673D909D6AFECD246E66A52F4CB35E5931D24C828489BD
4ECAF621A220D8ECF702BEB01C4FC7510197D3F6D15321EC87175ADBA6434ECD
2B5A306E91375CAD22CD94301763E4A8B981472890422C5488FCD523C9CB17DC
ED22FBF12D5F7525D0D6BCFE8CE85B0DFB1D6F989C267FFBA0A996D309E4A934
3DB54A9D29C88B9D55D7300DA3D46419256C5A07A2A529A8DE8BD1727281F5FE
97033D861E0531B14E811378EC1AF1CC7EE9BA2B07D935843D3053F673979F8C
FAFD59D555B56CE338F606747238B22BD62C42BB7238FEA335678D474A643570
A9E7B4970E8C541CE9DBC7BF70ED7BA33639D6744A18379455029E934C95E2EF
639C4848CE9A0879B51649FAB023A71782444B451F92A34CB8A124270CCF86D4
D18EEF5C1D2B2A29012613851C49F50702D63BACF95EE2AB4D72B375E0A62615
E0991E130A67ECBA9E05329B740708F1CB148724C3A6E5E3AEC1F88EBCA398D2
1CA8827C977D72734310233176D1AE26C55CF2CEACA62223315C28FCF6305C7E
A22414D4739A059F552F1F9372CCCA5FED4F9AC987942848EB498900269511F3
F408CBEA0659B954F5F1B18AE4FB270213646F9B28AE4439D2BA2D3E0AAAA780
5E530E4EFC8A060EB979E12191044509DA0C14397AFF949E12DC970658D5EAF5
4EA963F5BC1407A32F3837CA6A24B7F3D60EB8E6222B702E25ED903F9D21AE50
664A095009BDEAF4B78DAF94E5A55D48366CABF07791A1684B2F54EA69070844
4F031AF8DF416C2D3679F8BA038B0DC9DD0400CA6B34667BCBBC07E62C1668A8
35A8C57C9048A7227E672E89681B54D662079A189A9E96A3CA96D8DD10189B04
1DA49BA2729F1CA585B1BD5C467295285D52E47CA904235A1A3E48EFAE9EB6F6
01374125CE89D53C276858668CF45D2F092DDCAA52418E0BB94C2B8266B4D88A
5D911507BB1DDA3D8F6E7C14A91CA11AE799EC42E993098E18CADA70BD2A1D82
2C39326C6E3F9E84CD9758B9AE43D79BF99E6A0CD713E95B3D9B7DB90D127DE0
DAFEBF850CAAACBD860B5DEF2082F1ADA64B44B193C4A1417BE221FDCA36456C
BE5934C8CE3ED55AE3A11697C2D682B7D0F72D48976451D205783BE25DBD2507
39C14FFB4BB828DFD187104F38A7F11D5F0698C11E8C1D4F107CACE573FDC4B1
C56FDAE47024D6FD16A2FEABB434CA320300FC4B6C1B6CA08F76C60B7C08A665
99F404DBA8A2A1EB18EF6750E4EC186E31561A3F080BA6562967546715859481
7BA782940F5C5D06626D6F6A412CA7C13820EC7C1DF23E15E5829F698CF617BE
D940523E4EE4ADECEC48C24297DBAD528BA1DCE7AC335A1D15D55415B108EFC8
6D45030D27B3EA63B2B4CD771DBE66AE0218ABB1153D4B7482289D1313CEF184
5C960B1E3C3C953912CC6F4521D1E15636C1545EEE457EFB87B88C9E43CC2F38
6BC4BC96969F4FF28ABB06F4454C01CEF1B6DC538F1E832FC1666D977E5A881B
F72F1B4C7DD4BE167A5535F1163A0706F9A0B26400178DF8A128FB5EBE6A7B81
E478AD183EC06622B591337B9F1872AAEA356F4FC67EE767B34CB5A4D90702D9
39FB846947F4096FB3DCF16EC81455164783BA0B5D723060DAFF411B68307E81
7BEA1D9A47A5AA3D648E618C83C60F060029E6EC4D46B045FA7415BAB2AD0AA5
ED9C729C24136F6AF61E6409C0B5CA760B16225641E268A68CFB8260BBEAFC77
6626EBD97195E77CAB425CFB0096D805D9EE699E41680D095AE9FA10122A7882
2F00F495C9EB2102DF0D3E61833BC0A2E468C5CF7AB430FDB7C0BE3DF2C0D230
1580BAA25D65F599378D873165482A1FBB224AEA89C6BCCFBDBA42AE1C5DCF41
06969F585CD3B737D1388D6359F5468D88FCD2279BDB270F6A858FB7D2ABDEFE
5EE8FB79FA437F8F50237B92C307B73B0DCB808D07A9C3255CB9B3B17039CE5A
288103D05D132863FB522A02CEE3839EF9AF7F07D99732F0B8B384745369FB3E
7901166478F4A16076A1504C5E98D17408494E270BBF4470ED12B4332422679F
759F1D93984D7E506D16950DB6C2682FE1379EFFA6F6C95DD71F6E55BE3EF6AF
E0CB25388EEB436E6527806FC75484133F6E561DEB979D5C1FFEFDAF2A6D964E
03BAE0BD593C2992AD84569C81050F7A793C5263E50C2F50B98C4CC703EAE17A
6AEDAACE312DAFAF5278D125B6EFC5587484F61DAFF46B87B7C9B1EEDECA4859
314A9A9E2248467DE1E54D90DD671660B9040B3E0DD982260822177EFD757266
74A16C83A7FB168016A320D3DF3BD7726F1F4EC90EE5DFE810C96B099FD4368D
906AE4699049EFD37E8EF058D4B97BF71106445AADD4FC6E90615A0066823A36
673B8DE32322BBE861AE251226B4385AB28702831270DBD25D666FBB0AD7B96E
A44E891EA1EAF0F87013AFC982E33D67A28E96E0C9CB99B9E4192536830D9901
931A8CAFA41289633B20BA3BD7AA3414B6DA8D57CCF2FBE39920CC06361F075B
CC40335DB9A0071CFF77F6B7BB47F3100DBDC9C4A58C2B81EC99E8E966AF3390
E3FBCC28BA1D79961C8A1584266454DF772FBA99664D74D4A89FC82FFEDFCFE1
4C9E4A04291E803D142E37E7ACA66AB279378F2F192FFB2B5BBAD18B95F03136
2CB594A3D6D3F8576B90A6C4DAD6D6C8EE07AF682F925F01D0B26CBA347C03BE
F3B0585CF4539FDC66915E22117078CC94D621F31DCB3E021998A5D6EE94CA4B
E214D07517283D56973D8E4367392BF6C1150DEBF459D141AE0941C1C8C5CFBE
E735D796E365A1B0F60BB4CF2801EAFE4889EE5F338D3C4885368281B3C95CCE
251C28A90D318A8A0384439B38D63B94757252062EA44E88509FDD2E75FAAB71
7329622828B2785C1A8B26351BC7448C1719C88FE99BCB73F7DEA427FBFCDF4F
00EE079B0C712F7D2C8DF98D4830A9D8C8B70A8C5D54BC1DF3171135278BED55
DA1CF0E696B12935EB59B606AA3C0CC50C7A259AF32F4C81D9B39470D9993CBC
8644403D2833B34AF40511654F96BCE0064860F39849DC65622EDFA8E6EDE9A4
7DA62658B43CBCBC5E8F53D4FAE6BD0253C0C81E6C53CF5C3A9E3FCCD9AE773C
FFEB7E81904730359D72FB1F64E3B041A69B2440F63606F42819D52B47DCCCE8
D129A4C05778EA6E4945DA28411430C42A3D1366F57F0124EE7C8370B7AE6C36
2D739A53C137AF4C79060AFDAFA10DAAB8ED7D0BA6781213329980CFCFB18CF7
CBE6C7FA3C27329935F378698BB17CB6118EFDFA622B219121677E28A7F1D775
51B8EFD72B485F950B8B4C0F5E25DA3D226FEC96545945C5EBA0E4FD6B949B54
6AD49D1BB161EDE033C4CB22B633B70F38D563819330DD52912F3D10E9E2D516
B08001738F1EC4FC0B848E039F7297787377D75C8A0D05AD493E6BAB4100D265
D42EBDD432F204616D034B3F80AD2AD5D4E1DAE678029CC028DB4D2D9EC04E63
E90381E3A52638877B18EC6582059C02BE39FD0EFD694DC5204A247B081D9AF5
108E518512572179FE6218E090422F74FD548341A957DDD557CFE2A3E9479F0C
48140B475573873B2FA48758B7E84B69D33EEE87547541F53976C86DC1EF079B
38B2870748DD8BBD767AD3EFBE479ECA5B7529BAE86B985D6E793E013429A238
307E3A46BFD486834A752E5C0D52423EA2457F56703B271F766E4E8E3E36F9D8
4B8B5C77884128E64FE8F3F50A50BA8D036F18CFF8D23E9C0213658AE1922920
9F815677C752A689E9F3205F3B2C633A4FF49133F1A1C995703393F96AB10B55
F7D007E4E7EA49AABA75AEEE4BC60222661084C5F8CE09B039B6BB66D32E2A77
0432D63B1C903E50A6A59A561CAB98B1E55CD8D8FDCB3C3605186F1A186F6F9F
E4B4D5D5593233B551BBE0072CCCFF230370D27DDCBCAF0CCF5D22E6F9E86D21
3B1DF20BC115243EDC116502AE6D67EAB06663D976949A4DA6D62A02DFDA236D
8D4E7B48939C96E9D871BF424989E7C79400B16D8D58BBD4C800AE26AA137B3E
695349171B23918EF93CE8C19A332E241859F5063D9DB99186DB266279168578
ED733E90EF3EE623D915F5164C58E6471FC04A20CE220919A521EA3D67700F09
AC9ECBA5A7E842611426728E9408B6EF09FEBC37824CC08A536062BE24AD6767
E2C752794C1287D4A7B67A1CEFD1D5E0478F9A3FA13F95991B7BEEC1FF9ABB1E
11FDA9750E1F4E694E85A0FD56A56DAC25572C31E5C475D5787EAD329F20D617
EC0C8936560032862BC7FC1D4D5B9518D42860F931703DB69B94FB6EA2C70C52
61EEFF8C2E94EF8554C1031E253AB322365F29E6321DA20C3D092BE8CEC412D7
448B318C42108301B15F64E9D8CBBC9C0FDC4E1CF1B461902FD93DBC092DFF0F
BAAA7523628FE96FFFA1920009024E8E4A19E5A9F65FC28D829A36D8A5FD22D5
F72B985BD8DB595D6312A00545B4AFAF537BE8E2E7E0CC9B1B60338B480408BB
B7FAF529DC47BCCEC2FBD91B52A270ADAA461BAE73B44B9CBD72C466B9A537DA
017A1C56CE3374DD552E9B167778EBD225CFB859969032970306ECC1BB5518E5
AE47F3797180E72691B729D02E13778D502324C03D518F52A23D605155783098
2E6D29BDD2AEA15253E339B28407B56E33EBF20F7B4C81F576F276DF2620F912
33546199D9EEC9676BCC4331070F9B71196844716BCE3956DE23B4AE10F280D6
BF70A4F70E99D60757CB814F51B0A77C133DB98BBC1C80B4A851D22DF136FCDA
32FDC097B196E12DCCD19D9A70F1C9C415EF599DBADD9E665DD9B9C145175564
130A9D090B86A2B91B86041035A83712108520D9CE911D8F460B26DD8636EAE7
4CB63A15BD7B96C474DF3C2D253D393C7053EF30511D5C87876C062487226468
DBCC27360B36C54D3CD9ECC6FFB3FCCBF4787E5B773BAA1E47A08C5A40B1867E
9F200EB76152C7845C258FF7988850799419191188188B3437607DED09C34153
10195CDFBAF4A69193C8427B86C43DF1DB154A97C0CC38585047A032B327CD23
93FC59E498C85AFDA53319181899C8EB332931C22D7A64CF66F5431825491BD7
205C7A95AB5E44EB877C6F4ABF0BA399A46FE5E911B539BD91DA7B9F19F2F540
FDBEBB79CBFD1CF6E8C4A4523F35315AA895A0254F673D1DD743BFCF01A3296B
FC2A23D48F015F2D8FF9D6B1C9EA88768396EFEC282FA5CC5274F967A17ED587
5C59A2FC08256ED162565698DC5543674EA5327A63F01ED14BB1ED9A0BAF084F
9DB04C8D0972A9E22915D6453A0C46FCF77C04DB00F24D84F644269DAEB43889
C7693A557555E5172A0B082FB65E55D03A26C14FA15AF1E8BF9A9A8C29F4D4AD
8C09182177E046A31857BCB4DAFEB5481CB78985A7BBE35288F7828BFA33BE77
FB55671154FC9BBE2A16FC9EDC9AF17DFC6712CE7D2CAC614B540D5E7C1FCA6E
6D167D1E220785F43F5570EDEB1012183C46DCD92043192026ACAC4BEBB169AE
411A101DE2AA3AAC1DFA8837AEA1AC5798FB8BDDC5FE3308E550301430B2898C
A0FCB44EA4ECCD93D5294278955403B8A5C81322D03851A35391F1144595C1E4
C2987443161427773CE55B3B06020B73480B1A9E2DD50BCC43A309B9C548AF1D
5D4159406AF2DA56D8A3BAE9F4B0C6322E61DCF3C708EBA4D1FBA0C8AD9108A0
F2F83C836F66F53A2572CEED0B4C81F4C37B1BE503B173744E4DFF9B5A813128
113F34D9A2EE237E61F69A8C0AED085CA47385DAC34921FF4E5E835DA22528F5
C91DB7238ED4CB1B93AD1EDEEC9794CDC1DA7C6EDB5ECB8367CCAB190763E927
D472025A194AD1454BAE8F424F456E70DB5518731D34A0A61493E95C1D42AB09
2C9C42161E8C2E53196BF95887E6155A2C6955B8D73E8C2D8AA2C98FB86F9D25
B1DAE276C2C8A14421B970251341D511D9A1BF370D9ED56B6F1E70D9289C3A68
B83B842A5F30CD42E47E62D69348A49AB8BB724EC40D08220B6FA61A9AFA91E1
009B1C152AB9AC6F744B40FAC5975AF209308182E29B8D3888AD89C6E0C8C5C2
40E4C325C169B6FFE371A1290785619C924B327AA6C092C5BA3DAA6A26B6DE42
3A1EF22B2D9671AB2AD51245942FF9A0896524E3431E52082A5B54F061CBED33
D35E89787EB14C3732D38BF363AE46381D010AAFC1D57D4127FA9C40EF23CF31
FEBD235B38D16FC7405740E08E1979F892D4A7C1560BE505F5F28812740AF8F4
16ECF3F35DADB40404E07112ADD9B8EB3F1A99B9825B985EFF66B0DD4B521F93
7A458AC7DFD074B86A596F1C5943BF1130F86333A98622119F203C2C473F774A
BC2B4ADE274F7F9BDBE4C61407FE04E112A6B82C2CB6B40630F4DBE6EDC63C0F
2268CDAC6117ADD02A671154A06E732DCD21B50FDBCE7DECBE6B01A429975472
112E1660662EE1B6C3DADEB7DC104FF3DA8B40B7411B02126A86C36FED064C51
69BCDA0274E62FED8E16744E6F2D75D54274DA3FA6676141E9FA2D2E9047FFBC
45C21927A79ECC23AF47671B34E8A0E255D6CB21FE26E36C0AAEE70B0E539971
EB3B2DEBFBA9F64797075AD3EFA43E84808168FDCD0847B7D88BFED03A66A186
390ABFD45228874278776B97E79F0D751D7878CE6F9D28A8941F3EB8AFA4514F
13F8193BB082ADCDFA82FF3D2F5F7860C63E6BDE1740AE6546B0455E9FF8EF64
D74802FBC8B6D8925D06390977A4591370EB85DE5474E2B33F57B218E3E33A80
457AA09C1115E6A910A2F6D088429CD4560729CB3D2582419EFBFE8EAAD256E0
32AA0D57965D809A75FA2B71A3F182E20F4310E0531436ACB643C2D0D096E8E5
9C0E437400FE74B02B3D0C6B9B83D9F35D4604D1BEEBB8A0A4882892A8101C8E
2FF9691F805E5C41FCF8221E9CF9A4633AF31AFA134835E1AE59488D6F3B5C30
1A33CB3A8247B5A0E52AF452000C65B918AD8417C1EAEF0A9FB4305DE75528A0
E8A3AFD8A453F3080F911CC44FFC577CC4EA1B0395382DBF7C5FA4CD4E3E3F9F
591059D7E0F5D9F218F2EFFE1544FD12B238C327EC8EDEA10E9A994F6D942541
BBE79A84D2F43A77A9341894CFA600EAA76C6A5AFB225A408BFED0A03BABD9C9
2F36C7878F7522CB5C340A863F54A5E9614CB1E153D1677899FBA881BC959079
5FB846354F3E898A133B10F05B4301CBFA495EB0708581AA72EC3A0092CF2457
BEC2A67261C016A14B1FF6C8B8F0906A5FE1619CC613A8AA490C76B5D2B711A5
D5D489D543764A4F119FD19849947801E0C0AEAB5FDB9F5B0A1A5F6EECFAE6BA
EC6938EB813E11608A3962344E4C8BD287A49B7629B8EE19BE64DA580F13BCA9
E4FCD72EB3B46EAAFCD23787BA4CBF39F5E04C73632121C5A3DCECB85A84440C
8EFA160F2BD0D2E79FD48C06C0151B8F5C48D4DF628EE961C53FB252E7F567F2
C47EC2999CB57347FA8495D566156777F1782B68A622EF13B4D14A1E6B900603
5EE1F9DD9941BE3607DE3F38C194B17518F8829BF94FBF4DA9A8B8767DC1B317
A3D8534A4EEBB4F0729781C2FB55397B9F8E3047E7201533241AD1A0D9E5EE29
DF2DA2ED3FCDE7D53BC6BD2EE42F83B9092314B3FEC8EBC44D890F41F797A234
D9DDD1B2771FBE26C4380AA11BAC7E35DBD1DC5A64C62E2C93B0CC107A3BCE3D
AB35633D5A96E1B4306F55813C76C6FB6FADF8AE0A06EE20B7E63C6AA33B3EB4
4644B68501B89924DCBE16C6BC6EB2C86F76BF7826DA77844B75218F39747825
66ABF02BFA3646CBC117E4F00A455A1F77E992A5C856201CCC16B77AD11974E2
191999CE45C17F4F3EF2FE4DFCEBAA410EC701CF8E22F3AB749A77E09B0A8302
7A7460ABFC9B804C05019B3A8287513550898B3B2D3C41384C8B13D6D139F5B9
1DAA663CF5231AF1F7FAF8B0844D202BDAB5659D87E7CAF374D903CB974B4C38
57103164EF46AED683644B876FF1C532A1859CFB400F2038BAB3B7D6CDF42FED
E64633719760F7B5FA6D56A8B182BAA9EBE11129D7C5C2705C43AA91421D956C
0663E03946B38033516B56B488A4BD10E6BFDD44177E8CF7F5074726F7DFEBC4
8D841D921A6E1C30A093668F65D7EC92F6D1D7CADC563CD3FD37613FC948F8F0
1FCCBB77CD7EA4B4C04B35C46175853C9B2BB5048F3419F8418CE6A6FED80B15
A0764CB95109C3BE753283538D97F7F094A7DF5324EB8D8062249F5A245F8B39
E3AAE239FF8DB636DCBB1B6E92234D09E46E5126A16FA662A9D9446B712EA8D0
070E01ADD8704B36AA4D24FCA933A479F93C400248F5A2D0162E4492C4887D8C
8D2A34FFE14C368C0481FB67845A988A6BADA18EB66C076E665F8E1141DC49FD
0D2DE642B478A773D883689DE9400E1DC586C3CFFA5241986FC351FA7BDD4627
D185A3EE6EE2B3B7BA4B1D8ACA22C5A0C62C074F3C80EF7AFFE6E8A37A239088
4DAA148C8E48789446FABC8813D6A3028B57BA305FA1C92D7419B9EE3FA4A506
3A39925C2240D02EB14A0FB49C5591165A5F92BD7388288BE7119CD6894EDA78
5D42A604711894A6DBB9A16117E4C1635870D6DF5D4E179E842B19FDC6D085BC
3E27BB9B906C8729820FE26331C22F0A9189488F08E917B7935D4B16F92EDA26
98C1636C0D95E98A8E65413BAE9F61C7FCB415948828AE7262B273822FC0716A
909B1B75DF1E4E1830C7111340295E19F235B4BD75B406BAE2F366B885B3FE77
866D1D375072B1CF2EE75A06AE6CB59169E880F0F2B80BD87BC66618C225684D
EC463014A37C3F511A3ED03CF8ADE9D0697AF1F8426AC4CAE1DA1AAA53FFE39B
74DBAD194CD47E71933F97580343808AE9CE253554117AD88F28C7E1D91A42B5
01708DB35AA54339491D928A7A677F9A323E5AD9E6AA84F639259B375EFDD7A0
526DB2E128E0335830C289FF275FE7430C16B2D36BCB22ACA661DABE3F7C4B6B
1E678D23988935BF831253035BD1613E186BB06CAADEEDDD4252C56E95C4FF47
C51988616F28A53F0E589CBA43062744ECFC71D2AE95FA7631A627A13A270C55
7080302DFD699F37D99CA75A382A4EB50969D68C7B5F6F134AED01651017D6B0
4621FCB768E15FEEE1EFE867DBF88A0A19E260EA791E891959B9BD12B10D590B
E897043E02930BC907A9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (tests.dvi)
@start /Fa 137[38 1[28 1[35 1[42 2[68 3[25 3[38 101[{}7
83.022 /CMTI10 rf /Fb 135[44 2[44 44 44 44 2[44 44 44
44 2[44 1[44 44 44 44 1[44 44 38[44 16[44 44 40[{}19
83.022 /CMTT10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop 0 32 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 32 a 0 32 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 32 a 0 32
a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 32 a 0 TeXcolorgray 0 32 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 32 a 0 32 a
tx@Dict begin gsave CM STV CP newpath moveto 3.0 neg 0 rmoveto clip
setmatrix end
 0 32 a 0
539 2911 540 v 2911 32 a
currentpoint grestore moveto
 2911 32 a 977 58 a
tx@Dict begin  tx@NodeDict begin {6.94444 0.8333 31.49973 15.74986
3.05557 } false /N@T-0 16 {InitRnode } /NodeScale {} def NewNode end
 end
 977 58 a
Fb(item\(\))0 294 y
tx@Dict begin  tx@NodeDict begin {6.94444 0.8333 57.7495 28.87474 3.05557
} false /N@T-0-0 16 {InitRnode } /NodeScale {} def NewNode end  end
 0 294 a Fb(attribute\(\))240 269
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-0 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 240 269 a 546 294 a
tx@Dict begin  tx@NodeDict begin {6.94444 0.8333 31.49973 15.74986
3.05557 } false /N@T-0-1 16 {InitRnode } /NodeScale {} def NewNode
end  end
 546 294 a Fb(node\(\))677 269 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-1 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end

677 269 a 284 530 a
tx@Dict begin  tx@NodeDict begin {6.94444 0.8333 47.24959 23.62479
3.05557 } false /N@T-0-1-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 284 530 a Fb(element\(\))480 505
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-1 /N@T-0-1-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 480 505 a 743 530 a
tx@Dict begin  tx@NodeDict begin {6.94444 0.8333 31.49973 15.74986
3.05557 } false /N@T-0-1-1 16 {InitRnode } /NodeScale {} def NewNode
end  end
 743 530 a Fb(text\(\))873 505 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 0.0 0 0 /N@T-0-1 /N@T-0-1-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end

873 505 a 1810 288 a
tx@Dict begin  tx@NodeDict begin {6.55359 1.94444 39.9789 19.98944
2.30457 } false /N@T-0-2 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1810 288 a Fa(primitive)1976 269
y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0 /N@T-0-2 InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1976 269 a 1070 521 a
tx@Dict begin  tx@NodeDict begin {6.11111 2.22223 52.49954 26.24977
1.94444 } false /N@T-0-2-0 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1070 521 a Fb(xs:integer)1288
505 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-0
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1288 505 a 1573 530 a
tx@Dict begin  tx@NodeDict begin {6.11111 0.0 41.99963 20.99982 3.05556
} false /N@T-0-2-1 16 {InitRnode } /NodeScale {} def NewNode end  end
 1573 530 a Fb(xs:float)1747
505 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-1
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1747 505 a 1988 521 a
tx@Dict begin  tx@NodeDict begin {6.11111 2.22223 47.24959 23.62479
1.94444 } false /N@T-0-2-2 16 {InitRnode } /NodeScale {} def NewNode
end  end
 1988 521 a Fb(xs:string)2184
505 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-2
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 2184 505 a 2447 530 a
tx@Dict begin  tx@NodeDict begin {6.11111 0.0 52.49954 26.24977 3.05556
} false /N@T-0-2-3 16 {InitRnode } /NodeScale {} def NewNode end  end
 2447 530 a Fb(xs:boolean)2664
505 y
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 0 0 /N@T-0-2 /N@T-0-2-3
InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 2664 505 a eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 0 TeXcolorgray 1898 5225 a(60)p 0 TeXcolorgray
eop end
%%Page: 61 61
TeXDict begin 61 60 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fr(This)36 b(means,)i(for)d(example,)j(that)f
(a)f(no)s(de)g(is)f(either)i(an)f(elemen)m(t)h(or)f(a)g(text)g(no)s
(de.)448 686 y(The)31 b(items)g(are)f(the)h(most)g(general)g(data)g(t)m
(yp)s(e)f(in)h Fp(XSL)-8 b(T)p Fr(.)448 924 y Fq(XSL)f(T/Cop)m(ying)35
b(elemen)m(ts)h(\(con)m(t\))589 1024 y Fr(Indeed,)31
b(the)g(previous)g(transform)f(is)g(equiv)-5 b(alen)m(t)32
b(to)e(the)h(transform)p 0 TeXcolorgray 0 TeXcolorgray
448 1189 a Fk(<?xml)40 b(version="1.0")g(encoding="UTF-8"?>)448
1288 y(<xsl:transform)g(version="2.0")1008 1388 y
(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
1488 y(<xsl:output)g(method="xml")g(indent="yes"/>)528
1587 y(<xsl:template)g(match="element\(\)">)608 1687
y(<xsl:copy>)688 1786 y(<xsl:apply-templates)g
(select="element\(\)|text\(\)"/>)608 1886 y(</xsl:copy>)528
1986 y(</xsl:template>)448 2085 y(</xsl:transform>)448
2324 y Fq(XSL)-9 b(T/Cop)m(ying)35 b(elemen)m(ts)h(\(con)m(t\))589
2423 y Fr(The)45 b(w)m(a)m(y)h(to)e(extend)h(our)g(iden)m(tit)m(y)h
(transform)f(to)f(include)h(attributes)h(is)e(to)448
2523 y(matc)m(h)36 b(an)m(y)f(attribute)h(and,)f(after)g(matc)m(hing)h
(an)f(elemen)m(t)h(no)s(de,)f(to)g(select)g(an)m(y)f(of)448
2623 y(its)c(attributes.)42 b(The)31 b(iden)m(tit)m(y)h(transform)f(is)
f(therefore)p 0 TeXcolorgray 0 TeXcolorgray 448 2787
a Fk(<?xml)40 b(version="1.0")g(encoding="UTF-8"?>)448
2887 y(<xsl:transform)g(version="2.0")1008 2987 y
(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
3086 y(<xsl:output)g(method="xml")g(indent="yes"/>)528
3186 y(<xsl:template)g(match="node\(\)|attribute\(\)">)608
3286 y(<xsl:copy>)688 3385 y(<xsl:apply-templates)g
(select="node\(\)|attribute\(\)"/>)608 3485 y(</xsl:copy>)528
3584 y(</xsl:template>)448 3684 y(</xsl:transform>)448
3922 y Fq(XSL)-9 b(T/Cop)m(ying)35 b(elemen)m(ts)h(\(con)m(t\))589
4022 y Fr(No)m(w)27 b(it)g(is)e(easy)h(to)h(o)m(v)m(erride)g(the)g
(iden)m(tit)m(y)h(template)g(b)m(y)e(adding)h(new)g(templates)448
4122 y(whic)m(h)32 b(are)f(more)g(precise,)g(lik)m(e)f(matc)m(hing)j(a)
d(sp)s(eci\034c)g(elemen)m(t)i(name:)p 0 TeXcolorgray
0 TeXcolorgray 448 4287 a Fk(<xsl:template)40 b(match="broken">)568
4386 y(<fixed>)648 4486 y(<xsl:apply-templates)g
(select="node\(\)|attribute\(\)"/>)568 4586 y(</fixed>)448
4685 y(</xsl:template>)589 4863 y Fr(No)m(w,)32 b(all)g(the)f(elemen)m
(ts)i(will)f(b)s(e)e(copied)j(v)m(erbatim,)f(as)f(w)m(ell)h(as)f(the)h
(attributes,)448 4976 y Fg(exc)-5 b(ept)42 b Fr(elemen)m(ts)31
b(named)g Fn(broken)p Fr(,)e(whic)m(h)j(will)f(b)s(e)f(c)m(hanged)i(in)
m(to)f Fn(fixed)p Fr(.)p 0 TeXcolorgray 1898 5225 a(61)p
0 TeXcolorgray eop end
%%Page: 62 62
TeXDict begin 62 61 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XSL)-9 b(T/Cop)m(ying)35
b(elemen)m(ts/Imp)s(orting)f(st)m(ylesheets)589 672 y
Fr(The)28 b(t)m(ypical)f(idiom)h(for)e(cop)m(ying)i(with)f(mo)s
(di\034cation)h(is)e(to)h(imp)s(ort)g(the)g(iden)m(tit)m(y)448
772 y(st)m(ylesheet)44 b(and)f(then)g(add)g(new)g(templates)h(whic)m(h)
g(o)m(v)m(erride)h(the)e(corresp)s(onding)448 872 y(templates)32
b(in)e(the)h(imp)s(orted)g(st)m(ylesheet:)p 0 TeXcolorgray
0 TeXcolorgray 448 1037 a Fk(<?xml)40 b(version="1.0")g
(encoding="UTF-8"?>)448 1136 y(<xsl:transform)g(version="2.0")1008
1236 y(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
1336 y(<xsl:import)g(href="identity.xsl"/>)528 1435 y(<xsl:output)g
(method="xml")g(indent="yes"/>)528 1535 y(<xsl:template)g
(match="broken">)608 1635 y(<fixed>)688 1734 y(<xsl:apply-templates)g
(select="node\(\)|attribute\(\)"/>)608 1834 y(</fixed>)528
1933 y(</xsl:template>)448 2033 y(</xsl:transform>)448
2271 y Fq(XSL)-9 b(T/Cop)m(ying)35 b(elemen)m(ts)h(\(con)m(t\))589
2371 y Fr(There)48 b(is)e(an)g(alternativ)m(e)j(iden)m(tit)m(y)f
(transform,)j(using)d Fn(copy-of)d Fr(for)h(the)h(at-)448
2471 y(tributes)23 b(only)-8 b(,)24 b(th)m(us)e(allo)m(wing)i(to)e(b)s
(e)g(extended)g(to)g(handle)h(sp)s(ecial)f(cases)g(for)f(elemen)m(t)448
2570 y(no)s(des:)p 0 TeXcolorgray 0 TeXcolorgray 448
2735 a Fk(<?xml)40 b(version="1.0")g(encoding="UTF-8"?>)448
2835 y(<xsl:transform)g(version="2.0")1008 2935 y
(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
3034 y(<xsl:output)g(method="xml")g(indent="yes"/>)528
3134 y(<xsl:template)g(match="node\(\)">)608 3233 y(<xsl:copy>)688
3333 y(<xsl:copy-of)g(select="attribute\(\)"/>)688 3433
y(<xsl:apply-templates/>)608 3532 y(</xsl:copy>)528 3632
y(</xsl:template>)448 3732 y(</xsl:transform>)448 3970
y Fq(XSL)-9 b(T/F)g(unctions)589 4083 y Fr(It)30 b(is)g(p)s(ossible)g
(to)h(de\034ne)g(functions)g(in)f Fp(XSL)-8 b(T)p Fr(.)589
4182 y(As)45 b(an)g(example,)50 b(consider)c(the)f(need)h(to)f(debug)h
(a)g(transform.)85 b(The)46 b(usual)448 4282 y(tec)m(hnique)32
b(consists)e(in)h(using)f(an)h Fp(XSL)-8 b(T)30 b Fr(elemen)m(t)i
Fn(message)p Fr(,)d(as)h(in)p 0 TeXcolorgray 0 TeXcolorgray
448 4447 a Fk(<xsl:message>This)40 b(is)g(a)g(debug)g
(message.</xsl:message>)589 4612 y Fr(One)31 b(ma)m(y)g(prin)m(t)h(the)
e(v)-5 b(alue)31 b(of)f(attributes)h(or)g(text)f(no)s(des:)p
0 TeXcolorgray 0 TeXcolorgray 448 4777 a Fk(<xsl:message>)528
4877 y(Price:)40 b(<xsl:value-of)g(select="@price"/>)448
4976 y(</xsl:message>)p 0 TeXcolorgray 1898 5225 a Fr(62)p
0 TeXcolorgray eop end
%%Page: 63 63
TeXDict begin 63 62 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 589 573 a Fr(What)29 b(if)g(the)g(programmer)h(w)m(an)m
(ts)g(to)f(kno)m(w)g(the)g(names)g(of)g(all)g(the)g(elemen)m(ts)h(in)
448 686 y(a)h(sequence?)40 b(She)31 b(needs)f(a)h(function!)448
920 y Fq(XSL)-9 b(T/F)g(unctions/Namespace)589 1019 y
Fr(The)34 b(\034rst)e(thing)i(to)e(do,)i(when)f(de\034ning)h(or)f
(using)g(functions)g(is)f(to)h(declare)h(the)448 1119
y(namespace)j(to)f(whic)m(h)i(they)e(b)s(elong.)57 b(F)-8
b(or)37 b(the)f(purp)s(ose)g(of)g(this)g(simple)g(example,)448
1219 y(let)31 b(us)f(imagine)h(that)g(the)g(namespace)g(is)f(named)i
Fn(my)p Fr(,)d(at)i(a)f(dumm)m(y)i(URL:)p 0 TeXcolorgray
0 TeXcolorgray 448 1361 a Fk(<xsl:transform)40 b(version="2.0")1048
1460 y(xmlns:xsl="http://www.w3.org/1999/XSL/Transform")1048
1560 y(xmlns:my="file://functions.uri">)589 1702 y Fr(A)24
b(name)g(m)m(ust)g(b)s(e)g(found.)38 b(F)-8 b(or)24 b(instance,)i
Fn(my:names)p Fr(.)36 b(Note)24 b(and)g(remem)m(b)s(er)h(that)448
1802 y Fq(the)35 b(function)e(name)h(con)m(tains)g(the)h(namespace)p
Fr(.)41 b(The)30 b(de\034nition)h(is)e(made)i(in)448
1901 y(the)g Fp(XSL)-8 b(T)30 b Fr(elemen)m(t)i Fn(function)p
Fr(:)p 0 TeXcolorgray 0 TeXcolorgray 448 2043 a Fk(<xsl:function)40
b(name="my:names">)448 2143 y(...)448 2243 y(</xsl:function>)448
2477 y Fq(XSL)-9 b(T/F)g(unctions/P)m(arameters)589 2576
y Fr(The)27 b(function)f(here)h(tak)m(es)f(one)g(argumen)m(t,)j(the)d
(sequence)g(of)g(no)s(des,)g(so)g(w)m(e)g(need)448 2676
y(to)31 b(declare)g(a)g(parameter.)42 b(This)30 b(is)g(the)h(purp)s
(ose)f(of)g(the)h Fp(XSL)-8 b(T)30 b Fr(elemen)m(t)i
Fn(param)p Fr(:)p 0 TeXcolorgray 0 TeXcolorgray 448 2818
a Fk(<xsl:function)40 b(name="my:names">)528 2918 y(<xsl:param)g
(name="nodes"/>)448 3017 y(...)448 3117 y(</xsl:function>)589
3272 y Fr(As)22 b(usual)g(in)h(other)g(programming)h(languages,)h(the)d
(parameter)i(m)m(ust)f(b)s(e)f(named.)589 3385 y(If)30
b(a)g(function)h(requires)g(more)g(parameters,)g(other)h
Fn(param)d Fr(elemen)m(ts)i(are)g(added.)589 3498 y Fq(The)k(order)f
(is)h(signi\034can)m(t.)448 3732 y(XSL)-9 b(T/F)g(unctions/Recursivit)m
(y)589 3832 y Fr(W)h(e)32 b(need)f(to)g(write)h(a)f(recursiv)m(e)g
(function,)h(b)s(ecause)f(it)g(needs)h(to)f(access)f(all)i(the)448
3931 y(no)s(des)25 b(in)f(a)h(sequence.)39 b(The)25 b(idea)g(is)f(to)g
(c)m(hec)m(k)i(\034rst)f(whether)g(the)g(sequence)g(is)f(empt)m(y)448
4031 y(or)37 b(not.)58 b(If)35 b(empt)m(y)-8 b(,)39 b(do)d(nothing.)59
b(Otherwise,)38 b(prin)m(t)f(the)g(name)g(of)e(the)i(\034rst)f(no)s(de)
448 4131 y(and)31 b(call)g(again)g(the)g(function)g(on)g(the)g
(remaining)h(ones)f(\(ma)m(yb)s(e)g(none,)g(it)f(do)s(es)h(not)448
4230 y(matter)h(at)e(that)h(momen)m(t\):)p 0 TeXcolorgray
0 TeXcolorgray 448 4372 a Fk(<xsl:function)40 b(name="my:names">)528
4472 y(<xsl:param)g(name="nodes"/>)528 4572 y(<xsl:if)g
(test="not\(empty\($nodes\)\)">)608 4671 y(<xsl:value-of)g
(select="\(name\($nodes[1]\),)1528 4771 y
(my:names\($nodes[position\(\)>1]\)\)"/>)528 4870 y(</xsl:if>)448
4970 y(</xsl:function>)p 0 TeXcolorgray 1898 5225 a Fr(63)p
0 TeXcolorgray eop end
%%Page: 64 64
TeXDict begin 64 63 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 448 573 a Fq(XSL)-9 b(T/Sequences)36 b(revisited)589
686 y Fr(Remark)45 b(the)h(notation)g(in)g(the)f Fn(select)f
Fr(attribute)i Fn(\(...)d(,)h(...\))p Fr(.)84 b(It)45
b(means)448 799 y(\020Create)29 b(a)f(sequence)g(b)m(y)g(app)s(ending)g
(the)g(\034rst)g(sequence)g(to)g(the)g(second)g(sequence.\021)448
912 y(This)j(op)s(eration)g(is)f(called)h Fq(concatenation)p
Fr(.)589 1119 y(Here)k Fn(my:names\($nodes[position\(\)>1])o(\))28
b Fr(is)34 b(a)g(sequence)g(of)g(names,)i(p)s(ossibly)448
1232 y(empt)m(y)-8 b(.)39 b(If)19 b(empt)m(y)-8 b(,)24
b(it)c(disapp)s(ear)h(from)f(the)h(concatenation,)k(e.g.,)e
Fn(\(1,\(\),2\))42 b(eq)h(\(1,2\))p Fr(.)589 1440 y(Here,)32
b(also,)g Fn(name\($nodes[1]\))c Fr(is)j(a)h(sequence)f(of)g(one)h
(elemen)m(t,)i(b)s(ecause)d(there)448 1553 y(is)f(no)h(di\033erence,)g
(in)g Fp(XSL)-8 b(T)p Fr(,)30 b(b)s(et)m(w)m(een)i(a)f(sequence)f(of)g
(one)h(and)g(the)f(item)h(itself.)589 1761 y(The)g(concatenation)h(is)e
(\035at,)g(so)g Fn(\(\(1,2,3\),\(4,5,\(6,7\),8,9,10\)\))24
b Fr(is)29 b(the)i(same)448 1874 y(as)i Fn(\(1,2,3,4,5,6,7,8,9,10\))p
Fr(.)42 b(The)33 b(built-in)g(function)h Fn(empty)d Fr(tests)h(if)g(a)h
(sequence)448 1986 y(is)d(empt)m(y)-8 b(,)32 b(e.g.,)f
Fn(empty\($seq\))p Fr(.)448 2225 y Fq(XSL)-9 b(T/Named)36
b(templates)589 2317 y Fr(It)27 b(is)g(p)s(ossible)f(to)h(call)h(a)f
(template)h(b)m(y)f(name)h(instead)f(of)g(it)g(b)s(eing)g(applied)h
(when)448 2408 y(matc)m(hing)33 b(an)d(elemen)m(t.)42
b(Consider)31 b(the)g(transform)p 0 TeXcolorgray 0 TeXcolorgray
448 2568 a Ff(<?xml)36 b(version="1.0")g(encoding="UTF-8"?>)448
2660 y(<xsl:transform)g(version="2.0")988 2751 y
(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)520
2842 y(<xsl:output)g(method="text"/>)520 2933 y(<xsl:template)g
(match="car">)592 3025 y(<xsl:call-template)g(name="the)1600
3011 y(_)1636 3025 y(car"/>)520 3116 y(</xsl:template>)520
3207 y(<xsl:template)g(name="the)1348 3193 y(_)1384 3207
y(car">)592 3299 y(Manufacturer:)g(<xsl:value-of)g
(select="@manufacturer")g(/>)592 3390 y(Model:)288 b(<xsl:value-of)36
b(select="@model")g(/>)520 3481 y(</xsl:template>)448
3573 y(</xsl:transform>)448 3812 y Fq(XSL)-9 b(T/Named)36
b(templates)g(\(con)m(t\))589 3903 y Fr(Named)25 b(template)g(and)f
(matc)m(hing)i(templates)f(nev)m(er)g(in)m(terfere)g(with)f(eac)m(h)h
(other.)448 3994 y(F)-8 b(or)31 b(example,)g(the)g(name)g(can)g(b)s(e)f
(the)h(same)f(as)g(an)h(elemen)m(t)h(name,)f(as)f(in)p
0 TeXcolorgray 0 TeXcolorgray 448 4154 a Ff(<?xml)36
b(version="1.0")g(encoding="UTF-8"?>)448 4246 y(<xsl:transform)g
(version="2.0")988 4337 y
(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)520
4428 y(<xsl:output)g(method="text"/>)520 4520 y(<xsl:template)g
(match="car">)592 4611 y(<xsl:call-template)g(name="car"/>)520
4702 y(</xsl:template>)520 4794 y(<xsl:template)g(name="car">)592
4885 y(Manufacturer:)g(<xsl:value-of)g(select="@manufacturer")g(/>)592
4976 y(Model:)288 b(<xsl:value-of)36 b(select="@model")g(/>)p
0 TeXcolorgray 1898 5225 a Fr(64)p 0 TeXcolorgray eop
end
%%Page: 65 65
TeXDict begin 65 64 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 520 573 a Ff(</xsl:template>)448 664 y(</xsl:transform>)
448 904 y Fq(XSL)-9 b(T/Mo)s(des)589 1017 y Fr(It)33
b(is)g(sometimes)g(useful)g(to)g(tra)m(v)m(erse)h(the)f(same)g(do)s
(cumen)m(t)i(sev)m(eral)e(times)g(and)448 1130 y(matc)m(h)40
b(the)e(same)h(elemen)m(ts)g(in)f(a)g(di\033eren)m(t)i(w)m(a)m(y)f(eac)
m(h)g(time.)65 b(This)38 b(can)g(b)s(e)g(done)448 1243
y(using)31 b(templates)g(with)g(mo)s(des.)589 1456 y(One)41
b(needs)g(to)f(de\034ne)h(a)g(template)g(elemen)m(t)h(with)f(a)f
Fn(match)f Fr(attribute)j(and)f(a)448 1568 y Fn(mode)29
b Fr(attribute.)42 b(The)31 b(v)-5 b(alue)30 b(of)g(the)h(latter)g(can)
f(b)s(e)g(an)m(y)h(string)f(with)h(the)f(condition)448
1681 y(that)c(t)m(w)m(o)h(templates)g(with)f(the)g(same)f
Fn(match)g Fr(attribute)h(v)-5 b(alue)26 b(ha)m(v)m(e)h(a)e(di\033eren)
m(t)i Fn(mode)448 1794 y Fr(attribute)32 b(v)-5 b(alue.)448
2034 y Fq(XSL)c(T/Mo)s(des)36 b(\(con)m(t\))p 0 TeXcolorgray
0 TeXcolorgray 448 2234 a Fk(<?xml)k(version="1.0")g
(encoding="UTF-8"?>)448 2333 y(<xsl:transform)g(version="2.0")1008
2433 y(xmlns:xsl="http://www.w3.org/1999/XSL/Transform">)528
2532 y(<xsl:output)g(method="text"/>)528 2632 y(<xsl:template)g
(match="/">)608 2732 y(<xsl:text>INDEX</xsl:text>)608
2831 y(<xsl:apply-templates)g(mode="index"/>)608 2931
y(<xsl:text>INFO</xsl:text>)688 3031 y(<xsl:apply-templates)g
(mode="info"/>)528 3130 y(</xsl:template>)448 3370 y
Fq(XSL)-9 b(T/Mo)s(des)36 b(\(con)m(t\))p 0 TeXcolorgray
0 TeXcolorgray 528 3570 a Fk(<xsl:template)k(match="car")g
(mode="index">)608 3669 y(<xsl:value-of)g(select="@model")g(/>)528
3769 y(</xsl:template>)528 3868 y(<xsl:template)g(match="car")g
(mode="info">)608 3968 y(<xsl:text>Model:)g(</xsl:text>)608
4068 y(<xsl:value-of)g(select="@model")g(/>)608 4167
y(<xsl:text>,)g(Manufacturer:)g(</xsl:text>)608 4267
y(<xsl:value-of)g(select="@manufacturer"/>)528 4367 y(</xsl:template>)
448 4466 y(</xsl:transform>)448 4706 y Fq(XSL)-9 b(T/Mo)s(des)36
b(\(con)m(t\))589 4819 y Fr(The)31 b(result)g(of)f(applying)h(it)f(to)h
(the)g(\034rst)f(car)h(list)f(page)h(52)f(is)p 0 TeXcolorgray
1898 5225 a(65)p 0 TeXcolorgray eop end
%%Page: 66 66
TeXDict begin 66 65 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 448 573
a Fn(INDEX)536 686 y(Matiz)536 799 y(Sonata)448 912 y(INFO)536
1024 y(Model:)42 b(Matiz,)h(Manufacturer:)e(Daewoo)536
1137 y(Model:)h(Sonata,)h(Manufacturer:)e(Hyundai)589
1325 y Fr(Notice)28 b(the)f(t)m(w)m(o)h(di\033eren)m(t)g(runs)e(on)h
(the)g(input,)i(distinguished)f(b)m(y)f(t)m(w)m(o)h(di\033eren)m(t)448
1438 y(outputs)j(in)g(sequence.)p 0 TeXcolorgray 1898
5225 a(66)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
